
Executing: augroup nvim_terminal
Executing: autocmd BufReadCmd term://* ++nested if !exists('b:term_title')|call termopen(matchstr(expand("<amatch>"), '\c\mterm://\%(.\{-}//\%(\d\+:\)\?\)\?\zs.*'), {'cwd': expand(get(matchlist(expand("<amatch>"), '\c\mterm://\(.\{-}\)//'), 1, ''))})|endif
Executing: augroup END
Executing: augroup nvim_cmdwin
Executing: autocmd! CmdwinEnter [:>] syntax sync minlines=1 maxlines=1
Executing: augroup END
Searching for "ftplugin.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
line 1: " Vim support file to switch on loading plugins for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last change:^I2006 Apr 30
line 5: 
line 6: if exists("did_load_ftplugin")
line 7:   finish
line 8: endif
line 9: let did_load_ftplugin = 1
line 10: 
line 11: augroup filetypeplugin
line 12:   au FileType * call s:LoadFTPlugin()
line 13: 
line 14:   func! s:LoadFTPlugin()
line 37: augroup END
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim
Searching for "indent.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
line 1: " Vim support file to switch on loading indent files for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2008 Feb 22
line 5: 
line 6: if exists("did_indent_on")
line 7:   finish
line 8: endif
line 9: let did_indent_on = 1
line 10: 
line 11: augroup filetypeindent
line 12:   au FileType * call s:LoadIndent()
line 13:   func! s:LoadIndent()
line 32: augroup END
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/etc/xdg/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
could not source "/etc/xdg/nvim/sysinit.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
could not source "$VIM/sysinit.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/init.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: syntax on
Executing: so $VIMRUNTIME/syntax/syntax.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 3: " Last Change:^I2001 Sep 04
line 4: 
line 5: " This file is used for ":syntax on".
line 6: " It installs the autocommands and starts highlighting for all buffers.
line 7: 
line 8: if !has("syntax")
line 9:   finish
line 10: endif
line 11: 
line 12: " If Syntax highlighting appears to be on already, turn it off first, so that
line 13: " any leftovers are cleared.
line 14: if exists("syntax_on") || exists("syntax_manual")
line 15:   so <sfile>:p:h/nosyntax.vim
line 16: endif
line 17: 
line 18: " Load the Syntax autocommands and set the default methods for highlighting.
line 19: runtime syntax/synload.vim
Searching for "syntax/synload.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/synload.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/synload.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/synload.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 19: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/synload.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 3: " Last Change:^I2020 Apr 13
line 4: 
line 5: " This file sets up for syntax highlighting.
line 6: " It is loaded from "syntax.vim" and "manual.vim".
line 7: " 1. Set the default highlight groups.
line 8: " 2. Install Syntax autocommands for all the available syntax files.
line 9: 
line 10: if !has("syntax")
line 11:   finish
line 12: endif
line 13: 
line 14: " let others know that syntax has been switched on
line 15: let syntax_on = 1
line 16: 
line 17: " Line continuation is used here, remove 'C' from 'cpoptions'
line 18: let s:cpo_save = &cpo
line 19: set cpo&vim
line 20: 
line 21: " First remove all old syntax autocommands.
line 22: au! Syntax
line 23: 
line 24: au Syntax *^I^Icall s:SynSet()
line 25: 
line 26: fun! s:SynSet()
line 57: 
line 58: 
line 59: " Handle adding doxygen to other languages (C, C++, C#, IDL, java, php, DataScript)
line 60: au Syntax c,cpp,cs,idl,java,php,datascript if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
line 65: 
line 66: 
line 67: " Source the user-specified syntax highlighting file
line 68: if exists("mysyntaxfile")
line 69:   let s:fname = expand(mysyntaxfile)
line 70:   if filereadable(s:fname)
line 71:     execute "source " . fnameescape(s:fname)
line 72:   endif
line 73: endif
line 74: 
line 75: " Restore 'cpoptions'
line 76: let &cpo = s:cpo_save
line 77: unlet s:cpo_save
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/synload.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim
line 20: 
line 21: " Load the FileType autocommands if not done yet.
line 22: if exists("did_load_filetypes")
line 23:   let s:did_ft = 1
line 24: else
line 25:   filetype on
Searching for "filetype.lua filetype.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/thomaseckert/.config/nvim/filetype.lua"
finished sourcing /home/thomaseckert/.config/nvim/filetype.lua
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim
Searching for "/home/thomaseckert/.config/nvim/filetype.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:   augroup filetypedetect
Executing:   runtime! ftdetect/*.vim
Searching for "ftdetect/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftdetect/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftdetect/*.vim"
not found in runtime path: "ftdetect/*.vim"
Executing:   runtime! ftdetect/*.lua
Searching for "ftdetect/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftdetect/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftdetect/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftdetect/*.lua"
not found in runtime path: "ftdetect/*.lua"
Executing:   augroup END
Executing:   
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
line 1: " Vim support file to detect file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2022 Apr 07
line 5: 
line 6: " Listen very carefully, I will say this only once
line 7: if exists("did_load_filetypes")
line 8:   finish
line 9: endif
line 10: let did_load_filetypes = 1
line 11: 
line 12: " Line continuation is used here, remove 'C' from 'cpoptions'
line 13: let s:cpo_save = &cpo
line 14: set cpo&vim
line 15: 
line 16: augroup filetypedetect
line 17: 
line 18: " Ignored extensions
line 19: if exists("*fnameescape")
line 20: au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-dist,?\+.dpkg-old,?\+.dpkg-new,?\+.dpkg-bak,?\+.rpmsave,?\+.rpmnew,?\+.pacsave,?\+.pacnew exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
line 22: au BufNewFile,BufRead *~ let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
line 29: au BufNewFile,BufRead ?\+.in if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
line 33: elseif &verbose > 0
line 34:   echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"
line 35: endif
line 36: 
line 37: " Pattern used to match file names which should not be inspected.
line 38: " Currently finds compressed files.
line 39: if !exists("g:ft_ignore_pat")
line 40:   let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'
line 41: endif
line 42: 
line 43: " Function used for patterns that end in a star: don't set the filetype if the
line 44: " file name matches ft_ignore_pat.
line 45: " When using this, the entry should probably be further down below with the
line 46: " other StarSetf() calls.
line 47: func s:StarSetf(ft)
line 52: 
line 53: " Vim help file
line 54: au BufNewFile,BufRead $VIMRUNTIME/doc/*.txt setf help
line 55: 
line 56: " Abaqus or Trasys
line 57: au BufNewFile,BufRead *.inp^I^I^Icall dist#ft#Check_inp()
line 58: 
line 59: " 8th (Firth-derivative)
line 60: au BufNewFile,BufRead *.8th^I^I^Isetf 8th
line 61: 
line 62: " A-A-P recipe
line 63: au BufNewFile,BufRead *.aap^I^I^Isetf aap
line 64: 
line 65: " A2ps printing utility
line 66: au BufNewFile,BufRead */etc/a2ps.cfg,*/etc/a2ps/*.cfg,a2psrc,.a2psrc setf a2ps
line 67: 
line 68: " ABAB/4
line 69: au BufNewFile,BufRead *.abap^I^I^Isetf abap
line 70: 
line 71: " ABC music notation
line 72: au BufNewFile,BufRead *.abc^I^I^Isetf abc
line 73: 
line 74: " ABEL
line 75: au BufNewFile,BufRead *.abl^I^I^Isetf abel
line 76: 
line 77: " AceDB
line 78: au BufNewFile,BufRead *.wrm^I^I^Isetf acedb
line 79: 
line 80: " Ada (83, 9X, 95)
line 81: au BufNewFile,BufRead *.adb,*.ads,*.ada^I^Isetf ada
line 82: au BufNewFile,BufRead *.gpr^I^I^Isetf ada
line 83: 
line 84: " AHDL
line 85: au BufNewFile,BufRead *.tdf^I^I^Isetf ahdl
line 86: 
line 87: " AIDL
line 88: au BufNewFile,BufRead *.aidl^I^I^Isetf aidl
line 89: 
line 90: " AMPL
line 91: au BufNewFile,BufRead *.run^I^I^Isetf ampl
line 92: 
line 93: " Ant
line 94: au BufNewFile,BufRead build.xml^I^I^Isetf ant
line 95: 
line 96: " Arduino
line 97: au BufNewFile,BufRead *.ino,*.pde^I^Isetf arduino
line 98: 
line 99: " Apache config file
line 100: au BufNewFile,BufRead .htaccess,*/etc/httpd/*.conf^I^Isetf apache
line 101: au BufNewFile,BufRead */etc/apache2/sites-*/*.com^I^Isetf apache
line 102: 
line 103: " XA65 MOS6510 cross assembler
line 104: au BufNewFile,BufRead *.a65^I^I^Isetf a65
line 105: 
line 106: " Applescript
line 107: au BufNewFile,BufRead *.scpt^I^I^Isetf applescript
line 108: 
line 109: " Applix ELF
line 110: au BufNewFile,BufRead *.am if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
line 112: 
line 113: " ALSA configuration
line 114: au BufNewFile,BufRead .asoundrc,*/usr/share/alsa/alsa.conf,*/etc/asound.conf setf alsaconf
line 115: 
line 116: " Arc Macro Language
line 117: au BufNewFile,BufRead *.aml^I^I^Isetf aml
line 118: 
line 119: " APT config file
line 120: au BufNewFile,BufRead apt.conf^I^I       setf aptconf
line 121: au BufNewFile,BufRead */.aptitude/config       setf aptconf
line 122: " more generic pattern far down
line 123: 
line 124: " Arch Inventory file
line 125: au BufNewFile,BufRead .arch-inventory,=tagging-method^Isetf arch
line 126: 
line 127: " ART*Enterprise (formerly ART-IM)
line 128: au BufNewFile,BufRead *.art^I^I^Isetf art
line 129: 
line 130: " AsciiDoc
line 131: au BufNewFile,BufRead *.asciidoc,*.adoc^I^Isetf asciidoc
line 132: 
line 133: " ASN.1
line 134: au BufNewFile,BufRead *.asn,*.asn1^I^Isetf asn
line 135: 
line 136: " Active Server Pages (with Visual Basic Script)
line 137: au BufNewFile,BufRead *.asa if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
line 143: 
line 144: " Active Server Pages (with Perl or Visual Basic Script)
line 145: au BufNewFile,BufRead *.asp if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
line 153: 
line 154: " Grub (must be before catch *.lst)
line 155: au BufNewFile,BufRead */boot/grub/menu.lst,*/boot/grub/grub.conf,*/etc/grub.conf setf grub
line 156: 
line 157: " Assembly (all kinds)
line 158: " *.lst is not pure assembly, it has two extra columns (address, byte codes)
line 159: au BufNewFile,BufRead *.asm,*.[sS],*.[aA],*.mac,*.lst^Icall dist#ft#FTasm()
line 160: 
line 161: " Macro (VAX)
line 162: au BufNewFile,BufRead *.mar^I^I^Isetf vmasm
line 163: 
line 164: " Atlas
line 165: au BufNewFile,BufRead *.atl,*.as^I^Isetf atlas
line 166: 
line 167: " Atom is based on XML
line 168: au BufNewFile,BufRead *.atom^I^I^Isetf xml
line 169: 
line 170: " Autoit v3
line 171: au BufNewFile,BufRead *.au3^I^I^Isetf autoit
line 172: 
line 173: " Autohotkey
line 174: au BufNewFile,BufRead *.ahk^I^I^Isetf autohotkey
line 175: 
line 176: " Automake
line 177: au BufNewFile,BufRead [mM]akefile.am,GNUmakefile.am^Isetf automake
line 178: 
line 179: " Autotest .at files are actually m4
line 180: au BufNewFile,BufRead *.at^I^I^Isetf m4
line 181: 
line 182: " Avenue
line 183: au BufNewFile,BufRead *.ave^I^I^Isetf ave
line 184: 
line 185: " Awk
line 186: au BufNewFile,BufRead *.awk,*.gawk^I^Isetf awk
line 187: 
line 188: " B
line 189: au BufNewFile,BufRead *.mch,*.ref,*.imp^I^Isetf b
line 190: 
line 191: " BASIC or Visual Basic
line 192: au BufNewFile,BufRead *.bas^I^I^Icall dist#ft#FTbas()
line 193: au BufNewFile,BufRead *.bi,*.bm^I^I^Icall dist#ft#FTbas()
line 194: 
line 195: " Visual Basic Script (close to Visual Basic) or Visual Basic .NET
line 196: au BufNewFile,BufRead *.vb,*.vbs,*.dsm,*.ctl^Isetf vb
line 197: 
line 198: " IBasic file (similar to QBasic)
line 199: au BufNewFile,BufRead *.iba,*.ibi^I^Isetf ibasic
line 200: 
line 201: " FreeBasic file (similar to QBasic)
line 202: au BufNewFile,BufRead *.fb^I^I^Isetf freebasic
line 203: 
line 204: " Batch file for MSDOS. See dist#ft#FTsys for *.sys
line 205: au BufNewFile,BufRead *.bat^I^I^Isetf dosbatch
line 206: " *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.
line 207: au BufNewFile,BufRead *.cmd if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
line 209: " ABB RAPID or Batch file for MSDOS.
line 210: au BufNewFile,BufRead *.sys\c^I^I^Icall dist#ft#FTsys()
line 211: 
line 212: " Batch file for 4DOS
line 213: au BufNewFile,BufRead *.btm^I^I^Icall dist#ft#FTbtm()
line 214: 
line 215: " BC calculator
line 216: au BufNewFile,BufRead *.bc^I^I^Isetf bc
line 217: 
line 218: " BDF font
line 219: au BufNewFile,BufRead *.bdf^I^I^Isetf bdf
line 220: 
line 221: " Beancount
line 222: au BufNewFile,BufRead *.beancount^I^Isetf beancount
line 223: 
line 224: " BibTeX bibliography database file
line 225: au BufNewFile,BufRead *.bib^I^I^Isetf bib
line 226: 
line 227: " BibTeX Bibliography Style
line 228: au BufNewFile,BufRead *.bst^I^I^Isetf bst
line 229: 
line 230: " Bicep
line 231: au BufNewFile,BufRead *.bicep^I^I^Isetf bicep
line 232: 
line 233: " BIND configuration
line 234: " sudoedit uses namedXXXX.conf
line 235: au BufNewFile,BufRead named*.conf,rndc*.conf,rndc*.key^Isetf named
line 236: 
line 237: " BIND zone
line 238: au BufNewFile,BufRead named.root^I^Isetf bindzone
line 239: au BufNewFile,BufRead *.db^I^I^Icall dist#ft#BindzoneCheck('')
line 240: 
line 241: " Blank
line 242: au BufNewFile,BufRead *.bl^I^I^Isetf blank
line 243: 
line 244: " Blkid cache file
line 245: au BufNewFile,BufRead */etc/blkid.tab,*/etc/blkid.tab.old   setf xml
line 246: 
line 247: " BSDL
line 248: au BufNewFile,BufRead *bsd,*.bsdl^I^Isetf bsdl
line 249: 
line 250: " Bazel (http://bazel.io)
line 251: autocmd BufRead,BufNewFile *.bzl,*.bazel,WORKSPACE^Isetf bzl
line 252: if has("fname_case")
line 253:   " There is another check for BUILD further below.
line 254:   autocmd BufRead,BufNewFile *.BUILD,BUILD^I^Isetf bzl
line 255: endif
line 256: 
line 257: " C or lpc
line 258: au BufNewFile,BufRead *.c^I^I^Icall dist#ft#FTlpc()
line 259: au BufNewFile,BufRead *.lpc,*.ulpc^I^Isetf lpc
line 260: 
line 261: " Calendar
line 262: au BufNewFile,BufRead calendar^I^I^Isetf calendar
line 263: 
line 264: " C#
line 265: au BufNewFile,BufRead *.cs,*.csx^I^Isetf cs
line 266: 
line 267: " CSDL
line 268: au BufNewFile,BufRead *.csdl^I^I^Isetf csdl
line 269: 
line 270: " Cabal
line 271: au BufNewFile,BufRead *.cabal^I^I^Isetf cabal
line 272: 
line 273: " Cdrdao TOC
line 274: au BufNewFile,BufRead *.toc^I^I^Isetf cdrtoc
line 275: 
line 276: " Cdrdao config
line 277: au BufNewFile,BufRead */etc/cdrdao.conf,*/etc/defaults/cdrdao,*/etc/default/cdrdao,.cdrdao^Isetf cdrdaoconf
line 278: 
line 279: " Cfengine
line 280: au BufNewFile,BufRead cfengine.conf^I^Isetf cfengine
line 281: 
line 282: " ChaiScript
line 283: au BufRead,BufNewFile *.chai^I^I^Isetf chaiscript
line 284: 
line 285: " Comshare Dimension Definition Language
line 286: au BufNewFile,BufRead *.cdl^I^I^Isetf cdl
line 287: 
line 288: " Conary Recipe
line 289: au BufNewFile,BufRead *.recipe^I^I^Isetf conaryrecipe
line 290: 
line 291: " Controllable Regex Mutilator
line 292: au BufNewFile,BufRead *.crm^I^I^Isetf crm
line 293: 
line 294: " Cyn++
line 295: au BufNewFile,BufRead *.cyn^I^I^Isetf cynpp
line 296: 
line 297: " Cynlib
line 298: " .cc and .cpp files can be C++ or Cynlib.
line 299: au BufNewFile,BufRead *.cc if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
line 301: au BufNewFile,BufRead *.cpp if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
line 303: 
line 304: " C++
line 305: au BufNewFile,BufRead *.cxx,*.c++,*.hh,*.hxx,*.hpp,*.ipp,*.moc,*.tcc,*.inl setf cpp
line 306: if has("fname_case")
line 307:   au BufNewFile,BufRead *.C,*.H setf cpp
line 308: endif
line 309: 
line 310: " .h files can be C, Ch C++, ObjC or ObjC++.
line 311: " Set c_syntax_for_h if you want C, ch_syntax_for_h if you want Ch. ObjC is
line 312: " detected automatically.
line 313: au BufNewFile,BufRead *.h^I^I^Icall dist#ft#FTheader()
line 314: 
line 315: " Ch (CHscript)
line 316: au BufNewFile,BufRead *.chf^I^I^Isetf ch
line 317: 
line 318: " TLH files are C++ headers generated by Visual C++'s #import from typelibs
line 319: au BufNewFile,BufRead *.tlh^I^I^Isetf cpp
line 320: 
line 321: " Cascading Style Sheets
line 322: au BufNewFile,BufRead *.css^I^I^Isetf css
line 323: 
line 324: " Century Term Command Scripts (*.cmd too)
line 325: au BufNewFile,BufRead *.con^I^I^Isetf cterm
line 326: 
line 327: " Changelog
line 328: au BufNewFile,BufRead changelog.Debian,changelog.dch,NEWS.Debian,NEWS.dch,*/debian/changelog^Isetf debchangelog
line 330: 
line 331: au BufNewFile,BufRead [cC]hange[lL]og  if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
line 337: 
line 338: au BufNewFile,BufRead NEWS  if getline(1) =~ '; urgency='|   setf debchangelog| endif
line 342: 
line 343: " CHILL
line 344: au BufNewFile,BufRead *..ch^I^I^Isetf chill
line 345: 
line 346: " Changes for WEB and CWEB or CHILL
line 347: au BufNewFile,BufRead *.ch^I^I^Icall dist#ft#FTchange()
line 348: 
line 349: " ChordPro
line 350: au BufNewFile,BufRead *.chopro,*.crd,*.cho,*.crdpro,*.chordpro^Isetf chordpro
line 351: 
line 352: " Clean
line 353: au BufNewFile,BufRead *.dcl,*.icl^I^Isetf clean
line 354: 
line 355: " Clever
line 356: au BufNewFile,BufRead *.eni^I^I^Isetf cl
line 357: 
line 358: " Clever or dtd
line 359: au BufNewFile,BufRead *.ent^I^I^Icall dist#ft#FTent()
line 360: 
line 361: " Clipper, FoxPro, ABB RAPID or eviews
line 362: au BufNewFile,BufRead *.prg\c^I^I^Icall dist#ft#FTprg()
line 363: 
line 364: " Clojure
line 365: au BufNewFile,BufRead *.clj,*.cljs,*.cljx,*.cljc^I^Isetf clojure
line 366: 
line 367: " Cmake
line 368: au BufNewFile,BufRead CMakeLists.txt,*.cmake,*.cmake.in^I^Isetf cmake
line 369: 
line 370: " Cmusrc
line 371: au BufNewFile,BufRead */.cmus/{autosave,rc,command-history,*.theme} setf cmusrc
line 372: au BufNewFile,BufRead */cmus/{rc,*.theme}^I^I^Isetf cmusrc
line 373: 
line 374: " Cobol
line 375: au BufNewFile,BufRead *.cbl,*.cob,*.lib^Isetf cobol
line 376: "   cobol or zope form controller python script? (heuristic)
line 377: au BufNewFile,BufRead *.cpy if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
line 383: 
line 384: " Coco/R
line 385: au BufNewFile,BufRead *.atg^I^I^Isetf coco
line 386: 
line 387: " Cold Fusion
line 388: au BufNewFile,BufRead *.cfm,*.cfi,*.cfc^I^Isetf cf
line 389: 
line 390: " Configure scripts
line 391: au BufNewFile,BufRead configure.in,configure.ac setf config
line 392: 
line 393: " Cooklang
line 394: au BufNewFile,BufRead *.cook^I^I^Isetf cook
line 395: 
line 396: " CUDA Compute Unified Device Architecture
line 397: au BufNewFile,BufRead *.cu,*.cuh^I^Isetf cuda
line 398: 
line 399: " Dockerfile; Podman uses the same syntax with name Containerfile
line 400: " Also see Dockerfile.* below.
line 401: au BufNewFile,BufRead Containerfile,Dockerfile,*.Dockerfile^Isetf dockerfile
line 402: 
line 403: " WildPackets EtherPeek Decoder
line 404: au BufNewFile,BufRead *.dcd^I^I^Isetf dcd
line 405: 
line 406: " Enlightenment configuration files
line 407: au BufNewFile,BufRead *enlightenment/*.cfg^Isetf c
line 408: 
line 409: " Eterm
line 410: au BufNewFile,BufRead *Eterm/*.cfg^I^Isetf eterm
line 411: 
line 412: " Elixir or Euphoria
line 413: au BufNewFile,BufRead *.ex call dist#ft#ExCheck()
line 414: 
line 415: " Elixir
line 416: au BufRead,BufNewFile mix.lock,*.exs setf elixir
line 417: au BufRead,BufNewFile *.eex,*.leex setf eelixir
line 418: 
line 419: " Elvish
line 420: au BufRead,BufNewFile *.elv setf elvish
line 421: 
line 422: " Euphoria 3 or 4
line 423: au BufNewFile,BufRead *.eu,*.ew,*.exu,*.exw  call dist#ft#EuphoriaCheck()
line 424: if has("fname_case")
line 425:    au BufNewFile,BufRead *.EU,*.EW,*.EX,*.EXU,*.EXW  call dist#ft#EuphoriaCheck()
line 426: endif
line 427: 
line 428: " Lynx config files
line 429: au BufNewFile,BufRead lynx.cfg^I^I^Isetf lynx
line 430: 
line 431: " Modula-3 configuration language (must be before *.cfg and *makefile)
line 432: au BufNewFile,BufRead *.quake,cm3.cfg^I^Isetf m3quake
line 433: au BufNewFile,BufRead m3makefile,m3overrides^Isetf m3build
line 434: 
line 435: " Quake
line 436: au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg^Isetf quake
line 437: au BufNewFile,BufRead *quake[1-3]/*.cfg^I^I^Isetf quake
line 438: 
line 439: " Quake C
line 440: au BufNewFile,BufRead *.qc^I^I^Isetf c
line 441: 
line 442: " Configure files
line 443: au BufNewFile,BufRead *.cfg\c^I^I^Icall dist#ft#FTcfg()
line 444: 
line 445: " Cucumber
line 446: au BufNewFile,BufRead *.feature^I^I^Isetf cucumber
line 447: 
line 448: " Communicating Sequential Processes
line 449: au BufNewFile,BufRead *.csp,*.fdr^I^Isetf csp
line 450: 
line 451: " CUPL logic description and simulation
line 452: au BufNewFile,BufRead *.pld^I^I^Isetf cupl
line 453: au BufNewFile,BufRead *.si^I^I^Isetf cuplsim
line 454: 
line 455: " Dart
line 456: au BufRead,BufNewfile *.dart,*.drt^I^Isetf dart
line 457: 
line 458: " Debian Control
line 459: au BufNewFile,BufRead */debian/control^I^Isetf debcontrol
line 460: au BufNewFile,BufRead control  if getline(1) =~ '^Source:'|   setf debcontrol| endif
line 464: 
line 465: " Debian Copyright
line 466: au BufNewFile,BufRead */debian/copyright^Isetf debcopyright
line 467: au BufNewFile,BufRead copyright  if getline(1) =~ '^Format:'|   setf debcopyright| endif
line 471: 
line 472: " Debian Sources.list
line 473: au BufNewFile,BufRead */etc/apt/sources.list^I^Isetf debsources
line 474: au BufNewFile,BufRead */etc/apt/sources.list.d/*.list^Isetf debsources
line 475: 
line 476: " Deny hosts
line 477: au BufNewFile,BufRead denyhosts.conf^I^Isetf denyhosts
line 478: 
line 479: " dnsmasq(8) configuration files
line 480: au BufNewFile,BufRead */etc/dnsmasq.conf^Isetf dnsmasq
line 481: 
line 482: " ROCKLinux package description
line 483: au BufNewFile,BufRead *.desc^I^I^Isetf desc
line 484: 
line 485: " the D language or dtrace
line 486: au BufNewFile,BufRead */dtrace/*.d^I^Isetf dtrace
line 487: au BufNewFile,BufRead *.d^I^I^Icall dist#ft#DtraceCheck()
line 488: 
line 489: " Desktop files
line 490: au BufNewFile,BufRead *.desktop,*.directory^Isetf desktop
line 491: 
line 492: " Dict config
line 493: au BufNewFile,BufRead dict.conf,.dictrc^I^Isetf dictconf
line 494: 
line 495: " Dictd config
line 496: au BufNewFile,BufRead dictd*.conf^I^Isetf dictdconf
line 497: 
line 498: " DEP3 formatted patch files
line 499: au BufNewFile,BufRead */debian/patches/*^Icall dist#ft#Dep3patch()
line 500: 
line 501: " Diff files
line 502: au BufNewFile,BufRead *.diff,*.rej^I^Isetf diff
line 503: au BufNewFile,BufRead *.patch if getline(1) =~# '^From [0-9a-f]\{40,\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
line 509: 
line 510: " Dircolors
line 511: au BufNewFile,BufRead .dir_colors,.dircolors,*/etc/DIR_COLORS^Isetf dircolors
line 512: 
line 513: " Diva (with Skill) or InstallShield
line 514: au BufNewFile,BufRead *.rul if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
line 520: 
line 521: " DCL (Digital Command Language - vms) or DNS zone file
line 522: au BufNewFile,BufRead *.com^I^I^Icall dist#ft#BindzoneCheck('dcl')
line 523: 
line 524: " DOT
line 525: au BufNewFile,BufRead *.dot,*.gv^I^Isetf dot
line 526: 
line 527: " Dune
line 528: au BufNewFile,BufRead jbuild,dune,dune-project,dune-workspace setf dune
line 529: 
line 530: " Dylan - lid files
line 531: au BufNewFile,BufRead *.lid^I^I^Isetf dylanlid
line 532: 
line 533: " Dylan - intr files (melange)
line 534: au BufNewFile,BufRead *.intr^I^I^Isetf dylanintr
line 535: 
line 536: " Dylan
line 537: au BufNewFile,BufRead *.dylan^I^I^Isetf dylan
line 538: 
line 539: " Microsoft Module Definition
line 540: au BufNewFile,BufRead *.def^I^I^Isetf def
line 541: 
line 542: " Dracula
line 543: au BufNewFile,BufRead *.drac,*.drc,*lvs,*lpe^Isetf dracula
line 544: 
line 545: " Datascript
line 546: au BufNewFile,BufRead *.ds^I^I^Isetf datascript
line 547: 
line 548: " dsl: DSSSL or Structurizr
line 549: au BufNewFile,BufRead *.dsl if getline(1) =~ '^\s*<\!' |   setf dsl | else |   setf structurizr | endif
line 555: 
line 556: " DTD (Document Type Definition for XML)
line 557: au BufNewFile,BufRead *.dtd^I^I^Isetf dtd
line 558: 
line 559: " DTS/DSTI (device tree files)
line 560: au BufNewFile,BufRead *.dts,*.dtsi^I^Isetf dts
line 561: 
line 562: " EDIF (*.edf,*.edif,*.edn,*.edo) or edn
line 563: au BufNewFile,BufRead *.ed\(f\|if\|o\)^I^Isetf edif
line 564: au BufNewFile,BufRead *.edn if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
line 570: 
line 571: " EditorConfig (close enough to dosini)
line 572: au BufNewFile,BufRead .editorconfig^I^Isetf dosini
line 573: 
line 574: " Embedix Component Description
line 575: au BufNewFile,BufRead *.ecd^I^I^Isetf ecd
line 576: 
line 577: " Eiffel or Specman or Euphoria
line 578: au BufNewFile,BufRead *.e,*.E^I^I^Icall dist#ft#FTe()
line 579: 
line 580: " Elinks configuration
line 581: au BufNewFile,BufRead elinks.conf^I^Isetf elinks
line 582: 
line 583: " ERicsson LANGuage; Yaws is erlang too
line 584: au BufNewFile,BufRead *.erl,*.hrl,*.yaws^Isetf erlang
line 585: 
line 586: " Elm
line 587: au BufNewFile,BufRead *.elm^I^I^Isetf elm
line 588: 
line 589: " Elm Filter Rules file
line 590: au BufNewFile,BufRead filter-rules^I^Isetf elmfilt
line 591: 
line 592: " ESMTP rc file
line 593: au BufNewFile,BufRead *esmtprc^I^I^Isetf esmtprc
line 594: 
line 595: " ESQL-C
line 596: au BufNewFile,BufRead *.ec,*.EC^I^I^Isetf esqlc
line 597: 
line 598: " Esterel
line 599: au BufNewFile,BufRead *.strl^I^I^Isetf esterel
line 600: 
line 601: " Essbase script
line 602: au BufNewFile,BufRead *.csc^I^I^Isetf csc
line 603: 
line 604: " Exim
line 605: au BufNewFile,BufRead exim.conf^I^I^Isetf exim
line 606: 
line 607: " Expect
line 608: au BufNewFile,BufRead *.exp^I^I^Isetf expect
line 609: 
line 610: " Exports
line 611: au BufNewFile,BufRead exports^I^I^Isetf exports
line 612: 
line 613: " Falcon
line 614: au BufNewFile,BufRead *.fal^I^I^Isetf falcon
line 615: 
line 616: " Fantom
line 617: au BufNewFile,BufRead *.fan,*.fwt^I^Isetf fan
line 618: 
line 619: " Factor
line 620: au BufNewFile,BufRead *.factor^I^I^Isetf factor
line 621: 
line 622: " Fennel
line 623: autocmd BufRead,BufNewFile *.fnl^I^Isetf fennel
line 624: 
line 625: " Fetchmail RC file
line 626: au BufNewFile,BufRead .fetchmailrc^I^Isetf fetchmail
line 627: 
line 628: " Fish shell
line 629: au BufNewFile,BufRead *.fish^I^I^Isetf fish
line 630: 
line 631: " FlexWiki - disabled, because it has side effects when a .wiki file
line 632: " is not actually FlexWiki
line 633: "au BufNewFile,BufRead *.wiki^I^I^Isetf flexwiki
line 634: 
line 635: " Focus Executable
line 636: au BufNewFile,BufRead *.fex,*.focexec^I^Isetf focexec
line 637: 
line 638: " Focus Master file (but not for auto.master)
line 639: au BufNewFile,BufRead auto.master^I^Isetf conf
line 640: au BufNewFile,BufRead *.mas,*.master^I^Isetf master
line 641: 
line 642: " Forth
line 643: au BufNewFile,BufRead *.ft,*.fth^I^Isetf forth
line 644: 
line 645: " Reva Forth
line 646: au BufNewFile,BufRead *.frt^I^I^Isetf reva
line 647: 
line 648: " Fortran
line 649: if has("fname_case")
line 650:   au BufNewFile,BufRead *.F,*.FOR,*.FPP,*.FTN,*.F77,*.F90,*.F95,*.F03,*.F08^I setf fortran
line 651: endif
line 652: au BufNewFile,BufRead   *.f,*.for,*.fortran,*.fpp,*.ftn,*.f77,*.f90,*.f95,*.f03,*.f08  setf fortran
line 653: 
line 654: " Framescript
line 655: au BufNewFile,BufRead *.fsl^I^I^Isetf framescript
line 656: 
line 657: " FStab
line 658: au BufNewFile,BufRead fstab,mtab^I^Isetf fstab
line 659: 
line 660: " Fusion
line 661: au BufRead,BufNewFile *.fusion^I^I^Isetf fusion
line 662: 
line 663: " F# or Forth
line 664: au BufNewFile,BufRead *.fs^I^I^Icall dist#ft#FTfs()
line 665: 
line 666: " F#
line 667: au BufNewFile,BufRead *.fsi,*.fsx^I^Isetf fsharp
line 668: 
line 669: " GDB command files
line 670: au BufNewFile,BufRead .gdbinit,gdbinit,.gdbearlyinit,gdbearlyinit,*.gdb^I^Isetf gdb
line 671: 
line 672: " GDMO
line 673: au BufNewFile,BufRead *.mo,*.gdmo^I^Isetf gdmo
line 674: 
line 675: " GDscript
line 676: au BufNewFile,BufRead *.gd^I^I^Isetf gdscript
line 677: 
line 678: " Godot resource
line 679: au BufRead,BufNewFile *.tscn,*.tres^I^I^Isetf gdresource
line 680: 
line 681: " Gedcom
line 682: au BufNewFile,BufRead *.ged,lltxxxxx.txt^Isetf gedcom
line 683: 
line 684: " Gemtext
line 685: au BufNewFile,BufRead *.gmi,*.gemini^I^Isetf gemtext
line 686: 
line 687: " Gift (Moodle)
line 688: autocmd BufRead,BufNewFile *.gift^I^Isetf gift
line 689: 
line 690: " Git
line 691: au BufNewFile,BufRead COMMIT_EDITMSG,MERGE_MSG,TAG_EDITMSG ^Isetf gitcommit
line 692: au BufNewFile,BufRead NOTES_EDITMSG,EDIT_DESCRIPTION^I^Isetf gitcommit
line 693: au BufNewFile,BufRead *.git/config,.gitconfig,*/etc/gitconfig ^Isetf gitconfig
line 694: au BufNewFile,BufRead */.config/git/config^I^I^Isetf gitconfig
line 695: au BufNewFile,BufRead *.git/config.worktree^I^I^Isetf gitconfig
line 696: au BufNewFile,BufRead *.git/worktrees/*/config.worktree^I^Isetf gitconfig
line 697: au BufNewFile,BufRead .gitmodules,*.git/modules/*/config^Isetf gitconfig
line 698: if !empty($XDG_CONFIG_HOME)
line 699:   au BufNewFile,BufRead $XDG_CONFIG_HOME/git/config^I^Isetf gitconfig
line 700: endif
line 701: au BufNewFile,BufRead git-rebase-todo^I^Isetf gitrebase
line 702: au BufRead,BufNewFile .gitsendemail.msg.??????^Isetf gitsendemail
line 703: au BufNewFile,BufRead *.git/* if getline(1) =~# '^\x\{40,\}\>\|^ref: ' |   setf git | endif
line 707: 
line 708: " Gkrellmrc
line 709: au BufNewFile,BufRead gkrellmrc,gkrellmrc_?^Isetf gkrellmrc
line 710: 
line 711: " GLSL
line 712: au BufNewFile,BufRead *.glsl^I^I^Isetf glsl
line 713: 
line 714: " GP scripts (2.0 and onward)
line 715: au BufNewFile,BufRead *.gp,.gprc^I^Isetf gp
line 716: 
line 717: " GPG
line 718: au BufNewFile,BufRead */.gnupg/options^I^Isetf gpg
line 719: au BufNewFile,BufRead */.gnupg/gpg.conf^I^Isetf gpg
line 720: au BufNewFile,BufRead */usr/*/gnupg/options.skel setf gpg
line 721: if !empty($GNUPGHOME)
line 722:   au BufNewFile,BufRead $GNUPGHOME/options^Isetf gpg
line 723:   au BufNewFile,BufRead $GNUPGHOME/gpg.conf^Isetf gpg
line 724: endif
line 725: 
line 726: " gnash(1) configuration files
line 727: au BufNewFile,BufRead gnashrc,.gnashrc,gnashpluginrc,.gnashpluginrc setf gnash
line 728: 
line 729: " Gitolite
line 730: au BufNewFile,BufRead gitolite.conf^I^Isetf gitolite
line 731: au BufNewFile,BufRead {,.}gitolite.rc,example.gitolite.rc^Isetf perl
line 732: 
line 733: " Glimmer-flavored TypeScript and JavaScript
line 734: au BufNewFile,BufRead *.gts^Isetf typescript.glimmer
line 735: au BufNewFile,BufRead *.gjs^Isetf javascript.glimmer
line 736: 
line 737: " Gnuplot scripts
line 738: au BufNewFile,BufRead *.gpi,.gnuplot^I^Isetf gnuplot
line 739: 
line 740: " Go (Google)
line 741: au BufNewFile,BufRead *.go^I^I^Isetf go
line 742: au BufNewFile,BufRead Gopkg.lock^I^Isetf toml
line 743: au BufRead,BufNewFile go.work^I^I^Isetf gowork
line 744: 
line 745: " GrADS scripts
line 746: au BufNewFile,BufRead *.gs^I^I^Isetf grads
line 747: 
line 748: " GraphQL
line 749: au BufNewFile,BufRead *.graphql,*.graphqls,*.gql^I^I^Isetf graphql
line 750: 
line 751: " Gretl
line 752: au BufNewFile,BufRead *.gretl^I^I^Isetf gretl
line 753: 
line 754: " Groovy
line 755: au BufNewFile,BufRead *.gradle,*.groovy^I^Isetf groovy
line 756: 
line 757: " GNU Server Pages
line 758: au BufNewFile,BufRead *.gsp^I^I^Isetf gsp
line 759: 
line 760: " Group file
line 761: au BufNewFile,BufRead */etc/group,*/etc/group-,*/etc/group.edit,*/etc/gshadow,*/etc/gshadow-,*/etc/gshadow.edit,*/var/backups/group.bak,*/var/backups/gshadow.bak  setf group
line 762: 
line 763: " GTK RC
line 764: au BufNewFile,BufRead .gtkrc,gtkrc^I^Isetf gtkrc
line 765: 
line 766: " Hack
line 767: au BufRead,BufNewFile *.hack,*.hackpartial^I^I^Isetf hack
line 768: 
line 769: " Haml
line 770: au BufNewFile,BufRead *.haml^I^I^Isetf haml
line 771: 
line 772: " Hamster Classic | Playground files
line 773: au BufNewFile,BufRead *.hsm^I^I^Isetf hamster
line 774: 
line 775: " Handlebars
line 776: au BufNewFile,BufRead *.hbs^I^I^Isetf handlebars
line 777: 
line 778: " Haskell
line 779: au BufNewFile,BufRead *.hs,*.hsc,*.hs-boot,*.hsig setf haskell
line 780: au BufNewFile,BufRead *.lhs^I^I^Isetf lhaskell
line 781: au BufNewFile,BufRead *.chs^I^I^Isetf chaskell
line 782: au BufNewFile,BufRead cabal.project^I^Isetf cabalproject
line 783: au BufNewFile,BufRead $HOME/.cabal/config^Isetf cabalconfig
line 784: au BufNewFile,BufRead cabal.config^I^Isetf cabalconfig
line 785: 
line 786: " Haste
line 787: au BufNewFile,BufRead *.ht^I^I^Isetf haste
line 788: au BufNewFile,BufRead *.htpp^I^I^Isetf hastepreproc
line 789: 
line 790: " HCL
line 791: au BufRead,BufNewFile *.hcl^I^I^Isetf hcl
line 792: 
line 793: " Hercules
line 794: au BufNewFile,BufRead *.vc,*.ev,*.sum,*.errsum^Isetf hercules
line 795: 
line 796: " HEEx
line 797: au BufRead,BufNewFile *.heex^I^I^Isetf heex
line 798: 
line 799: " HEX (Intel)
line 800: au BufNewFile,BufRead *.hex,*.h32^I^Isetf hex
line 801: 
line 802: " Hjson
line 803: au BufNewFile,BufRead *.hjson^I^I^Isetf hjson
line 804: 
line 805: " Hollywood
line 806: au BufRead,BufNewFile *.hws^I^I^Isetf hollywood
line 807: 
line 808: " Tilde (must be before HTML)
line 809: au BufNewFile,BufRead *.t.html^I^I^Isetf tilde
line 810: 
line 811: " HTML (.shtml and .stm for server side)
line 812: au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call dist#ft#FThtml()
line 813: 
line 814: " HTML with Ruby - eRuby
line 815: au BufNewFile,BufRead *.erb,*.rhtml^I^Isetf eruby
line 816: 
line 817: " HTML with M4
line 818: au BufNewFile,BufRead *.html.m4^I^I^Isetf htmlm4
line 819: 
line 820: " Some template.  Used to be HTML Cheetah.
line 821: au BufNewFile,BufRead *.tmpl^I^I^Isetf template
line 822: 
line 823: " Host config
line 824: au BufNewFile,BufRead */etc/host.conf^I^Isetf hostconf
line 825: 
line 826: " Hosts access
line 827: au BufNewFile,BufRead */etc/hosts.allow,*/etc/hosts.deny  setf hostsaccess
line 828: 
line 829: " Hyper Builder
line 830: au BufNewFile,BufRead *.hb^I^I^Isetf hb
line 831: 
line 832: " Httest
line 833: au BufNewFile,BufRead *.htt,*.htb^I^Isetf httest
line 834: 
line 835: " i3 (and sway)
line 836: au BufNewFile,BufRead */i3/config,*/sway/config^I^Isetf i3config
line 837: au BufNewFile,BufRead */.i3/config,*/.sway/config^Isetf i3config
line 838: 
line 839: " Icon
line 840: au BufNewFile,BufRead *.icn^I^I^Isetf icon
line 841: 
line 842: " IDL (Interface Description Language)
line 843: au BufNewFile,BufRead *.idl^I^I^Icall dist#ft#FTidl()
line 844: 
line 845: " Microsoft IDL (Interface Description Language)  Also *.idl
line 846: " MOF = WMI (Windows Management Instrumentation) Managed Object Format
line 847: au BufNewFile,BufRead *.odl,*.mof^I^Isetf msidl
line 848: 
line 849: " Icewm menu
line 850: au BufNewFile,BufRead */.icewm/menu^I^Isetf icemenu
line 851: 
line 852: " Indent profile (must come before IDL *.pro!)
line 853: au BufNewFile,BufRead .indent.pro^I^Isetf indent
line 854: au BufNewFile,BufRead indent.pro^I^Icall dist#ft#ProtoCheck('indent')
line 855: 
line 856: " IDL (Interactive Data Language)
line 857: au BufNewFile,BufRead *.pro^I^I^Icall dist#ft#ProtoCheck('idlang')
line 858: 
line 859: " Indent RC
line 860: au BufNewFile,BufRead indentrc^I^I^Isetf indent
line 861: 
line 862: " Inform
line 863: au BufNewFile,BufRead *.inf,*.INF^I^Isetf inform
line 864: 
line 865: " Initng
line 866: au BufNewFile,BufRead */etc/initng/*/*.i,*.ii^Isetf initng
line 867: 
line 868: " Innovation Data Processing
line 869: au BufRead,BufNewFile upstream.dat\c,upstream.*.dat\c,*.upstream.dat\c^Isetf upstreamdat
line 870: au BufRead,BufNewFile fdrupstream.log,upstream.log\c,upstream.*.log\c,*.upstream.log\c,UPSTREAM-*.log\c^Isetf upstreamlog
line 871: au BufRead,BufNewFile upstreaminstall.log\c,upstreaminstall.*.log\c,*.upstreaminstall.log\c setf upstreaminstalllog
line 872: au BufRead,BufNewFile usserver.log\c,usserver.*.log\c,*.usserver.log\c^Isetf usserverlog
line 873: au BufRead,BufNewFile usw2kagt.log\c,usw2kagt.*.log\c,*.usw2kagt.log\c^Isetf usw2kagtlog
line 874: 
line 875: " Ipfilter
line 876: au BufNewFile,BufRead ipf.conf,ipf6.conf,ipf.rules^Isetf ipfilter
line 877: 
line 878: " Informix 4GL (source - canonical, include file, I4GL+M4 preproc.)
line 879: au BufNewFile,BufRead *.4gl,*.4gh,*.m4gl^Isetf fgl
line 880: 
line 881: " .INI file for MSDOS
line 882: au BufNewFile,BufRead *.ini^I^I^Isetf dosini
line 883: 
line 884: " SysV Inittab
line 885: au BufNewFile,BufRead inittab^I^I^Isetf inittab
line 886: 
line 887: " Inno Setup
line 888: au BufNewFile,BufRead *.iss^I^I^Isetf iss
line 889: 
line 890: " J
line 891: au BufNewFile,BufRead *.ijs^I^I^Isetf j
line 892: 
line 893: " JAL
line 894: au BufNewFile,BufRead *.jal,*.JAL^I^Isetf jal
line 895: 
line 896: " Jam
line 897: au BufNewFile,BufRead *.jpl,*.jpr^I^Isetf jam
line 898: 
line 899: " Java
line 900: au BufNewFile,BufRead *.java,*.jav^I^Isetf java
line 901: 
line 902: " JavaCC
line 903: au BufNewFile,BufRead *.jj,*.jjt^I^Isetf javacc
line 904: 
line 905: " JavaScript, ECMAScript, ES module script, CommonJS script
line 906: au BufNewFile,BufRead *.js,*.javascript,*.es,*.mjs,*.cjs   setf javascript
line 907: 
line 908: " JavaScript with React
line 909: au BufNewFile,BufRead *.jsx^I^I^Isetf javascriptreact
line 910: 
line 911: " Java Server Pages
line 912: au BufNewFile,BufRead *.jsp^I^I^Isetf jsp
line 913: 
line 914: " Java Properties resource file (note: doesn't catch font.properties.pl)
line 915: au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_??^Isetf jproperties
line 916: 
line 917: " Jess
line 918: au BufNewFile,BufRead *.clp^I^I^Isetf jess
line 919: 
line 920: " Jgraph
line 921: au BufNewFile,BufRead *.jgr^I^I^Isetf jgraph
line 922: 
line 923: " Jovial
line 924: au BufNewFile,BufRead *.jov,*.j73,*.jovial^Isetf jovial
line 925: 
line 926: " JSON
line 927: au BufNewFile,BufRead *.json,*.jsonp,*.webmanifest^Isetf json
line 928: 
line 929: " JSON5
line 930: au BufNewFile,BufRead *.json5^I^I^Isetf json5
line 931: 
line 932: " JSON Patch (RFC 6902)
line 933: au BufNewFile,BufRead *.json-patch^I^I^Isetf json
line 934: 
line 935: " Jupyter Notebook is also json
line 936: au BufNewFile,BufRead *.ipynb^I^I^I^Isetf json
line 937: 
line 938: " Other files that look like json
line 939: au BufNewFile,BufRead .babelrc,.eslintrc,.prettierrc,.firebaserc  setf json
line 940: 
line 941: " JSONC
line 942: au BufNewFile,BufRead *.jsonc^I^I^Isetf jsonc
line 943: 
line 944: " Julia
line 945: au BufNewFile,BufRead *.jl^I^I^Isetf julia
line 946: 
line 947: " Kixtart
line 948: au BufNewFile,BufRead *.kix^I^I^Isetf kix
line 949: 
line 950: " Kuka Robot Language
line 951: au BufNewFile,BufRead *.src\c^I^I^Icall dist#ft#FTsrc()
line 952: au BufNewFile,BufRead *.dat\c^I^I^Icall dist#ft#FTdat()
line 953: au BufNewFile,BufRead *.sub\c^I^I^Isetf krl
line 954: 
line 955: " Kimwitu[++]
line 956: au BufNewFile,BufRead *.k^I^I^Isetf kwt
line 957: 
line 958: " Kivy
line 959: au BufNewFile,BufRead *.kv^I^I^Isetf kivy
line 960: 
line 961: " Kotlin
line 962: au BufNewFile,BufRead *.kt,*.ktm,*.kts^I^Isetf kotlin
line 963: 
line 964: " KDE script
line 965: au BufNewFile,BufRead *.ks^I^I^Isetf kscript
line 966: 
line 967: " Kconfig
line 968: au BufNewFile,BufRead Kconfig,Kconfig.debug^Isetf kconfig
line 969: 
line 970: " Lace (ISE)
line 971: au BufNewFile,BufRead *.ace,*.ACE^I^Isetf lace
line 972: 
line 973: " Latte
line 974: au BufNewFile,BufRead *.latte,*.lte^I^Isetf latte
line 975: 
line 976: " Limits
line 977: au BufNewFile,BufRead */etc/limits,*/etc/*limits.conf,*/etc/*limits.d/*.conf^Isetf limits
line 978: 
line 979: " LambdaProlog (see dist#ft#FTmod for *.mod)
line 980: au BufNewFile,BufRead *.sig^I^I^Isetf lprolog
line 981: 
line 982: " LDAP LDIF
line 983: au BufNewFile,BufRead *.ldif^I^I^Isetf ldif
line 984: 
line 985: " Ld loader
line 986: au BufNewFile,BufRead *.ld^I^I^Isetf ld
line 987: 
line 988: " Ledger
line 989: au BufRead,BufNewFile *.ldg,*.ledger,*.journal^I^I^Isetf ledger
line 990: 
line 991: " Less
line 992: au BufNewFile,BufRead *.less^I^I^Isetf less
line 993: 
line 994: " Lex
line 995: au BufNewFile,BufRead *.lex,*.l,*.lxx,*.l++^Isetf lex
line 996: 
line 997: " Libao
line 998: au BufNewFile,BufRead */etc/libao.conf,*/.libao^Isetf libao
line 999: 
line 1000: " Libsensors
line 1001: au BufNewFile,BufRead */etc/sensors.conf,*/etc/sensors3.conf^Isetf sensors
line 1002: 
line 1003: " LFTP
line 1004: au BufNewFile,BufRead lftp.conf,.lftprc,*lftp/rc^Isetf lftp
line 1005: 
line 1006: " Lifelines (or Lex for C++!)
line 1007: au BufNewFile,BufRead *.ll^I^I^Isetf lifelines
line 1008: 
line 1009: " Lilo: Linux loader
line 1010: au BufNewFile,BufRead lilo.conf^I^I^Isetf lilo
line 1011: 
line 1012: " Lisp (*.el = ELisp, *.cl = Common Lisp)
line 1013: " *.jl was removed, it's also used for Julia, better skip than guess wrong.
line 1014: if has("fname_case")
line 1015:   au BufNewFile,BufRead *.lsp,*.lisp,*.asd,*.el,*.cl,*.L,.emacs,.sawfishrc setf lisp
line 1016: else
line 1017:   au BufNewFile,BufRead *.lsp,*.lisp,*.asd,*.el,*.cl,.emacs,.sawfishrc setf lisp
line 1018: endif
line 1019: 
line 1020: " SBCL implementation of Common Lisp
line 1021: au BufNewFile,BufRead sbclrc,.sbclrc^I^Isetf lisp
line 1022: 
line 1023: " Liquid
line 1024: au BufNewFile,BufRead *.liquid^I^I^Isetf liquid
line 1025: 
line 1026: " Lite
line 1027: au BufNewFile,BufRead *.lite,*.lt^I^Isetf lite
line 1028: 
line 1029: " LiteStep RC files
line 1030: au BufNewFile,BufRead */LiteStep/*/*.rc^I^Isetf litestep
line 1031: 
line 1032: " Login access
line 1033: au BufNewFile,BufRead */etc/login.access^Isetf loginaccess
line 1034: 
line 1035: " Login defs
line 1036: au BufNewFile,BufRead */etc/login.defs^I^Isetf logindefs
line 1037: 
line 1038: " Logtalk
line 1039: au BufNewFile,BufRead *.lgt^I^I^Isetf logtalk
line 1040: 
line 1041: " LOTOS
line 1042: au BufNewFile,BufRead *.lot,*.lotos^I^Isetf lotos
line 1043: 
line 1044: " Lout (also: *.lt)
line 1045: au BufNewFile,BufRead *.lou,*.lout^I^Isetf lout
line 1046: 
line 1047: " Lua
line 1048: au BufNewFile,BufRead *.lua^I^I^Isetf lua
line 1049: 
line 1050: " Luarocks
line 1051: au BufNewFile,BufRead *.rockspec^I^Isetf lua
line 1052: 
line 1053: " Linden Scripting Language (Second Life)
line 1054: au BufNewFile,BufRead *.lsl^I^I^Isetf lsl
line 1055: 
line 1056: " Lynx style file (or LotusScript!)
line 1057: au BufNewFile,BufRead *.lss^I^I^Isetf lss
line 1058: 
line 1059: " M4
line 1060: au BufNewFile,BufRead *.m4 if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
line 1062: 
line 1063: " MaGic Point
line 1064: au BufNewFile,BufRead *.mgp^I^I^Isetf mgp
line 1065: 
line 1066: " Mail (for Elm, trn, mutt, muttng, rn, slrn, neomutt)
line 1067: au BufNewFile,BufRead snd.\d\+,.letter,.letter.\d\+,.followup,.article,.article.\d\+,pico.\d\+,mutt{ng,}-*-\w\+,mutt[[:alnum:]_-]\\\{6\},neomutt-*-\w\+,neomutt[[:alnum:]_-]\\\{6\},ae\d\+.txt,/tmp/SLRN[0-9A-Z.]\+,*.eml setf mail
line 1068: 
line 1069: " Mail aliases
line 1070: au BufNewFile,BufRead */etc/mail/aliases,*/etc/aliases^Isetf mailaliases
line 1071: 
line 1072: " Mailcap configuration file
line 1073: au BufNewFile,BufRead .mailcap,mailcap^I^Isetf mailcap
line 1074: 
line 1075: " Makefile
line 1076: au BufNewFile,BufRead *[mM]akefile,*.mk,*.mak,*.dsp setf make
line 1077: 
line 1078: " MakeIndex
line 1079: au BufNewFile,BufRead *.ist,*.mst^I^Isetf ist
line 1080: 
line 1081: " Mallard
line 1082: au BufNewFile,BufRead *.page^I^I^Isetf mallard
line 1083: 
line 1084: " Manpage
line 1085: au BufNewFile,BufRead *.man^I^I^Isetf nroff
line 1086: 
line 1087: " Man config
line 1088: au BufNewFile,BufRead */etc/man.conf,man.config^Isetf manconf
line 1089: 
line 1090: " Maple V
line 1091: au BufNewFile,BufRead *.mv,*.mpl,*.mws^I^Isetf maple
line 1092: 
line 1093: " Map (UMN mapserver config file)
line 1094: au BufNewFile,BufRead *.map^I^I^Isetf map
line 1095: 
line 1096: " Markdown
line 1097: au BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.mdwn,*.md  setf markdown
line 1098: 
line 1099: " Mason
line 1100: au BufNewFile,BufRead *.mason,*.mhtml,*.comp^Isetf mason
line 1101: 
line 1102: " Mathematica, Matlab, Murphi, Objective C or Octave
line 1103: au BufNewFile,BufRead *.m^I^I^Icall dist#ft#FTm()
line 1104: 
line 1105: " Mathematica notebook
line 1106: au BufNewFile,BufRead *.nb^I^I^Isetf mma
line 1107: 
line 1108: " Maya Extension Language
line 1109: au BufNewFile,BufRead *.mel^I^I^Isetf mel
line 1110: 
line 1111: " Mercurial (hg) commit file
line 1112: au BufNewFile,BufRead hg-editor-*.txt^I^Isetf hgcommit
line 1113: 
line 1114: " Mercurial config (looks like generic config file)
line 1115: au BufNewFile,BufRead *.hgrc,*hgrc^I^Isetf cfg
line 1116: 
line 1117: " Meson Build system config
line 1118: au BufNewFile,BufRead meson.build,meson_options.txt setf meson
line 1119: au BufNewFile,BufRead *.wrap^I^I^Isetf dosini
line 1120: 
line 1121: " Messages (logs mostly)
line 1122: au BufNewFile,BufRead */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*} setf messages
line 1123: 
line 1124: " Metafont
line 1125: au BufNewFile,BufRead *.mf^I^I^Isetf mf
line 1126: 
line 1127: " MetaPost
line 1128: au BufNewFile,BufRead *.mp^I^I^Isetf mp
line 1129: 
line 1130: " MGL
line 1131: au BufNewFile,BufRead *.mgl^I^I^Isetf mgl
line 1132: 
line 1133: " MIX - Knuth assembly
line 1134: au BufNewFile,BufRead *.mix,*.mixal^I^Isetf mix
line 1135: 
line 1136: " MMIX or VMS makefile
line 1137: au BufNewFile,BufRead *.mms^I^I^Icall dist#ft#FTmms()
line 1138: 
line 1139: " Symbian meta-makefile definition (MMP)
line 1140: au BufNewFile,BufRead *.mmp^I^I^Isetf mmp
line 1141: 
line 1142: " ABB Rapid, Modula-2, Modsim III or LambdaProlog
line 1143: au BufNewFile,BufRead *.mod\c^I^I^Icall dist#ft#FTmod()
line 1144: 
line 1145: " Modula-2  (.md removed in favor of Markdown, see dist#ft#FTmod for *.MOD)
line 1146: au BufNewFile,BufRead *.m2,*.DEF,*.mi^I^Isetf modula2
line 1147: 
line 1148: " Modula-3 (.m3, .i3, .mg, .ig)
line 1149: au BufNewFile,BufRead *.[mi][3g]^I^Isetf modula3
line 1150: 
line 1151: " Monk
line 1152: au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc^Isetf monk
line 1153: 
line 1154: " MOO
line 1155: au BufNewFile,BufRead *.moo^I^I^Isetf moo
line 1156: 
line 1157: " Modconf
line 1158: au BufNewFile,BufRead */etc/modules.conf,*/etc/modules,*/etc/conf.modules setf modconf
line 1159: 
line 1160: " MPD is based on XML
line 1161: au BufNewFile,BufRead *.mpd^I^I^Isetf xml
line 1162: 
line 1163: " Mplayer config
line 1164: au BufNewFile,BufRead mplayer.conf,*/.mplayer/config^Isetf mplayerconf
line 1165: 
line 1166: " Motorola S record
line 1167: au BufNewFile,BufRead *.s19,*.s28,*.s37,*.mot,*.srec^Isetf srec
line 1168: 
line 1169: " Mrxvtrc
line 1170: au BufNewFile,BufRead mrxvtrc,.mrxvtrc^I^Isetf mrxvtrc
line 1171: 
line 1172: " Msql
line 1173: au BufNewFile,BufRead *.msql^I^I^Isetf msql
line 1174: 
line 1175: " Mysql
line 1176: au BufNewFile,BufRead *.mysql^I^I^Isetf mysql
line 1177: 
line 1178: " Tcl Shell RC file
line 1179: au BufNewFile,BufRead tclsh.rc^I^I^Isetf tcl
line 1180: 
line 1181: " M$ Resource files
line 1182: " /etc/Muttrc.d/file.rc is muttrc
line 1183: au BufNewFile,BufRead *.rc,*.rch if expand("<afile>") !~ "/etc/Muttrc.d/" |   setf rc | endif
line 1187: 
line 1188: " MuPAD source
line 1189: au BufRead,BufNewFile *.mu^I^I^Isetf mupad
line 1190: 
line 1191: " Mush
line 1192: au BufNewFile,BufRead *.mush^I^I^Isetf mush
line 1193: 
line 1194: " Mutt setup file (also for Muttng)
line 1195: au BufNewFile,BufRead Mutt{ng,}rc^I^Isetf muttrc
line 1196: 
line 1197: " N1QL
line 1198: au BufRead,BufNewfile *.n1ql,*.nql^I^Isetf n1ql
line 1199: 
line 1200: " Nano
line 1201: au BufNewFile,BufRead */etc/nanorc,*.nanorc^Isetf nanorc
line 1202: 
line 1203: " Nastran input/DMAP
line 1204: "au BufNewFile,BufRead *.dat^I^I^Isetf nastran
line 1205: 
line 1206: " Natural
line 1207: au BufNewFile,BufRead *.NS[ACGLMNPS]^I^Isetf natural
line 1208: 
line 1209: " Noemutt setup file
line 1210: au BufNewFile,BufRead Neomuttrc^I^I^Isetf neomuttrc
line 1211: 
line 1212: " Netrc
line 1213: au BufNewFile,BufRead .netrc^I^I^Isetf netrc
line 1214: 
line 1215: " Nginx
line 1216: au BufNewFile,BufRead *.nginx,nginx*.conf,*nginx.conf,*/etc/nginx/*,*/usr/local/nginx/conf/*,*/nginx/*.conf^I^I^Isetf nginx
line 1217: 
line 1218: " Ninja file
line 1219: au BufNewFile,BufRead *.ninja^I^I^Isetf ninja
line 1220: 
line 1221: " Nix
line 1222: au BufRead,BufNewFile *.nix^I^I^Isetf nix
line 1223: 
line 1224: " NPM RC file
line 1225: au BufNewFile,BufRead npmrc,.npmrc^I^Isetf dosini
line 1226: 
line 1227: " Novell netware batch files
line 1228: au BufNewFile,BufRead *.ncf^I^I^Isetf ncf
line 1229: 
line 1230: " Nroff/Troff (*.ms and *.t are checked below)
line 1231: au BufNewFile,BufRead *.me if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
line 1235: au BufNewFile,BufRead *.tr,*.nr,*.roff,*.tmac,*.mom^Isetf nroff
line 1236: au BufNewFile,BufRead *.[1-9]^I^I^Icall dist#ft#FTnroff()
line 1237: 
line 1238: " Nroff or Objective C++
line 1239: au BufNewFile,BufRead *.mm^I^I^Icall dist#ft#FTmm()
line 1240: 
line 1241: " Not Quite C
line 1242: au BufNewFile,BufRead *.nqc^I^I^Isetf nqc
line 1243: 
line 1244: " NSE - Nmap Script Engine - uses Lua syntax
line 1245: au BufNewFile,BufRead *.nse^I^I^Isetf lua
line 1246: 
line 1247: " NSIS
line 1248: au BufNewFile,BufRead *.nsi,*.nsh^I^Isetf nsis
line 1249: 
line 1250: " OCaml
line 1251: au BufNewFile,BufRead *.ml,*.mli,*.mll,*.mly,.ocamlinit,*.mlt,*.mlp,*.mlip,*.mli.cppo,*.ml.cppo setf ocaml
line 1252: 
line 1253: " Occam
line 1254: au BufNewFile,BufRead *.occ^I^I^Isetf occam
line 1255: 
line 1256: " Octave
line 1257: au BufNewFile,BufRead octave.conf,.octaverc,octaverc^Isetf octave
line 1258: 
line 1259: " Omnimark
line 1260: au BufNewFile,BufRead *.xom,*.xin^I^Isetf omnimark
line 1261: 
line 1262: " OPAM
line 1263: au BufNewFile,BufRead opam,*.opam,*.opam.template setf opam
line 1264: 
line 1265: " OpenFOAM
line 1266: au BufNewFile,BufRead [a-zA-Z0-9]*Dict\(.*\)\=,[a-zA-Z]*Properties\(.*\)\=,*Transport\(.*\),fvSchemes,fvSolution,fvConstrains,fvModels,*/constant/g,*/0\(\.orig\)\=/* call dist#ft#FTfoam()
line 1267: 
line 1268: " OpenROAD
line 1269: au BufNewFile,BufRead *.or^I^I^Isetf openroad
line 1270: 
line 1271: " OPL
line 1272: au BufNewFile,BufRead *.[Oo][Pp][Ll]^I^Isetf opl
line 1273: 
line 1274: " OpenSCAD
line 1275: au BufNewFile,BufRead *.scad^I^Isetf openscad^I^I
line 1276: 
line 1277: " Oracle config file
line 1278: au BufNewFile,BufRead *.ora^I^I^Isetf ora
line 1279: 
line 1280: " Org
line 1281: au BufNewFile,BufRead *.org,*.org_archive^Isetf org
line 1282: 
line 1283: " Packet filter conf
line 1284: au BufNewFile,BufRead pf.conf^I^I^Isetf pf
line 1285: 
line 1286: " Pacman Config (close enough to dosini)
line 1287: au BufNewFile,BufRead */etc/pacman.conf^I^Isetf dosini
line 1288: 
line 1289: " Pacman hooks
line 1290: au BufNewFile,BufRead *.hook if getline(1) == '[Trigger]' |   setf dosini | endif
line 1294: 
line 1295: " Pam conf
line 1296: au BufNewFile,BufRead */etc/pam.conf^I^I^Isetf pamconf
line 1297: 
line 1298: " Pam environment
line 1299: au BufNewFile,BufRead pam_env.conf,.pam_environment^Isetf pamenv
line 1300: 
line 1301: " PApp
line 1302: au BufNewFile,BufRead *.papp,*.pxml,*.pxsl^Isetf papp
line 1303: 
line 1304: " Password file
line 1305: au BufNewFile,BufRead */etc/passwd,*/etc/passwd-,*/etc/passwd.edit,*/etc/shadow,*/etc/shadow-,*/etc/shadow.edit,*/var/backups/passwd.bak,*/var/backups/shadow.bak setf passwd
line 1306: 
line 1307: " Pascal (also *.p, *.pp, *.inc)
line 1308: au BufNewFile,BufRead *.pas^I^I^Isetf pascal
line 1309: 
line 1310: " Pascal or Puppet manifest
line 1311: au BufNewFile,BufRead *.pp^I^I^Icall dist#ft#FTpp()
line 1312: 
line 1313: " Delphi or Lazarus program file
line 1314: au BufNewFile,BufRead *.dpr,*.lpr^I^Isetf pascal
line 1315: 
line 1316: " Free Pascal makefile definition file
line 1317: au BufNewFile,BufRead *.fpc^I^I^Isetf fpcmake
line 1318: 
line 1319: " PDF
line 1320: au BufNewFile,BufRead *.pdf^I^I^Isetf pdf
line 1321: 
line 1322: " PCMK - HAE - crm configure edit
line 1323: au BufNewFile,BufRead *.pcmk^I^I^Isetf pcmk
line 1324: 
line 1325: " Perl
line 1326: if has("fname_case")
line 1327:   au BufNewFile,BufRead *.pl,*.PL^I^Icall dist#ft#FTpl()
line 1328: else
line 1329:   au BufNewFile,BufRead *.pl^I^I^Icall dist#ft#FTpl()
line 1330: endif
line 1331: au BufNewFile,BufRead *.plx,*.al,*.psgi^I^Isetf perl
line 1332: 
line 1333: " Perl, XPM or XPM2
line 1334: au BufNewFile,BufRead *.pm if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
line 1342: 
line 1343: " Perl POD
line 1344: au BufNewFile,BufRead *.pod^I^I^Isetf pod
line 1345: 
line 1346: " Php, php3, php4, etc.
line 1347: " Also Phtml (was used for PHP 2 in the past).
line 1348: " Also .ctp for Cake template file.
line 1349: " Also .phpt for php tests.
line 1350: au BufNewFile,BufRead *.php,*.php\d,*.phtml,*.ctp,*.phpt^Isetf php
line 1351: 
line 1352: " PHP config
line 1353: au BufNewFile,BufRead php.ini-*^I^I^Isetf dosini
line 1354: 
line 1355: " Pike and Cmod
line 1356: au BufNewFile,BufRead *.pike,*.pmod^I^Isetf pike
line 1357: au BufNewFile,BufRead *.cmod^I^I^Isetf cmod
line 1358: 
line 1359: " Pinfo config
line 1360: au BufNewFile,BufRead */etc/pinforc,*/.pinforc^Isetf pinfo
line 1361: 
line 1362: " Palm Resource compiler
line 1363: au BufNewFile,BufRead *.rcp^I^I^Isetf pilrc
line 1364: 
line 1365: " Pine config
line 1366: au BufNewFile,BufRead .pinerc,pinerc,.pinercex,pinercex^I^Isetf pine
line 1367: 
line 1368: " Pipenv Pipfiles
line 1369: au BufNewFile,BufRead Pipfile^I^I^Isetf toml
line 1370: au BufNewFile,BufRead Pipfile.lock^I^Isetf json
line 1371: 
line 1372: " PL/1, PL/I
line 1373: au BufNewFile,BufRead *.pli,*.pl1^I^Isetf pli
line 1374: 
line 1375: " PL/M (also: *.inp)
line 1376: au BufNewFile,BufRead *.plm,*.p36,*.pac^I^Isetf plm
line 1377: 
line 1378: " PL/SQL
line 1379: au BufNewFile,BufRead *.pls,*.plsql^I^Isetf plsql
line 1380: 
line 1381: " PLP
line 1382: au BufNewFile,BufRead *.plp^I^I^Isetf plp
line 1383: 
line 1384: " PO and PO template (GNU gettext)
line 1385: au BufNewFile,BufRead *.po,*.pot^I^Isetf po
line 1386: 
line 1387: " Postfix main config
line 1388: au BufNewFile,BufRead main.cf^I^I^Isetf pfmain
line 1389: 
line 1390: " PostScript (+ font files, encapsulated PostScript, Adobe Illustrator)
line 1391: au BufNewFile,BufRead *.ps,*.pfa,*.afm,*.eps,*.epsf,*.epsi,*.ai^I  setf postscr
line 1392: 
line 1393: " PostScript Printer Description
line 1394: au BufNewFile,BufRead *.ppd^I^I^Isetf ppd
line 1395: 
line 1396: " Povray
line 1397: au BufNewFile,BufRead *.pov^I^I^Isetf pov
line 1398: 
line 1399: " Povray configuration
line 1400: au BufNewFile,BufRead .povrayrc^I^I^Isetf povini
line 1401: 
line 1402: " Povray, Pascal, PHP or assembly
line 1403: au BufNewFile,BufRead *.inc^I^I^Icall dist#ft#FTinc()
line 1404: 
line 1405: " PowerShell
line 1406: au BufNewFile,BufRead^I*.ps1,*.psd1,*.psm1,*.pssc^Isetf ps1
line 1407: au BufNewFile,BufRead^I*.ps1xml^I^I^Isetf ps1xml
line 1408: au BufNewFile,BufRead^I*.cdxml,*.psc1^I^I^Isetf xml
line 1409: 
line 1410: " Printcap and Termcap
line 1411: au BufNewFile,BufRead *printcap let b:ptcap_type = "print" | setf ptcap
line 1413: au BufNewFile,BufRead *termcap let b:ptcap_type = "term" | setf ptcap
line 1415: 
line 1416: " Prisma
line 1417: au BufRead,BufNewFile *.prisma^I^I^Isetf prisma
line 1418: 
line 1419: " PCCTS / ANTLR
line 1420: "au BufNewFile,BufRead *.g^I^I^Isetf antlr
line 1421: au BufNewFile,BufRead *.g^I^I^Isetf pccts
line 1422: 
line 1423: " PPWizard
line 1424: au BufNewFile,BufRead *.it,*.ih^I^I^Isetf ppwiz
line 1425: 
line 1426: " Pug
line 1427: au BufRead,BufNewFile *.pug^I^I^Isetf pug
line 1428: 
line 1429: " Puppet
line 1430: au BufNewFile,BufRead Puppetfile^I^Isetf ruby
line 1431: 
line 1432: " Embedded Puppet
line 1433: au BufNewFile,BufRead *.epp^I^I^Isetf epuppet
line 1434: 
line 1435: " Obj 3D file format
line 1436: " TODO: is there a way to avoid MS-Windows Object files?
line 1437: au BufNewFile,BufRead *.obj^I^I^Isetf obj
line 1438: 
line 1439: " Oracle Pro*C/C++
line 1440: au BufNewFile,BufRead *.pc^I^I^Isetf proc
line 1441: 
line 1442: " Privoxy actions file
line 1443: au BufNewFile,BufRead *.action^I^I^Isetf privoxy
line 1444: 
line 1445: " Procmail
line 1446: au BufNewFile,BufRead .procmail,.procmailrc^Isetf procmail
line 1447: 
line 1448: " Progress or CWEB
line 1449: au BufNewFile,BufRead *.w^I^I^Icall dist#ft#FTprogress_cweb()
line 1450: 
line 1451: " Progress or assembly
line 1452: au BufNewFile,BufRead *.i^I^I^Icall dist#ft#FTprogress_asm()
line 1453: 
line 1454: " Progress or Pascal
line 1455: au BufNewFile,BufRead *.p^I^I^Icall dist#ft#FTprogress_pascal()
line 1456: 
line 1457: " Software Distributor Product Specification File (POSIX 1387.2-1995)
line 1458: au BufNewFile,BufRead *.psf^I^I^Isetf psf
line 1459: au BufNewFile,BufRead INDEX,INFO if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
line 1463: 
line 1464: " Prolog
line 1465: au BufNewFile,BufRead *.pdb^I^I^Isetf prolog
line 1466: 
line 1467: " Promela
line 1468: au BufNewFile,BufRead *.pml^I^I^Isetf promela
line 1469: 
line 1470: " Property Specification Language (PSL)
line 1471: au BufNewFile,BufRead *.psl^I^I^Isetf psl
line 1472: 
line 1473: " Google protocol buffers
line 1474: au BufNewFile,BufRead *.proto^I^I^Isetf proto
line 1475: au BufNewFile,BufRead *.pbtxt^I^I^Isetf pbtxt
line 1476: 
line 1477: " Poke
line 1478: au BufNewFile,BufRead *.pk^I^I^Isetf poke
line 1479: 
line 1480: " Protocols
line 1481: au BufNewFile,BufRead */etc/protocols^I^Isetf protocols
line 1482: 
line 1483: " Pyret
line 1484: au BufNewFile,BufRead *.arr^I^I^Isetf pyret
line 1485: 
line 1486: " Pyrex
line 1487: au BufNewFile,BufRead *.pyx,*.pxd^I^Isetf pyrex
line 1488: 
line 1489: " Python, Python Shell Startup and Python Stub Files
line 1490: " Quixote (Python-based web framework)
line 1491: au BufNewFile,BufRead *.py,*.pyw,.pythonstartup,.pythonrc  setf python
line 1492: au BufNewFile,BufRead *.ptl,*.pyi,SConstruct^I^I   setf python
line 1493: 
line 1494: " QL
line 1495: au BufRead,BufNewFile *.ql,*.qll^I^Isetf ql
line 1496: 
line 1497: " Radiance
line 1498: au BufNewFile,BufRead *.rad,*.mat^I^Isetf radiance
line 1499: 
line 1500: " Raku (formerly Perl6)
line 1501: au BufNewFile,BufRead *.pm6,*.p6,*.t6,*.pod6,*.raku,*.rakumod,*.rakudoc,*.rakutest  setf raku
line 1502: 
line 1503: " Ratpoison config/command files
line 1504: au BufNewFile,BufRead .ratpoisonrc,ratpoisonrc^Isetf ratpoison
line 1505: 
line 1506: " RCS file
line 1507: au BufNewFile,BufRead *\,v^I^I^Isetf rcs
line 1508: 
line 1509: " Readline
line 1510: au BufNewFile,BufRead .inputrc,inputrc^I^Isetf readline
line 1511: 
line 1512: " Registry for MS-Windows
line 1513: au BufNewFile,BufRead *.reg if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
line 1515: 
line 1516: " Renderman Interface Bytestream
line 1517: au BufNewFile,BufRead *.rib^I^I^Isetf rib
line 1518: 
line 1519: " Rego Policy Language
line 1520: au BufNewFile,BufRead *.rego^I^I^Isetf rego
line 1521: 
line 1522: " Rexx
line 1523: au BufNewFile,BufRead *.rex,*.orx,*.rxo,*.rxj,*.jrexx,*.rexxj,*.rexx,*.testGroup,*.testUnit^Isetf rexx
line 1524: 
line 1525: " R Help file
line 1526: if has("fname_case")
line 1527:   au BufNewFile,BufRead *.rd,*.Rd^I^Isetf rhelp
line 1528: else
line 1529:   au BufNewFile,BufRead *.rd^I^I^Isetf rhelp
line 1530: endif
line 1531: 
line 1532: " R noweb file
line 1533: if has("fname_case")
line 1534:   au BufNewFile,BufRead *.Rnw,*.rnw,*.Snw,*.snw^I^Isetf rnoweb
line 1535: else
line 1536:   au BufNewFile,BufRead *.rnw,*.snw^I^I^Isetf rnoweb
line 1537: endif
line 1538: 
line 1539: " R Markdown file
line 1540: if has("fname_case")
line 1541:   au BufNewFile,BufRead *.Rmd,*.rmd,*.Smd,*.smd^I^Isetf rmd
line 1542: else
line 1543:   au BufNewFile,BufRead *.rmd,*.smd^I^I^Isetf rmd
line 1544: endif
line 1545: 
line 1546: " RSS looks like XML
line 1547: au BufNewFile,BufRead *.rss^I^I^I^Isetf xml
line 1548: 
line 1549: " R reStructuredText file
line 1550: if has("fname_case")
line 1551:   au BufNewFile,BufRead *.Rrst,*.rrst,*.Srst,*.srst^Isetf rrst
line 1552: else
line 1553:   au BufNewFile,BufRead *.rrst,*.srst^I^I^Isetf rrst
line 1554: endif
line 1555: 
line 1556: " Rexx, Rebol or R
line 1557: au BufNewFile,BufRead *.r,*.R^I^I^I^Icall dist#ft#FTr()
line 1558: 
line 1559: " Remind
line 1560: au BufNewFile,BufRead .reminders,*.remind,*.rem^I^Isetf remind
line 1561: 
line 1562: " ReScript
line 1563: au BufNewFile,BufRead *.res,*.resi^I^I^Isetf rescript
line 1564: 
line 1565: " Resolv.conf
line 1566: au BufNewFile,BufRead resolv.conf^I^Isetf resolv
line 1567: 
line 1568: " Relax NG Compact
line 1569: au BufNewFile,BufRead *.rnc^I^I^Isetf rnc
line 1570: 
line 1571: " Relax NG XML
line 1572: au BufNewFile,BufRead *.rng^I^I^Isetf rng
line 1573: 
line 1574: " RPL/2
line 1575: au BufNewFile,BufRead *.rpl^I^I^Isetf rpl
line 1576: 
line 1577: " Robots.txt
line 1578: au BufNewFile,BufRead robots.txt^I^Isetf robots
line 1579: 
line 1580: " Rpcgen
line 1581: au BufNewFile,BufRead *.x^I^I^Isetf rpcgen
line 1582: 
line 1583: " MikroTik RouterOS script
line 1584: au BufRead,BufNewFile *.rsc^I^I^Isetf routeros
line 1585: 
line 1586: " reStructuredText Documentation Format
line 1587: au BufNewFile,BufRead *.rst^I^I^Isetf rst
line 1588: 
line 1589: " RTF
line 1590: au BufNewFile,BufRead *.rtf^I^I^Isetf rtf
line 1591: 
line 1592: " Interactive Ruby shell
line 1593: au BufNewFile,BufRead .irbrc,irbrc^I^Isetf ruby
line 1594: 
line 1595: " Ruby
line 1596: au BufNewFile,BufRead *.rb,*.rbw^I^Isetf ruby
line 1597: 
line 1598: " RubyGems
line 1599: au BufNewFile,BufRead *.gemspec^I^I^Isetf ruby
line 1600: 
line 1601: " RBS (Ruby Signature)
line 1602: au BufNewFile,BufRead *.rbs^I^I^Isetf rbs
line 1603: 
line 1604: " Rackup
line 1605: au BufNewFile,BufRead *.ru^I^I^Isetf ruby
line 1606: 
line 1607: " Bundler
line 1608: au BufNewFile,BufRead Gemfile^I^I^Isetf ruby
line 1609: 
line 1610: " Ruby on Rails
line 1611: au BufNewFile,BufRead *.builder,*.rxml,*.rjs^Isetf ruby
line 1612: 
line 1613: " Rantfile and Rakefile is like Ruby
line 1614: au BufNewFile,BufRead [rR]antfile,*.rant,[rR]akefile,*.rake^Isetf ruby
line 1615: 
line 1616: " Rust
line 1617: au BufNewFile,BufRead *.rs^I^I^Isetf rust
line 1618: au BufNewFile,BufRead Cargo.lock,*/.cargo/config,*/.cargo/credentials^Isetf toml
line 1619: 
line 1620: " S-lang (or shader language, or SmallLisp)
line 1621: au BufNewFile,BufRead *.sl^I^I^Isetf slang
line 1622: 
line 1623: " Samba config
line 1624: au BufNewFile,BufRead smb.conf^I^I^Isetf samba
line 1625: 
line 1626: " SAS script
line 1627: au BufNewFile,BufRead *.sas^I^I^Isetf sas
line 1628: 
line 1629: " Sass
line 1630: au BufNewFile,BufRead *.sass^I^I^Isetf sass
line 1631: 
line 1632: " Sather
line 1633: au BufNewFile,BufRead *.sa^I^I^Isetf sather
line 1634: 
line 1635: " Scala
line 1636: au BufNewFile,BufRead *.scala^I^I^Isetf scala
line 1637: 
line 1638: " SBT - Scala Build Tool
line 1639: au BufNewFile,BufRead *.sbt^I^I^Isetf sbt
line 1640: 
line 1641: " SuperCollider
line 1642: au BufNewFile,BufRead *.sc^I^I^Icall dist#ft#FTsc()
line 1643: 
line 1644: au BufNewFile,BufRead *.quark^I^I^Isetf supercollider
line 1645: 
line 1646: " scdoc
line 1647: au BufNewFile,BufRead *.scd^I^I^Icall dist#ft#FTscd()
line 1648: 
line 1649: " Scilab
line 1650: au BufNewFile,BufRead *.sci,*.sce^I^Isetf scilab
line 1651: 
line 1652: 
line 1653: " SCSS
line 1654: au BufNewFile,BufRead *.scss^I^I^Isetf scss
line 1655: 
line 1656: " SD: Streaming Descriptors
line 1657: au BufNewFile,BufRead *.sd^I^I^Isetf sd
line 1658: 
line 1659: " SDL
line 1660: au BufNewFile,BufRead *.sdl,*.pr^I^Isetf sdl
line 1661: 
line 1662: " sed
line 1663: au BufNewFile,BufRead *.sed^I^I^Isetf sed
line 1664: 
line 1665: " svelte
line 1666: au BufNewFile,BufRead *.svelte^I^I^Isetf svelte
line 1667: 
line 1668: " Sieve (RFC 3028, 5228)
line 1669: au BufNewFile,BufRead *.siv,*.sieve^I^Isetf sieve
line 1670: 
line 1671: " Sendmail
line 1672: au BufNewFile,BufRead sendmail.cf^I^Isetf sm
line 1673: 
line 1674: " Sendmail .mc files are actually m4.  Could also be MS Message text file.
line 1675: au BufNewFile,BufRead *.mc^I^I^Icall dist#ft#McSetf()
line 1676: 
line 1677: " Services
line 1678: au BufNewFile,BufRead */etc/services^I^Isetf services
line 1679: 
line 1680: " Service Location config
line 1681: au BufNewFile,BufRead */etc/slp.conf^I^Isetf slpconf
line 1682: 
line 1683: " Service Location registration
line 1684: au BufNewFile,BufRead */etc/slp.reg^I^Isetf slpreg
line 1685: 
line 1686: " Service Location SPI
line 1687: au BufNewFile,BufRead */etc/slp.spi^I^Isetf slpspi
line 1688: 
line 1689: " Setserial config
line 1690: au BufNewFile,BufRead */etc/serial.conf^I^Isetf setserial
line 1691: 
line 1692: " SGML
line 1693: au BufNewFile,BufRead *.sgm,*.sgml if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
line 1703: 
line 1704: " SGMLDECL
line 1705: au BufNewFile,BufRead *.decl,*.dcl,*.dec if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
line 1709: 
line 1710: " SGML catalog file
line 1711: au BufNewFile,BufRead catalog^I^I^Isetf catalog
line 1712: 
line 1713: " Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.
line 1714: " Gentoo ebuilds, Arch Linux PKGBUILDs and Alpine Linux APKBUILDs are actually
line 1715: " bash scripts.
line 1716: " NOTE: Patterns ending in a star are further down, these have lower priority.
line 1717: au BufNewFile,BufRead .bashrc,bashrc,bash.bashrc,.bash[_-]profile,.bash[_-]logout,.bash[_-]aliases,bash-fc[-.],*.ebuild,*.bash,*.eclass,PKGBUILD,APKBUILD call dist#ft#SetFileTypeSH("bash")
line 1718: au BufNewFile,BufRead .kshrc,*.ksh call dist#ft#SetFileTypeSH("ksh")
line 1719: au BufNewFile,BufRead */etc/profile,.profile,*.sh,*.env call dist#ft#SetFileTypeSH(getline(1))
line 1720: 
line 1721: " Shell script (Arch Linux) or PHP file (Drupal)
line 1722: au BufNewFile,BufRead *.install if getline(1) =~ '<?php' |   setf php | else |   call dist#ft#SetFileTypeSH("bash") | endif
line 1728: 
line 1729: " tcsh scripts (patterns ending in a star further below)
line 1730: au BufNewFile,BufRead .tcshrc,*.tcsh,tcsh.tcshrc,tcsh.login^Icall dist#ft#SetFileTypeShell("tcsh")
line 1731: 
line 1732: " csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)
line 1733: " (patterns ending in a start further below)
line 1734: au BufNewFile,BufRead .login,.cshrc,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call dist#ft#CSH()
line 1735: 
line 1736: " Zig
line 1737: au BufNewFile,BufRead *.zig^I^I^Isetf zig
line 1738: 
line 1739: " Z-Shell script (patterns ending in a star further below)
line 1740: au BufNewFile,BufRead .zprofile,*/etc/zprofile,.zfbfmarks  setf zsh
line 1741: au BufNewFile,BufRead .zshrc,.zshenv,.zlogin,.zlogout,.zcompdump setf zsh
line 1742: au BufNewFile,BufRead *.zsh^I^I^Isetf zsh
line 1743: 
line 1744: " Scheme
line 1745: au BufNewFile,BufRead *.scm,*.ss,*.sld,*.rkt,*.rktd,*.rktl^Isetf scheme
line 1746: 
line 1747: " Screen RC
line 1748: au BufNewFile,BufRead .screenrc,screenrc^Isetf screen
line 1749: 
line 1750: " Sexplib
line 1751: au BufNewFile,BufRead *.sexp setf sexplib
line 1752: 
line 1753: " Simula
line 1754: au BufNewFile,BufRead *.sim^I^I^Isetf simula
line 1755: 
line 1756: " SINDA
line 1757: au BufNewFile,BufRead *.sin,*.s85^I^Isetf sinda
line 1758: 
line 1759: " SiSU
line 1760: au BufNewFile,BufRead *.sst,*.ssm,*.ssi,*.-sst,*._sst setf sisu
line 1761: au BufNewFile,BufRead *.sst.meta,*.-sst.meta,*._sst.meta setf sisu
line 1762: 
line 1763: " SKILL
line 1764: au BufNewFile,BufRead *.il,*.ils,*.cdf^I^Isetf skill
line 1765: 
line 1766: " SLRN
line 1767: au BufNewFile,BufRead .slrnrc^I^I^Isetf slrnrc
line 1768: au BufNewFile,BufRead *.score^I^I^Isetf slrnsc
line 1769: 
line 1770: " Smalltalk (and TeX)
line 1771: au BufNewFile,BufRead *.st^I^I^Isetf st
line 1772: au BufNewFile,BufRead *.cls if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
line 1780: 
line 1781: " Smarty templates
line 1782: au BufNewFile,BufRead *.tpl^I^I^Isetf smarty
line 1783: 
line 1784: " SMIL or XML
line 1785: au BufNewFile,BufRead *.smil if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
line 1791: 
line 1792: " SMIL or SNMP MIB file
line 1793: au BufNewFile,BufRead *.smi if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
line 1799: 
line 1800: " SMITH
line 1801: au BufNewFile,BufRead *.smt,*.smith^I^Isetf smith
line 1802: 
line 1803: " Snobol4 and spitbol
line 1804: au BufNewFile,BufRead *.sno,*.spt^I^Isetf snobol4
line 1805: 
line 1806: " SNMP MIB files
line 1807: au BufNewFile,BufRead *.mib,*.my^I^Isetf mib
line 1808: 
line 1809: " Snort Configuration
line 1810: au BufNewFile,BufRead *.hog,snort.conf,vision.conf^Isetf hog
line 1811: au BufNewFile,BufRead *.rules^I^I^Icall dist#ft#FTRules()
line 1812: 
line 1813: " Solidity
line 1814: au BufRead,BufNewFile *.sol^I^I^Isetf solidity
line 1815: 
line 1816: " SPARQL queries
line 1817: au BufNewFile,BufRead *.rq,*.sparql^I^Isetf sparql
line 1818: 
line 1819: " Spec (Linux RPM)
line 1820: au BufNewFile,BufRead *.spec^I^I^Isetf spec
line 1821: 
line 1822: " Speedup (AspenTech plant simulator)
line 1823: au BufNewFile,BufRead *.speedup,*.spdata,*.spd^Isetf spup
line 1824: 
line 1825: " Slice
line 1826: au BufNewFile,BufRead *.ice^I^I^Isetf slice
line 1827: 
line 1828: " Microsoft Visual Studio Solution
line 1829: au BufNewFile,BufRead *.sln^I^I^Isetf solution
line 1830: au BufNewFile,BufRead *.slnf^I^I^Isetf json
line 1831: 
line 1832: " Spice
line 1833: au BufNewFile,BufRead *.sp,*.spice^I^Isetf spice
line 1834: 
line 1835: " Spyce
line 1836: au BufNewFile,BufRead *.spy,*.spi^I^Isetf spyce
line 1837: 
line 1838: " Squid
line 1839: au BufNewFile,BufRead squid.conf^I^Isetf squid
line 1840: 
line 1841: " SQL for Oracle Designer
line 1842: au BufNewFile,BufRead *.tyb,*.typ,*.tyc,*.pkb,*.pks^Isetf sql
line 1843: 
line 1844: " SQL
line 1845: au BufNewFile,BufRead *.sql^I^I^Icall dist#ft#SQL()
line 1846: 
line 1847: " SQLJ
line 1848: au BufNewFile,BufRead *.sqlj^I^I^Isetf sqlj
line 1849: 
line 1850: " SQR
line 1851: au BufNewFile,BufRead *.sqr,*.sqi^I^Isetf sqr
line 1852: 
line 1853: " Squirrel
line 1854: au BufNewFile,BufRead *.nut^I^I^Isetf squirrel
line 1855: 
line 1856: " OpenSSH configuration
line 1857: au BufNewFile,BufRead ssh_config,*/.ssh/config,*/.ssh/*.conf^Isetf sshconfig
line 1858: au BufNewFile,BufRead */etc/ssh/ssh_config.d/*.conf^I^Isetf sshconfig
line 1859: 
line 1860: " OpenSSH server configuration
line 1861: au BufNewFile,BufRead sshd_config^I^I^Isetf sshdconfig
line 1862: au BufNewFile,BufRead */etc/ssh/sshd_config.d/*.conf^Isetf sshdconfig
line 1863: 
line 1864: " Stata
line 1865: au BufNewFile,BufRead *.ado,*.do,*.imata,*.mata^Isetf stata
line 1866: " Also *.class, but not when it's a Java bytecode file
line 1867: au BufNewFile,BufRead *.class if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
line 1869: 
line 1870: " SMCL
line 1871: au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl^Isetf smcl
line 1872: 
line 1873: " Stored Procedures
line 1874: au BufNewFile,BufRead *.stp^I^I^Isetf stp
line 1875: 
line 1876: " Standard ML
line 1877: au BufNewFile,BufRead *.sml^I^I^Isetf sml
line 1878: 
line 1879: " Sratus VOS command macro
line 1880: au BufNewFile,BufRead *.cm^I^I^Isetf voscm
line 1881: 
line 1882: " Swift
line 1883: au BufNewFile,BufRead *.swift^I^I^Isetf swift
line 1884: au BufNewFile,BufRead *.swift.gyb^I^Isetf swiftgyb
line 1885: 
line 1886: " Swift Intermediate Language
line 1887: au BufNewFile,BufRead *.sil^I^I^Isetf sil
line 1888: 
line 1889: " Sysctl
line 1890: au BufNewFile,BufRead */etc/sysctl.conf,*/etc/sysctl.d/*.conf^Isetf sysctl
line 1891: 
line 1892: " Systemd unit files
line 1893: au BufNewFile,BufRead */systemd/*.{automount,dnssd,link,mount,netdev,network,nspawn,path,service,slice,socket,swap,target,timer}^Isetf systemd
line 1894: " Systemd overrides
line 1895: au BufNewFile,BufRead */etc/systemd/*.conf.d/*.conf^Isetf systemd
line 1896: au BufNewFile,BufRead */etc/systemd/system/*.d/*.conf^Isetf systemd
line 1897: au BufNewFile,BufRead */.config/systemd/user/*.d/*.conf^Isetf systemd
line 1898: " Systemd temp files
line 1899: au BufNewFile,BufRead */etc/systemd/system/*.d/.#*^Isetf systemd
line 1900: au BufNewFile,BufRead */etc/systemd/system/.#*^I^Isetf systemd
line 1901: au BufNewFile,BufRead */.config/systemd/user/*.d/.#*^Isetf systemd
line 1902: au BufNewFile,BufRead */.config/systemd/user/.#*^Isetf systemd
line 1903: 
line 1904: " Synopsys Design Constraints
line 1905: au BufNewFile,BufRead *.sdc^I^I^Isetf sdc
line 1906: 
line 1907: " Sudoers
line 1908: au BufNewFile,BufRead */etc/sudoers,sudoers.tmp^Isetf sudoers
line 1909: 
line 1910: " SVG (Scalable Vector Graphics)
line 1911: au BufNewFile,BufRead *.svg^I^I^Isetf svg
line 1912: 
line 1913: " Surface
line 1914: au BufRead,BufNewFile *.sface^I^I^Isetf surface
line 1915: 
line 1916: " Tads (or Nroff or Perl test file)
line 1917: au BufNewFile,BufRead *.t if !dist#ft#FTnroff() && !dist#ft#FTperl() | setf tads | endif
line 1919: 
line 1920: " Tags
line 1921: au BufNewFile,BufRead tags^I^I^Isetf tags
line 1922: 
line 1923: " TAK
line 1924: au BufNewFile,BufRead *.tak^I^I^Isetf tak
line 1925: 
line 1926: " Task
line 1927: au BufRead,BufNewFile {pending,completed,undo}.data  setf taskdata
line 1928: au BufRead,BufNewFile *.task^I^I^Isetf taskedit
line 1929: 
line 1930: " Tcl (JACL too)
line 1931: au BufNewFile,BufRead *.tcl,*.tm,*.tk,*.itcl,*.itk,*.jacl,.tclshrc,.wishrc^Isetf tcl
line 1932: 
line 1933: " Teal
line 1934: au BufRead,BufNewFile *.tl^I^I^Isetf teal
line 1935: 
line 1936: " TealInfo
line 1937: au BufNewFile,BufRead *.tli^I^I^Isetf tli
line 1938: 
line 1939: " Telix Salt
line 1940: au BufNewFile,BufRead *.slt^I^I^Isetf tsalt
line 1941: 
line 1942: " Tera Term Language or Turtle
line 1943: au BufRead,BufNewFile *.ttl if getline(1) =~ '^@\?\(prefix\|base\)' |   setf turtle | else |   setf teraterm | endif
line 1949: 
line 1950: " Terminfo
line 1951: au BufNewFile,BufRead *.ti^I^I^Isetf terminfo
line 1952: 
line 1953: " Terraform
line 1954: au BufRead,BufNewFile *.tfvars^I^I^Isetf terraform
line 1955: 
line 1956: " TeX
line 1957: au BufNewFile,BufRead *.latex,*.sty,*.dtx,*.ltx,*.bbl^Isetf tex
line 1958: au BufNewFile,BufRead *.tex^I^I^Icall dist#ft#FTtex()
line 1959: 
line 1960: " ConTeXt
line 1961: au BufNewFile,BufRead *.mkii,*.mkiv,*.mkvi,*.mkxl,*.mklx   setf context
line 1962: 
line 1963: " Texinfo
line 1964: au BufNewFile,BufRead *.texinfo,*.texi,*.txi^Isetf texinfo
line 1965: 
line 1966: " TeX configuration
line 1967: au BufNewFile,BufRead texmf.cnf^I^I^Isetf texmf
line 1968: 
line 1969: " Tidy config
line 1970: au BufNewFile,BufRead .tidyrc,tidyrc,tidy.conf^Isetf tidy
line 1971: 
line 1972: " TF mud client
line 1973: au BufNewFile,BufRead .tfrc,tfrc^I^Isetf tf
line 1974: 
line 1975: " TF mud client or terraform
line 1976: au BufNewFile,BufRead *.tf^I^I^Icall dist#ft#FTtf()
line 1977: 
line 1978: " TLA+
line 1979: au BufNewFile,BufRead *.tla^I^I^Isetf tla
line 1980: 
line 1981: " tmux configuration
line 1982: au BufNewFile,BufRead {.,}tmux*.conf^I^Isetf tmux
line 1983: 
line 1984: " TOML
line 1985: au BufNewFile,BufRead *.toml^I^I^Isetf toml
line 1986: 
line 1987: " TPP - Text Presentation Program
line 1988: au BufNewFile,BufRead *.tpp^I^I^Isetf tpp
line 1989: 
line 1990: " Treetop
line 1991: au BufRead,BufNewFile *.treetop^I^I^Isetf treetop
line 1992: 
line 1993: " Trustees
line 1994: au BufNewFile,BufRead trustees.conf^I^Isetf trustees
line 1995: 
line 1996: " TSS - Geometry
line 1997: au BufNewFile,BufReadPost *.tssgm^I^Isetf tssgm
line 1998: 
line 1999: " TSS - Optics
line 2000: au BufNewFile,BufReadPost *.tssop^I^Isetf tssop
line 2001: 
line 2002: " TSS - Command Line (temporary)
line 2003: au BufNewFile,BufReadPost *.tsscl^I^Isetf tsscl
line 2004: 
line 2005: " Tutor mode
line 2006: au BufNewFile,BufReadPost *.tutor^I^Isetf tutor
line 2007: 
line 2008: " TWIG files
line 2009: au BufNewFile,BufReadPost *.twig^I^Isetf twig
line 2010: 
line 2011: " Typescript or Qt translation file (which is XML)
line 2012: au BufNewFile,BufReadPost *.ts if getline(1) =~ '<?xml' |   setf xml | else |   setf typescript | endif
line 2018: 
line 2019: " TypeScript with React
line 2020: au BufNewFile,BufRead *.tsx^I^I^Isetf typescriptreact
line 2021: 
line 2022: " Motif UIT/UIL files
line 2023: au BufNewFile,BufRead *.uit,*.uil^I^Isetf uil
line 2024: 
line 2025: " Udev conf
line 2026: au BufNewFile,BufRead */etc/udev/udev.conf^Isetf udevconf
line 2027: 
line 2028: " Udev permissions
line 2029: au BufNewFile,BufRead */etc/udev/permissions.d/*.permissions setf udevperm
line 2030: "
line 2031: " Udev symlinks config
line 2032: au BufNewFile,BufRead */etc/udev/cdsymlinks.conf^Isetf sh
line 2033: 
line 2034: " UnrealScript
line 2035: au BufNewFile,BufRead *.uc^I^I^Isetf uc
line 2036: 
line 2037: " Updatedb
line 2038: au BufNewFile,BufRead */etc/updatedb.conf^Isetf updatedb
line 2039: 
line 2040: " Upstart (init(8)) config files
line 2041: au BufNewFile,BufRead */usr/share/upstart/*.conf^I       setf upstart
line 2042: au BufNewFile,BufRead */usr/share/upstart/*.override^I       setf upstart
line 2043: au BufNewFile,BufRead */etc/init/*.conf,*/etc/init/*.override  setf upstart
line 2044: au BufNewFile,BufRead */.init/*.conf,*/.init/*.override^I       setf upstart
line 2045: au BufNewFile,BufRead */.config/upstart/*.conf^I^I       setf upstart
line 2046: au BufNewFile,BufRead */.config/upstart/*.override^I       setf upstart
line 2047: 
line 2048: " Vala
line 2049: au BufNewFile,BufRead *.vala^I^I^Isetf vala
line 2050: 
line 2051: " Vera
line 2052: au BufNewFile,BufRead *.vr,*.vri,*.vrh^I^Isetf vera
line 2053: 
line 2054: " Vagrant (uses Ruby syntax)
line 2055: au BufNewFile,BufRead Vagrantfile^I^Isetf ruby
line 2056: 
line 2057: " Verilog HDL
line 2058: au BufNewFile,BufRead *.v^I^I^Isetf verilog
line 2059: 
line 2060: " Verilog-AMS HDL
line 2061: au BufNewFile,BufRead *.va,*.vams^I^Isetf verilogams
line 2062: 
line 2063: " SystemVerilog
line 2064: au BufNewFile,BufRead *.sv,*.svh^I^Isetf systemverilog
line 2065: 
line 2066: " VHDL
line 2067: au BufNewFile,BufRead *.hdl,*.vhd,*.vhdl,*.vbe,*.vst,*.vho  setf vhdl
line 2068: 
line 2069: " Vim script
line 2070: au BufNewFile,BufRead *.vim,*.vba,.exrc,_exrc^Isetf vim
line 2071: 
line 2072: " Viminfo file
line 2073: au BufNewFile,BufRead .viminfo,_viminfo^I^Isetf viminfo
line 2074: 
line 2075: " Virata Config Script File or Drupal module
line 2076: au BufRead,BufNewFile *.hw,*.module,*.pkg if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
line 2082: 
line 2083: " Visual Basic (also uses *.bas) or FORM
line 2084: au BufNewFile,BufRead *.frm^I^I^Icall dist#ft#FTfrm()
line 2085: 
line 2086: " SaxBasic is close to Visual Basic
line 2087: au BufNewFile,BufRead *.sba^I^I^Isetf vb
line 2088: 
line 2089: " Vgrindefs file
line 2090: au BufNewFile,BufRead vgrindefs^I^I^Isetf vgrindefs
line 2091: 
line 2092: " VRML V1.0c
line 2093: au BufNewFile,BufRead *.wrl^I^I^Isetf vrml
line 2094: 
line 2095: " Vroom (vim testing and executable documentation)
line 2096: au BufNewFile,BufRead *.vroom^I^I^Isetf vroom
line 2097: 
line 2098: " Vue.js Single File Component
line 2099: au BufNewFile,BufRead *.vue^I^I^Isetf vue
line 2100: 
line 2101: " WebAssembly
line 2102: au BufNewFile,BufRead *.wast,*.wat^I^Isetf wast
line 2103: 
line 2104: " Webmacro
line 2105: au BufNewFile,BufRead *.wm^I^I^Isetf webmacro
line 2106: 
line 2107: " Wget config
line 2108: au BufNewFile,BufRead .wgetrc,wgetrc^I^Isetf wget
line 2109: 
line 2110: " Website MetaLanguage
line 2111: au BufNewFile,BufRead *.wml^I^I^Isetf wml
line 2112: 
line 2113: " Winbatch
line 2114: au BufNewFile,BufRead *.wbt^I^I^Isetf winbatch
line 2115: 
line 2116: " WSML
line 2117: au BufNewFile,BufRead *.wsml^I^I^Isetf wsml
line 2118: 
line 2119: " WPL
line 2120: au BufNewFile,BufRead *.wpl^I^I^Isetf xml
line 2121: 
line 2122: " WvDial
line 2123: au BufNewFile,BufRead wvdial.conf,.wvdialrc^Isetf wvdial
line 2124: 
line 2125: " CVS RC file
line 2126: au BufNewFile,BufRead .cvsrc^I^I^Isetf cvsrc
line 2127: 
line 2128: " CVS commit file
line 2129: au BufNewFile,BufRead cvs\d\+^I^I^Isetf cvs
line 2130: 
line 2131: " WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment
line 2132: " lines in a WEB file).
line 2133: au BufNewFile,BufRead *.web if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
line 2139: 
line 2140: " Windows Scripting Host and Windows Script Component
line 2141: au BufNewFile,BufRead *.ws[fc]^I^I^Isetf wsh
line 2142: 
line 2143: " XHTML
line 2144: au BufNewFile,BufRead *.xhtml,*.xht^I^Isetf xhtml
line 2145: 
line 2146: " X Pixmap (dynamically sets colors, this used to trigger on BufEnter to make
line 2147: " it work better, but that breaks setting 'filetype' manually)
line 2148: au BufNewFile,BufRead *.xpm if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
line 2154: au BufNewFile,BufRead *.xpm2^I^I^Isetf xpm2
line 2155: 
line 2156: " XFree86 config
line 2157: au BufNewFile,BufRead XF86Config if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
line 2162: au BufNewFile,BufRead */xorg.conf.d/*.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
line 2165: 
line 2166: " Xorg config
line 2167: au BufNewFile,BufRead xorg.conf,xorg.conf-4^Ilet b:xf86conf_xfree86_version = 4 | setf xf86conf
line 2168: 
line 2169: " Xinetd conf
line 2170: au BufNewFile,BufRead */etc/xinetd.conf^I^Isetf xinetd
line 2171: 
line 2172: " XS Perl extension interface language
line 2173: au BufNewFile,BufRead *.xs^I^I^Isetf xs
line 2174: 
line 2175: " X resources file
line 2176: au BufNewFile,BufRead .Xdefaults,.Xpdefaults,.Xresources,xdm-config,*.ad setf xdefaults
line 2177: 
line 2178: " Xmath
line 2179: au BufNewFile,BufRead *.msc,*.msf^I^Isetf xmath
line 2180: au BufNewFile,BufRead *.ms if !dist#ft#FTnroff() | setf xmath | endif
line 2182: 
line 2183: " XML  specific variants: docbk and xbl
line 2184: au BufNewFile,BufRead *.xml^I^I^Icall dist#ft#FTxml()
line 2185: 
line 2186: " XMI (holding UML models) is also XML
line 2187: au BufNewFile,BufRead *.xmi^I^I^Isetf xml
line 2188: 
line 2189: " CSPROJ files are Visual Studio.NET's XML-based C# project config files
line 2190: au BufNewFile,BufRead *.csproj,*.csproj.user^Isetf xml
line 2191: 
line 2192: " FSPROJ files are Visual Studio.NET's XML-based F# project config files
line 2193: au BufNewFile,BufRead *.fsproj,*.fsproj.user^Isetf xml
line 2194: 
line 2195: " VBPROJ files are Visual Studio.NET's XML-based Visual Basic project config files
line 2196: au BufNewFile,BufRead *.vbproj,*.vbproj.user^Isetf xml
line 2197: 
line 2198: " Qt Linguist translation source and Qt User Interface Files are XML
line 2199: " However, for .ts Typescript is more common.
line 2200: au BufNewFile,BufRead *.ui^I^I^Isetf xml
line 2201: 
line 2202: " TPM's are RDF-based descriptions of TeX packages (Nikolai Weibull)
line 2203: au BufNewFile,BufRead *.tpm^I^I^Isetf xml
line 2204: 
line 2205: " Xdg menus
line 2206: au BufNewFile,BufRead */etc/xdg/menus/*.menu^Isetf xml
line 2207: 
line 2208: " ATI graphics driver configuration
line 2209: au BufNewFile,BufRead fglrxrc^I^I^Isetf xml
line 2210: 
line 2211: " Web Services Description Language (WSDL)
line 2212: au BufNewFile,BufRead *.wsdl^I^I^Isetf xml
line 2213: 
line 2214: " XLIFF (XML Localisation Interchange File Format) is also XML
line 2215: au BufNewFile,BufRead *.xlf^I^I^Isetf xml
line 2216: au BufNewFile,BufRead *.xliff^I^I^Isetf xml
line 2217: 
line 2218: " XML User Interface Language
line 2219: au BufNewFile,BufRead *.xul^I^I^Isetf xml
line 2220: 
line 2221: " X11 xmodmap (also see below)
line 2222: au BufNewFile,BufRead *Xmodmap^I^I^Isetf xmodmap
line 2223: 
line 2224: " Xquery
line 2225: au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy^Isetf xquery
line 2226: 
line 2227: " XSD
line 2228: au BufNewFile,BufRead *.xsd^I^I^Isetf xsd
line 2229: 
line 2230: " Xslt
line 2231: au BufNewFile,BufRead *.xsl,*.xslt^I^Isetf xslt
line 2232: 
line 2233: " Yacc
line 2234: au BufNewFile,BufRead *.yy,*.yxx,*.y++^I^Isetf yacc
line 2235: 
line 2236: " Yacc or racc
line 2237: au BufNewFile,BufRead *.y^I^I^Icall dist#ft#FTy()
line 2238: 
line 2239: " Yaml
line 2240: au BufNewFile,BufRead *.yaml,*.yml^I^Isetf yaml
line 2241: 
line 2242: " Raml
line 2243: au BufNewFile,BufRead *.raml^I^I^Isetf raml
line 2244: 
line 2245: " yum conf (close enough to dosini)
line 2246: au BufNewFile,BufRead */etc/yum.conf^I^Isetf dosini
line 2247: 
line 2248: " YANG
line 2249: au BufRead,BufNewFile *.yang^I^I^Isetf yang
line 2250: 
line 2251: " Zimbu
line 2252: au BufNewFile,BufRead *.zu^I^I^Isetf zimbu
line 2253: " Zimbu Templates
line 2254: au BufNewFile,BufRead *.zut^I^I^Isetf zimbutempl
line 2255: 
line 2256: " Zope
line 2257: "   dtml (zope dynamic template markup language), pt (zope page template),
line 2258: "   cpt (zope form controller page template)
line 2259: au BufNewFile,BufRead *.dtml,*.pt,*.cpt^I^Icall dist#ft#FThtml()
line 2260: "   zsql (zope sql method)
line 2261: au BufNewFile,BufRead *.zsql^I^I^Icall dist#ft#SQL()
line 2262: 
line 2263: " Z80 assembler asz80
line 2264: au BufNewFile,BufRead *.z8a^I^I^Isetf z8a
line 2265: 
line 2266: augroup END
line 2267: 
line 2268: 
line 2269: " Source the user-specified filetype file, for backwards compatibility with
line 2270: " Vim 5.x.
line 2271: if exists("myfiletypefile") && filereadable(expand(myfiletypefile))
line 2272:   execute "source " . myfiletypefile
line 2273: endif
line 2274: 
line 2275: 
line 2276: " Check for "*" after loading myfiletypefile, so that scripts.vim is only used
line 2277: " when there are no matching file name extensions.
line 2278: " Don't do this for compressed files.
line 2279: augroup filetypedetect
line 2280: au BufNewFile,BufRead * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
line 2283: au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif
line 2284: 
line 2285: 
line 2286: " Plain text files, needs to be far down to not override others.  This avoids
line 2287: " the "conf" type being used if there is a line starting with '#'.
line 2288: " But before patterns matching everything in a directory.
line 2289: au BufNewFile,BufRead *.text,README,LICENSE,COPYING,AUTHORS^Isetf text
line 2290: 
line 2291: 
line 2292: " Extra checks for when no filetype has been detected now.  Mostly used for
line 2293: " patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim
line 2294: " script file.
line 2295: " Most of these should call s:StarSetf() to avoid names ending in .gz and the
line 2296: " like are used.
line 2297: 
line 2298: " More Apache style config files
line 2299: au BufNewFile,BufRead */etc/proftpd/*.conf*,*/etc/proftpd/conf.*/*^Icall s:StarSetf('apachestyle')
line 2300: au BufNewFile,BufRead proftpd.conf*^I^I^I^I^Icall s:StarSetf('apachestyle')
line 2301: 
line 2302: " More Apache config files
line 2303: au BufNewFile,BufRead access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*^Icall s:StarSetf('apache')
line 2304: au BufNewFile,BufRead */etc/apache2/*.conf*,*/etc/apache2/conf.*/*,*/etc/apache2/mods-*/*,*/etc/apache2/sites-*/*,*/etc/httpd/conf.*/*,*/etc/httpd/mods-*/*,*/etc/httpd/sites-*/*,*/etc/httpd/conf.d/*.conf*^I^Icall s:StarSetf('apache')
line 2305: 
line 2306: " APT config file
line 2307: au BufNewFile,BufRead */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf} call s:StarSetf('aptconf')
line 2308: 
line 2309: " Asterisk config file
line 2310: au BufNewFile,BufRead *asterisk/*.conf*^I^Icall s:StarSetf('asterisk')
line 2311: au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')
line 2312: 
line 2313: " Bazaar version control
line 2314: au BufNewFile,BufRead bzr_log.*^I^I^Isetf bzr
line 2315: 
line 2316: " Bazel build file
line 2317: if !has("fname_case")
line 2318:   au BufNewFile,BufRead *.BUILD,BUILD^I^Isetf bzl
line 2319: endif
line 2320: 
line 2321: " BIND zone
line 2322: au BufNewFile,BufRead */named/db.*,*/bind/db.*^Icall s:StarSetf('bindzone')
line 2323: 
line 2324: au BufNewFile,BufRead cabal.project.*^I^Icall s:StarSetf('cabalproject')
line 2325: 
line 2326: " Calendar
line 2327: au BufNewFile,BufRead */.calendar/*,*/share/calendar/*/calendar.*,*/share/calendar/calendar.*^I^I^I^I^Icall s:StarSetf('calendar')
line 2330: 
line 2331: " Changelog
line 2332: au BufNewFile,BufRead [cC]hange[lL]og* if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
line 2338: 
line 2339: " Crontab
line 2340: au BufNewFile,BufRead crontab,crontab.*,*/etc/cron.d/*^I^Icall s:StarSetf('crontab')
line 2341: 
line 2342: " dnsmasq(8) configuration
line 2343: au BufNewFile,BufRead */etc/dnsmasq.d/*^I^Icall s:StarSetf('dnsmasq')
line 2344: 
line 2345: " Dockerfile
line 2346: au BufNewFile,BufRead Dockerfile.*,Containerfile.*^Icall s:StarSetf('dockerfile')
line 2347: 
line 2348: " Dracula
line 2349: au BufNewFile,BufRead drac.*^I^I^Icall s:StarSetf('dracula')
line 2350: 
line 2351: " Fvwm
line 2352: au BufNewFile,BufRead */.fvwm/*^I^I^Icall s:StarSetf('fvwm')
line 2353: au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook let b:fvwm_version = 1 | call s:StarSetf('fvwm')
line 2355: au BufNewFile,BufRead *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
line 2361: 
line 2362: " Gedcom
line 2363: au BufNewFile,BufRead */tmp/lltmp*^I^Icall s:StarSetf('gedcom')
line 2364: 
line 2365: " Git
line 2366: au BufNewFile,BufRead */.gitconfig.d/*,/etc/gitconfig.d/*^Icall s:StarSetf('gitconfig')
line 2367: 
line 2368: " Gitolite
line 2369: au BufNewFile,BufRead */gitolite-admin/conf/*^Icall s:StarSetf('gitolite')
line 2370: 
line 2371: " GTK RC
line 2372: au BufNewFile,BufRead .gtkrc*,gtkrc*^I^Icall s:StarSetf('gtkrc')
line 2373: 
line 2374: " Jam
line 2375: au BufNewFile,BufRead Prl*.*,JAM*.*^I^Icall s:StarSetf('jam')
line 2376: 
line 2377: " Jargon
line 2378: au! BufNewFile,BufRead *jarg* if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
line 2382: 
line 2383: " Java Properties resource file (note: doesn't catch font.properties.pl)
line 2384: au BufNewFile,BufRead *.properties_??_??_*^Icall s:StarSetf('jproperties')
line 2385: 
line 2386: " Kconfig
line 2387: au BufNewFile,BufRead Kconfig.*^I^I^Icall s:StarSetf('kconfig')
line 2388: 
line 2389: " Lilo: Linux loader
line 2390: au BufNewFile,BufRead lilo.conf*^I^Icall s:StarSetf('lilo')
line 2391: 
line 2392: " Libsensors
line 2393: au BufNewFile,BufRead */etc/sensors.d/[^.]*^Icall s:StarSetf('sensors')
line 2394: 
line 2395: " Logcheck
line 2396: au BufNewFile,BufRead */etc/logcheck/*.d*/*^Icall s:StarSetf('logcheck')
line 2397: 
line 2398: " Makefile
line 2399: au BufNewFile,BufRead [mM]akefile*^I^Icall s:StarSetf('make')
line 2400: 
line 2401: " Ruby Makefile
line 2402: au BufNewFile,BufRead [rR]akefile*^I^Icall s:StarSetf('ruby')
line 2403: 
line 2404: " Mail (also matches muttrc.vim, so this is below the other checks)
line 2405: au BufNewFile,BufRead {neo,}mutt[[:alnum:]._-]\\\{6\}^Isetf mail
line 2406: 
line 2407: au BufNewFile,BufRead reportbug-*^I^Icall s:StarSetf('mail')
line 2408: 
line 2409: " Modconf
line 2410: au BufNewFile,BufRead */etc/modutils/* if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
line 2414: au BufNewFile,BufRead */etc/modprobe.*^I^Icall s:StarSetf('modconf')
line 2415: 
line 2416: " Mutt setup files (must be before catch *.rc)
line 2417: au BufNewFile,BufRead */etc/Muttrc.d/*^I^Icall s:StarSetf('muttrc')
line 2418: 
line 2419: " Mutt setup file
line 2420: au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*^Icall s:StarSetf('muttrc')
line 2421: au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*^I^Icall s:StarSetf('muttrc')
line 2422: 
line 2423: " Neomutt setup file
line 2424: au BufNewFile,BufRead .neomuttrc*,*/.neomutt/neomuttrc*^Icall s:StarSetf('neomuttrc')
line 2425: au BufNewFile,BufRead neomuttrc*,Neomuttrc*^I^Icall s:StarSetf('neomuttrc')
line 2426: 
line 2427: " Nroff macros
line 2428: au BufNewFile,BufRead tmac.*^I^I^Icall s:StarSetf('nroff')
line 2429: 
line 2430: " OpenBSD hostname.if
line 2431: au BufNewFile,BufRead /etc/hostname.*^I^Icall s:StarSetf('config')
line 2432: 
line 2433: " Pam conf
line 2434: au BufNewFile,BufRead */etc/pam.d/*^I^Icall s:StarSetf('pamconf')
line 2435: 
line 2436: " Printcap and Termcap
line 2437: au BufNewFile,BufRead *printcap* if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
line 2441: au BufNewFile,BufRead *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
line 2445: 
line 2446: " ReDIF
line 2447: " Only used when the .rdf file was not detected to be XML.
line 2448: au BufRead,BufNewFile *.rdf^I^I^Icall dist#ft#Redif()
line 2449: 
line 2450: " Remind
line 2451: au BufNewFile,BufRead .reminders*^I^Icall s:StarSetf('remind')
line 2452: 
line 2453: " SGML catalog file
line 2454: au BufNewFile,BufRead sgml.catalog*^I^Icall s:StarSetf('catalog')
line 2455: 
line 2456: " avoid doc files being recognized a shell files
line 2457: au BufNewFile,BufRead */doc/{,.}bash[_-]completion{,.d,.sh}{,/*} setf text
line 2458: 
line 2459: " Shell scripts ending in a star
line 2460: au BufNewFile,BufRead .bashrc*,.bash[_-]profile*,.bash[_-]logout*,.bash[_-]aliases*,bash-fc[-.]*,PKGBUILD*,APKBUILD*,*/{,.}bash[_-]completion{,.d,.sh}{,/*} call dist#ft#SetFileTypeSH("bash")
line 2461: au BufNewFile,BufRead .kshrc* call dist#ft#SetFileTypeSH("ksh")
line 2462: au BufNewFile,BufRead .profile* call dist#ft#SetFileTypeSH(getline(1))
line 2463: 
line 2464: " Sudoers
line 2465: au BufNewFile,BufRead */etc/sudoers.d/*^I^Icall s:StarSetf('sudoers')
line 2466: 
line 2467: " tcsh scripts ending in a star
line 2468: au BufNewFile,BufRead .tcshrc*^Icall dist#ft#SetFileTypeShell("tcsh")
line 2469: 
line 2470: " csh scripts ending in a star
line 2471: au BufNewFile,BufRead .login*,.cshrc*  call dist#ft#CSH()
line 2472: 
line 2473: " tmux configuration with arbitrary extension
line 2474: au BufNewFile,BufRead {.,}tmux*.conf*^I^Isetf tmux
line 2475: 
line 2476: " VHDL
line 2477: au BufNewFile,BufRead *.vhdl_[0-9]*^I^Icall s:StarSetf('vhdl')
line 2478: 
line 2479: " Vim script
line 2480: au BufNewFile,BufRead *vimrc*^I^I^Icall s:StarSetf('vim')
line 2481: 
line 2482: " Subversion commit file
line 2483: au BufNewFile,BufRead svn-commit*.tmp^I^Isetf svn
line 2484: 
line 2485: " X resources file
line 2486: au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')
line 2487: 
line 2488: " XFree86 config
line 2489: au BufNewFile,BufRead XF86Config-4* let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
line 2491: au BufNewFile,BufRead XF86Config* if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
line 2496: 
line 2497: " X11 xmodmap
line 2498: au BufNewFile,BufRead *xmodmap*^I^I^Icall s:StarSetf('xmodmap')
line 2499: 
line 2500: " Xinetd conf
line 2501: au BufNewFile,BufRead */etc/xinetd.d/*^I^Icall s:StarSetf('xinetd')
line 2502: 
line 2503: " yum conf (close enough to dosini)
line 2504: au BufNewFile,BufRead */etc/yum.repos.d/*^Icall s:StarSetf('dosini')
line 2505: 
line 2506: " Z-Shell script ending in a star
line 2507: au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')
line 2508: au BufNewFile,BufRead zsh*,zlog*^I^Icall s:StarSetf('zsh')
line 2509: 
line 2510: 
line 2511: " Help files match *.txt but should have a last line that is a modeline. 
line 2512: au BufNewFile,BufRead *.txt  if getline('$') !~ 'vim:.*ft=help'|   setf text| endif       
line 2516: 
line 2517: if !exists('g:did_load_ftdetect')
line 2518:   " Use the filetype detect plugins.  They may overrule any of the previously
line 2519:   " detected filetypes.
line 2520:   runtime! ftdetect/*.vim
line 2521:   runtime! ftdetect/*.lua
line 2522: endif
line 2523: 
line 2524: " NOTE: The above command could have ended the filetypedetect autocmd group
line 2525: " and started another one. Let's make sure it has ended to get to a consistent
line 2526: " state.
line 2527: augroup END
line 2528: 
line 2529: " Generic configuration file. Use FALLBACK, it's just guessing!
line 2530: au filetypedetect BufNewFile,BufRead,StdinReadPost * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
line 2536: 
line 2537: 
line 2538: " If the GUI is already running, may still need to install the Syntax menu.
line 2539: " Don't do it when the 'M' flag is included in 'guioptions'.
line 2540: if has("menu") && has("gui_running") && !exists("did_install_syntax_menu") && &guioptions !~# "M"
line 2542:   source <sfile>:p:h/menu.vim
line 2543: endif
line 2544: 
line 2545: " Function called for testing all functions defined here.  These are
line 2546: " script-local, thus need to be executed here.
line 2547: " Returns a string with error messages (hopefully empty).
line 2548: func TestFiletypeFuncs(testlist)
line 2559: 
line 2560: " Restore 'cpoptions'
line 2561: let &cpo = s:cpo_save
line 2562: unlet s:cpo_save
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim
line 26:   let s:did_ft = 0
line 27: endif
line 28: 
line 29: " Set up the connection between FileType and Syntax autocommands.
line 30: " This makes the syntax automatically set when the file type is detected.
line 31: augroup syntaxset
line 32:   au! FileType *^Iexe "set syntax=" . expand("<amatch>")
line 33: augroup END
line 34: 
line 35: 
line 36: " Execute the syntax autocommands for the each buffer.
line 37: " If the filetype wasn't detected yet, do that now.
line 38: " Always do the syntaxset autocommands, for buffers where the 'filetype'
line 39: " already was set manually (e.g., help buffers).
line 40: doautoall syntaxset FileType
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing: exe "set syntax=" . expand("<amatch>")
Executing: set syntax=
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling function <SNR>6_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
function <SNR>6_SynSet returning #0

continuing in Syntax Autocommands for "*"

line 41: if !s:did_ft
line 42:   doautoall filetypedetect BufRead
Executing BufReadPost Autocommands for "*"
autocommand <lua: 5>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Searching for "scripts.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/scripts.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/scripts.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/scripts.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/scripts.vim"
line 1: " Vim support file to detect file types in scripts
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last change:^I2021 Jan 22
line 5: 
line 6: " This file is called by an autocommand for every file that has just been
line 7: " loaded into a buffer.  It checks if the type of file can be recognized by
line 8: " the file contents.  The autocommand is in $VIMRUNTIME/filetype.vim.
line 9: "
line 10: " Note that the pattern matches are done with =~# to avoid the value of the
line 11: " 'ignorecase' option making a difference.  Where case is to be ignored use
line 12: " =~? instead.  Do not use =~ anywhere.
line 13: 
line 14: 
line 15: " Only do the rest when the FileType autocommand has not been triggered yet.
line 16: if did_filetype()
line 17:   finish
line 18: endif
line 19: 
line 20: " Load the user defined scripts file first
line 21: " Only do this when the FileType autocommand has not been triggered yet
line 22: if exists("myscriptsfile") && filereadable(expand(myscriptsfile))
line 23:   execute "source " . myscriptsfile
line 24:   if did_filetype()
line 25:     finish
line 26:   endif
line 27: endif
line 28: 
line 29: " Line continuation is used here, remove 'C' from 'cpoptions'
line 30: let s:cpo_save = &cpo
line 31: set cpo&vim
line 32: 
line 33: let s:line1 = getline(1)
line 34: 
line 35: if s:line1 =~# "^#!"
line 36:   " A script that starts with "#!".
line 37: 
line 38:   " Check for a line like "#!/usr/bin/env {options} bash".  Turn it into
line 39:   " "#!/usr/bin/bash" to make matching easier.
line 40:   " Recognize only a few {options} that are commonly used.
line 41:   if s:line1 =~# '^#!\s*\S*\<env\s'
line 42:     let s:line1 = substitute(s:line1, '\S\+=\S\+', '', 'g')
line 43:     let s:line1 = substitute(s:line1, '\(-[iS]\|--ignore-environment\|--split-string\)', '', '')
line 44:     let s:line1 = substitute(s:line1, '\<env\s\+', '', '')
line 45:   endif
line 46: 
line 47:   " Get the program name.
line 48:   " Only accept spaces in PC style paths: "#!c:/program files/perl [args]".
line 49:   " If the word env is used, use the first word after the space:
line 50:   " "#!/usr/bin/env perl [path/args]"
line 51:   " If there is no path use the first word: "#!perl [path/args]".
line 52:   " Otherwise get the last word after a slash: "#!/usr/bin/perl [path/args]".
line 53:   if s:line1 =~# '^#!\s*\a:[/\\]'
line 54:     let s:name = substitute(s:line1, '^#!.*[/\\]\(\i\+\).*', '\1', '')
line 55:   elseif s:line1 =~# '^#!.*\<env\>'
line 56:     let s:name = substitute(s:line1, '^#!.*\<env\>\s\+\(\i\+\).*', '\1', '')
line 57:   elseif s:line1 =~# '^#!\s*[^/\\ ]*\>\([^/\\]\|$\)'
line 58:     let s:name = substitute(s:line1, '^#!\s*\([^/\\ ]*\>\).*', '\1', '')
line 59:   else
line 60:     let s:name = substitute(s:line1, '^#!\s*\S*[/\\]\(\i\+\).*', '\1', '')
line 61:   endif
line 62: 
line 63:   " tcl scripts may have #!/bin/sh in the first line and "exec wish" in the
line 64:   " third line.  Suggested by Steven Atkinson.
line 65:   if getline(3) =~# '^exec wish'
line 66:     let s:name = 'wish'
line 67:   endif
line 68: 
line 69:   " Bourne-like shell scripts: bash bash2 ksh ksh93 sh
line 70:   if s:name =~# '^\(bash\d*\|\|ksh\d*\|sh\)\>'
line 71:     call dist#ft#SetFileTypeSH(s:line1)^I" defined in filetype.vim
line 72: 
line 73:     " csh scripts
line 74:   elseif s:name =~# '^csh\>'
line 75:     if exists("g:filetype_csh")
line 76:       call dist#ft#SetFileTypeShell(g:filetype_csh)
line 77:     else
line 78:       call dist#ft#SetFileTypeShell("csh")
line 79:     endif
line 80: 
line 81:     " tcsh scripts
line 82:   elseif s:name =~# '^tcsh\>'
line 83:     call dist#ft#SetFileTypeShell("tcsh")
line 84: 
line 85:     " Z shell scripts
line 86:   elseif s:name =~# '^zsh\>'
line 87:     set ft=zsh
line 88: 
line 89:     " TCL scripts
line 90:   elseif s:name =~# '^\(tclsh\|wish\|expectk\|itclsh\|itkwish\)\>'
line 91:     set ft=tcl
line 92: 
line 93:     " Expect scripts
line 94:   elseif s:name =~# '^expect\>'
line 95:     set ft=expect
line 96: 
line 97:     " Gnuplot scripts
line 98:   elseif s:name =~# '^gnuplot\>'
line 99:     set ft=gnuplot
line 100: 
line 101:     " Makefiles
line 102:   elseif s:name =~# 'make\>'
line 103:     set ft=make
line 104: 
line 105:     " Pike
line 106:   elseif s:name =~# '^pike\%(\>\|[0-9]\)'
line 107:     set ft=pike
line 108: 
line 109:     " Lua
line 110:   elseif s:name =~# 'lua'
line 111:     set ft=lua
line 112: 
line 113:     " Perl
line 114:   elseif s:name =~# 'perl'
line 115:     set ft=perl
line 116: 
line 117:     " PHP
line 118:   elseif s:name =~# 'php'
line 119:     set ft=php
line 120: 
line 121:     " Python
line 122:   elseif s:name =~# 'python'
line 123:     set ft=python
line 124: 
line 125:     " Groovy
line 126:   elseif s:name =~# '^groovy\>'
line 127:     set ft=groovy
line 128: 
line 129:     " Raku
line 130:   elseif s:name =~# 'raku'
line 131:     set ft=raku
line 132: 
line 133:     " Ruby
line 134:   elseif s:name =~# 'ruby'
line 135:     set ft=ruby
line 136: 
line 137:     " JavaScript
line 138:   elseif s:name =~# 'node\(js\)\=\>\|js\>' || s:name =~# 'rhino\>'
line 139:     set ft=javascript
line 140: 
line 141:     " BC calculator
line 142:   elseif s:name =~# '^bc\>'
line 143:     set ft=bc
line 144: 
line 145:     " sed
line 146:   elseif s:name =~# 'sed\>'
line 147:     set ft=sed
line 148: 
line 149:     " OCaml-scripts
line 150:   elseif s:name =~# 'ocaml'
line 151:     set ft=ocaml
line 152: 
line 153:     " Awk scripts; also finds "gawk"
line 154:   elseif s:name =~# 'awk\>'
line 155:     set ft=awk
line 156: 
line 157:     " Website MetaLanguage
line 158:   elseif s:name =~# 'wml'
line 159:     set ft=wml
line 160: 
line 161:     " Scheme scripts
line 162:   elseif s:name =~# 'scheme'
line 163:     set ft=scheme
line 164: 
line 165:     " CFEngine scripts
line 166:   elseif s:name =~# 'cfengine'
line 167:     set ft=cfengine
line 168: 
line 169:     " Erlang scripts
line 170:   elseif s:name =~# 'escript'
line 171:     set ft=erlang
line 172: 
line 173:     " Haskell
line 174:   elseif s:name =~# 'haskell'
line 175:     set ft=haskell
line 176: 
line 177:     " Scala
line 178:   elseif s:name =~# 'scala\>'
line 179:     set ft=scala
line 180: 
line 181:     " Clojure
line 182:   elseif s:name =~# 'clojure'
line 183:     set ft=clojure
line 184: 
line 185:     " Free Pascal
line 186:   elseif s:name =~# 'instantfpc\>'
line 187:     set ft=pascal
line 188: 
line 189:     " Fennel
line 190:   elseif s:name =~# 'fennel\>'
line 191:     set ft=fennel
line 192: 
line 193:     " MikroTik RouterOS script
line 194:   elseif s:name =~# 'rsc\>'
line 195:     set ft=routeros
line 196: 
line 197:     " Fish shell
line 198:   elseif s:name =~# 'fish\>'
line 199:     set ft=fish
line 200: 
line 201:     " Gforth
line 202:   elseif s:name =~# 'gforth\>'
line 203:     set ft=forth
line 204: 
line 205:   endif
line 206:   unlet s:name
line 207: 
line 208: else
line 209:   " File does not start with "#!".
line 210: 
line 211:   let s:line2 = getline(2)
line 212:   let s:line3 = getline(3)
line 213:   let s:line4 = getline(4)
line 214:   let s:line5 = getline(5)
line 215: 
line 216:   " Bourne-like shell scripts: sh ksh bash bash2
line 217:   if s:line1 =~# '^:$'
line 218:     call dist#ft#SetFileTypeSH(s:line1)^I" defined in filetype.vim
line 219: 
line 220:   " Z shell scripts
line 221:   elseif s:line1 =~# '^#compdef\>' || s:line1 =~# '^#autoload\>' || "\n".s:line1."\n".s:line2."\n".s:line3."\n".s:line4."\n".s:line5 =~# '\n\s*emulate\s\+\%(-[LR]\s\+\)\=[ckz]\=sh\>'
line 223:     set ft=zsh
line 224: 
line 225:   " ELM Mail files
line 226:   elseif s:line1 =~# '^From \([a-zA-Z][a-zA-Z_0-9\.=-]*\(@[^ ]*\)\=\|-\) .* \(19\|20\)\d\d$'
line 227:     set ft=mail
line 228: 
line 229:   " Mason
line 230:   elseif s:line1 =~# '^<[%&].*>'
line 231:     set ft=mason
line 232: 
line 233:   " Vim scripts (must have '" vim' as the first line to trigger this)
line 234:   elseif s:line1 =~# '^" *[vV]im$'
line 235:     set ft=vim
line 236: 
line 237:   " libcxx and libstdc++ standard library headers like "iostream" do not have
line 238:   " an extension, recognize the Emacs file mode.
line 239:   elseif s:line1 =~? '-\*-.*C++.*-\*-'
line 240:     set ft=cpp
line 241: 
line 242:   " MOO
line 243:   elseif s:line1 =~# '^\*\* LambdaMOO Database, Format Version \%([1-3]\>\)\@!\d\+ \*\*$'
line 244:     set ft=moo
line 245: 
line 246:     " Diff file:
line 247:     " - "diff" in first line (context diff)
line 248:     " - "Only in " in first line
line 249:     " - "--- " in first line and "+++ " in second line (unified diff).
line 250:     " - "*** " in first line and "--- " in second line (context diff).
line 251:     " - "# It was generated by makepatch " in the second line (makepatch diff).
line 252:     " - "Index: <filename>" in the first line (CVS file)
line 253:     " - "=== ", line of "=", "---", "+++ " (SVK diff)
line 254:     " - "=== ", "--- ", "+++ " (bzr diff, common case)
line 255:     " - "=== (removed|added|renamed|modified)" (bzr diff, alternative)
line 256:     " - "# HG changeset patch" in first line (Mercurial export format)
line 257:   elseif s:line1 =~# '^\(diff\>\|Only in \|\d\+\(,\d\+\)\=[cda]\d\+\>\|# It was generated by makepatch \|Index:\s\+\f\+\r\=$\|===== \f\+ \d\+\.\d\+ vs edited\|==== //\f\+#\d\+\|# HG changeset patch\)' || (s:line1 =~# '^--- ' && s:line2 =~# '^+++ ') || (s:line1 =~# '^\* looking for ' && s:line2 =~# '^\* comparing to ') || (s:line1 =~# '^\*\*\* ' && s:line2 =~# '^--- ') || (s:line1 =~# '^=== ' && ((s:line2 =~# '^=\{66\}' && s:line3 =~# '^--- ' && s:line4 =~# '^+++') || (s:line2 =~# '^--- ' && s:line3 =~# '^+++ '))) || (s:line1 =~# '^=== \(removed\|added\|renamed\|modified\)')
line 263:     set ft=diff
line 264: 
line 265:     " PostScript Files (must have %!PS as the first line, like a2ps output)
line 266:   elseif s:line1 =~# '^%![ \t]*PS'
line 267:     set ft=postscr
line 268: 
line 269:     " M4 scripts: Guess there is a line that starts with "dnl".
line 270:   elseif s:line1 =~# '^\s*dnl\>' || s:line2 =~# '^\s*dnl\>' || s:line3 =~# '^\s*dnl\>' || s:line4 =~# '^\s*dnl\>' || s:line5 =~# '^\s*dnl\>'
line 275:     set ft=m4
line 276: 
line 277:     " AmigaDos scripts
line 278:   elseif $TERM == "amiga" && (s:line1 =~# "^;" || s:line1 =~? '^\.bra')
line 280:     set ft=amiga
line 281: 
line 282:     " SiCAD scripts (must have procn or procd as the first line to trigger this)
line 283:   elseif s:line1 =~? '^ *proc[nd] *$'
line 284:     set ft=sicad
line 285: 
line 286:     " Purify log files start with "****  Purify"
line 287:   elseif s:line1 =~# '^\*\*\*\*  Purify'
line 288:     set ft=purifylog
line 289: 
line 290:     " XML
line 291:   elseif s:line1 =~# '<?\s*xml.*?>'
line 292:     set ft=xml
line 293: 
line 294:     " XHTML (e.g.: PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN")
line 295:   elseif s:line1 =~# '\<DTD\s\+XHTML\s'
line 296:     set ft=xhtml
line 297: 
line 298:     " HTML (e.g.: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN")
line 299:     " Avoid "doctype html", used by slim.
line 300:   elseif s:line1 =~? '<!DOCTYPE\s\+html\>'
line 301:     set ft=html
line 302: 
line 303:     " PDF
line 304:   elseif s:line1 =~# '^%PDF-'
line 305:     set ft=pdf
line 306: 
line 307:     " XXD output
line 308:   elseif s:line1 =~# '^\x\{7}: \x\{2} \=\x\{2} \=\x\{2} \=\x\{2} '
line 309:     set ft=xxd
line 310: 
line 311:     " RCS/CVS log output
line 312:   elseif s:line1 =~# '^RCS file:' || s:line2 =~# '^RCS file:'
line 313:     set ft=rcslog
line 314: 
line 315:     " CVS commit
line 316:   elseif s:line2 =~# '^CVS:' || getline("$") =~# '^CVS: '
line 317:     set ft=cvs
line 318: 
line 319:     " Prescribe
line 320:   elseif s:line1 =~# '^!R!'
line 321:     set ft=prescribe
line 322: 
line 323:     " Send-pr
line 324:   elseif s:line1 =~# '^SEND-PR:'
line 325:     set ft=sendpr
line 326: 
line 327:     " SNNS files
line 328:   elseif s:line1 =~# '^SNNS network definition file'
line 329:     set ft=snnsnet
line 330:   elseif s:line1 =~# '^SNNS pattern definition file'
line 331:     set ft=snnspat
line 332:   elseif s:line1 =~# '^SNNS result file'
line 333:     set ft=snnsres
line 334: 
line 335:     " Virata
line 336:   elseif s:line1 =~# '^%.\{-}[Vv]irata' || s:line2 =~# '^%.\{-}[Vv]irata' || s:line3 =~# '^%.\{-}[Vv]irata' || s:line4 =~# '^%.\{-}[Vv]irata' || s:line5 =~# '^%.\{-}[Vv]irata'
line 341:     set ft=virata
line 342: 
line 343:     " Strace
line 344:   elseif s:line1 =~# '[0-9:.]* *execve(' || s:line1 =~# '^__libc_start_main'
line 345:     set ft=strace
line 346: 
line 347:     " VSE JCL
line 348:   elseif s:line1 =~# '^\* $$ JOB\>' || s:line1 =~# '^// *JOB\>'
line 349:     set ft=vsejcl
line 350: 
line 351:     " TAK and SINDA
line 352:   elseif s:line4 =~# 'K & K  Associates' || s:line2 =~# 'TAK 2000'
line 353:     set ft=takout
line 354:   elseif s:line3 =~# 'S Y S T E M S   I M P R O V E D '
line 355:     set ft=sindaout
line 356:   elseif getline(6) =~# 'Run Date: '
line 357:     set ft=takcmp
line 358:   elseif getline(9) =~# 'Node    File  1'
line 359:     set ft=sindacmp
line 360: 
line 361:     " DNS zone files
line 362:   elseif s:line1.s:line2.s:line3.s:line4 =~# '^; <<>> DiG [0-9.]\+.* <<>>\|$ORIGIN\|$TTL\|IN\s\+SOA'
line 363:     set ft=bindzone
line 364: 
line 365:     " BAAN
line 366:   elseif s:line1 =~# '|\*\{1,80}' && s:line2 =~# 'VRC ' || s:line2 =~# '|\*\{1,80}' && s:line3 =~# 'VRC '
line 368:     set ft=baan
line 369: 
line 370:   " Valgrind
line 371:   elseif s:line1 =~# '^==\d\+== valgrind' || s:line3 =~# '^==\d\+== Using valgrind'
line 372:     set ft=valgrind
line 373: 
line 374:   " Go docs
line 375:   elseif s:line1 =~# '^PACKAGE DOCUMENTATION$'
line 376:     set ft=godoc
line 377: 
line 378:   " Renderman Interface Bytestream
line 379:   elseif s:line1 =~# '^##RenderMan'
line 380:     set ft=rib
line 381: 
line 382:   " Scheme scripts
line 383:   elseif s:line1 =~# 'exec\s\+\S*scheme' || s:line2 =~# 'exec\s\+\S*scheme'
line 384:     set ft=scheme
line 385: 
line 386:   " Git output
line 387:   elseif s:line1 =~# '^\(commit\|tree\|object\) \x\{40,\}\>\|^tag \S\+$'
line 388:     set ft=git
line 389: 
line 390:    " Gprof (gnu profiler)
line 391:    elseif s:line1 == 'Flat profile:' && s:line2 == '' && s:line3 =~# '^Each sample counts as .* seconds.$'
line 394:      set ft=gprof
line 395: 
line 396:   " Erlang terms
line 397:   " (See also: http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes)
line 398:   elseif s:line1 =~? '-\*-.*erlang.*-\*-'
line 399:     set ft=erlang
line 400: 
line 401:   " YAML
line 402:   elseif s:line1 =~# '^%YAML'
line 403:     set ft=yaml
line 404: 
line 405:   " MikroTik RouterOS script
line 406:   elseif s:line1 =~# '^#.*by RouterOS.*$'
line 407:     set ft=routeros
line 408: 
line 409:   " Sed scripts
line 410:   " #ncomment is allowed but most likely a false positive so require a space
line 411:   " before any trailing comment text
line 412:   elseif s:line1 =~# '^#n\%($\|\s\)'
line 413:     set ft=sed
line 414: 
line 415:   " CVS diff
line 416:   else
line 417:     let s:lnum = 1
line 418:     while getline(s:lnum) =~# "^? " && s:lnum < line("$")
line 419:       let s:lnum += 1
line 420:     endwhile
line 421:     if getline(s:lnum) =~# '^Index:\s\+\f\+$'
line 422:       set ft=diff
line 423: 
line 424:       " locale input files: Formal Definitions of Cultural Conventions
line 425:       " filename must be like en_US, fr_FR@euro or en_US.UTF-8
line 426:     elseif expand("%") =~# '\a\a_\a\a\($\|[.@]\)\|i18n$\|POSIX$\|translit_'
line 427:       let s:lnum = 1
line 428:       while s:lnum < 100 && s:lnum < line("$")
line 429: ^Iif getline(s:lnum) =~# '^LC_\(IDENTIFICATION\|CTYPE\|COLLATE\|MONETARY\|NUMERIC\|TIME\|MESSAGES\|PAPER\|TELEPHONE\|MEASUREMENT\|NAME\|ADDRESS\)$'
line 430: ^I  setf fdcc
line 431: ^I  break
line 432: ^Iendif
line 433: ^Ilet s:lnum += 1
line 434:       endwhile
line 435:     endif
line 436:     unlet s:lnum
line 437: 
line 438:   endif
line 439: 
line 440:   unlet s:line2 s:line3 s:line4 s:line5
line 441: 
line 442: endif
line 443: 
line 444: " Restore 'cpoptions'
line 445: let &cpo = s:cpo_save
line 446: 
line 447: unlet s:cpo_save s:line1
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing: if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
Executing:    setf FALLBACK conf | endif
Executing:  endif
line 43: endif
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/syntax.vim
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Executing: filetype plugin indent on
Searching for "filetype.lua filetype.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/thomaseckert/.config/nvim/filetype.lua"
finished sourcing /home/thomaseckert/.config/nvim/filetype.lua
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Searching for "/home/thomaseckert/.config/nvim/filetype.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
line 1: " Vim support file to detect file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2022 Apr 07
line 5: 
line 6: " Listen very carefully, I will say this only once
line 7: if exists("did_load_filetypes")
line 8:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Searching for "ftplugin.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
line 1: " Vim support file to switch on loading plugins for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last change:^I2006 Apr 30
line 5: 
line 6: if exists("did_load_ftplugin")
line 7:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Searching for "indent.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
line 1: " Vim support file to switch on loading indent files for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2008 Feb 22
line 5: 
line 6: if exists("did_indent_on")
line 7:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Executing: highlight SpecialKey ctermfg=19 guifg=#333333
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight NonText ctermfg=19 guifg=#333333
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight Comment cterm=italic term=italic gui=italic
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight htmlArg cterm=italic term=italic gui=italic
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight xmlAttrib cterm=italic term=italic gui=italic
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight Normal ctermbg=none
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: abbr funciton function
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: abbr teh the
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: set noshowmode
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: set completeopt=menu,menuone,noselect
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Searching for "autoload/nvim_treesitter.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/nvim_treesitter.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/nvim_treesitter.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/nvim_treesitter.vim"
not found in runtime path: "autoload/nvim_treesitter.vim"
Searching for "autoload/nvim_treesitter.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/nvim_treesitter.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/nvim_treesitter.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/nvim_treesitter.vim"
not found in runtime path: "autoload/nvim_treesitter.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd VimLeavePre * lua vim.lsp._vim_exit_handler()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/lua/vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Searching for "autoload/functions.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/functions.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/autoload)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/thomaseckert/.config/nvim/autoload/functions.vim"
line 1: " load vim-plug if it does not exist in the dotfiles
line 2: let s:plugpath = expand('<sfile>:p:h') . '/plug.vim' " this is relative to this file, which is in autoload
line 3: function! functions#PlugLoad()
line 19: 
line 20: " delete the current buffer
line 21: function! functions#Delete(...)
finished sourcing /home/thomaseckert/.config/nvim/autoload/functions.vim
continuing in /home/thomaseckert/.config/nvim/init.lua
calling function functions#PlugLoad()

line 1:     if !filereadable(s:plugpath)
line 2:         if executable('curl')
line 3:             echom "Installing vim-plug at " . s:plugpath
line 4:             let plugurl = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
line 5:             call system('curl -fLo ' . shellescape(s:plugpath) . ' --create-dirs ' . plugurl)
line 6:             if v:shell_error
line 7:                 echom "Error downloading vim-plug. Please install it manually.\n"
line 8:                 exit
line 9:             endif
line 10:         else
line 11:             echom "vim-plug not installed. Please install it manually or install curl.\n"
line 12:             exit
line 13:         endif
line 14:     endif
function functions#PlugLoad returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

Searching for "autoload/plug.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/plug.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/autoload)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/thomaseckert/.config/nvim/autoload/plug.vim"
line 1: " vim-plug: Vim plugin manager
line 2: " ============================
line 3: "
line 4: " Download plug.vim and put it in ~/.vim/autoload
line 5: "
line 6: "   curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
line 7: "     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
line 8: "
line 9: " Edit your .vimrc
line 10: "
line 11: "   call plug#begin('~/.vim/plugged')
line 12: "
line 13: "   " Make sure you use single quotes
line 14: "
line 15: "   " Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
line 16: "   Plug 'junegunn/vim-easy-align'
line 17: "
line 18: "   " Any valid git URL is allowed
line 19: "   Plug 'https://github.com/junegunn/vim-github-dashboard.git'
line 20: "
line 21: "   " Multiple Plug commands can be written in a single line using | separators
line 22: "   Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
line 23: "
line 24: "   " On-demand loading
line 25: "   Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
line 26: "   Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
line 27: "
line 28: "   " Using a non-default branch
line 29: "   Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }
line 30: "
line 31: "   " Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
line 32: "   Plug 'fatih/vim-go', { 'tag': '*' }
line 33: "
line 34: "   " Plugin options
line 35: "   Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
line 36: "
line 37: "   " Plugin outside ~/.vim/plugged with post-update hook
line 38: "   Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
line 39: "
line 40: "   " Unmanaged plugin (manually installed and updated)
line 41: "   Plug '~/my-prototype-plugin'
line 42: "
line 43: "   " Initialize plugin system
line 44: "   call plug#end()
line 45: "
line 46: " Then reload .vimrc and :PlugInstall to install plugins.
line 47: "
line 48: " Plug options:
line 49: "
line 50: "| Option                  | Description                                      |
line 51: "| ----------------------- | ------------------------------------------------ |
line 52: "| `branch`/`tag`/`commit` | Branch/tag/commit of the repository to use       |
line 53: "| `rtp`                   | Subdirectory that contains Vim plugin            |
line 54: "| `dir`                   | Custom directory for the plugin                  |
line 55: "| `as`                    | Use different name for the plugin                |
line 56: "| `do`                    | Post-update hook (string or funcref)             |
line 57: "| `on`                    | On-demand loading: Commands or `<Plug>`-mappings |
line 58: "| `for`                   | On-demand loading: File types                    |
line 59: "| `frozen`                | Do not update unless explicitly specified        |
line 60: "
line 61: " More information: https://github.com/junegunn/vim-plug
line 62: "
line 63: "
line 64: " Copyright (c) 2017 Junegunn Choi
line 65: "
line 66: " MIT License
line 67: "
line 68: " Permission is hereby granted, free of charge, to any person obtaining
line 69: " a copy of this software and associated documentation files (the
line 70: " "Software"), to deal in the Software without restriction, including
line 71: " without limitation the rights to use, copy, modify, merge, publish,
line 72: " distribute, sublicense, and/or sell copies of the Software, and to
line 73: " permit persons to whom the Software is furnished to do so, subject to
line 74: " the following conditions:
line 75: "
line 76: " The above copyright notice and this permission notice shall be
line 77: " included in all copies or substantial portions of the Software.
line 78: "
line 79: " THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
line 80: " EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
line 81: " MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
line 82: " NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
line 83: " LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
line 84: " OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
line 85: " WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
line 86: 
line 87: if exists('g:loaded_plug')
line 88:   finish
line 89: endif
line 90: let g:loaded_plug = 1
line 91: 
line 92: let s:cpo_save = &cpo
line 93: set cpo&vim
line 94: 
line 95: let s:plug_src = 'https://github.com/junegunn/vim-plug.git'
line 96: let s:plug_tab = get(s:, 'plug_tab', -1)
line 97: let s:plug_buf = get(s:, 'plug_buf', -1)
line 98: let s:mac_gui = has('gui_macvim') && has('gui_running')
line 99: let s:is_win = has('win32')
line 100: let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)
line 101: let s:vim8 = has('patch-8.0.0039') && exists('*job_start')
line 102: if s:is_win && &shellslash
line 103:   set noshellslash
line 104:   let s:me = resolve(expand('<sfile>:p'))
line 105:   set shellslash
line 106: else
line 107:   let s:me = resolve(expand('<sfile>:p'))
line 108: endif
line 109: let s:base_spec = { 'branch': '', 'frozen': 0 }
line 110: let s:TYPE = {   'string':  type(''),   'list':    type([]),   'dict':    type({}),   'funcref': type(function('call')) }
line 116: let s:loaded = get(s:, 'loaded', {})
line 117: let s:triggers = get(s:, 'triggers', {})
line 118: 
line 119: function! s:is_powershell(shell)
line 122: 
line 123: function! s:isabsolute(dir) abort
line 126: 
line 127: function! s:git_dir(dir) abort
line 141: 
line 142: function! s:git_origin_url(dir) abort
line 150: 
line 151: function! s:git_revision(dir) abort
line 178: 
line 179: function! s:git_local_branch(dir) abort
line 188: 
line 189: function! s:git_origin_branch(spec)
line 206: 
line 207: if s:is_win
line 208:   function! s:plug_call(fn, ...)
line 217: else
line 218:   function! s:plug_call(fn, ...)
line 221: endif
line 222: 
line 223: function! s:plug_getcwd()
line 226: 
line 227: function! s:plug_fnamemodify(fname, mods)
line 230: 
line 231: function! s:plug_expand(fmt)
line 234: 
line 235: function! s:plug_tempname()
line 238: 
line 239: function! plug#begin(...)
line 264: 
line 265: function! s:define_commands()
line 288: 
line 289: function! s:to_a(v)
line 292: 
line 293: function! s:to_s(v)
line 296: 
line 297: function! s:glob(from, pattern)
line 300: 
line 301: function! s:source(from, ...)
line 311: 
line 312: function! s:assoc(dict, key, val)
line 315: 
line 316: function! s:ask(message, ...)
line 325: 
line 326: function! s:ask_no_interrupt(...)
line 333: 
line 334: function! s:lazy(plug, opt)
line 341: 
line 342: function! plug#end()
line 434: 
line 435: function! s:loaded_names()
line 438: 
line 439: function! s:load_plugin(spec)
line 442: 
line 443: function! s:reload_plugins()
line 448: 
line 449: function! s:trim(str)
line 452: 
line 453: function! s:version_requirement(val, min)
line 462: 
line 463: function! s:git_version_requirement(...)
line 469: 
line 470: function! s:progress_opt(base)
line 474: 
line 475: function! s:rtp(spec)
line 478: 
line 479: if s:is_win
line 480:   function! s:path(path)
line 483: 
line 484:   function! s:dirpath(path)
line 487: 
line 488:   function! s:is_local_plug(repo)
line 491: 
line 492:   " Copied from fzf
line 493:   function! s:wrap_cmds(cmds)
line 507: 
line 508:   function! s:batchfile(cmd)
line 517: else
line 518:   function! s:path(path)
line 521: 
line 522:   function! s:dirpath(path)
line 525: 
line 526:   function! s:is_local_plug(repo)
line 529: endif
line 530: 
line 531: function! s:err(msg)
line 536: 
line 537: function! s:warn(cmd, msg)
line 542: 
line 543: function! s:esc(path)
line 546: 
line 547: function! s:escrtp(path)
line 550: 
line 551: function! s:remove_rtp()
line 561: 
line 562: function! s:reorg_rtp()
line 588: 
line 589: function! s:doautocmd(...)
line 594: 
line 595: function! s:dobufread(names)
line 608: 
line 609: function! plug#load(...)
line 632: 
line 633: function! s:remove_triggers(name)
line 646: 
line 647: function! s:lod(names, types, ...)
line 668: 
line 669: function! s:lod_ft(pat, names)
line 676: 
line 677: function! s:lod_cmd(cmd, bang, l1, l2, args, names)
line 682: 
line 683: function! s:lod_map(map, names, with_prefix, prefix)
line 708: 
line 709: function! plug#(repo, ...)
line 728: 
line 729: function! s:parse_options(arg)
line 766: 
line 767: function! s:infer_properties(name, repo)
line 784: 
line 785: function! s:install(force, names)
line 788: 
line 789: function! s:update(force, names)
line 792: 
line 793: function! plug#helptags()
line 805: 
line 806: function! s:syntax()
line 858: 
line 859: function! s:lpad(str, len)
line 862: 
line 863: function! s:lines(msg)
line 866: 
line 867: function! s:lastline(msg)
line 870: 
line 871: function! s:new_window()
line 874: 
line 875: function! s:plug_window_exists()
line 879: 
line 880: function! s:switch_in()
line 898: 
line 899: function! s:switch_out(...)
line 912: 
line 913: function! s:finish_bindings()
line 922: 
line 923: function! s:prepare(...)
line 965: 
line 966: function! s:close_pane()
line 974: 
line 975: function! s:assign_name()
line 986: 
line 987: function! s:chsh(swap)
line 1001: 
line 1002: function! s:bang(cmd, ...)
line 1023: 
line 1024: function! s:regress_bar()
line 1028: 
line 1029: function! s:is_updated(dir)
line 1032: 
line 1033: function! s:do(pull, force, todo)
line 1087: 
line 1088: function! s:hash_match(a, b)
line 1091: 
line 1092: function! s:checkout(spec)
line 1102: 
line 1103: function! s:finish(pull)
line 1126: 
line 1127: function! s:retry()
line 1135: 
line 1136: function! s:is_managed(name)
line 1139: 
line 1140: function! s:names(...)
line 1143: 
line 1144: function! s:check_ruby()
line 1154: 
line 1155: function! s:update_impl(pull, force, args) abort
line 1278: 
line 1279: function! s:log4(name, msg)
line 1283: 
line 1284: function! s:update_finish()
line 1345: 
line 1346: function! s:job_abort()
line 1363: 
line 1364: function! s:last_non_empty_line(lines)
line 1374: 
line 1375: function! s:job_out_cb(self, data) abort
line 1388: 
line 1389: function! s:job_exit_cb(self, data) abort
line 1395: 
line 1396: function! s:job_cb(fn, job, ch, data)
line 1402: 
line 1403: function! s:nvim_cb(job_id, data, event) dict abort
line 1408: 
line 1409: function! s:spawn(name, cmd, opts)
line 1459: 
line 1460: function! s:reap(name)
line 1476: 
line 1477: function! s:bar()
line 1486: 
line 1487: function! s:logpos(name)
line 1501: 
line 1502: function! s:log(bullet, name, lines)
line 1519: 
line 1520: function! s:update_vim()
line 1526: 
line 1527: function! s:tick()
line 1584: 
line 1585: function! s:update_python()
line 1973: 
line 1974: function! s:update_ruby()
line 2199: 
line 2200: function! s:shellesc_cmd(arg, script)
line 2204: 
line 2205: function! s:shellesc_ps1(arg)
line 2208: 
line 2209: function! s:shellesc_sh(arg)
line 2212: 
line 2213: " Escape the shell argument based on the shell.
line 2214: " Vim and Neovim's shellescape() are insufficient.
line 2215: " 1. shellslash determines whether to use single/double quotes.
line 2216: "    Double-quote escaping is fragile for cmd.exe.
line 2217: " 2. It does not work for powershell.
line 2218: " 3. It does not work for *sh shells if the command is executed
line 2219: "    via cmd.exe (ie. cmd.exe /c sh -c command command_args)
line 2220: " 4. It does not support batchfile syntax.
line 2221: "
line 2222: " Accepts an optional dictionary with the following keys:
line 2223: " - shell: same as Vim/Neovim 'shell' option.
line 2224: "          If unset, fallback to 'cmd.exe' on Windows or 'sh'.
line 2225: " - script: If truthy and shell is cmd.exe, escape for batchfile syntax.
line 2226: function! plug#shellescape(arg, ...)
line 2240: 
line 2241: function! s:glob_dir(path)
line 2244: 
line 2245: function! s:progress_bar(line, bar, total)
line 2248: 
line 2249: function! s:compare_git_uri(a, b)
line 2260: 
line 2261: function! s:format_message(bullet, name, message)
line 2269: 
line 2270: function! s:with_cd(cmd, dir, ...)
line 2274: 
line 2275: function! s:system(cmd, ...)
line 2307: 
line 2308: function! s:system_chomp(...)
line 2312: 
line 2313: function! s:git_validate(spec, check_branch)
line 2373: 
line 2374: function! s:rm_rf(dir)
line 2381: 
line 2382: function! s:clean(force)
line 2452: 
line 2453: function! s:delete_op(type, ...)
line 2456: 
line 2457: function! s:delete(range, force)
line 2491: 
line 2492: function! s:upgrade()
line 2518: 
line 2519: function! s:upgrade_specs()
line 2524: 
line 2525: function! s:status()
line 2570: 
line 2571: function! s:extract_name(str, prefix, suffix)
line 2574: 
line 2575: function! s:status_load(lnum)
line 2585: 
line 2586: function! s:status_update() range
line 2594: 
line 2595: function! s:is_preview_window_open()
line 2602: 
line 2603: function! s:find_name(lnum)
line 2616: 
line 2617: function! s:preview_commit()
line 2666: 
line 2667: function! s:section(flags)
line 2670: 
line 2671: function! s:format_git_log(line)
line 2682: 
line 2683: function! s:append_ul(lnum, text)
line 2686: 
line 2687: function! s:diff()
line 2747: 
line 2748: function! s:revert()
line 2765: 
line 2766: function! s:snapshot(force, ...) abort
line 2797: 
line 2798: function! s:split_rtp()
line 2801: 
line 2802: let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))
calling function <SNR>17_split_rtp()

line 1:   return split(&rtp, '\\\@<!,')
function <SNR>17_split_rtp returning ['/home/thomaseckert/.config/nvim', '/.../home/thomaseckert/.config/nvim/after']

continuing in /home/thomaseckert/.config/nvim/autoload/plug.vim

calling function <SNR>17_escrtp('/home/thomaseckert/.config/nvim')

line 1:   return escape(a:path, ' ,')
function <SNR>17_escrtp returning '/home/thomaseckert/.config/nvim'

continuing in /home/thomaseckert/.config/nvim/autoload/plug.vim

line 2803: let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))
calling function <SNR>17_split_rtp()

line 1:   return split(&rtp, '\\\@<!,')
function <SNR>17_split_rtp returning ['/home/thomaseckert/.config/nvim', '/.../home/thomaseckert/.config/nvim/after']

continuing in /home/thomaseckert/.config/nvim/autoload/plug.vim

calling function <SNR>17_escrtp('/home/thomaseckert/.config/nvim/after')

line 1:   return escape(a:path, ' ,')
function <SNR>17_escrtp returning '/home/thomaseckert/.config/nvim/after'

continuing in /home/thomaseckert/.config/nvim/autoload/plug.vim

line 2804: 
line 2805: if exists('g:plugs')
line 2806:   let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))
line 2807:   call s:upgrade_specs()
line 2808:   call s:define_commands()
line 2809: endif
line 2810: 
line 2811: let &cpo = s:cpo_save
line 2812: unlet s:cpo_save
finished sourcing /home/thomaseckert/.config/nvim/autoload/plug.vim
continuing in /home/thomaseckert/.config/nvim/init.lua
calling function plug#begin('~/.config/nvim/plugged')

line 1:   if a:0 > 0
line 2:     let s:plug_home_org = a:1
line 3:     let home = s:path(s:plug_fnamemodify(s:plug_expand(a:1), ':p'))
calling function plug#begin[3]..<SNR>17_plug_expand('~/.config/nvim/plugged')

line 1:   return s:plug_call('expand', a:fmt, 1)
calling function plug#begin[3]..<SNR>17_plug_expand[1]..<SNR>17_plug_call('expand', '~/.config/nvim/plugged', 1)

line 1:     return call(a:fn, a:000)
function plug#begin[3]..<SNR>17_plug_expand[1]..<SNR>17_plug_call returning '/home/thomaseckert/.config/nvim/plugged'

continuing in function plug#begin[3]..<SNR>17_plug_expand

function plug#begin[3]..<SNR>17_plug_expand returning '/home/thomaseckert/.config/nvim/plugged'

continuing in function plug#begin

calling function plug#begin[3]..<SNR>17_plug_fnamemodify('/home/thomaseckert/.config/nvim/plugged', ':p')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#begin[3]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', '/home/thomaseckert/.config/nvim/plugged', ':p')

line 1:     return call(a:fn, a:000)
function plug#begin[3]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning '/home/thomaseckert/.config/nvim/plugged/'

continuing in function plug#begin[3]..<SNR>17_plug_fnamemodify

function plug#begin[3]..<SNR>17_plug_fnamemodify returning '/home/thomaseckert/.config/nvim/plugged/'

continuing in function plug#begin

calling function plug#begin[3]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/')

line 1:     return s:trim(a:path)
calling function plug#begin[3]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#begin[3]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged'

continuing in function plug#begin[3]..<SNR>17_path

function plug#begin[3]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged'

continuing in function plug#begin

line 4:   elseif exists('g:plug_home')
line 5:     let home = s:path(g:plug_home)
line 6:   elseif has('nvim')
line 7:     let home = stdpath('data') . '/plugged'
line 8:   elseif !empty(&rtp)
line 9:     let home = s:path(split(&rtp, ',')[0]) . '/plugged'
line 10:   else
line 11:     return s:err('Unable to determine plug home. Try calling plug#begin() with a path argument.')
line 12:   endif
line 13:   if s:plug_fnamemodify(home, ':t') ==# 'plugin' && s:plug_fnamemodify(home, ':h') ==# s:first_rtp
calling function plug#begin[13]..<SNR>17_plug_fnamemodify('/home/thomaseckert/.config/nvim/plugged', ':t')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#begin[13]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', '/home/thomaseckert/.config/nvim/plugged', ':t')

line 1:     return call(a:fn, a:000)
function plug#begin[13]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'plugged'

continuing in function plug#begin[13]..<SNR>17_plug_fnamemodify

function plug#begin[13]..<SNR>17_plug_fnamemodify returning 'plugged'

continuing in function plug#begin

line 14:     return s:err('Invalid plug home. '.home.' is a standard Vim runtime path and is not allowed.')
line 15:   endif
line 16: 
line 17:   let g:plug_home = home
line 18:   let g:plugs = {}
line 19:   let g:plugs_order = []
line 20:   let s:triggers = {}
line 21: 
line 22:   call s:define_commands()
calling function plug#begin[22]..<SNR>17_define_commands()

line 1:   command! -nargs=+ -bar Plug call plug#(<args>)
line 2:   if !executable('git')
line 3:     return s:err('`git` executable not found. Most commands will not be available. To suppress this message, prepend `silent!` to `call plug#begin(...)`.')
line 4:   endif
line 5:   if has('win32') && &shellslash && (&shell =~# 'cmd\(\.exe\)\?$' || s:is_powershell(&shell))
line 8:     return s:err('vim-plug does not support shell, ' . &shell . ', when shellslash is set.')
line 9:   endif
line 10:   if !has('nvim') && (has('win32') || has('win32unix')) && !has('multi_byte')
line 13:     return s:err('Vim needs +multi_byte feature on Windows to run shell commands. Enable +iconv for best results.')
line 14:   endif
line 15:   command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, [<f-args>])
line 16:   command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [<f-args>])
line 17:   command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)
line 18:   command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif
line 19:   command! -nargs=0 -bar PlugStatus  call s:status()
line 20:   command! -nargs=0 -bar PlugDiff    call s:diff()
line 21:   command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)
function plug#begin[22]..<SNR>17_define_commands returning #0

continuing in function plug#begin

line 23:   return 1
function plug#begin returning #1

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('nvim-treesitter/nvim-treesitter')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('nvim-treesitter/nvim-treesitter')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'nvim-treesitter/nvim-treesitter'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('nvim-treesitter/nvim-treesitter', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'nvim-treesitter/nvim-treesitter', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-treesitter'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-treesitter'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-treesitter', 'nvim-treesitter/nvim-treesitter')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('nvim-treesitter/nvim-treesitter')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-treesitter')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/nvim....config/nvim/plugged/nvim-treesitter/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('neovim/nvim-lspconfig')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('neovim/nvim-lspconfig')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'neovim/nvim-lspconfig'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('neovim/nvim-lspconfig', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'neovim/nvim-lspconfig', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-lspconfig'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-lspconfig'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-lspconfig', 'neovim/nvim-lspconfig')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('neovim/nvim-lspconfig')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/neov.../.config/nvim/plugged/nvim-lspconfig/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('williamboman/mason.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('williamboman/mason.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'williamboman/mason.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('williamboman/mason.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'williamboman/mason.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'mason.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'mason.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('mason.nvim', 'williamboman/mason.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('williamboman/mason.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/mason.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/mason.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/will...kert/.config/nvim/plugged/mason.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('nvim-lualine/lualine.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('nvim-lualine/lualine.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'nvim-lualine/lualine.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('nvim-lualine/lualine.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'nvim-lualine/lualine.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'lualine.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'lualine.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('lualine.nvim', 'nvim-lualine/lualine.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('nvim-lualine/lualine.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/lualine.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/lualine.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/nvim...rt/.config/nvim/plugged/lualine.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('kyazdani42/nvim-web-devicons')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('kyazdani42/nvim-web-devicons')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'kyazdani42/nvim-web-devicons'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('kyazdani42/nvim-web-devicons', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'kyazdani42/nvim-web-devicons', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-web-devicons'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-web-devicons'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-web-devicons', 'kyazdani42/nvim-web-devicons')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('kyazdani42/nvim-web-devicons')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/kyaz...onfig/nvim/plugged/nvim-web-devicons/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('lewis6991/gitsigns.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('lewis6991/gitsigns.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'lewis6991/gitsigns.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('lewis6991/gitsigns.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'lewis6991/gitsigns.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'gitsigns.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'gitsigns.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('gitsigns.nvim', 'lewis6991/gitsigns.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('lewis6991/gitsigns.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/lewi...t/.config/nvim/plugged/gitsigns.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('nvim-lua/plenary.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('nvim-lua/plenary.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'nvim-lua/plenary.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('nvim-lua/plenary.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'nvim-lua/plenary.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'plenary.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'plenary.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('plenary.nvim', 'nvim-lua/plenary.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('nvim-lua/plenary.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/plenary.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/plenary.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/nvim...rt/.config/nvim/plugged/plenary.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('kyazdani42/nvim-tree.lua')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('kyazdani42/nvim-tree.lua')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'kyazdani42/nvim-tree.lua'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('kyazdani42/nvim-tree.lua', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'kyazdani42/nvim-tree.lua', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-tree.lua'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-tree.lua'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-tree.lua', 'kyazdani42/nvim-tree.lua')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('kyazdani42/nvim-tree.lua')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/kyaz...t/.config/nvim/plugged/nvim-tree.lua/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('windwp/nvim-autopairs')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('windwp/nvim-autopairs')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'windwp/nvim-autopairs'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('windwp/nvim-autopairs', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'windwp/nvim-autopairs', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-autopairs'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-autopairs'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-autopairs', 'windwp/nvim-autopairs')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('windwp/nvim-autopairs')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-autopairs')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/wind.../.config/nvim/plugged/nvim-autopairs/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('tpope/vim-abolish')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('tpope/vim-abolish')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'tpope/vim-abolish'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('tpope/vim-abolish', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'tpope/vim-abolish', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-abolish'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-abolish'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-abolish', 'tpope/vim-abolish')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('tpope/vim-abolish')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-abolish')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-abolish/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/tpop...ert/.config/nvim/plugged/vim-abolish/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('norcalli/nvim-colorizer.lua')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('norcalli/nvim-colorizer.lua')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'norcalli/nvim-colorizer.lua'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('norcalli/nvim-colorizer.lua', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'norcalli/nvim-colorizer.lua', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-colorizer.lua'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-colorizer.lua'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-colorizer.lua', 'norcalli/nvim-colorizer.lua')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('norcalli/nvim-colorizer.lua')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/norc...nfig/nvim/plugged/nvim-colorizer.lua/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('sharkdp/fd')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('sharkdp/fd')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'sharkdp/fd'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('sharkdp/fd', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'sharkdp/fd', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'fd'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'fd'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('fd', 'sharkdp/fd')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('sharkdp/fd')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/fd')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/fd/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/shar...thomaseckert/.config/nvim/plugged/fd/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('nvim-telescope/telescope.nvim', {'tag': '0.1.0'})

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('nvim-telescope/telescope.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'nvim-telescope/telescope.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
calling function plug#[7]..<SNR>17_parse_options({'tag': '0.1.0'})

line 1:   let opts = copy(s:base_spec)
line 2:   let type = type(a:arg)
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected: %s)'
line 4:   if type == s:TYPE.string
line 5:     if empty(a:arg)
line 6:       throw printf(opt_errfmt, 'tag', 'string')
line 7:     endif
line 8:     let opts.tag = a:arg
line 9:   elseif type == s:TYPE.dict
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (type(a:arg.do) != s:TYPE.string || empty(a:arg.do))
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')
line 27:     endif
line 28:     call extend(opts, a:arg)
line 29:     if has_key(opts, 'dir')
line 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))
line 31:     endif
line 32:   else
line 33:     throw 'Invalid argument type (expected: string or dictionary)'
line 34:   endif
line 35:   return opts
function plug#[7]..<SNR>17_parse_options returning {'tag': '0.1.0', 'frozen': 0, 'branch': ''}

continuing in function plug#

line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('nvim-telescope/telescope.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'nvim-telescope/telescope.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'telescope.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'telescope.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('telescope.nvim', 'nvim-telescope/telescope.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('nvim-telescope/telescope.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/telescope.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/telescope.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/nvim.../.config/nvim/plugged/telescope.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('edluffy/hologram.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('edluffy/hologram.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'edluffy/hologram.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('edluffy/hologram.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'edluffy/hologram.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'hologram.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'hologram.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('hologram.nvim', 'edluffy/hologram.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('edluffy/hologram.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/hologram.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/hologram.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/edlu...t/.config/nvim/plugged/hologram.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('ray-x/guihua.lua')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('ray-x/guihua.lua')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'ray-x/guihua.lua'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('ray-x/guihua.lua', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'ray-x/guihua.lua', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'guihua.lua'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'guihua.lua'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('guihua.lua', 'ray-x/guihua.lua')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('ray-x/guihua.lua')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/guihua.lua')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/guihua.lua/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/ray-...kert/.config/nvim/plugged/guihua.lua/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('akinsho/toggleterm.nvim', {'tag': 'v2.*'})

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('akinsho/toggleterm.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'akinsho/toggleterm.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
calling function plug#[7]..<SNR>17_parse_options({'tag': 'v2.*'})

line 1:   let opts = copy(s:base_spec)
line 2:   let type = type(a:arg)
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected: %s)'
line 4:   if type == s:TYPE.string
line 5:     if empty(a:arg)
line 6:       throw printf(opt_errfmt, 'tag', 'string')
line 7:     endif
line 8:     let opts.tag = a:arg
line 9:   elseif type == s:TYPE.dict
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (type(a:arg.do) != s:TYPE.string || empty(a:arg.do))
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')
line 27:     endif
line 28:     call extend(opts, a:arg)
line 29:     if has_key(opts, 'dir')
line 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))
line 31:     endif
line 32:   else
line 33:     throw 'Invalid argument type (expected: string or dictionary)'
line 34:   endif
line 35:   return opts
function plug#[7]..<SNR>17_parse_options returning {'tag': 'v2.*', 'frozen': 0, 'branch': ''}

continuing in function plug#

line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('akinsho/toggleterm.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'akinsho/toggleterm.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'toggleterm.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'toggleterm.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('toggleterm.nvim', 'akinsho/toggleterm.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('akinsho/toggleterm.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/akin....config/nvim/plugged/toggleterm.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('hrsh7th/nvim-cmp')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('hrsh7th/nvim-cmp')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'hrsh7th/nvim-cmp'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('hrsh7th/nvim-cmp', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'hrsh7th/nvim-cmp', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-cmp'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-cmp'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-cmp', 'hrsh7th/nvim-cmp')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('hrsh7th/nvim-cmp')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-cmp')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-cmp/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/hrsh...eckert/.config/nvim/plugged/nvim-cmp/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('hrsh7th/cmp-nvim-lsp')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('hrsh7th/cmp-nvim-lsp')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'hrsh7th/cmp-nvim-lsp'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('hrsh7th/cmp-nvim-lsp', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'hrsh7th/cmp-nvim-lsp', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'cmp-nvim-lsp'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'cmp-nvim-lsp'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('cmp-nvim-lsp', 'hrsh7th/cmp-nvim-lsp')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('hrsh7th/cmp-nvim-lsp')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/hrsh...rt/.config/nvim/plugged/cmp-nvim-lsp/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('hrsh7th/cmp-buffer')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('hrsh7th/cmp-buffer')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'hrsh7th/cmp-buffer'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('hrsh7th/cmp-buffer', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'hrsh7th/cmp-buffer', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'cmp-buffer'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'cmp-buffer'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('cmp-buffer', 'hrsh7th/cmp-buffer')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('hrsh7th/cmp-buffer')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/cmp-buffer')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/cmp-buffer/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/hrsh...kert/.config/nvim/plugged/cmp-buffer/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('hrsh7th/cmp-path')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('hrsh7th/cmp-path')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'hrsh7th/cmp-path'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('hrsh7th/cmp-path', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'hrsh7th/cmp-path', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'cmp-path'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'cmp-path'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('cmp-path', 'hrsh7th/cmp-path')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('hrsh7th/cmp-path')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/cmp-path')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/cmp-path/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/hrsh...eckert/.config/nvim/plugged/cmp-path/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('hrsh7th/cmp-cmdline')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('hrsh7th/cmp-cmdline')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'hrsh7th/cmp-cmdline'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('hrsh7th/cmp-cmdline', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'hrsh7th/cmp-cmdline', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'cmp-cmdline'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'cmp-cmdline'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('cmp-cmdline', 'hrsh7th/cmp-cmdline')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('hrsh7th/cmp-cmdline')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/cmp-cmdline')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/hrsh...ert/.config/nvim/plugged/cmp-cmdline/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('L3MON4D3/LuaSnip')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('L3MON4D3/LuaSnip')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'L3MON4D3/LuaSnip'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('L3MON4D3/LuaSnip', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'L3MON4D3/LuaSnip', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'LuaSnip'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'LuaSnip'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('LuaSnip', 'L3MON4D3/LuaSnip')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('L3MON4D3/LuaSnip')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/LuaSnip')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/LuaSnip/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/L3MO...seckert/.config/nvim/plugged/LuaSnip/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('saadparwaiz1/cmp_luasnip')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('saadparwaiz1/cmp_luasnip')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'saadparwaiz1/cmp_luasnip'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('saadparwaiz1/cmp_luasnip', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'saadparwaiz1/cmp_luasnip', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'cmp_luasnip'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'cmp_luasnip'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('cmp_luasnip', 'saadparwaiz1/cmp_luasnip')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('saadparwaiz1/cmp_luasnip')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/cmp_luasnip')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/saad...ert/.config/nvim/plugged/cmp_luasnip/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('rafamadriz/friendly-snippets')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('rafamadriz/friendly-snippets')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'rafamadriz/friendly-snippets'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('rafamadriz/friendly-snippets', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'rafamadriz/friendly-snippets', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'friendly-snippets'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'friendly-snippets'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('friendly-snippets', 'rafamadriz/friendly-snippets')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('rafamadriz/friendly-snippets')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/friendly-snippets')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/friendly-snippets/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/rafa...onfig/nvim/plugged/friendly-snippets/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('VonHeikemen/lsp-zero.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('VonHeikemen/lsp-zero.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'VonHeikemen/lsp-zero.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('VonHeikemen/lsp-zero.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'VonHeikemen/lsp-zero.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'lsp-zero.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'lsp-zero.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('lsp-zero.nvim', 'VonHeikemen/lsp-zero.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('VonHeikemen/lsp-zero.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/VonH...t/.config/nvim/plugged/lsp-zero.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('williamboman/mason-lspconfig.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('williamboman/mason-lspconfig.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'williamboman/mason-lspconfig.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('williamboman/mason-lspconfig.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'williamboman/mason-lspconfig.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'mason-lspconfig.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'mason-lspconfig.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('mason-lspconfig.nvim', 'williamboman/mason-lspconfig.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('williamboman/mason-lspconfig.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/will...ig/nvim/plugged/mason-lspconfig.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('EdenEast/nightfox.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('EdenEast/nightfox.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'EdenEast/nightfox.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('EdenEast/nightfox.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'EdenEast/nightfox.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nightfox.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nightfox.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nightfox.nvim', 'EdenEast/nightfox.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('EdenEast/nightfox.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nightfox.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/Eden...t/.config/nvim/plugged/nightfox.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('sheerun/vim-polyglot')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('sheerun/vim-polyglot')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'sheerun/vim-polyglot'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('sheerun/vim-polyglot', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'sheerun/vim-polyglot', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-polyglot'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-polyglot'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-polyglot', 'sheerun/vim-polyglot')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('sheerun/vim-polyglot')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-polyglot')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-polyglot/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/shee...rt/.config/nvim/plugged/vim-polyglot/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('kburdett/vim-nuuid')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('kburdett/vim-nuuid')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'kburdett/vim-nuuid'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('kburdett/vim-nuuid', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'kburdett/vim-nuuid', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-nuuid'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-nuuid'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-nuuid', 'kburdett/vim-nuuid')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('kburdett/vim-nuuid')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-nuuid')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-nuuid/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/kbur...ckert/.config/nvim/plugged/vim-nuuid/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('tpope/vim-fugitive')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('tpope/vim-fugitive')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'tpope/vim-fugitive'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('tpope/vim-fugitive', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'tpope/vim-fugitive', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-fugitive'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-fugitive'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-fugitive', 'tpope/vim-fugitive')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('tpope/vim-fugitive')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-fugitive')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-fugitive/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/tpop...rt/.config/nvim/plugged/vim-fugitive/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('tpope/vim-commentary')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('tpope/vim-commentary')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'tpope/vim-commentary'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('tpope/vim-commentary', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'tpope/vim-commentary', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-commentary'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-commentary'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-commentary', 'tpope/vim-commentary')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('tpope/vim-commentary')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-commentary')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-commentary/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/tpop.../.config/nvim/plugged/vim-commentary/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('notjedi/nvim-rooter.lua')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('notjedi/nvim-rooter.lua')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'notjedi/nvim-rooter.lua'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('notjedi/nvim-rooter.lua', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'notjedi/nvim-rooter.lua', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-rooter.lua'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-rooter.lua'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-rooter.lua', 'notjedi/nvim-rooter.lua')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('notjedi/nvim-rooter.lua')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/notj....config/nvim/plugged/nvim-rooter.lua/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('godlygeek/tabular')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('godlygeek/tabular')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'godlygeek/tabular'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('godlygeek/tabular', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'godlygeek/tabular', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'tabular'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'tabular'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('tabular', 'godlygeek/tabular')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('godlygeek/tabular')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/tabular')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/tabular/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/godl...seckert/.config/nvim/plugged/tabular/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('editorconfig/editorconfig-vim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('editorconfig/editorconfig-vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'editorconfig/editorconfig-vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('editorconfig/editorconfig-vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'editorconfig/editorconfig-vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'editorconfig-vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'editorconfig-vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('editorconfig-vim', 'editorconfig/editorconfig-vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('editorconfig/editorconfig-vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/editorconfig-vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/edit...config/nvim/plugged/editorconfig-vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('psf/black')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('psf/black')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'psf/black'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('psf/black', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'psf/black', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'black'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'black'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('black', 'psf/black')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('psf/black')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/black')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/black/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/psf/...maseckert/.config/nvim/plugged/black/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('fatih/vim-go')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('fatih/vim-go')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'fatih/vim-go'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('fatih/vim-go', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'fatih/vim-go', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-go'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-go'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-go', 'fatih/vim-go')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('fatih/vim-go')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-go')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-go/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/fati...aseckert/.config/nvim/plugged/vim-go/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('ray-x/go.nvim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('ray-x/go.nvim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'ray-x/go.nvim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('ray-x/go.nvim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'ray-x/go.nvim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'go.nvim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'go.nvim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('go.nvim', 'ray-x/go.nvim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('ray-x/go.nvim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/go.nvim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/go.nvim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/ray-...seckert/.config/nvim/plugged/go.nvim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('JulesWang/css.vim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('JulesWang/css.vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'JulesWang/css.vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('JulesWang/css.vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'JulesWang/css.vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'css.vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'css.vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('css.vim', 'JulesWang/css.vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('JulesWang/css.vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/css.vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/css.vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/Jule...seckert/.config/nvim/plugged/css.vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('alexlafroscia/postcss-syntax.vim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('alexlafroscia/postcss-syntax.vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'alexlafroscia/postcss-syntax.vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('alexlafroscia/postcss-syntax.vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'alexlafroscia/postcss-syntax.vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'postcss-syntax.vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'postcss-syntax.vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('postcss-syntax.vim', 'alexlafroscia/postcss-syntax.vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('alexlafroscia/postcss-syntax.vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/alex...nfig/nvim/plugged/postcss-syntax.vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('stephenway/postcss.vim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('stephenway/postcss.vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'stephenway/postcss.vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('stephenway/postcss.vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'stephenway/postcss.vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'postcss.vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'postcss.vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('postcss.vim', 'stephenway/postcss.vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('stephenway/postcss.vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/postcss.vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/postcss.vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/step...ert/.config/nvim/plugged/postcss.vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('evanleck/vim-svelte')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('evanleck/vim-svelte')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'evanleck/vim-svelte'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('evanleck/vim-svelte', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'evanleck/vim-svelte', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-svelte'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-svelte'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-svelte', 'evanleck/vim-svelte')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('evanleck/vim-svelte')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-svelte')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-svelte/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/evan...kert/.config/nvim/plugged/vim-svelte/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('prettier/vim-prettier', {'do': 'yarn install --frozen-lockfile --production'})

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('prettier/vim-prettier')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'prettier/vim-prettier'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
calling function plug#[7]..<SNR>17_parse_options({'do': 'yarn install --frozen-lockfile --production'})

line 1:   let opts = copy(s:base_spec)
line 2:   let type = type(a:arg)
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected: %s)'
line 4:   if type == s:TYPE.string
line 5:     if empty(a:arg)
line 6:       throw printf(opt_errfmt, 'tag', 'string')
line 7:     endif
line 8:     let opts.tag = a:arg
line 9:   elseif type == s:TYPE.dict
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (type(a:arg.do) != s:TYPE.string || empty(a:arg.do))
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')
line 27:     endif
line 28:     call extend(opts, a:arg)
line 29:     if has_key(opts, 'dir')
line 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))
line 31:     endif
line 32:   else
line 33:     throw 'Invalid argument type (expected: string or dictionary)'
line 34:   endif
line 35:   return opts
function plug#[7]..<SNR>17_parse_options returning {'do': 'yarn install --frozen-lockfile --production', 'frozen': 0, 'branch': ''}

continuing in function plug#

line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('prettier/vim-prettier', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'prettier/vim-prettier', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-prettier'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-prettier'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-prettier', 'prettier/vim-prettier')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('prettier/vim-prettier')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-prettier')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-prettier/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/pret...rt/.config/nvim/plugged/vim-prettier/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('JoosepAlviste/nvim-ts-context-commentstring')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('JoosepAlviste/nvim-ts-context-commentstring')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'JoosepAlviste/nvim-ts-context-commentstring'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('JoosepAlviste/nvim-ts-context-commentstring', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'JoosepAlviste/nvim-ts-context-commentstring', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'nvim-ts-context-commentstring'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'nvim-ts-context-commentstring'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('nvim-ts-context-commentstring', 'JoosepAlviste/nvim-ts-context-commentstring')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('JoosepAlviste/nvim-ts-context-commentstring')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/Joos...lugged/nvim-ts-context-commentstring/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('mattn/emmet-vim')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('mattn/emmet-vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'mattn/emmet-vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('mattn/emmet-vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'mattn/emmet-vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'emmet-vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'emmet-vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('emmet-vim', 'mattn/emmet-vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('mattn/emmet-vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/emmet-vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/emmet-vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/matt...ckert/.config/nvim/plugged/emmet-vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('gregsexton/MatchTag', {'for': 'html'})

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('gregsexton/MatchTag')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'gregsexton/MatchTag'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
calling function plug#[7]..<SNR>17_parse_options({'for': 'html'})

line 1:   let opts = copy(s:base_spec)
line 2:   let type = type(a:arg)
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected: %s)'
line 4:   if type == s:TYPE.string
line 5:     if empty(a:arg)
line 6:       throw printf(opt_errfmt, 'tag', 'string')
line 7:     endif
line 8:     let opts.tag = a:arg
line 9:   elseif type == s:TYPE.dict
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (type(a:arg.do) != s:TYPE.string || empty(a:arg.do))
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')
line 27:     endif
line 28:     call extend(opts, a:arg)
line 29:     if has_key(opts, 'dir')
line 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))
line 31:     endif
line 32:   else
line 33:     throw 'Invalid argument type (expected: string or dictionary)'
line 34:   endif
line 35:   return opts
function plug#[7]..<SNR>17_parse_options returning {'for': 'html', 'frozen': 0, 'branch': ''}

continuing in function plug#

line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('gregsexton/MatchTag', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'gregsexton/MatchTag', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'MatchTag'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'MatchTag'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('MatchTag', 'gregsexton/MatchTag')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('gregsexton/MatchTag')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/MatchTag')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/MatchTag/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/greg...eckert/.config/nvim/plugged/MatchTag/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('othree/html5.vim', {'for': 'html'})

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('othree/html5.vim')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'othree/html5.vim'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
calling function plug#[7]..<SNR>17_parse_options({'for': 'html'})

line 1:   let opts = copy(s:base_spec)
line 2:   let type = type(a:arg)
line 3:   let opt_errfmt = 'Invalid argument for "%s" option of :Plug (expected: %s)'
line 4:   if type == s:TYPE.string
line 5:     if empty(a:arg)
line 6:       throw printf(opt_errfmt, 'tag', 'string')
line 7:     endif
line 8:     let opts.tag = a:arg
line 9:   elseif type == s:TYPE.dict
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 10:     for opt in ['branch', 'tag', 'commit', 'rtp', 'dir', 'as']
line 11:       if has_key(a:arg, opt) && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 13:         throw printf(opt_errfmt, opt, 'string')
line 14:       endif
line 15:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 16:     for opt in ['on', 'for']
line 17:       if has_key(a:arg, opt) && type(a:arg[opt]) != s:TYPE.list && (type(a:arg[opt]) != s:TYPE.string || empty(a:arg[opt]))
line 20:         throw printf(opt_errfmt, opt, 'string or list')
line 21:       endif
line 22:     endfor
line 23:     if has_key(a:arg, 'do') && type(a:arg.do) != s:TYPE.funcref && (type(a:arg.do) != s:TYPE.string || empty(a:arg.do))
line 26:         throw printf(opt_errfmt, 'do', 'string or funcref')
line 27:     endif
line 28:     call extend(opts, a:arg)
line 29:     if has_key(opts, 'dir')
line 30:       let opts.dir = s:dirpath(s:plug_expand(opts.dir))
line 31:     endif
line 32:   else
line 33:     throw 'Invalid argument type (expected: string or dictionary)'
line 34:   endif
line 35:   return opts
function plug#[7]..<SNR>17_parse_options returning {'for': 'html', 'frozen': 0, 'branch': ''}

continuing in function plug#

line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('othree/html5.vim', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'othree/html5.vim', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'html5.vim'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'html5.vim'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('html5.vim', 'othree/html5.vim')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('othree/html5.vim')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/html5.vim')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/html5.vim/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/othr...ckert/.config/nvim/plugged/html5.vim/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#('mzlogin/vim-markdown-toc')

line 1:   if a:0 > 1
line 2:     return s:err('Invalid number of arguments (1..2)')
line 3:   endif
line 4: 
line 5:   try
line 6:     let repo = s:trim(a:repo)
calling function plug#[6]..<SNR>17_trim('mzlogin/vim-markdown-toc')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#[6]..<SNR>17_trim returning 'mzlogin/vim-markdown-toc'

continuing in function plug#

line 7:     let opts = a:0 == 1 ? s:parse_options(a:1) : s:base_spec
line 8:     let name = get(opts, 'as', s:plug_fnamemodify(repo, ':t:s?\.git$??'))
calling function plug#[8]..<SNR>17_plug_fnamemodify('mzlogin/vim-markdown-toc', ':t:s?\.git$??')

line 1:   return s:plug_call('fnamemodify', a:fname, a:mods)
calling function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call('fnamemodify', 'mzlogin/vim-markdown-toc', ':t:s?\.git$??')

line 1:     return call(a:fn, a:000)
function plug#[8]..<SNR>17_plug_fnamemodify[1]..<SNR>17_plug_call returning 'vim-markdown-toc'

continuing in function plug#[8]..<SNR>17_plug_fnamemodify

function plug#[8]..<SNR>17_plug_fnamemodify returning 'vim-markdown-toc'

continuing in function plug#

line 9:     let spec = extend(s:infer_properties(name, repo), opts)
calling function plug#[9]..<SNR>17_infer_properties('vim-markdown-toc', 'mzlogin/vim-markdown-toc')

line 1:   let repo = a:repo
line 2:   if s:is_local_plug(repo)
calling function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug('mzlogin/vim-markdown-toc')

line 1:     return a:repo[0] =~ '[/$~]'
function plug#[9]..<SNR>17_infer_properties[2]..<SNR>17_is_local_plug returning #0

continuing in function plug#[9]..<SNR>17_infer_properties

line 3:     return { 'dir': s:dirpath(s:plug_expand(repo)) }
line 4:   else
line 5:     if repo =~ ':'
line 6:       let uri = repo
line 7:     else
line 8:       if repo !~ '/'
line 9:         throw printf('Invalid argument: %s (implicit `vim-scripts'' expansion is deprecated)', repo)
line 10:       endif
line 11:       let fmt = get(g:, 'plug_url_format', 'https://git::@github.com/%s.git')
line 12:       let uri = printf(fmt, repo)
line 13:     endif
line 14:     return { 'dir': s:dirpath(g:plug_home.'/'.a:name), 'uri': uri }
calling function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath('/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc')

line 1:     return substitute(a:path, '[/\\]*$', '/', '')
function plug#[9]..<SNR>17_infer_properties[14]..<SNR>17_dirpath returning '/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/'

continuing in function plug#[9]..<SNR>17_infer_properties

function plug#[9]..<SNR>17_infer_properties returning {'uri': 'https://git::@github.com/mzlo...config/nvim/plugged/vim-markdown-toc/'}

continuing in function plug#

line 10:     if !has_key(g:plugs, name)
line 11:       call add(g:plugs_order, name)
line 12:     endif
line 13:     let g:plugs[name] = spec
line 14:     let s:loaded[name] = get(s:loaded, name, 0)
line 15:   catch
line 16:     return s:err(repo . ' ' . v:exception)
line 17:   endtry
function plug# returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

calling function plug#end()

line 1:   if !exists('g:plugs')
line 2:     return s:err('plug#end() called without calling plug#begin() first')
line 3:   endif
line 4: 
line 5:   if exists('#PlugLOD')
line 6:     augroup PlugLOD
line 7:       autocmd!
line 8:     augroup END
line 9:     augroup! PlugLOD
line 10:   endif
line 11:   let lod = { 'ft': {}, 'map': {}, 'cmd': {} }
line 12: 
line 13:   if get(g:, 'did_load_filetypes', 0)
line 14:     filetype off
Searching for "ftoff.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftoff.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftoff.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftoff.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 14: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftoff.vim"
line 1: " Vim support file to switch off detection of file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last change:^I2001 Jun 11
line 5: 
line 6: if exists("did_load_filetypes")
line 7:   unlet did_load_filetypes
line 8: endif
line 9: 
line 10: " Remove all autocommands in the filetypedetect group
line 11: silent! au! filetypedetect *
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftoff.vim
continuing in function plug#end
line 15:   endif
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...reesitter/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...reesitter/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/neov...lspconfig/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/neov...lspconfig/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/will...ason.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/will...ason.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...line.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...line.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kyaz...-devicons/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kyaz...-devicons/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/lewi...igns.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/lewi...igns.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...nary.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...nary.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kyaz...-tree.lua/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kyaz...-tree.lua/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/wind...autopairs/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/wind...autopairs/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...m-abolish/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...m-abolish/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/norc...rizer.lua/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/norc...rizer.lua/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/shar...lugged/fd/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/shar...lugged/fd/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...cope.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/nvim...cope.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/edlu...gram.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/edlu...gram.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/ray-...uihua.lua/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/ray-...uihua.lua/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/akin...term.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/akin...term.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh.../nvim-cmp/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh.../nvim-cmp/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...-nvim-lsp/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...-nvim-lsp/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...mp-buffer/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...mp-buffer/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh.../cmp-path/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh.../cmp-path/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...p-cmdline/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/hrsh...p-cmdline/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/L3MO...d/LuaSnip/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/L3MO...d/LuaSnip/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/saad...p_luasnip/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/saad...p_luasnip/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/rafa...-snippets/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/rafa...-snippets/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/VonH...zero.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/VonH...zero.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/will...nfig.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/will...nfig.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Eden...tfox.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Eden...tfox.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/shee...-polyglot/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/shee...-polyglot/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kbur...vim-nuuid/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/kbur...vim-nuuid/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...-fugitive/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...-fugitive/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...ommentary/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/tpop...ommentary/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/notj...ooter.lua/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/notj...ooter.lua/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/godl...d/tabular/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/godl...d/tabular/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/edit...onfig-vim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/edit...onfig-vim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/psf/...ged/black/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/psf/...ged/black/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/fati...ed/vim-go/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/fati...ed/vim-go/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/ray-...d/go.nvim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/ray-...d/go.nvim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Jule...d/css.vim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Jule...d/css.vim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/alex...yntax.vim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/alex...yntax.vim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/step...stcss.vim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/step...stcss.vim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/evan...im-svelte/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/evan...im-svelte/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/pret...nstall --frozen-lockfile --production'}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/pret...nstall --frozen-lockfile --production'}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Joos...entstring/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/Joos...entstring/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/matt...emmet-vim/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/matt...emmet-vim/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/greg...rozen': 0, 'for': 'html', 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/greg...rozen': 0, 'for': 'html', 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_to_a('html')

line 1:   return type(a:v) == s:TYPE.list ? a:v : [a:v]
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_to_a returning ['html']

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp({'uri': 'https://git::@github.com/greg...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:     return s:trim(a:path)
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob('/home/thomaseckert/.config/nvim/plugged/MatchTag', 'plugin')

line 1:   return s:lines(globpath(a:from, a:pattern))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines('')

line 1:   return split(a:msg, "[\r\n]")
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines returning []

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob returning []

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp({'uri': 'https://git::@github.com/greg...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:     return s:trim(a:path)
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob('/home/thomaseckert/.config/nvim/plugged/MatchTag', 'after/plugin')

line 1:   return s:lines(globpath(a:from, a:pattern))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines('')

line 1:   return split(a:msg, "[\r\n]")
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines returning []

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob returning []

continuing in function plug#end[21]..<SNR>17_lazy

function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/othr...rozen': 0, 'for': 'html', 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/othr...rozen': 0, 'for': 'html', 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_to_a('html')

line 1:   return type(a:v) == s:TYPE.list ? a:v : [a:v]
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_to_a returning ['html']

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp({'uri': 'https://git::@github.com/othr...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob('/home/thomaseckert/.config/nvim/plugged/html5.vim', 'plugin')

line 1:   return s:lines(globpath(a:from, a:pattern))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines('')

line 1:   return split(a:msg, "[\r\n]")
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines returning []

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob returning []

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp({'uri': 'https://git::@github.com/othr...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[21]..<SNR>17_lazy

calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob('/home/thomaseckert/.config/nvim/plugged/html5.vim', 'after/plugin')

line 1:   return s:lines(globpath(a:from, a:pattern))
calling function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines('')

line 1:   return split(a:msg, "[\r\n]")
function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob[1]..<SNR>17_lines returning []

continuing in function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob

function plug#end[21]..<SNR>17_lazy[1]..<SNR>17_glob returning []

continuing in function plug#end[21]..<SNR>17_lazy

function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/mzlo...kdown-toc/', 'frozen': 0, 'branch': ''}, 'on')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

calling function plug#end[21]..<SNR>17_lazy({'uri': 'https://git::@github.com/mzlo...kdown-toc/', 'frozen': 0, 'branch': ''}, 'for')

line 1:   return has_key(a:plug, a:opt) && (empty(s:to_a(a:plug[a:opt]))         ||  !isdirectory(a:plug.dir)             ||  len(s:glob(s:rtp(a:plug), 'plugin')) ||  len(s:glob(s:rtp(a:plug), 'after/plugin')))
function plug#end[21]..<SNR>17_lazy returning #0

continuing in function plug#end

line 22:       let s:loaded[name] = 1
line 23:       continue
line 16:   for name in g:plugs_order
line 17:     if !has_key(g:plugs, name)
line 18:       continue
line 19:     endif
line 20:     let plug = g:plugs[name]
line 21:     if get(s:loaded, name, 0) || !s:lazy(plug, 'on') && !s:lazy(plug, 'for')
line 22:       let s:loaded[name] = 1
line 23:       continue
line 24:     endif
line 25: 
line 26:     if has_key(plug, 'on')
line 27:       let s:triggers[name] = { 'map': [], 'cmd': [] }
line 28:       for cmd in s:to_a(plug.on)
line 29:         if cmd =~? '^<Plug>.\+'
line 30:           if empty(mapcheck(cmd)) && empty(mapcheck(cmd, 'i'))
line 31:             call s:assoc(lod.map, cmd, name)
line 32:           endif
line 33:           call add(s:triggers[name].map, cmd)
line 34:         elseif cmd =~# '^[A-Z]'
line 35:           let cmd = substitute(cmd, '!*$', '', '')
line 36:           if exists(':'.cmd) != 2
line 37:             call s:assoc(lod.cmd, cmd, name)
line 38:           endif
line 39:           call add(s:triggers[name].cmd, cmd)
line 40:         else
line 41:           call s:err('Invalid `on` option: '.cmd. '. Should start with an uppercase letter or `<Plug>`.')
line 43:         endif
line 44:       endfor
line 45:     endif
line 46: 
line 47:     if has_key(plug, 'for')
line 48:       let types = s:to_a(plug.for)
line 49:       if !empty(types)
line 50:         augroup filetypedetect
line 51:         call s:source(s:rtp(plug), 'ftdetect/**/*.vim', 'after/ftdetect/**/*.vim')
line 52:         augroup END
line 53:       endif
line 54:       for type in types
line 55:         call s:assoc(lod.ft, type, name)
line 56:       endfor
line 57:     endif
line 58:   endfor
line 59: 
line 60:   for [cmd, names] in items(lod.cmd)
line 61:     execute printf( 'command! -nargs=* -range -bang -complete=file %s call s:lod_cmd(%s, "<bang>", <line1>, <line2>, <q-args>, %s)', cmd, string(cmd), string(names))
line 64:   endfor
line 65: 
line 66:   for [map, names] in items(lod.map)
line 67:     for [mode, map_prefix, key_prefix] in [['i', '<C-\><C-O>', ''], ['n', '', ''], ['v', '', 'gv'], ['o', '', '']]
line 69:       execute printf( '%snoremap <silent> %s %s:<C-U>call <SID>lod_map(%s, %s, %s, "%s")<CR>', mode, map, map_prefix, string(map), string(names), mode != 'i', key_prefix)
line 72:     endfor
line 73:   endfor
line 74: 
line 75:   for [ft, names] in items(lod.ft)
line 76:     augroup PlugLOD
line 77:       execute printf('autocmd FileType %s call <SID>lod_ft(%s, %s)', ft, string(ft), string(names))
line 79:     augroup END
line 80:   endfor
line 81: 
line 82:   call s:reorg_rtp()
calling function plug#end[82]..<SNR>17_reorg_rtp()

line 1:   if !empty(s:first_rtp)
line 2:     execute 'set rtp-='.s:first_rtp
line 2: set rtp-=/home/thomaseckert/.config/nvim
line 3:     execute 'set rtp-='.s:last_rtp
line 3: set rtp-=/home/thomaseckert/.config/nvim/after
line 4:   endif
line 5: 
line 6:   " &rtp is modified from outside
line 7:   if exists('s:prtp') && s:prtp !=# &rtp
line 8:     call s:remove_rtp()
line 9:     unlet! s:middle
line 10:   endif
line 11: 
line 12:   let s:middle = get(s:, 'middle', &rtp)
line 13:   let rtps     = map(s:loaded_names(), 's:rtp(g:plugs[v:val])')
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_loaded_names()

line 1:   return filter(copy(g:plugs_order), 'get(s:loaded, v:val, 0)')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_loaded_names returning ['nvim-treesitter', 'nvim-lspconfig', ...hTag', 'html5.vim', 'vim-markdown-toc']

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/nvim...reesitter/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-treesitter'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-treesitter'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-treesitter'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/neov...lspconfig/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/will...ason.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/mason.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/mason.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/mason.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/mason.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/mason.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/nvim...line.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/lualine.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/lualine.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/lualine.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/lualine.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/lualine.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/kyaz...-devicons/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/lewi...igns.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/nvim...nary.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/plenary.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/plenary.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/plenary.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/plenary.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/plenary.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/kyaz...-tree.lua/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/wind...autopairs/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-autopairs'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-autopairs'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-autopairs'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/tpop...m-abolish/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-abolish/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-abolish/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-abolish'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-abolish'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-abolish'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/norc...rizer.lua/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/shar...lugged/fd/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/fd/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/fd/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/fd'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/fd'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/fd'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/nvim...cope.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/telescope.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/telescope.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/telescope.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/telescope.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/telescope.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/edlu...gram.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/hologram.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/hologram.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/hologram.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/hologram.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/hologram.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/ray-...uihua.lua/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/guihua.lua/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/guihua.lua/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/guihua.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/guihua.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/guihua.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/akin...term.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/hrsh.../nvim-cmp/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-cmp/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-cmp/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-cmp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-cmp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-cmp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/hrsh...-nvim-lsp/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/hrsh...mp-buffer/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/cmp-buffer/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/cmp-buffer/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/cmp-buffer'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/cmp-buffer'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/cmp-buffer'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/hrsh.../cmp-path/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/cmp-path/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/cmp-path/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/cmp-path'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/cmp-path'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/cmp-path'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/hrsh...p-cmdline/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/cmp-cmdline'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/cmp-cmdline'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/cmp-cmdline'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/L3MO...d/LuaSnip/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/LuaSnip/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/LuaSnip/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/LuaSnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/LuaSnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/LuaSnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/saad...p_luasnip/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/cmp_luasnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/cmp_luasnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/cmp_luasnip'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/rafa...-snippets/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/friendly-snippets/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/friendly-snippets/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/friendly-snippets'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/friendly-snippets'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/friendly-snippets'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/VonH...zero.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/will...nfig.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/Eden...tfox.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nightfox.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nightfox.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nightfox.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/shee...-polyglot/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-polyglot'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-polyglot'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-polyglot'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/kbur...vim-nuuid/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-nuuid/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-nuuid/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-nuuid'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-nuuid'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-nuuid'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/tpop...-fugitive/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-fugitive/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-fugitive/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-fugitive'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-fugitive'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-fugitive'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/tpop...ommentary/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-commentary/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-commentary/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-commentary'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-commentary'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-commentary'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/notj...ooter.lua/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/godl...d/tabular/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/tabular/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/tabular/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/tabular'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/tabular'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/tabular'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/edit...onfig-vim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/editorconfig-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/editorconfig-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/editorconfig-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/psf/...ged/black/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/black/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/black/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/black'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/black'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/black'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/fati...ed/vim-go/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-go/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-go/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-go'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-go'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-go'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/ray-...d/go.nvim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/go.nvim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/go.nvim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/go.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/go.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/go.nvim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/Jule...d/css.vim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/css.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/css.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/css.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/css.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/css.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/alex...yntax.vim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/step...stcss.vim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/postcss.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/postcss.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/postcss.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/postcss.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/postcss.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/evan...im-svelte/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-svelte/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-svelte/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-svelte'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-svelte'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-svelte'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/pret...nstall --frozen-lockfile --production'})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-prettier/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-prettier/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-prettier'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-prettier'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-prettier'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/Joos...entstring/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/matt...emmet-vim/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/emmet-vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/emmet-vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/emmet-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/emmet-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/emmet-vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/greg...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/MatchTag/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/MatchTag'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/othr...rozen': 0, 'for': 'html', 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/html5.vim/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/html5.vim'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp({'uri': 'https://git::@github.com/mzlo...kdown-toc/', 'frozen': 0, 'branch': ''})

line 1:   return s:path(a:spec.dir . get(a:spec, 'rtp', ''))
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path('/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/')

line 1:     return s:trim(a:path)
calling function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim('/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/')

line 1:   return substitute(a:str, '[\/]\+$', '', '')
function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path[1]..<SNR>17_trim returning '/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp[1]..<SNR>17_path returning '/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc'

continuing in function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp

function plug#end[82]..<SNR>17_reorg_rtp[13]..<SNR>17_rtp returning '/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc'

continuing in function plug#end[82]..<SNR>17_reorg_rtp

line 14:   let afters   = filter(map(copy(rtps), 'globpath(v:val, "after")'), '!empty(v:val)')
line 15:   let rtp      = join(map(rtps, 'escape(v:val, ",")'), ',') . ','.s:middle.',' . join(map(afters, 'escape(v:val, ",")'), ',')
line 18:   let &rtp     = substitute(substitute(rtp, ',,*', ',', 'g'), '^,\|,$', '', 'g')
line 19:   let s:prtp   = &rtp
line 20: 
line 21:   if !empty(s:first_rtp)
line 22:     execute 'set rtp^='.s:first_rtp
line 22: set rtp^=/home/thomaseckert/.config/nvim
line 23:     execute 'set rtp+='.s:last_rtp
line 23: set rtp+=/home/thomaseckert/.config/nvim/after
line 24:   endif
function plug#end[82]..<SNR>17_reorg_rtp returning #0

continuing in function plug#end

line 83:   filetype plugin indent on
Searching for "filetype.lua filetype.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/thomaseckert/.config/nvim/filetype.lua"
finished sourcing /home/thomaseckert/.config/nvim/filetype.lua
continuing in function plug#end
Searching for "/home/thomaseckert/.config/nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim"
line 1: call polyglot#init#init()
Searching for "autoload/polyglot/init.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/polyglot/init.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 1: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim"
line 1: " Vim support file to detect file types
line 2: "
line 3: " Maintainer:^IAdam Stankiewicz <sheerun@sher.pl>
line 4: " URL: https://github.com/sheerun/vim-polyglot
line 5: 
line 6: " Listen very carefully, I will say this only once
line 7: if exists("did_load_polyglot")
line 8:   finish
line 9: endif
line 10: 
line 11: " Switch to compatible mode for the time being
line 12: let s:cpo_save = &cpo
line 13: set cpo&vim
line 14: 
line 15: let did_load_polyglot = 1
line 16: 
line 17: let g:polyglot_initialized = 0
line 18: 
line 19: func! polyglot#init#init()
line 22: 
line 23: func! polyglot#init#is_disabled(caller, name, path)
line 38: 
line 39: let g:polyglot_is_disabled = {}
line 40: let s:new_polyglot_disabled = []
line 41: 
line 42: if exists('g:polyglot_disabled')
line 43:   for pkg in g:polyglot_disabled
line 44:     let base = split(pkg, '\.')
line 45:     if len(base) > 0
line 46:       let g:polyglot_is_disabled[pkg] = 1
line 47:       call add(s:new_polyglot_disabled, base[0])
line 48:     endif
line 49:   endfor
line 50: else
line 51:   let g:polyglot_disabled_not_set = 1
line 52: endif
line 53: 
line 54: func! PolyglotVerify()
line 65: 
line 66: au VimEnter * call PolyglotVerify()
line 67: 
line 68: function! s:SetDefault(name, value)
line 73: 
line 74: call s:SetDefault('g:markdown_enable_spell_checking', 0)
calling function <SNR>20_SetDefault('g:markdown_enable_spell_checking', 0)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 75: call s:SetDefault('g:markdown_enable_input_abbreviations', 0)
calling function <SNR>20_SetDefault('g:markdown_enable_input_abbreviations', 0)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 76: call s:SetDefault('g:markdown_enable_mappings', 0)
calling function <SNR>20_SetDefault('g:markdown_enable_mappings', 0)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 77: 
line 78: " Enable jsx syntax by default
line 79: call s:SetDefault('g:jsx_ext_required', 0)
calling function <SNR>20_SetDefault('g:jsx_ext_required', 0)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 80: 
line 81: " Needed for sql highlighting
line 82: call s:SetDefault('g:javascript_sql_dialect', 'sql')
calling function <SNR>20_SetDefault('g:javascript_sql_dialect', 'sql')

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 83: 
line 84: " Enable jsdoc highlighting by default
line 85: call s:SetDefault('g:javascript_plugin_jsdoc', 1)
calling function <SNR>20_SetDefault('g:javascript_plugin_jsdoc', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 86: 
line 87: " Make csv loading faster
line 88: call s:SetDefault('g:csv_start', 1)
calling function <SNR>20_SetDefault('g:csv_start', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 89: call s:SetDefault('g:csv_end', 2)
calling function <SNR>20_SetDefault('g:csv_end', 2)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 90: call s:SetDefault('g:csv_default_delim', ',')
calling function <SNR>20_SetDefault('g:csv_default_delim', ',')

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 91: 
line 92: " Disable json concealing by default
line 93: call s:SetDefault('g:vim_json_syntax_conceal', 0)
calling function <SNR>20_SetDefault('g:vim_json_syntax_conceal', 0)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 94: 
line 95: call s:SetDefault('g:filetype_euphoria', 'elixir')
calling function <SNR>20_SetDefault('g:filetype_euphoria', 'elixir')

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 96: 
line 97: if !exists('g:python_highlight_all')
line 98:   call s:SetDefault('g:python_highlight_builtins', 1)
calling function <SNR>20_SetDefault('g:python_highlight_builtins', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 99:   call s:SetDefault('g:python_highlight_builtin_objs', 1)
calling function <SNR>20_SetDefault('g:python_highlight_builtin_objs', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 100:   call s:SetDefault('g:python_highlight_builtin_types', 1)
calling function <SNR>20_SetDefault('g:python_highlight_builtin_types', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 101:   call s:SetDefault('g:python_highlight_builtin_funcs', 1)
calling function <SNR>20_SetDefault('g:python_highlight_builtin_funcs', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 102:   call s:SetDefault('g:python_highlight_builtin_funcs_kwarg', 1)
calling function <SNR>20_SetDefault('g:python_highlight_builtin_funcs_kwarg', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 103:   call s:SetDefault('g:python_highlight_exceptions', 1)
calling function <SNR>20_SetDefault('g:python_highlight_exceptions', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 104:   call s:SetDefault('g:python_highlight_string_formatting', 1)
calling function <SNR>20_SetDefault('g:python_highlight_string_formatting', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 105:   call s:SetDefault('g:python_highlight_string_format', 1)
calling function <SNR>20_SetDefault('g:python_highlight_string_format', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 106:   call s:SetDefault('g:python_highlight_string_templates', 1)
calling function <SNR>20_SetDefault('g:python_highlight_string_templates', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 107:   call s:SetDefault('g:python_highlight_indent_errors', 1)
calling function <SNR>20_SetDefault('g:python_highlight_indent_errors', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 108:   call s:SetDefault('g:python_highlight_space_errors', 1)
calling function <SNR>20_SetDefault('g:python_highlight_space_errors', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 109:   call s:SetDefault('g:python_highlight_doctests', 1)
calling function <SNR>20_SetDefault('g:python_highlight_doctests', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 110:   call s:SetDefault('g:python_highlight_func_calls', 1)
calling function <SNR>20_SetDefault('g:python_highlight_func_calls', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 111:   call s:SetDefault('g:python_highlight_class_vars', 1)
calling function <SNR>20_SetDefault('g:python_highlight_class_vars', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 112:   call s:SetDefault('g:python_highlight_operators', 1)
calling function <SNR>20_SetDefault('g:python_highlight_operators', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 113:   call s:SetDefault('g:python_highlight_file_headers_as_comments', 1)
calling function <SNR>20_SetDefault('g:python_highlight_file_headers_as_comments', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 114:   call s:SetDefault('g:python_slow_sync', 1)
calling function <SNR>20_SetDefault('g:python_slow_sync', 1)

line 1:   if !exists(a:name)
line 2:     let {a:name} = a:value
line 3:   endif
function <SNR>20_SetDefault returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 115: endif
line 116: 
line 117: " Some variables are needed for haxe loading
line 118: 
line 119: " We need it because scripts.vim in vim uses "set ft=" which cannot be
line 120: " overridden with setf (and we can't use set ft= so our scripts.vim work)
line 121: func! s:Setf(ft)
line 126: 
line 127: " Function used for patterns that end in a star: don't set the filetype if the
line 128: " file name matches ft_ignore_pat.
line 129: " When using this, the entry should probably be further down below with the
line 130: " other StarSetf() calls.
line 131: func! s:StarSetf(ft)
line 136: 
line 137: augroup polyglot-observer | augroup END
line 137:  augroup END
line 138: 
line 139: if exists('s:cpo_save')
line 140:   " Restore 'cpoptions'
line 141:   let &cpo = s:cpo_save
line 142:   unlet s:cpo_save
line 143: endif
line 144: 
line 145: " Load user-defined filetype.vim and oter plugins ftdetect first
line 146: " This is to use polyglot-defined ftdetect always as fallback to user settings
line 147: augroup filetypedetect
line 148:   runtime! filetype.vim
Searching for "filetype.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 148: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim"
line 1: call polyglot#init#init()
calling function polyglot#init#init()

line 1:   " A no-op as sourcing this file is enough
function polyglot#init#init returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim

finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/filetype.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 148: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
line 1: " Vim support file to detect file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2022 Apr 07
line 5: 
line 6: " Listen very carefully, I will say this only once
line 7: if exists("did_load_filetypes")
line 8:   finish
line 9: endif
line 10: let did_load_filetypes = 1
line 11: 
line 12: " Line continuation is used here, remove 'C' from 'cpoptions'
line 13: let s:cpo_save = &cpo
line 14: set cpo&vim
line 15: 
line 16: augroup filetypedetect
line 17: 
line 18: " Ignored extensions
line 19: if exists("*fnameescape")
line 20: au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-dist,?\+.dpkg-old,?\+.dpkg-new,?\+.dpkg-bak,?\+.rpmsave,?\+.rpmnew,?\+.pacsave,?\+.pacnew exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
line 22: au BufNewFile,BufRead *~ let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
line 29: au BufNewFile,BufRead ?\+.in if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
line 33: elseif &verbose > 0
line 34:   echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"
line 35: endif
line 36: 
line 37: " Pattern used to match file names which should not be inspected.
line 38: " Currently finds compressed files.
line 39: if !exists("g:ft_ignore_pat")
line 40:   let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'
line 41: endif
line 42: 
line 43: " Function used for patterns that end in a star: don't set the filetype if the
line 44: " file name matches ft_ignore_pat.
line 45: " When using this, the entry should probably be further down below with the
line 46: " other StarSetf() calls.
line 47: func s:StarSetf(ft)
line 52: 
line 53: " Vim help file
line 54: au BufNewFile,BufRead $VIMRUNTIME/doc/*.txt setf help
line 55: 
line 56: " Abaqus or Trasys
line 57: au BufNewFile,BufRead *.inp^I^I^Icall dist#ft#Check_inp()
line 58: 
line 59: " 8th (Firth-derivative)
line 60: au BufNewFile,BufRead *.8th^I^I^Isetf 8th
line 61: 
line 62: " A-A-P recipe
line 63: au BufNewFile,BufRead *.aap^I^I^Isetf aap
line 64: 
line 65: " A2ps printing utility
line 66: au BufNewFile,BufRead */etc/a2ps.cfg,*/etc/a2ps/*.cfg,a2psrc,.a2psrc setf a2ps
line 67: 
line 68: " ABAB/4
line 69: au BufNewFile,BufRead *.abap^I^I^Isetf abap
line 70: 
line 71: " ABC music notation
line 72: au BufNewFile,BufRead *.abc^I^I^Isetf abc
line 73: 
line 74: " ABEL
line 75: au BufNewFile,BufRead *.abl^I^I^Isetf abel
line 76: 
line 77: " AceDB
line 78: au BufNewFile,BufRead *.wrm^I^I^Isetf acedb
line 79: 
line 80: " Ada (83, 9X, 95)
line 81: au BufNewFile,BufRead *.adb,*.ads,*.ada^I^Isetf ada
line 82: au BufNewFile,BufRead *.gpr^I^I^Isetf ada
line 83: 
line 84: " AHDL
line 85: au BufNewFile,BufRead *.tdf^I^I^Isetf ahdl
line 86: 
line 87: " AIDL
line 88: au BufNewFile,BufRead *.aidl^I^I^Isetf aidl
line 89: 
line 90: " AMPL
line 91: au BufNewFile,BufRead *.run^I^I^Isetf ampl
line 92: 
line 93: " Ant
line 94: au BufNewFile,BufRead build.xml^I^I^Isetf ant
line 95: 
line 96: " Arduino
line 97: au BufNewFile,BufRead *.ino,*.pde^I^Isetf arduino
line 98: 
line 99: " Apache config file
line 100: au BufNewFile,BufRead .htaccess,*/etc/httpd/*.conf^I^Isetf apache
line 101: au BufNewFile,BufRead */etc/apache2/sites-*/*.com^I^Isetf apache
line 102: 
line 103: " XA65 MOS6510 cross assembler
line 104: au BufNewFile,BufRead *.a65^I^I^Isetf a65
line 105: 
line 106: " Applescript
line 107: au BufNewFile,BufRead *.scpt^I^I^Isetf applescript
line 108: 
line 109: " Applix ELF
line 110: au BufNewFile,BufRead *.am if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
line 112: 
line 113: " ALSA configuration
line 114: au BufNewFile,BufRead .asoundrc,*/usr/share/alsa/alsa.conf,*/etc/asound.conf setf alsaconf
line 115: 
line 116: " Arc Macro Language
line 117: au BufNewFile,BufRead *.aml^I^I^Isetf aml
line 118: 
line 119: " APT config file
line 120: au BufNewFile,BufRead apt.conf^I^I       setf aptconf
line 121: au BufNewFile,BufRead */.aptitude/config       setf aptconf
line 122: " more generic pattern far down
line 123: 
line 124: " Arch Inventory file
line 125: au BufNewFile,BufRead .arch-inventory,=tagging-method^Isetf arch
line 126: 
line 127: " ART*Enterprise (formerly ART-IM)
line 128: au BufNewFile,BufRead *.art^I^I^Isetf art
line 129: 
line 130: " AsciiDoc
line 131: au BufNewFile,BufRead *.asciidoc,*.adoc^I^Isetf asciidoc
line 132: 
line 133: " ASN.1
line 134: au BufNewFile,BufRead *.asn,*.asn1^I^Isetf asn
line 135: 
line 136: " Active Server Pages (with Visual Basic Script)
line 137: au BufNewFile,BufRead *.asa if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
line 143: 
line 144: " Active Server Pages (with Perl or Visual Basic Script)
line 145: au BufNewFile,BufRead *.asp if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
line 153: 
line 154: " Grub (must be before catch *.lst)
line 155: au BufNewFile,BufRead */boot/grub/menu.lst,*/boot/grub/grub.conf,*/etc/grub.conf setf grub
line 156: 
line 157: " Assembly (all kinds)
line 158: " *.lst is not pure assembly, it has two extra columns (address, byte codes)
line 159: au BufNewFile,BufRead *.asm,*.[sS],*.[aA],*.mac,*.lst^Icall dist#ft#FTasm()
line 160: 
line 161: " Macro (VAX)
line 162: au BufNewFile,BufRead *.mar^I^I^Isetf vmasm
line 163: 
line 164: " Atlas
line 165: au BufNewFile,BufRead *.atl,*.as^I^Isetf atlas
line 166: 
line 167: " Atom is based on XML
line 168: au BufNewFile,BufRead *.atom^I^I^Isetf xml
line 169: 
line 170: " Autoit v3
line 171: au BufNewFile,BufRead *.au3^I^I^Isetf autoit
line 172: 
line 173: " Autohotkey
line 174: au BufNewFile,BufRead *.ahk^I^I^Isetf autohotkey
line 175: 
line 176: " Automake
line 177: au BufNewFile,BufRead [mM]akefile.am,GNUmakefile.am^Isetf automake
line 178: 
line 179: " Autotest .at files are actually m4
line 180: au BufNewFile,BufRead *.at^I^I^Isetf m4
line 181: 
line 182: " Avenue
line 183: au BufNewFile,BufRead *.ave^I^I^Isetf ave
line 184: 
line 185: " Awk
line 186: au BufNewFile,BufRead *.awk,*.gawk^I^Isetf awk
line 187: 
line 188: " B
line 189: au BufNewFile,BufRead *.mch,*.ref,*.imp^I^Isetf b
line 190: 
line 191: " BASIC or Visual Basic
line 192: au BufNewFile,BufRead *.bas^I^I^Icall dist#ft#FTbas()
line 193: au BufNewFile,BufRead *.bi,*.bm^I^I^Icall dist#ft#FTbas()
line 194: 
line 195: " Visual Basic Script (close to Visual Basic) or Visual Basic .NET
line 196: au BufNewFile,BufRead *.vb,*.vbs,*.dsm,*.ctl^Isetf vb
line 197: 
line 198: " IBasic file (similar to QBasic)
line 199: au BufNewFile,BufRead *.iba,*.ibi^I^Isetf ibasic
line 200: 
line 201: " FreeBasic file (similar to QBasic)
line 202: au BufNewFile,BufRead *.fb^I^I^Isetf freebasic
line 203: 
line 204: " Batch file for MSDOS. See dist#ft#FTsys for *.sys
line 205: au BufNewFile,BufRead *.bat^I^I^Isetf dosbatch
line 206: " *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.
line 207: au BufNewFile,BufRead *.cmd if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
line 209: " ABB RAPID or Batch file for MSDOS.
line 210: au BufNewFile,BufRead *.sys\c^I^I^Icall dist#ft#FTsys()
line 211: 
line 212: " Batch file for 4DOS
line 213: au BufNewFile,BufRead *.btm^I^I^Icall dist#ft#FTbtm()
line 214: 
line 215: " BC calculator
line 216: au BufNewFile,BufRead *.bc^I^I^Isetf bc
line 217: 
line 218: " BDF font
line 219: au BufNewFile,BufRead *.bdf^I^I^Isetf bdf
line 220: 
line 221: " Beancount
line 222: au BufNewFile,BufRead *.beancount^I^Isetf beancount
line 223: 
line 224: " BibTeX bibliography database file
line 225: au BufNewFile,BufRead *.bib^I^I^Isetf bib
line 226: 
line 227: " BibTeX Bibliography Style
line 228: au BufNewFile,BufRead *.bst^I^I^Isetf bst
line 229: 
line 230: " Bicep
line 231: au BufNewFile,BufRead *.bicep^I^I^Isetf bicep
line 232: 
line 233: " BIND configuration
line 234: " sudoedit uses namedXXXX.conf
line 235: au BufNewFile,BufRead named*.conf,rndc*.conf,rndc*.key^Isetf named
line 236: 
line 237: " BIND zone
line 238: au BufNewFile,BufRead named.root^I^Isetf bindzone
line 239: au BufNewFile,BufRead *.db^I^I^Icall dist#ft#BindzoneCheck('')
line 240: 
line 241: " Blank
line 242: au BufNewFile,BufRead *.bl^I^I^Isetf blank
line 243: 
line 244: " Blkid cache file
line 245: au BufNewFile,BufRead */etc/blkid.tab,*/etc/blkid.tab.old   setf xml
line 246: 
line 247: " BSDL
line 248: au BufNewFile,BufRead *bsd,*.bsdl^I^Isetf bsdl
line 249: 
line 250: " Bazel (http://bazel.io)
line 251: autocmd BufRead,BufNewFile *.bzl,*.bazel,WORKSPACE^Isetf bzl
line 252: if has("fname_case")
line 253:   " There is another check for BUILD further below.
line 254:   autocmd BufRead,BufNewFile *.BUILD,BUILD^I^Isetf bzl
line 255: endif
line 256: 
line 257: " C or lpc
line 258: au BufNewFile,BufRead *.c^I^I^Icall dist#ft#FTlpc()
line 259: au BufNewFile,BufRead *.lpc,*.ulpc^I^Isetf lpc
line 260: 
line 261: " Calendar
line 262: au BufNewFile,BufRead calendar^I^I^Isetf calendar
line 263: 
line 264: " C#
line 265: au BufNewFile,BufRead *.cs,*.csx^I^Isetf cs
line 266: 
line 267: " CSDL
line 268: au BufNewFile,BufRead *.csdl^I^I^Isetf csdl
line 269: 
line 270: " Cabal
line 271: au BufNewFile,BufRead *.cabal^I^I^Isetf cabal
line 272: 
line 273: " Cdrdao TOC
line 274: au BufNewFile,BufRead *.toc^I^I^Isetf cdrtoc
line 275: 
line 276: " Cdrdao config
line 277: au BufNewFile,BufRead */etc/cdrdao.conf,*/etc/defaults/cdrdao,*/etc/default/cdrdao,.cdrdao^Isetf cdrdaoconf
line 278: 
line 279: " Cfengine
line 280: au BufNewFile,BufRead cfengine.conf^I^Isetf cfengine
line 281: 
line 282: " ChaiScript
line 283: au BufRead,BufNewFile *.chai^I^I^Isetf chaiscript
line 284: 
line 285: " Comshare Dimension Definition Language
line 286: au BufNewFile,BufRead *.cdl^I^I^Isetf cdl
line 287: 
line 288: " Conary Recipe
line 289: au BufNewFile,BufRead *.recipe^I^I^Isetf conaryrecipe
line 290: 
line 291: " Controllable Regex Mutilator
line 292: au BufNewFile,BufRead *.crm^I^I^Isetf crm
line 293: 
line 294: " Cyn++
line 295: au BufNewFile,BufRead *.cyn^I^I^Isetf cynpp
line 296: 
line 297: " Cynlib
line 298: " .cc and .cpp files can be C++ or Cynlib.
line 299: au BufNewFile,BufRead *.cc if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
line 301: au BufNewFile,BufRead *.cpp if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
line 303: 
line 304: " C++
line 305: au BufNewFile,BufRead *.cxx,*.c++,*.hh,*.hxx,*.hpp,*.ipp,*.moc,*.tcc,*.inl setf cpp
line 306: if has("fname_case")
line 307:   au BufNewFile,BufRead *.C,*.H setf cpp
line 308: endif
line 309: 
line 310: " .h files can be C, Ch C++, ObjC or ObjC++.
line 311: " Set c_syntax_for_h if you want C, ch_syntax_for_h if you want Ch. ObjC is
line 312: " detected automatically.
line 313: au BufNewFile,BufRead *.h^I^I^Icall dist#ft#FTheader()
line 314: 
line 315: " Ch (CHscript)
line 316: au BufNewFile,BufRead *.chf^I^I^Isetf ch
line 317: 
line 318: " TLH files are C++ headers generated by Visual C++'s #import from typelibs
line 319: au BufNewFile,BufRead *.tlh^I^I^Isetf cpp
line 320: 
line 321: " Cascading Style Sheets
line 322: au BufNewFile,BufRead *.css^I^I^Isetf css
line 323: 
line 324: " Century Term Command Scripts (*.cmd too)
line 325: au BufNewFile,BufRead *.con^I^I^Isetf cterm
line 326: 
line 327: " Changelog
line 328: au BufNewFile,BufRead changelog.Debian,changelog.dch,NEWS.Debian,NEWS.dch,*/debian/changelog^Isetf debchangelog
line 330: 
line 331: au BufNewFile,BufRead [cC]hange[lL]og  if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
line 337: 
line 338: au BufNewFile,BufRead NEWS  if getline(1) =~ '; urgency='|   setf debchangelog| endif
line 342: 
line 343: " CHILL
line 344: au BufNewFile,BufRead *..ch^I^I^Isetf chill
line 345: 
line 346: " Changes for WEB and CWEB or CHILL
line 347: au BufNewFile,BufRead *.ch^I^I^Icall dist#ft#FTchange()
line 348: 
line 349: " ChordPro
line 350: au BufNewFile,BufRead *.chopro,*.crd,*.cho,*.crdpro,*.chordpro^Isetf chordpro
line 351: 
line 352: " Clean
line 353: au BufNewFile,BufRead *.dcl,*.icl^I^Isetf clean
line 354: 
line 355: " Clever
line 356: au BufNewFile,BufRead *.eni^I^I^Isetf cl
line 357: 
line 358: " Clever or dtd
line 359: au BufNewFile,BufRead *.ent^I^I^Icall dist#ft#FTent()
line 360: 
line 361: " Clipper, FoxPro, ABB RAPID or eviews
line 362: au BufNewFile,BufRead *.prg\c^I^I^Icall dist#ft#FTprg()
line 363: 
line 364: " Clojure
line 365: au BufNewFile,BufRead *.clj,*.cljs,*.cljx,*.cljc^I^Isetf clojure
line 366: 
line 367: " Cmake
line 368: au BufNewFile,BufRead CMakeLists.txt,*.cmake,*.cmake.in^I^Isetf cmake
line 369: 
line 370: " Cmusrc
line 371: au BufNewFile,BufRead */.cmus/{autosave,rc,command-history,*.theme} setf cmusrc
line 372: au BufNewFile,BufRead */cmus/{rc,*.theme}^I^I^Isetf cmusrc
line 373: 
line 374: " Cobol
line 375: au BufNewFile,BufRead *.cbl,*.cob,*.lib^Isetf cobol
line 376: "   cobol or zope form controller python script? (heuristic)
line 377: au BufNewFile,BufRead *.cpy if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
line 383: 
line 384: " Coco/R
line 385: au BufNewFile,BufRead *.atg^I^I^Isetf coco
line 386: 
line 387: " Cold Fusion
line 388: au BufNewFile,BufRead *.cfm,*.cfi,*.cfc^I^Isetf cf
line 389: 
line 390: " Configure scripts
line 391: au BufNewFile,BufRead configure.in,configure.ac setf config
line 392: 
line 393: " Cooklang
line 394: au BufNewFile,BufRead *.cook^I^I^Isetf cook
line 395: 
line 396: " CUDA Compute Unified Device Architecture
line 397: au BufNewFile,BufRead *.cu,*.cuh^I^Isetf cuda
line 398: 
line 399: " Dockerfile; Podman uses the same syntax with name Containerfile
line 400: " Also see Dockerfile.* below.
line 401: au BufNewFile,BufRead Containerfile,Dockerfile,*.Dockerfile^Isetf dockerfile
line 402: 
line 403: " WildPackets EtherPeek Decoder
line 404: au BufNewFile,BufRead *.dcd^I^I^Isetf dcd
line 405: 
line 406: " Enlightenment configuration files
line 407: au BufNewFile,BufRead *enlightenment/*.cfg^Isetf c
line 408: 
line 409: " Eterm
line 410: au BufNewFile,BufRead *Eterm/*.cfg^I^Isetf eterm
line 411: 
line 412: " Elixir or Euphoria
line 413: au BufNewFile,BufRead *.ex call dist#ft#ExCheck()
line 414: 
line 415: " Elixir
line 416: au BufRead,BufNewFile mix.lock,*.exs setf elixir
line 417: au BufRead,BufNewFile *.eex,*.leex setf eelixir
line 418: 
line 419: " Elvish
line 420: au BufRead,BufNewFile *.elv setf elvish
line 421: 
line 422: " Euphoria 3 or 4
line 423: au BufNewFile,BufRead *.eu,*.ew,*.exu,*.exw  call dist#ft#EuphoriaCheck()
line 424: if has("fname_case")
line 425:    au BufNewFile,BufRead *.EU,*.EW,*.EX,*.EXU,*.EXW  call dist#ft#EuphoriaCheck()
line 426: endif
line 427: 
line 428: " Lynx config files
line 429: au BufNewFile,BufRead lynx.cfg^I^I^Isetf lynx
line 430: 
line 431: " Modula-3 configuration language (must be before *.cfg and *makefile)
line 432: au BufNewFile,BufRead *.quake,cm3.cfg^I^Isetf m3quake
line 433: au BufNewFile,BufRead m3makefile,m3overrides^Isetf m3build
line 434: 
line 435: " Quake
line 436: au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg^Isetf quake
line 437: au BufNewFile,BufRead *quake[1-3]/*.cfg^I^I^Isetf quake
line 438: 
line 439: " Quake C
line 440: au BufNewFile,BufRead *.qc^I^I^Isetf c
line 441: 
line 442: " Configure files
line 443: au BufNewFile,BufRead *.cfg\c^I^I^Icall dist#ft#FTcfg()
line 444: 
line 445: " Cucumber
line 446: au BufNewFile,BufRead *.feature^I^I^Isetf cucumber
line 447: 
line 448: " Communicating Sequential Processes
line 449: au BufNewFile,BufRead *.csp,*.fdr^I^Isetf csp
line 450: 
line 451: " CUPL logic description and simulation
line 452: au BufNewFile,BufRead *.pld^I^I^Isetf cupl
line 453: au BufNewFile,BufRead *.si^I^I^Isetf cuplsim
line 454: 
line 455: " Dart
line 456: au BufRead,BufNewfile *.dart,*.drt^I^Isetf dart
line 457: 
line 458: " Debian Control
line 459: au BufNewFile,BufRead */debian/control^I^Isetf debcontrol
line 460: au BufNewFile,BufRead control  if getline(1) =~ '^Source:'|   setf debcontrol| endif
line 464: 
line 465: " Debian Copyright
line 466: au BufNewFile,BufRead */debian/copyright^Isetf debcopyright
line 467: au BufNewFile,BufRead copyright  if getline(1) =~ '^Format:'|   setf debcopyright| endif
line 471: 
line 472: " Debian Sources.list
line 473: au BufNewFile,BufRead */etc/apt/sources.list^I^Isetf debsources
line 474: au BufNewFile,BufRead */etc/apt/sources.list.d/*.list^Isetf debsources
line 475: 
line 476: " Deny hosts
line 477: au BufNewFile,BufRead denyhosts.conf^I^Isetf denyhosts
line 478: 
line 479: " dnsmasq(8) configuration files
line 480: au BufNewFile,BufRead */etc/dnsmasq.conf^Isetf dnsmasq
line 481: 
line 482: " ROCKLinux package description
line 483: au BufNewFile,BufRead *.desc^I^I^Isetf desc
line 484: 
line 485: " the D language or dtrace
line 486: au BufNewFile,BufRead */dtrace/*.d^I^Isetf dtrace
line 487: au BufNewFile,BufRead *.d^I^I^Icall dist#ft#DtraceCheck()
line 488: 
line 489: " Desktop files
line 490: au BufNewFile,BufRead *.desktop,*.directory^Isetf desktop
line 491: 
line 492: " Dict config
line 493: au BufNewFile,BufRead dict.conf,.dictrc^I^Isetf dictconf
line 494: 
line 495: " Dictd config
line 496: au BufNewFile,BufRead dictd*.conf^I^Isetf dictdconf
line 497: 
line 498: " DEP3 formatted patch files
line 499: au BufNewFile,BufRead */debian/patches/*^Icall dist#ft#Dep3patch()
line 500: 
line 501: " Diff files
line 502: au BufNewFile,BufRead *.diff,*.rej^I^Isetf diff
line 503: au BufNewFile,BufRead *.patch if getline(1) =~# '^From [0-9a-f]\{40,\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
line 509: 
line 510: " Dircolors
line 511: au BufNewFile,BufRead .dir_colors,.dircolors,*/etc/DIR_COLORS^Isetf dircolors
line 512: 
line 513: " Diva (with Skill) or InstallShield
line 514: au BufNewFile,BufRead *.rul if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
line 520: 
line 521: " DCL (Digital Command Language - vms) or DNS zone file
line 522: au BufNewFile,BufRead *.com^I^I^Icall dist#ft#BindzoneCheck('dcl')
line 523: 
line 524: " DOT
line 525: au BufNewFile,BufRead *.dot,*.gv^I^Isetf dot
line 526: 
line 527: " Dune
line 528: au BufNewFile,BufRead jbuild,dune,dune-project,dune-workspace setf dune
line 529: 
line 530: " Dylan - lid files
line 531: au BufNewFile,BufRead *.lid^I^I^Isetf dylanlid
line 532: 
line 533: " Dylan - intr files (melange)
line 534: au BufNewFile,BufRead *.intr^I^I^Isetf dylanintr
line 535: 
line 536: " Dylan
line 537: au BufNewFile,BufRead *.dylan^I^I^Isetf dylan
line 538: 
line 539: " Microsoft Module Definition
line 540: au BufNewFile,BufRead *.def^I^I^Isetf def
line 541: 
line 542: " Dracula
line 543: au BufNewFile,BufRead *.drac,*.drc,*lvs,*lpe^Isetf dracula
line 544: 
line 545: " Datascript
line 546: au BufNewFile,BufRead *.ds^I^I^Isetf datascript
line 547: 
line 548: " dsl: DSSSL or Structurizr
line 549: au BufNewFile,BufRead *.dsl if getline(1) =~ '^\s*<\!' |   setf dsl | else |   setf structurizr | endif
line 555: 
line 556: " DTD (Document Type Definition for XML)
line 557: au BufNewFile,BufRead *.dtd^I^I^Isetf dtd
line 558: 
line 559: " DTS/DSTI (device tree files)
line 560: au BufNewFile,BufRead *.dts,*.dtsi^I^Isetf dts
line 561: 
line 562: " EDIF (*.edf,*.edif,*.edn,*.edo) or edn
line 563: au BufNewFile,BufRead *.ed\(f\|if\|o\)^I^Isetf edif
line 564: au BufNewFile,BufRead *.edn if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
line 570: 
line 571: " EditorConfig (close enough to dosini)
line 572: au BufNewFile,BufRead .editorconfig^I^Isetf dosini
line 573: 
line 574: " Embedix Component Description
line 575: au BufNewFile,BufRead *.ecd^I^I^Isetf ecd
line 576: 
line 577: " Eiffel or Specman or Euphoria
line 578: au BufNewFile,BufRead *.e,*.E^I^I^Icall dist#ft#FTe()
line 579: 
line 580: " Elinks configuration
line 581: au BufNewFile,BufRead elinks.conf^I^Isetf elinks
line 582: 
line 583: " ERicsson LANGuage; Yaws is erlang too
line 584: au BufNewFile,BufRead *.erl,*.hrl,*.yaws^Isetf erlang
line 585: 
line 586: " Elm
line 587: au BufNewFile,BufRead *.elm^I^I^Isetf elm
line 588: 
line 589: " Elm Filter Rules file
line 590: au BufNewFile,BufRead filter-rules^I^Isetf elmfilt
line 591: 
line 592: " ESMTP rc file
line 593: au BufNewFile,BufRead *esmtprc^I^I^Isetf esmtprc
line 594: 
line 595: " ESQL-C
line 596: au BufNewFile,BufRead *.ec,*.EC^I^I^Isetf esqlc
line 597: 
line 598: " Esterel
line 599: au BufNewFile,BufRead *.strl^I^I^Isetf esterel
line 600: 
line 601: " Essbase script
line 602: au BufNewFile,BufRead *.csc^I^I^Isetf csc
line 603: 
line 604: " Exim
line 605: au BufNewFile,BufRead exim.conf^I^I^Isetf exim
line 606: 
line 607: " Expect
line 608: au BufNewFile,BufRead *.exp^I^I^Isetf expect
line 609: 
line 610: " Exports
line 611: au BufNewFile,BufRead exports^I^I^Isetf exports
line 612: 
line 613: " Falcon
line 614: au BufNewFile,BufRead *.fal^I^I^Isetf falcon
line 615: 
line 616: " Fantom
line 617: au BufNewFile,BufRead *.fan,*.fwt^I^Isetf fan
line 618: 
line 619: " Factor
line 620: au BufNewFile,BufRead *.factor^I^I^Isetf factor
line 621: 
line 622: " Fennel
line 623: autocmd BufRead,BufNewFile *.fnl^I^Isetf fennel
line 624: 
line 625: " Fetchmail RC file
line 626: au BufNewFile,BufRead .fetchmailrc^I^Isetf fetchmail
line 627: 
line 628: " Fish shell
line 629: au BufNewFile,BufRead *.fish^I^I^Isetf fish
line 630: 
line 631: " FlexWiki - disabled, because it has side effects when a .wiki file
line 632: " is not actually FlexWiki
line 633: "au BufNewFile,BufRead *.wiki^I^I^Isetf flexwiki
line 634: 
line 635: " Focus Executable
line 636: au BufNewFile,BufRead *.fex,*.focexec^I^Isetf focexec
line 637: 
line 638: " Focus Master file (but not for auto.master)
line 639: au BufNewFile,BufRead auto.master^I^Isetf conf
line 640: au BufNewFile,BufRead *.mas,*.master^I^Isetf master
line 641: 
line 642: " Forth
line 643: au BufNewFile,BufRead *.ft,*.fth^I^Isetf forth
line 644: 
line 645: " Reva Forth
line 646: au BufNewFile,BufRead *.frt^I^I^Isetf reva
line 647: 
line 648: " Fortran
line 649: if has("fname_case")
line 650:   au BufNewFile,BufRead *.F,*.FOR,*.FPP,*.FTN,*.F77,*.F90,*.F95,*.F03,*.F08^I setf fortran
line 651: endif
line 652: au BufNewFile,BufRead   *.f,*.for,*.fortran,*.fpp,*.ftn,*.f77,*.f90,*.f95,*.f03,*.f08  setf fortran
line 653: 
line 654: " Framescript
line 655: au BufNewFile,BufRead *.fsl^I^I^Isetf framescript
line 656: 
line 657: " FStab
line 658: au BufNewFile,BufRead fstab,mtab^I^Isetf fstab
line 659: 
line 660: " Fusion
line 661: au BufRead,BufNewFile *.fusion^I^I^Isetf fusion
line 662: 
line 663: " F# or Forth
line 664: au BufNewFile,BufRead *.fs^I^I^Icall dist#ft#FTfs()
line 665: 
line 666: " F#
line 667: au BufNewFile,BufRead *.fsi,*.fsx^I^Isetf fsharp
line 668: 
line 669: " GDB command files
line 670: au BufNewFile,BufRead .gdbinit,gdbinit,.gdbearlyinit,gdbearlyinit,*.gdb^I^Isetf gdb
line 671: 
line 672: " GDMO
line 673: au BufNewFile,BufRead *.mo,*.gdmo^I^Isetf gdmo
line 674: 
line 675: " GDscript
line 676: au BufNewFile,BufRead *.gd^I^I^Isetf gdscript
line 677: 
line 678: " Godot resource
line 679: au BufRead,BufNewFile *.tscn,*.tres^I^I^Isetf gdresource
line 680: 
line 681: " Gedcom
line 682: au BufNewFile,BufRead *.ged,lltxxxxx.txt^Isetf gedcom
line 683: 
line 684: " Gemtext
line 685: au BufNewFile,BufRead *.gmi,*.gemini^I^Isetf gemtext
line 686: 
line 687: " Gift (Moodle)
line 688: autocmd BufRead,BufNewFile *.gift^I^Isetf gift
line 689: 
line 690: " Git
line 691: au BufNewFile,BufRead COMMIT_EDITMSG,MERGE_MSG,TAG_EDITMSG ^Isetf gitcommit
line 692: au BufNewFile,BufRead NOTES_EDITMSG,EDIT_DESCRIPTION^I^Isetf gitcommit
line 693: au BufNewFile,BufRead *.git/config,.gitconfig,*/etc/gitconfig ^Isetf gitconfig
line 694: au BufNewFile,BufRead */.config/git/config^I^I^Isetf gitconfig
line 695: au BufNewFile,BufRead *.git/config.worktree^I^I^Isetf gitconfig
line 696: au BufNewFile,BufRead *.git/worktrees/*/config.worktree^I^Isetf gitconfig
line 697: au BufNewFile,BufRead .gitmodules,*.git/modules/*/config^Isetf gitconfig
line 698: if !empty($XDG_CONFIG_HOME)
line 699:   au BufNewFile,BufRead $XDG_CONFIG_HOME/git/config^I^Isetf gitconfig
line 700: endif
line 701: au BufNewFile,BufRead git-rebase-todo^I^Isetf gitrebase
line 702: au BufRead,BufNewFile .gitsendemail.msg.??????^Isetf gitsendemail
line 703: au BufNewFile,BufRead *.git/* if getline(1) =~# '^\x\{40,\}\>\|^ref: ' |   setf git | endif
line 707: 
line 708: " Gkrellmrc
line 709: au BufNewFile,BufRead gkrellmrc,gkrellmrc_?^Isetf gkrellmrc
line 710: 
line 711: " GLSL
line 712: au BufNewFile,BufRead *.glsl^I^I^Isetf glsl
line 713: 
line 714: " GP scripts (2.0 and onward)
line 715: au BufNewFile,BufRead *.gp,.gprc^I^Isetf gp
line 716: 
line 717: " GPG
line 718: au BufNewFile,BufRead */.gnupg/options^I^Isetf gpg
line 719: au BufNewFile,BufRead */.gnupg/gpg.conf^I^Isetf gpg
line 720: au BufNewFile,BufRead */usr/*/gnupg/options.skel setf gpg
line 721: if !empty($GNUPGHOME)
line 722:   au BufNewFile,BufRead $GNUPGHOME/options^Isetf gpg
line 723:   au BufNewFile,BufRead $GNUPGHOME/gpg.conf^Isetf gpg
line 724: endif
line 725: 
line 726: " gnash(1) configuration files
line 727: au BufNewFile,BufRead gnashrc,.gnashrc,gnashpluginrc,.gnashpluginrc setf gnash
line 728: 
line 729: " Gitolite
line 730: au BufNewFile,BufRead gitolite.conf^I^Isetf gitolite
line 731: au BufNewFile,BufRead {,.}gitolite.rc,example.gitolite.rc^Isetf perl
line 732: 
line 733: " Glimmer-flavored TypeScript and JavaScript
line 734: au BufNewFile,BufRead *.gts^Isetf typescript.glimmer
line 735: au BufNewFile,BufRead *.gjs^Isetf javascript.glimmer
line 736: 
line 737: " Gnuplot scripts
line 738: au BufNewFile,BufRead *.gpi,.gnuplot^I^Isetf gnuplot
line 739: 
line 740: " Go (Google)
line 741: au BufNewFile,BufRead *.go^I^I^Isetf go
line 742: au BufNewFile,BufRead Gopkg.lock^I^Isetf toml
line 743: au BufRead,BufNewFile go.work^I^I^Isetf gowork
line 744: 
line 745: " GrADS scripts
line 746: au BufNewFile,BufRead *.gs^I^I^Isetf grads
line 747: 
line 748: " GraphQL
line 749: au BufNewFile,BufRead *.graphql,*.graphqls,*.gql^I^I^Isetf graphql
line 750: 
line 751: " Gretl
line 752: au BufNewFile,BufRead *.gretl^I^I^Isetf gretl
line 753: 
line 754: " Groovy
line 755: au BufNewFile,BufRead *.gradle,*.groovy^I^Isetf groovy
line 756: 
line 757: " GNU Server Pages
line 758: au BufNewFile,BufRead *.gsp^I^I^Isetf gsp
line 759: 
line 760: " Group file
line 761: au BufNewFile,BufRead */etc/group,*/etc/group-,*/etc/group.edit,*/etc/gshadow,*/etc/gshadow-,*/etc/gshadow.edit,*/var/backups/group.bak,*/var/backups/gshadow.bak  setf group
line 762: 
line 763: " GTK RC
line 764: au BufNewFile,BufRead .gtkrc,gtkrc^I^Isetf gtkrc
line 765: 
line 766: " Hack
line 767: au BufRead,BufNewFile *.hack,*.hackpartial^I^I^Isetf hack
line 768: 
line 769: " Haml
line 770: au BufNewFile,BufRead *.haml^I^I^Isetf haml
line 771: 
line 772: " Hamster Classic | Playground files
line 773: au BufNewFile,BufRead *.hsm^I^I^Isetf hamster
line 774: 
line 775: " Handlebars
line 776: au BufNewFile,BufRead *.hbs^I^I^Isetf handlebars
line 777: 
line 778: " Haskell
line 779: au BufNewFile,BufRead *.hs,*.hsc,*.hs-boot,*.hsig setf haskell
line 780: au BufNewFile,BufRead *.lhs^I^I^Isetf lhaskell
line 781: au BufNewFile,BufRead *.chs^I^I^Isetf chaskell
line 782: au BufNewFile,BufRead cabal.project^I^Isetf cabalproject
line 783: au BufNewFile,BufRead $HOME/.cabal/config^Isetf cabalconfig
line 784: au BufNewFile,BufRead cabal.config^I^Isetf cabalconfig
line 785: 
line 786: " Haste
line 787: au BufNewFile,BufRead *.ht^I^I^Isetf haste
line 788: au BufNewFile,BufRead *.htpp^I^I^Isetf hastepreproc
line 789: 
line 790: " HCL
line 791: au BufRead,BufNewFile *.hcl^I^I^Isetf hcl
line 792: 
line 793: " Hercules
line 794: au BufNewFile,BufRead *.vc,*.ev,*.sum,*.errsum^Isetf hercules
line 795: 
line 796: " HEEx
line 797: au BufRead,BufNewFile *.heex^I^I^Isetf heex
line 798: 
line 799: " HEX (Intel)
line 800: au BufNewFile,BufRead *.hex,*.h32^I^Isetf hex
line 801: 
line 802: " Hjson
line 803: au BufNewFile,BufRead *.hjson^I^I^Isetf hjson
line 804: 
line 805: " Hollywood
line 806: au BufRead,BufNewFile *.hws^I^I^Isetf hollywood
line 807: 
line 808: " Tilde (must be before HTML)
line 809: au BufNewFile,BufRead *.t.html^I^I^Isetf tilde
line 810: 
line 811: " HTML (.shtml and .stm for server side)
line 812: au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call dist#ft#FThtml()
line 813: 
line 814: " HTML with Ruby - eRuby
line 815: au BufNewFile,BufRead *.erb,*.rhtml^I^Isetf eruby
line 816: 
line 817: " HTML with M4
line 818: au BufNewFile,BufRead *.html.m4^I^I^Isetf htmlm4
line 819: 
line 820: " Some template.  Used to be HTML Cheetah.
line 821: au BufNewFile,BufRead *.tmpl^I^I^Isetf template
line 822: 
line 823: " Host config
line 824: au BufNewFile,BufRead */etc/host.conf^I^Isetf hostconf
line 825: 
line 826: " Hosts access
line 827: au BufNewFile,BufRead */etc/hosts.allow,*/etc/hosts.deny  setf hostsaccess
line 828: 
line 829: " Hyper Builder
line 830: au BufNewFile,BufRead *.hb^I^I^Isetf hb
line 831: 
line 832: " Httest
line 833: au BufNewFile,BufRead *.htt,*.htb^I^Isetf httest
line 834: 
line 835: " i3 (and sway)
line 836: au BufNewFile,BufRead */i3/config,*/sway/config^I^Isetf i3config
line 837: au BufNewFile,BufRead */.i3/config,*/.sway/config^Isetf i3config
line 838: 
line 839: " Icon
line 840: au BufNewFile,BufRead *.icn^I^I^Isetf icon
line 841: 
line 842: " IDL (Interface Description Language)
line 843: au BufNewFile,BufRead *.idl^I^I^Icall dist#ft#FTidl()
line 844: 
line 845: " Microsoft IDL (Interface Description Language)  Also *.idl
line 846: " MOF = WMI (Windows Management Instrumentation) Managed Object Format
line 847: au BufNewFile,BufRead *.odl,*.mof^I^Isetf msidl
line 848: 
line 849: " Icewm menu
line 850: au BufNewFile,BufRead */.icewm/menu^I^Isetf icemenu
line 851: 
line 852: " Indent profile (must come before IDL *.pro!)
line 853: au BufNewFile,BufRead .indent.pro^I^Isetf indent
line 854: au BufNewFile,BufRead indent.pro^I^Icall dist#ft#ProtoCheck('indent')
line 855: 
line 856: " IDL (Interactive Data Language)
line 857: au BufNewFile,BufRead *.pro^I^I^Icall dist#ft#ProtoCheck('idlang')
line 858: 
line 859: " Indent RC
line 860: au BufNewFile,BufRead indentrc^I^I^Isetf indent
line 861: 
line 862: " Inform
line 863: au BufNewFile,BufRead *.inf,*.INF^I^Isetf inform
line 864: 
line 865: " Initng
line 866: au BufNewFile,BufRead */etc/initng/*/*.i,*.ii^Isetf initng
line 867: 
line 868: " Innovation Data Processing
line 869: au BufRead,BufNewFile upstream.dat\c,upstream.*.dat\c,*.upstream.dat\c^Isetf upstreamdat
line 870: au BufRead,BufNewFile fdrupstream.log,upstream.log\c,upstream.*.log\c,*.upstream.log\c,UPSTREAM-*.log\c^Isetf upstreamlog
line 871: au BufRead,BufNewFile upstreaminstall.log\c,upstreaminstall.*.log\c,*.upstreaminstall.log\c setf upstreaminstalllog
line 872: au BufRead,BufNewFile usserver.log\c,usserver.*.log\c,*.usserver.log\c^Isetf usserverlog
line 873: au BufRead,BufNewFile usw2kagt.log\c,usw2kagt.*.log\c,*.usw2kagt.log\c^Isetf usw2kagtlog
line 874: 
line 875: " Ipfilter
line 876: au BufNewFile,BufRead ipf.conf,ipf6.conf,ipf.rules^Isetf ipfilter
line 877: 
line 878: " Informix 4GL (source - canonical, include file, I4GL+M4 preproc.)
line 879: au BufNewFile,BufRead *.4gl,*.4gh,*.m4gl^Isetf fgl
line 880: 
line 881: " .INI file for MSDOS
line 882: au BufNewFile,BufRead *.ini^I^I^Isetf dosini
line 883: 
line 884: " SysV Inittab
line 885: au BufNewFile,BufRead inittab^I^I^Isetf inittab
line 886: 
line 887: " Inno Setup
line 888: au BufNewFile,BufRead *.iss^I^I^Isetf iss
line 889: 
line 890: " J
line 891: au BufNewFile,BufRead *.ijs^I^I^Isetf j
line 892: 
line 893: " JAL
line 894: au BufNewFile,BufRead *.jal,*.JAL^I^Isetf jal
line 895: 
line 896: " Jam
line 897: au BufNewFile,BufRead *.jpl,*.jpr^I^Isetf jam
line 898: 
line 899: " Java
line 900: au BufNewFile,BufRead *.java,*.jav^I^Isetf java
line 901: 
line 902: " JavaCC
line 903: au BufNewFile,BufRead *.jj,*.jjt^I^Isetf javacc
line 904: 
line 905: " JavaScript, ECMAScript, ES module script, CommonJS script
line 906: au BufNewFile,BufRead *.js,*.javascript,*.es,*.mjs,*.cjs   setf javascript
line 907: 
line 908: " JavaScript with React
line 909: au BufNewFile,BufRead *.jsx^I^I^Isetf javascriptreact
line 910: 
line 911: " Java Server Pages
line 912: au BufNewFile,BufRead *.jsp^I^I^Isetf jsp
line 913: 
line 914: " Java Properties resource file (note: doesn't catch font.properties.pl)
line 915: au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_??^Isetf jproperties
line 916: 
line 917: " Jess
line 918: au BufNewFile,BufRead *.clp^I^I^Isetf jess
line 919: 
line 920: " Jgraph
line 921: au BufNewFile,BufRead *.jgr^I^I^Isetf jgraph
line 922: 
line 923: " Jovial
line 924: au BufNewFile,BufRead *.jov,*.j73,*.jovial^Isetf jovial
line 925: 
line 926: " JSON
line 927: au BufNewFile,BufRead *.json,*.jsonp,*.webmanifest^Isetf json
line 928: 
line 929: " JSON5
line 930: au BufNewFile,BufRead *.json5^I^I^Isetf json5
line 931: 
line 932: " JSON Patch (RFC 6902)
line 933: au BufNewFile,BufRead *.json-patch^I^I^Isetf json
line 934: 
line 935: " Jupyter Notebook is also json
line 936: au BufNewFile,BufRead *.ipynb^I^I^I^Isetf json
line 937: 
line 938: " Other files that look like json
line 939: au BufNewFile,BufRead .babelrc,.eslintrc,.prettierrc,.firebaserc  setf json
line 940: 
line 941: " JSONC
line 942: au BufNewFile,BufRead *.jsonc^I^I^Isetf jsonc
line 943: 
line 944: " Julia
line 945: au BufNewFile,BufRead *.jl^I^I^Isetf julia
line 946: 
line 947: " Kixtart
line 948: au BufNewFile,BufRead *.kix^I^I^Isetf kix
line 949: 
line 950: " Kuka Robot Language
line 951: au BufNewFile,BufRead *.src\c^I^I^Icall dist#ft#FTsrc()
line 952: au BufNewFile,BufRead *.dat\c^I^I^Icall dist#ft#FTdat()
line 953: au BufNewFile,BufRead *.sub\c^I^I^Isetf krl
line 954: 
line 955: " Kimwitu[++]
line 956: au BufNewFile,BufRead *.k^I^I^Isetf kwt
line 957: 
line 958: " Kivy
line 959: au BufNewFile,BufRead *.kv^I^I^Isetf kivy
line 960: 
line 961: " Kotlin
line 962: au BufNewFile,BufRead *.kt,*.ktm,*.kts^I^Isetf kotlin
line 963: 
line 964: " KDE script
line 965: au BufNewFile,BufRead *.ks^I^I^Isetf kscript
line 966: 
line 967: " Kconfig
line 968: au BufNewFile,BufRead Kconfig,Kconfig.debug^Isetf kconfig
line 969: 
line 970: " Lace (ISE)
line 971: au BufNewFile,BufRead *.ace,*.ACE^I^Isetf lace
line 972: 
line 973: " Latte
line 974: au BufNewFile,BufRead *.latte,*.lte^I^Isetf latte
line 975: 
line 976: " Limits
line 977: au BufNewFile,BufRead */etc/limits,*/etc/*limits.conf,*/etc/*limits.d/*.conf^Isetf limits
line 978: 
line 979: " LambdaProlog (see dist#ft#FTmod for *.mod)
line 980: au BufNewFile,BufRead *.sig^I^I^Isetf lprolog
line 981: 
line 982: " LDAP LDIF
line 983: au BufNewFile,BufRead *.ldif^I^I^Isetf ldif
line 984: 
line 985: " Ld loader
line 986: au BufNewFile,BufRead *.ld^I^I^Isetf ld
line 987: 
line 988: " Ledger
line 989: au BufRead,BufNewFile *.ldg,*.ledger,*.journal^I^I^Isetf ledger
line 990: 
line 991: " Less
line 992: au BufNewFile,BufRead *.less^I^I^Isetf less
line 993: 
line 994: " Lex
line 995: au BufNewFile,BufRead *.lex,*.l,*.lxx,*.l++^Isetf lex
line 996: 
line 997: " Libao
line 998: au BufNewFile,BufRead */etc/libao.conf,*/.libao^Isetf libao
line 999: 
line 1000: " Libsensors
line 1001: au BufNewFile,BufRead */etc/sensors.conf,*/etc/sensors3.conf^Isetf sensors
line 1002: 
line 1003: " LFTP
line 1004: au BufNewFile,BufRead lftp.conf,.lftprc,*lftp/rc^Isetf lftp
line 1005: 
line 1006: " Lifelines (or Lex for C++!)
line 1007: au BufNewFile,BufRead *.ll^I^I^Isetf lifelines
line 1008: 
line 1009: " Lilo: Linux loader
line 1010: au BufNewFile,BufRead lilo.conf^I^I^Isetf lilo
line 1011: 
line 1012: " Lisp (*.el = ELisp, *.cl = Common Lisp)
line 1013: " *.jl was removed, it's also used for Julia, better skip than guess wrong.
line 1014: if has("fname_case")
line 1015:   au BufNewFile,BufRead *.lsp,*.lisp,*.asd,*.el,*.cl,*.L,.emacs,.sawfishrc setf lisp
line 1016: else
line 1017:   au BufNewFile,BufRead *.lsp,*.lisp,*.asd,*.el,*.cl,.emacs,.sawfishrc setf lisp
line 1018: endif
line 1019: 
line 1020: " SBCL implementation of Common Lisp
line 1021: au BufNewFile,BufRead sbclrc,.sbclrc^I^Isetf lisp
line 1022: 
line 1023: " Liquid
line 1024: au BufNewFile,BufRead *.liquid^I^I^Isetf liquid
line 1025: 
line 1026: " Lite
line 1027: au BufNewFile,BufRead *.lite,*.lt^I^Isetf lite
line 1028: 
line 1029: " LiteStep RC files
line 1030: au BufNewFile,BufRead */LiteStep/*/*.rc^I^Isetf litestep
line 1031: 
line 1032: " Login access
line 1033: au BufNewFile,BufRead */etc/login.access^Isetf loginaccess
line 1034: 
line 1035: " Login defs
line 1036: au BufNewFile,BufRead */etc/login.defs^I^Isetf logindefs
line 1037: 
line 1038: " Logtalk
line 1039: au BufNewFile,BufRead *.lgt^I^I^Isetf logtalk
line 1040: 
line 1041: " LOTOS
line 1042: au BufNewFile,BufRead *.lot,*.lotos^I^Isetf lotos
line 1043: 
line 1044: " Lout (also: *.lt)
line 1045: au BufNewFile,BufRead *.lou,*.lout^I^Isetf lout
line 1046: 
line 1047: " Lua
line 1048: au BufNewFile,BufRead *.lua^I^I^Isetf lua
line 1049: 
line 1050: " Luarocks
line 1051: au BufNewFile,BufRead *.rockspec^I^Isetf lua
line 1052: 
line 1053: " Linden Scripting Language (Second Life)
line 1054: au BufNewFile,BufRead *.lsl^I^I^Isetf lsl
line 1055: 
line 1056: " Lynx style file (or LotusScript!)
line 1057: au BufNewFile,BufRead *.lss^I^I^Isetf lss
line 1058: 
line 1059: " M4
line 1060: au BufNewFile,BufRead *.m4 if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
line 1062: 
line 1063: " MaGic Point
line 1064: au BufNewFile,BufRead *.mgp^I^I^Isetf mgp
line 1065: 
line 1066: " Mail (for Elm, trn, mutt, muttng, rn, slrn, neomutt)
line 1067: au BufNewFile,BufRead snd.\d\+,.letter,.letter.\d\+,.followup,.article,.article.\d\+,pico.\d\+,mutt{ng,}-*-\w\+,mutt[[:alnum:]_-]\\\{6\},neomutt-*-\w\+,neomutt[[:alnum:]_-]\\\{6\},ae\d\+.txt,/tmp/SLRN[0-9A-Z.]\+,*.eml setf mail
line 1068: 
line 1069: " Mail aliases
line 1070: au BufNewFile,BufRead */etc/mail/aliases,*/etc/aliases^Isetf mailaliases
line 1071: 
line 1072: " Mailcap configuration file
line 1073: au BufNewFile,BufRead .mailcap,mailcap^I^Isetf mailcap
line 1074: 
line 1075: " Makefile
line 1076: au BufNewFile,BufRead *[mM]akefile,*.mk,*.mak,*.dsp setf make
line 1077: 
line 1078: " MakeIndex
line 1079: au BufNewFile,BufRead *.ist,*.mst^I^Isetf ist
line 1080: 
line 1081: " Mallard
line 1082: au BufNewFile,BufRead *.page^I^I^Isetf mallard
line 1083: 
line 1084: " Manpage
line 1085: au BufNewFile,BufRead *.man^I^I^Isetf nroff
line 1086: 
line 1087: " Man config
line 1088: au BufNewFile,BufRead */etc/man.conf,man.config^Isetf manconf
line 1089: 
line 1090: " Maple V
line 1091: au BufNewFile,BufRead *.mv,*.mpl,*.mws^I^Isetf maple
line 1092: 
line 1093: " Map (UMN mapserver config file)
line 1094: au BufNewFile,BufRead *.map^I^I^Isetf map
line 1095: 
line 1096: " Markdown
line 1097: au BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.mdwn,*.md  setf markdown
line 1098: 
line 1099: " Mason
line 1100: au BufNewFile,BufRead *.mason,*.mhtml,*.comp^Isetf mason
line 1101: 
line 1102: " Mathematica, Matlab, Murphi, Objective C or Octave
line 1103: au BufNewFile,BufRead *.m^I^I^Icall dist#ft#FTm()
line 1104: 
line 1105: " Mathematica notebook
line 1106: au BufNewFile,BufRead *.nb^I^I^Isetf mma
line 1107: 
line 1108: " Maya Extension Language
line 1109: au BufNewFile,BufRead *.mel^I^I^Isetf mel
line 1110: 
line 1111: " Mercurial (hg) commit file
line 1112: au BufNewFile,BufRead hg-editor-*.txt^I^Isetf hgcommit
line 1113: 
line 1114: " Mercurial config (looks like generic config file)
line 1115: au BufNewFile,BufRead *.hgrc,*hgrc^I^Isetf cfg
line 1116: 
line 1117: " Meson Build system config
line 1118: au BufNewFile,BufRead meson.build,meson_options.txt setf meson
line 1119: au BufNewFile,BufRead *.wrap^I^I^Isetf dosini
line 1120: 
line 1121: " Messages (logs mostly)
line 1122: au BufNewFile,BufRead */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*} setf messages
line 1123: 
line 1124: " Metafont
line 1125: au BufNewFile,BufRead *.mf^I^I^Isetf mf
line 1126: 
line 1127: " MetaPost
line 1128: au BufNewFile,BufRead *.mp^I^I^Isetf mp
line 1129: 
line 1130: " MGL
line 1131: au BufNewFile,BufRead *.mgl^I^I^Isetf mgl
line 1132: 
line 1133: " MIX - Knuth assembly
line 1134: au BufNewFile,BufRead *.mix,*.mixal^I^Isetf mix
line 1135: 
line 1136: " MMIX or VMS makefile
line 1137: au BufNewFile,BufRead *.mms^I^I^Icall dist#ft#FTmms()
line 1138: 
line 1139: " Symbian meta-makefile definition (MMP)
line 1140: au BufNewFile,BufRead *.mmp^I^I^Isetf mmp
line 1141: 
line 1142: " ABB Rapid, Modula-2, Modsim III or LambdaProlog
line 1143: au BufNewFile,BufRead *.mod\c^I^I^Icall dist#ft#FTmod()
line 1144: 
line 1145: " Modula-2  (.md removed in favor of Markdown, see dist#ft#FTmod for *.MOD)
line 1146: au BufNewFile,BufRead *.m2,*.DEF,*.mi^I^Isetf modula2
line 1147: 
line 1148: " Modula-3 (.m3, .i3, .mg, .ig)
line 1149: au BufNewFile,BufRead *.[mi][3g]^I^Isetf modula3
line 1150: 
line 1151: " Monk
line 1152: au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc^Isetf monk
line 1153: 
line 1154: " MOO
line 1155: au BufNewFile,BufRead *.moo^I^I^Isetf moo
line 1156: 
line 1157: " Modconf
line 1158: au BufNewFile,BufRead */etc/modules.conf,*/etc/modules,*/etc/conf.modules setf modconf
line 1159: 
line 1160: " MPD is based on XML
line 1161: au BufNewFile,BufRead *.mpd^I^I^Isetf xml
line 1162: 
line 1163: " Mplayer config
line 1164: au BufNewFile,BufRead mplayer.conf,*/.mplayer/config^Isetf mplayerconf
line 1165: 
line 1166: " Motorola S record
line 1167: au BufNewFile,BufRead *.s19,*.s28,*.s37,*.mot,*.srec^Isetf srec
line 1168: 
line 1169: " Mrxvtrc
line 1170: au BufNewFile,BufRead mrxvtrc,.mrxvtrc^I^Isetf mrxvtrc
line 1171: 
line 1172: " Msql
line 1173: au BufNewFile,BufRead *.msql^I^I^Isetf msql
line 1174: 
line 1175: " Mysql
line 1176: au BufNewFile,BufRead *.mysql^I^I^Isetf mysql
line 1177: 
line 1178: " Tcl Shell RC file
line 1179: au BufNewFile,BufRead tclsh.rc^I^I^Isetf tcl
line 1180: 
line 1181: " M$ Resource files
line 1182: " /etc/Muttrc.d/file.rc is muttrc
line 1183: au BufNewFile,BufRead *.rc,*.rch if expand("<afile>") !~ "/etc/Muttrc.d/" |   setf rc | endif
line 1187: 
line 1188: " MuPAD source
line 1189: au BufRead,BufNewFile *.mu^I^I^Isetf mupad
line 1190: 
line 1191: " Mush
line 1192: au BufNewFile,BufRead *.mush^I^I^Isetf mush
line 1193: 
line 1194: " Mutt setup file (also for Muttng)
line 1195: au BufNewFile,BufRead Mutt{ng,}rc^I^Isetf muttrc
line 1196: 
line 1197: " N1QL
line 1198: au BufRead,BufNewfile *.n1ql,*.nql^I^Isetf n1ql
line 1199: 
line 1200: " Nano
line 1201: au BufNewFile,BufRead */etc/nanorc,*.nanorc^Isetf nanorc
line 1202: 
line 1203: " Nastran input/DMAP
line 1204: "au BufNewFile,BufRead *.dat^I^I^Isetf nastran
line 1205: 
line 1206: " Natural
line 1207: au BufNewFile,BufRead *.NS[ACGLMNPS]^I^Isetf natural
line 1208: 
line 1209: " Noemutt setup file
line 1210: au BufNewFile,BufRead Neomuttrc^I^I^Isetf neomuttrc
line 1211: 
line 1212: " Netrc
line 1213: au BufNewFile,BufRead .netrc^I^I^Isetf netrc
line 1214: 
line 1215: " Nginx
line 1216: au BufNewFile,BufRead *.nginx,nginx*.conf,*nginx.conf,*/etc/nginx/*,*/usr/local/nginx/conf/*,*/nginx/*.conf^I^I^Isetf nginx
line 1217: 
line 1218: " Ninja file
line 1219: au BufNewFile,BufRead *.ninja^I^I^Isetf ninja
line 1220: 
line 1221: " Nix
line 1222: au BufRead,BufNewFile *.nix^I^I^Isetf nix
line 1223: 
line 1224: " NPM RC file
line 1225: au BufNewFile,BufRead npmrc,.npmrc^I^Isetf dosini
line 1226: 
line 1227: " Novell netware batch files
line 1228: au BufNewFile,BufRead *.ncf^I^I^Isetf ncf
line 1229: 
line 1230: " Nroff/Troff (*.ms and *.t are checked below)
line 1231: au BufNewFile,BufRead *.me if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
line 1235: au BufNewFile,BufRead *.tr,*.nr,*.roff,*.tmac,*.mom^Isetf nroff
line 1236: au BufNewFile,BufRead *.[1-9]^I^I^Icall dist#ft#FTnroff()
line 1237: 
line 1238: " Nroff or Objective C++
line 1239: au BufNewFile,BufRead *.mm^I^I^Icall dist#ft#FTmm()
line 1240: 
line 1241: " Not Quite C
line 1242: au BufNewFile,BufRead *.nqc^I^I^Isetf nqc
line 1243: 
line 1244: " NSE - Nmap Script Engine - uses Lua syntax
line 1245: au BufNewFile,BufRead *.nse^I^I^Isetf lua
line 1246: 
line 1247: " NSIS
line 1248: au BufNewFile,BufRead *.nsi,*.nsh^I^Isetf nsis
line 1249: 
line 1250: " OCaml
line 1251: au BufNewFile,BufRead *.ml,*.mli,*.mll,*.mly,.ocamlinit,*.mlt,*.mlp,*.mlip,*.mli.cppo,*.ml.cppo setf ocaml
line 1252: 
line 1253: " Occam
line 1254: au BufNewFile,BufRead *.occ^I^I^Isetf occam
line 1255: 
line 1256: " Octave
line 1257: au BufNewFile,BufRead octave.conf,.octaverc,octaverc^Isetf octave
line 1258: 
line 1259: " Omnimark
line 1260: au BufNewFile,BufRead *.xom,*.xin^I^Isetf omnimark
line 1261: 
line 1262: " OPAM
line 1263: au BufNewFile,BufRead opam,*.opam,*.opam.template setf opam
line 1264: 
line 1265: " OpenFOAM
line 1266: au BufNewFile,BufRead [a-zA-Z0-9]*Dict\(.*\)\=,[a-zA-Z]*Properties\(.*\)\=,*Transport\(.*\),fvSchemes,fvSolution,fvConstrains,fvModels,*/constant/g,*/0\(\.orig\)\=/* call dist#ft#FTfoam()
line 1267: 
line 1268: " OpenROAD
line 1269: au BufNewFile,BufRead *.or^I^I^Isetf openroad
line 1270: 
line 1271: " OPL
line 1272: au BufNewFile,BufRead *.[Oo][Pp][Ll]^I^Isetf opl
line 1273: 
line 1274: " OpenSCAD
line 1275: au BufNewFile,BufRead *.scad^I^Isetf openscad^I^I
line 1276: 
line 1277: " Oracle config file
line 1278: au BufNewFile,BufRead *.ora^I^I^Isetf ora
line 1279: 
line 1280: " Org
line 1281: au BufNewFile,BufRead *.org,*.org_archive^Isetf org
line 1282: 
line 1283: " Packet filter conf
line 1284: au BufNewFile,BufRead pf.conf^I^I^Isetf pf
line 1285: 
line 1286: " Pacman Config (close enough to dosini)
line 1287: au BufNewFile,BufRead */etc/pacman.conf^I^Isetf dosini
line 1288: 
line 1289: " Pacman hooks
line 1290: au BufNewFile,BufRead *.hook if getline(1) == '[Trigger]' |   setf dosini | endif
line 1294: 
line 1295: " Pam conf
line 1296: au BufNewFile,BufRead */etc/pam.conf^I^I^Isetf pamconf
line 1297: 
line 1298: " Pam environment
line 1299: au BufNewFile,BufRead pam_env.conf,.pam_environment^Isetf pamenv
line 1300: 
line 1301: " PApp
line 1302: au BufNewFile,BufRead *.papp,*.pxml,*.pxsl^Isetf papp
line 1303: 
line 1304: " Password file
line 1305: au BufNewFile,BufRead */etc/passwd,*/etc/passwd-,*/etc/passwd.edit,*/etc/shadow,*/etc/shadow-,*/etc/shadow.edit,*/var/backups/passwd.bak,*/var/backups/shadow.bak setf passwd
line 1306: 
line 1307: " Pascal (also *.p, *.pp, *.inc)
line 1308: au BufNewFile,BufRead *.pas^I^I^Isetf pascal
line 1309: 
line 1310: " Pascal or Puppet manifest
line 1311: au BufNewFile,BufRead *.pp^I^I^Icall dist#ft#FTpp()
line 1312: 
line 1313: " Delphi or Lazarus program file
line 1314: au BufNewFile,BufRead *.dpr,*.lpr^I^Isetf pascal
line 1315: 
line 1316: " Free Pascal makefile definition file
line 1317: au BufNewFile,BufRead *.fpc^I^I^Isetf fpcmake
line 1318: 
line 1319: " PDF
line 1320: au BufNewFile,BufRead *.pdf^I^I^Isetf pdf
line 1321: 
line 1322: " PCMK - HAE - crm configure edit
line 1323: au BufNewFile,BufRead *.pcmk^I^I^Isetf pcmk
line 1324: 
line 1325: " Perl
line 1326: if has("fname_case")
line 1327:   au BufNewFile,BufRead *.pl,*.PL^I^Icall dist#ft#FTpl()
line 1328: else
line 1329:   au BufNewFile,BufRead *.pl^I^I^Icall dist#ft#FTpl()
line 1330: endif
line 1331: au BufNewFile,BufRead *.plx,*.al,*.psgi^I^Isetf perl
line 1332: 
line 1333: " Perl, XPM or XPM2
line 1334: au BufNewFile,BufRead *.pm if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
line 1342: 
line 1343: " Perl POD
line 1344: au BufNewFile,BufRead *.pod^I^I^Isetf pod
line 1345: 
line 1346: " Php, php3, php4, etc.
line 1347: " Also Phtml (was used for PHP 2 in the past).
line 1348: " Also .ctp for Cake template file.
line 1349: " Also .phpt for php tests.
line 1350: au BufNewFile,BufRead *.php,*.php\d,*.phtml,*.ctp,*.phpt^Isetf php
line 1351: 
line 1352: " PHP config
line 1353: au BufNewFile,BufRead php.ini-*^I^I^Isetf dosini
line 1354: 
line 1355: " Pike and Cmod
line 1356: au BufNewFile,BufRead *.pike,*.pmod^I^Isetf pike
line 1357: au BufNewFile,BufRead *.cmod^I^I^Isetf cmod
line 1358: 
line 1359: " Pinfo config
line 1360: au BufNewFile,BufRead */etc/pinforc,*/.pinforc^Isetf pinfo
line 1361: 
line 1362: " Palm Resource compiler
line 1363: au BufNewFile,BufRead *.rcp^I^I^Isetf pilrc
line 1364: 
line 1365: " Pine config
line 1366: au BufNewFile,BufRead .pinerc,pinerc,.pinercex,pinercex^I^Isetf pine
line 1367: 
line 1368: " Pipenv Pipfiles
line 1369: au BufNewFile,BufRead Pipfile^I^I^Isetf toml
line 1370: au BufNewFile,BufRead Pipfile.lock^I^Isetf json
line 1371: 
line 1372: " PL/1, PL/I
line 1373: au BufNewFile,BufRead *.pli,*.pl1^I^Isetf pli
line 1374: 
line 1375: " PL/M (also: *.inp)
line 1376: au BufNewFile,BufRead *.plm,*.p36,*.pac^I^Isetf plm
line 1377: 
line 1378: " PL/SQL
line 1379: au BufNewFile,BufRead *.pls,*.plsql^I^Isetf plsql
line 1380: 
line 1381: " PLP
line 1382: au BufNewFile,BufRead *.plp^I^I^Isetf plp
line 1383: 
line 1384: " PO and PO template (GNU gettext)
line 1385: au BufNewFile,BufRead *.po,*.pot^I^Isetf po
line 1386: 
line 1387: " Postfix main config
line 1388: au BufNewFile,BufRead main.cf^I^I^Isetf pfmain
line 1389: 
line 1390: " PostScript (+ font files, encapsulated PostScript, Adobe Illustrator)
line 1391: au BufNewFile,BufRead *.ps,*.pfa,*.afm,*.eps,*.epsf,*.epsi,*.ai^I  setf postscr
line 1392: 
line 1393: " PostScript Printer Description
line 1394: au BufNewFile,BufRead *.ppd^I^I^Isetf ppd
line 1395: 
line 1396: " Povray
line 1397: au BufNewFile,BufRead *.pov^I^I^Isetf pov
line 1398: 
line 1399: " Povray configuration
line 1400: au BufNewFile,BufRead .povrayrc^I^I^Isetf povini
line 1401: 
line 1402: " Povray, Pascal, PHP or assembly
line 1403: au BufNewFile,BufRead *.inc^I^I^Icall dist#ft#FTinc()
line 1404: 
line 1405: " PowerShell
line 1406: au BufNewFile,BufRead^I*.ps1,*.psd1,*.psm1,*.pssc^Isetf ps1
line 1407: au BufNewFile,BufRead^I*.ps1xml^I^I^Isetf ps1xml
line 1408: au BufNewFile,BufRead^I*.cdxml,*.psc1^I^I^Isetf xml
line 1409: 
line 1410: " Printcap and Termcap
line 1411: au BufNewFile,BufRead *printcap let b:ptcap_type = "print" | setf ptcap
line 1413: au BufNewFile,BufRead *termcap let b:ptcap_type = "term" | setf ptcap
line 1415: 
line 1416: " Prisma
line 1417: au BufRead,BufNewFile *.prisma^I^I^Isetf prisma
line 1418: 
line 1419: " PCCTS / ANTLR
line 1420: "au BufNewFile,BufRead *.g^I^I^Isetf antlr
line 1421: au BufNewFile,BufRead *.g^I^I^Isetf pccts
line 1422: 
line 1423: " PPWizard
line 1424: au BufNewFile,BufRead *.it,*.ih^I^I^Isetf ppwiz
line 1425: 
line 1426: " Pug
line 1427: au BufRead,BufNewFile *.pug^I^I^Isetf pug
line 1428: 
line 1429: " Puppet
line 1430: au BufNewFile,BufRead Puppetfile^I^Isetf ruby
line 1431: 
line 1432: " Embedded Puppet
line 1433: au BufNewFile,BufRead *.epp^I^I^Isetf epuppet
line 1434: 
line 1435: " Obj 3D file format
line 1436: " TODO: is there a way to avoid MS-Windows Object files?
line 1437: au BufNewFile,BufRead *.obj^I^I^Isetf obj
line 1438: 
line 1439: " Oracle Pro*C/C++
line 1440: au BufNewFile,BufRead *.pc^I^I^Isetf proc
line 1441: 
line 1442: " Privoxy actions file
line 1443: au BufNewFile,BufRead *.action^I^I^Isetf privoxy
line 1444: 
line 1445: " Procmail
line 1446: au BufNewFile,BufRead .procmail,.procmailrc^Isetf procmail
line 1447: 
line 1448: " Progress or CWEB
line 1449: au BufNewFile,BufRead *.w^I^I^Icall dist#ft#FTprogress_cweb()
line 1450: 
line 1451: " Progress or assembly
line 1452: au BufNewFile,BufRead *.i^I^I^Icall dist#ft#FTprogress_asm()
line 1453: 
line 1454: " Progress or Pascal
line 1455: au BufNewFile,BufRead *.p^I^I^Icall dist#ft#FTprogress_pascal()
line 1456: 
line 1457: " Software Distributor Product Specification File (POSIX 1387.2-1995)
line 1458: au BufNewFile,BufRead *.psf^I^I^Isetf psf
line 1459: au BufNewFile,BufRead INDEX,INFO if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
line 1463: 
line 1464: " Prolog
line 1465: au BufNewFile,BufRead *.pdb^I^I^Isetf prolog
line 1466: 
line 1467: " Promela
line 1468: au BufNewFile,BufRead *.pml^I^I^Isetf promela
line 1469: 
line 1470: " Property Specification Language (PSL)
line 1471: au BufNewFile,BufRead *.psl^I^I^Isetf psl
line 1472: 
line 1473: " Google protocol buffers
line 1474: au BufNewFile,BufRead *.proto^I^I^Isetf proto
line 1475: au BufNewFile,BufRead *.pbtxt^I^I^Isetf pbtxt
line 1476: 
line 1477: " Poke
line 1478: au BufNewFile,BufRead *.pk^I^I^Isetf poke
line 1479: 
line 1480: " Protocols
line 1481: au BufNewFile,BufRead */etc/protocols^I^Isetf protocols
line 1482: 
line 1483: " Pyret
line 1484: au BufNewFile,BufRead *.arr^I^I^Isetf pyret
line 1485: 
line 1486: " Pyrex
line 1487: au BufNewFile,BufRead *.pyx,*.pxd^I^Isetf pyrex
line 1488: 
line 1489: " Python, Python Shell Startup and Python Stub Files
line 1490: " Quixote (Python-based web framework)
line 1491: au BufNewFile,BufRead *.py,*.pyw,.pythonstartup,.pythonrc  setf python
line 1492: au BufNewFile,BufRead *.ptl,*.pyi,SConstruct^I^I   setf python
line 1493: 
line 1494: " QL
line 1495: au BufRead,BufNewFile *.ql,*.qll^I^Isetf ql
line 1496: 
line 1497: " Radiance
line 1498: au BufNewFile,BufRead *.rad,*.mat^I^Isetf radiance
line 1499: 
line 1500: " Raku (formerly Perl6)
line 1501: au BufNewFile,BufRead *.pm6,*.p6,*.t6,*.pod6,*.raku,*.rakumod,*.rakudoc,*.rakutest  setf raku
line 1502: 
line 1503: " Ratpoison config/command files
line 1504: au BufNewFile,BufRead .ratpoisonrc,ratpoisonrc^Isetf ratpoison
line 1505: 
line 1506: " RCS file
line 1507: au BufNewFile,BufRead *\,v^I^I^Isetf rcs
line 1508: 
line 1509: " Readline
line 1510: au BufNewFile,BufRead .inputrc,inputrc^I^Isetf readline
line 1511: 
line 1512: " Registry for MS-Windows
line 1513: au BufNewFile,BufRead *.reg if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
line 1515: 
line 1516: " Renderman Interface Bytestream
line 1517: au BufNewFile,BufRead *.rib^I^I^Isetf rib
line 1518: 
line 1519: " Rego Policy Language
line 1520: au BufNewFile,BufRead *.rego^I^I^Isetf rego
line 1521: 
line 1522: " Rexx
line 1523: au BufNewFile,BufRead *.rex,*.orx,*.rxo,*.rxj,*.jrexx,*.rexxj,*.rexx,*.testGroup,*.testUnit^Isetf rexx
line 1524: 
line 1525: " R Help file
line 1526: if has("fname_case")
line 1527:   au BufNewFile,BufRead *.rd,*.Rd^I^Isetf rhelp
line 1528: else
line 1529:   au BufNewFile,BufRead *.rd^I^I^Isetf rhelp
line 1530: endif
line 1531: 
line 1532: " R noweb file
line 1533: if has("fname_case")
line 1534:   au BufNewFile,BufRead *.Rnw,*.rnw,*.Snw,*.snw^I^Isetf rnoweb
line 1535: else
line 1536:   au BufNewFile,BufRead *.rnw,*.snw^I^I^Isetf rnoweb
line 1537: endif
line 1538: 
line 1539: " R Markdown file
line 1540: if has("fname_case")
line 1541:   au BufNewFile,BufRead *.Rmd,*.rmd,*.Smd,*.smd^I^Isetf rmd
line 1542: else
line 1543:   au BufNewFile,BufRead *.rmd,*.smd^I^I^Isetf rmd
line 1544: endif
line 1545: 
line 1546: " RSS looks like XML
line 1547: au BufNewFile,BufRead *.rss^I^I^I^Isetf xml
line 1548: 
line 1549: " R reStructuredText file
line 1550: if has("fname_case")
line 1551:   au BufNewFile,BufRead *.Rrst,*.rrst,*.Srst,*.srst^Isetf rrst
line 1552: else
line 1553:   au BufNewFile,BufRead *.rrst,*.srst^I^I^Isetf rrst
line 1554: endif
line 1555: 
line 1556: " Rexx, Rebol or R
line 1557: au BufNewFile,BufRead *.r,*.R^I^I^I^Icall dist#ft#FTr()
line 1558: 
line 1559: " Remind
line 1560: au BufNewFile,BufRead .reminders,*.remind,*.rem^I^Isetf remind
line 1561: 
line 1562: " ReScript
line 1563: au BufNewFile,BufRead *.res,*.resi^I^I^Isetf rescript
line 1564: 
line 1565: " Resolv.conf
line 1566: au BufNewFile,BufRead resolv.conf^I^Isetf resolv
line 1567: 
line 1568: " Relax NG Compact
line 1569: au BufNewFile,BufRead *.rnc^I^I^Isetf rnc
line 1570: 
line 1571: " Relax NG XML
line 1572: au BufNewFile,BufRead *.rng^I^I^Isetf rng
line 1573: 
line 1574: " RPL/2
line 1575: au BufNewFile,BufRead *.rpl^I^I^Isetf rpl
line 1576: 
line 1577: " Robots.txt
line 1578: au BufNewFile,BufRead robots.txt^I^Isetf robots
line 1579: 
line 1580: " Rpcgen
line 1581: au BufNewFile,BufRead *.x^I^I^Isetf rpcgen
line 1582: 
line 1583: " MikroTik RouterOS script
line 1584: au BufRead,BufNewFile *.rsc^I^I^Isetf routeros
line 1585: 
line 1586: " reStructuredText Documentation Format
line 1587: au BufNewFile,BufRead *.rst^I^I^Isetf rst
line 1588: 
line 1589: " RTF
line 1590: au BufNewFile,BufRead *.rtf^I^I^Isetf rtf
line 1591: 
line 1592: " Interactive Ruby shell
line 1593: au BufNewFile,BufRead .irbrc,irbrc^I^Isetf ruby
line 1594: 
line 1595: " Ruby
line 1596: au BufNewFile,BufRead *.rb,*.rbw^I^Isetf ruby
line 1597: 
line 1598: " RubyGems
line 1599: au BufNewFile,BufRead *.gemspec^I^I^Isetf ruby
line 1600: 
line 1601: " RBS (Ruby Signature)
line 1602: au BufNewFile,BufRead *.rbs^I^I^Isetf rbs
line 1603: 
line 1604: " Rackup
line 1605: au BufNewFile,BufRead *.ru^I^I^Isetf ruby
line 1606: 
line 1607: " Bundler
line 1608: au BufNewFile,BufRead Gemfile^I^I^Isetf ruby
line 1609: 
line 1610: " Ruby on Rails
line 1611: au BufNewFile,BufRead *.builder,*.rxml,*.rjs^Isetf ruby
line 1612: 
line 1613: " Rantfile and Rakefile is like Ruby
line 1614: au BufNewFile,BufRead [rR]antfile,*.rant,[rR]akefile,*.rake^Isetf ruby
line 1615: 
line 1616: " Rust
line 1617: au BufNewFile,BufRead *.rs^I^I^Isetf rust
line 1618: au BufNewFile,BufRead Cargo.lock,*/.cargo/config,*/.cargo/credentials^Isetf toml
line 1619: 
line 1620: " S-lang (or shader language, or SmallLisp)
line 1621: au BufNewFile,BufRead *.sl^I^I^Isetf slang
line 1622: 
line 1623: " Samba config
line 1624: au BufNewFile,BufRead smb.conf^I^I^Isetf samba
line 1625: 
line 1626: " SAS script
line 1627: au BufNewFile,BufRead *.sas^I^I^Isetf sas
line 1628: 
line 1629: " Sass
line 1630: au BufNewFile,BufRead *.sass^I^I^Isetf sass
line 1631: 
line 1632: " Sather
line 1633: au BufNewFile,BufRead *.sa^I^I^Isetf sather
line 1634: 
line 1635: " Scala
line 1636: au BufNewFile,BufRead *.scala^I^I^Isetf scala
line 1637: 
line 1638: " SBT - Scala Build Tool
line 1639: au BufNewFile,BufRead *.sbt^I^I^Isetf sbt
line 1640: 
line 1641: " SuperCollider
line 1642: au BufNewFile,BufRead *.sc^I^I^Icall dist#ft#FTsc()
line 1643: 
line 1644: au BufNewFile,BufRead *.quark^I^I^Isetf supercollider
line 1645: 
line 1646: " scdoc
line 1647: au BufNewFile,BufRead *.scd^I^I^Icall dist#ft#FTscd()
line 1648: 
line 1649: " Scilab
line 1650: au BufNewFile,BufRead *.sci,*.sce^I^Isetf scilab
line 1651: 
line 1652: 
line 1653: " SCSS
line 1654: au BufNewFile,BufRead *.scss^I^I^Isetf scss
line 1655: 
line 1656: " SD: Streaming Descriptors
line 1657: au BufNewFile,BufRead *.sd^I^I^Isetf sd
line 1658: 
line 1659: " SDL
line 1660: au BufNewFile,BufRead *.sdl,*.pr^I^Isetf sdl
line 1661: 
line 1662: " sed
line 1663: au BufNewFile,BufRead *.sed^I^I^Isetf sed
line 1664: 
line 1665: " svelte
line 1666: au BufNewFile,BufRead *.svelte^I^I^Isetf svelte
line 1667: 
line 1668: " Sieve (RFC 3028, 5228)
line 1669: au BufNewFile,BufRead *.siv,*.sieve^I^Isetf sieve
line 1670: 
line 1671: " Sendmail
line 1672: au BufNewFile,BufRead sendmail.cf^I^Isetf sm
line 1673: 
line 1674: " Sendmail .mc files are actually m4.  Could also be MS Message text file.
line 1675: au BufNewFile,BufRead *.mc^I^I^Icall dist#ft#McSetf()
line 1676: 
line 1677: " Services
line 1678: au BufNewFile,BufRead */etc/services^I^Isetf services
line 1679: 
line 1680: " Service Location config
line 1681: au BufNewFile,BufRead */etc/slp.conf^I^Isetf slpconf
line 1682: 
line 1683: " Service Location registration
line 1684: au BufNewFile,BufRead */etc/slp.reg^I^Isetf slpreg
line 1685: 
line 1686: " Service Location SPI
line 1687: au BufNewFile,BufRead */etc/slp.spi^I^Isetf slpspi
line 1688: 
line 1689: " Setserial config
line 1690: au BufNewFile,BufRead */etc/serial.conf^I^Isetf setserial
line 1691: 
line 1692: " SGML
line 1693: au BufNewFile,BufRead *.sgm,*.sgml if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
line 1703: 
line 1704: " SGMLDECL
line 1705: au BufNewFile,BufRead *.decl,*.dcl,*.dec if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
line 1709: 
line 1710: " SGML catalog file
line 1711: au BufNewFile,BufRead catalog^I^I^Isetf catalog
line 1712: 
line 1713: " Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.
line 1714: " Gentoo ebuilds, Arch Linux PKGBUILDs and Alpine Linux APKBUILDs are actually
line 1715: " bash scripts.
line 1716: " NOTE: Patterns ending in a star are further down, these have lower priority.
line 1717: au BufNewFile,BufRead .bashrc,bashrc,bash.bashrc,.bash[_-]profile,.bash[_-]logout,.bash[_-]aliases,bash-fc[-.],*.ebuild,*.bash,*.eclass,PKGBUILD,APKBUILD call dist#ft#SetFileTypeSH("bash")
line 1718: au BufNewFile,BufRead .kshrc,*.ksh call dist#ft#SetFileTypeSH("ksh")
line 1719: au BufNewFile,BufRead */etc/profile,.profile,*.sh,*.env call dist#ft#SetFileTypeSH(getline(1))
line 1720: 
line 1721: " Shell script (Arch Linux) or PHP file (Drupal)
line 1722: au BufNewFile,BufRead *.install if getline(1) =~ '<?php' |   setf php | else |   call dist#ft#SetFileTypeSH("bash") | endif
line 1728: 
line 1729: " tcsh scripts (patterns ending in a star further below)
line 1730: au BufNewFile,BufRead .tcshrc,*.tcsh,tcsh.tcshrc,tcsh.login^Icall dist#ft#SetFileTypeShell("tcsh")
line 1731: 
line 1732: " csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)
line 1733: " (patterns ending in a start further below)
line 1734: au BufNewFile,BufRead .login,.cshrc,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call dist#ft#CSH()
line 1735: 
line 1736: " Zig
line 1737: au BufNewFile,BufRead *.zig^I^I^Isetf zig
line 1738: 
line 1739: " Z-Shell script (patterns ending in a star further below)
line 1740: au BufNewFile,BufRead .zprofile,*/etc/zprofile,.zfbfmarks  setf zsh
line 1741: au BufNewFile,BufRead .zshrc,.zshenv,.zlogin,.zlogout,.zcompdump setf zsh
line 1742: au BufNewFile,BufRead *.zsh^I^I^Isetf zsh
line 1743: 
line 1744: " Scheme
line 1745: au BufNewFile,BufRead *.scm,*.ss,*.sld,*.rkt,*.rktd,*.rktl^Isetf scheme
line 1746: 
line 1747: " Screen RC
line 1748: au BufNewFile,BufRead .screenrc,screenrc^Isetf screen
line 1749: 
line 1750: " Sexplib
line 1751: au BufNewFile,BufRead *.sexp setf sexplib
line 1752: 
line 1753: " Simula
line 1754: au BufNewFile,BufRead *.sim^I^I^Isetf simula
line 1755: 
line 1756: " SINDA
line 1757: au BufNewFile,BufRead *.sin,*.s85^I^Isetf sinda
line 1758: 
line 1759: " SiSU
line 1760: au BufNewFile,BufRead *.sst,*.ssm,*.ssi,*.-sst,*._sst setf sisu
line 1761: au BufNewFile,BufRead *.sst.meta,*.-sst.meta,*._sst.meta setf sisu
line 1762: 
line 1763: " SKILL
line 1764: au BufNewFile,BufRead *.il,*.ils,*.cdf^I^Isetf skill
line 1765: 
line 1766: " SLRN
line 1767: au BufNewFile,BufRead .slrnrc^I^I^Isetf slrnrc
line 1768: au BufNewFile,BufRead *.score^I^I^Isetf slrnsc
line 1769: 
line 1770: " Smalltalk (and TeX)
line 1771: au BufNewFile,BufRead *.st^I^I^Isetf st
line 1772: au BufNewFile,BufRead *.cls if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
line 1780: 
line 1781: " Smarty templates
line 1782: au BufNewFile,BufRead *.tpl^I^I^Isetf smarty
line 1783: 
line 1784: " SMIL or XML
line 1785: au BufNewFile,BufRead *.smil if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
line 1791: 
line 1792: " SMIL or SNMP MIB file
line 1793: au BufNewFile,BufRead *.smi if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
line 1799: 
line 1800: " SMITH
line 1801: au BufNewFile,BufRead *.smt,*.smith^I^Isetf smith
line 1802: 
line 1803: " Snobol4 and spitbol
line 1804: au BufNewFile,BufRead *.sno,*.spt^I^Isetf snobol4
line 1805: 
line 1806: " SNMP MIB files
line 1807: au BufNewFile,BufRead *.mib,*.my^I^Isetf mib
line 1808: 
line 1809: " Snort Configuration
line 1810: au BufNewFile,BufRead *.hog,snort.conf,vision.conf^Isetf hog
line 1811: au BufNewFile,BufRead *.rules^I^I^Icall dist#ft#FTRules()
line 1812: 
line 1813: " Solidity
line 1814: au BufRead,BufNewFile *.sol^I^I^Isetf solidity
line 1815: 
line 1816: " SPARQL queries
line 1817: au BufNewFile,BufRead *.rq,*.sparql^I^Isetf sparql
line 1818: 
line 1819: " Spec (Linux RPM)
line 1820: au BufNewFile,BufRead *.spec^I^I^Isetf spec
line 1821: 
line 1822: " Speedup (AspenTech plant simulator)
line 1823: au BufNewFile,BufRead *.speedup,*.spdata,*.spd^Isetf spup
line 1824: 
line 1825: " Slice
line 1826: au BufNewFile,BufRead *.ice^I^I^Isetf slice
line 1827: 
line 1828: " Microsoft Visual Studio Solution
line 1829: au BufNewFile,BufRead *.sln^I^I^Isetf solution
line 1830: au BufNewFile,BufRead *.slnf^I^I^Isetf json
line 1831: 
line 1832: " Spice
line 1833: au BufNewFile,BufRead *.sp,*.spice^I^Isetf spice
line 1834: 
line 1835: " Spyce
line 1836: au BufNewFile,BufRead *.spy,*.spi^I^Isetf spyce
line 1837: 
line 1838: " Squid
line 1839: au BufNewFile,BufRead squid.conf^I^Isetf squid
line 1840: 
line 1841: " SQL for Oracle Designer
line 1842: au BufNewFile,BufRead *.tyb,*.typ,*.tyc,*.pkb,*.pks^Isetf sql
line 1843: 
line 1844: " SQL
line 1845: au BufNewFile,BufRead *.sql^I^I^Icall dist#ft#SQL()
line 1846: 
line 1847: " SQLJ
line 1848: au BufNewFile,BufRead *.sqlj^I^I^Isetf sqlj
line 1849: 
line 1850: " SQR
line 1851: au BufNewFile,BufRead *.sqr,*.sqi^I^Isetf sqr
line 1852: 
line 1853: " Squirrel
line 1854: au BufNewFile,BufRead *.nut^I^I^Isetf squirrel
line 1855: 
line 1856: " OpenSSH configuration
line 1857: au BufNewFile,BufRead ssh_config,*/.ssh/config,*/.ssh/*.conf^Isetf sshconfig
line 1858: au BufNewFile,BufRead */etc/ssh/ssh_config.d/*.conf^I^Isetf sshconfig
line 1859: 
line 1860: " OpenSSH server configuration
line 1861: au BufNewFile,BufRead sshd_config^I^I^Isetf sshdconfig
line 1862: au BufNewFile,BufRead */etc/ssh/sshd_config.d/*.conf^Isetf sshdconfig
line 1863: 
line 1864: " Stata
line 1865: au BufNewFile,BufRead *.ado,*.do,*.imata,*.mata^Isetf stata
line 1866: " Also *.class, but not when it's a Java bytecode file
line 1867: au BufNewFile,BufRead *.class if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
line 1869: 
line 1870: " SMCL
line 1871: au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl^Isetf smcl
line 1872: 
line 1873: " Stored Procedures
line 1874: au BufNewFile,BufRead *.stp^I^I^Isetf stp
line 1875: 
line 1876: " Standard ML
line 1877: au BufNewFile,BufRead *.sml^I^I^Isetf sml
line 1878: 
line 1879: " Sratus VOS command macro
line 1880: au BufNewFile,BufRead *.cm^I^I^Isetf voscm
line 1881: 
line 1882: " Swift
line 1883: au BufNewFile,BufRead *.swift^I^I^Isetf swift
line 1884: au BufNewFile,BufRead *.swift.gyb^I^Isetf swiftgyb
line 1885: 
line 1886: " Swift Intermediate Language
line 1887: au BufNewFile,BufRead *.sil^I^I^Isetf sil
line 1888: 
line 1889: " Sysctl
line 1890: au BufNewFile,BufRead */etc/sysctl.conf,*/etc/sysctl.d/*.conf^Isetf sysctl
line 1891: 
line 1892: " Systemd unit files
line 1893: au BufNewFile,BufRead */systemd/*.{automount,dnssd,link,mount,netdev,network,nspawn,path,service,slice,socket,swap,target,timer}^Isetf systemd
line 1894: " Systemd overrides
line 1895: au BufNewFile,BufRead */etc/systemd/*.conf.d/*.conf^Isetf systemd
line 1896: au BufNewFile,BufRead */etc/systemd/system/*.d/*.conf^Isetf systemd
line 1897: au BufNewFile,BufRead */.config/systemd/user/*.d/*.conf^Isetf systemd
line 1898: " Systemd temp files
line 1899: au BufNewFile,BufRead */etc/systemd/system/*.d/.#*^Isetf systemd
line 1900: au BufNewFile,BufRead */etc/systemd/system/.#*^I^Isetf systemd
line 1901: au BufNewFile,BufRead */.config/systemd/user/*.d/.#*^Isetf systemd
line 1902: au BufNewFile,BufRead */.config/systemd/user/.#*^Isetf systemd
line 1903: 
line 1904: " Synopsys Design Constraints
line 1905: au BufNewFile,BufRead *.sdc^I^I^Isetf sdc
line 1906: 
line 1907: " Sudoers
line 1908: au BufNewFile,BufRead */etc/sudoers,sudoers.tmp^Isetf sudoers
line 1909: 
line 1910: " SVG (Scalable Vector Graphics)
line 1911: au BufNewFile,BufRead *.svg^I^I^Isetf svg
line 1912: 
line 1913: " Surface
line 1914: au BufRead,BufNewFile *.sface^I^I^Isetf surface
line 1915: 
line 1916: " Tads (or Nroff or Perl test file)
line 1917: au BufNewFile,BufRead *.t if !dist#ft#FTnroff() && !dist#ft#FTperl() | setf tads | endif
line 1919: 
line 1920: " Tags
line 1921: au BufNewFile,BufRead tags^I^I^Isetf tags
line 1922: 
line 1923: " TAK
line 1924: au BufNewFile,BufRead *.tak^I^I^Isetf tak
line 1925: 
line 1926: " Task
line 1927: au BufRead,BufNewFile {pending,completed,undo}.data  setf taskdata
line 1928: au BufRead,BufNewFile *.task^I^I^Isetf taskedit
line 1929: 
line 1930: " Tcl (JACL too)
line 1931: au BufNewFile,BufRead *.tcl,*.tm,*.tk,*.itcl,*.itk,*.jacl,.tclshrc,.wishrc^Isetf tcl
line 1932: 
line 1933: " Teal
line 1934: au BufRead,BufNewFile *.tl^I^I^Isetf teal
line 1935: 
line 1936: " TealInfo
line 1937: au BufNewFile,BufRead *.tli^I^I^Isetf tli
line 1938: 
line 1939: " Telix Salt
line 1940: au BufNewFile,BufRead *.slt^I^I^Isetf tsalt
line 1941: 
line 1942: " Tera Term Language or Turtle
line 1943: au BufRead,BufNewFile *.ttl if getline(1) =~ '^@\?\(prefix\|base\)' |   setf turtle | else |   setf teraterm | endif
line 1949: 
line 1950: " Terminfo
line 1951: au BufNewFile,BufRead *.ti^I^I^Isetf terminfo
line 1952: 
line 1953: " Terraform
line 1954: au BufRead,BufNewFile *.tfvars^I^I^Isetf terraform
line 1955: 
line 1956: " TeX
line 1957: au BufNewFile,BufRead *.latex,*.sty,*.dtx,*.ltx,*.bbl^Isetf tex
line 1958: au BufNewFile,BufRead *.tex^I^I^Icall dist#ft#FTtex()
line 1959: 
line 1960: " ConTeXt
line 1961: au BufNewFile,BufRead *.mkii,*.mkiv,*.mkvi,*.mkxl,*.mklx   setf context
line 1962: 
line 1963: " Texinfo
line 1964: au BufNewFile,BufRead *.texinfo,*.texi,*.txi^Isetf texinfo
line 1965: 
line 1966: " TeX configuration
line 1967: au BufNewFile,BufRead texmf.cnf^I^I^Isetf texmf
line 1968: 
line 1969: " Tidy config
line 1970: au BufNewFile,BufRead .tidyrc,tidyrc,tidy.conf^Isetf tidy
line 1971: 
line 1972: " TF mud client
line 1973: au BufNewFile,BufRead .tfrc,tfrc^I^Isetf tf
line 1974: 
line 1975: " TF mud client or terraform
line 1976: au BufNewFile,BufRead *.tf^I^I^Icall dist#ft#FTtf()
line 1977: 
line 1978: " TLA+
line 1979: au BufNewFile,BufRead *.tla^I^I^Isetf tla
line 1980: 
line 1981: " tmux configuration
line 1982: au BufNewFile,BufRead {.,}tmux*.conf^I^Isetf tmux
line 1983: 
line 1984: " TOML
line 1985: au BufNewFile,BufRead *.toml^I^I^Isetf toml
line 1986: 
line 1987: " TPP - Text Presentation Program
line 1988: au BufNewFile,BufRead *.tpp^I^I^Isetf tpp
line 1989: 
line 1990: " Treetop
line 1991: au BufRead,BufNewFile *.treetop^I^I^Isetf treetop
line 1992: 
line 1993: " Trustees
line 1994: au BufNewFile,BufRead trustees.conf^I^Isetf trustees
line 1995: 
line 1996: " TSS - Geometry
line 1997: au BufNewFile,BufReadPost *.tssgm^I^Isetf tssgm
line 1998: 
line 1999: " TSS - Optics
line 2000: au BufNewFile,BufReadPost *.tssop^I^Isetf tssop
line 2001: 
line 2002: " TSS - Command Line (temporary)
line 2003: au BufNewFile,BufReadPost *.tsscl^I^Isetf tsscl
line 2004: 
line 2005: " Tutor mode
line 2006: au BufNewFile,BufReadPost *.tutor^I^Isetf tutor
line 2007: 
line 2008: " TWIG files
line 2009: au BufNewFile,BufReadPost *.twig^I^Isetf twig
line 2010: 
line 2011: " Typescript or Qt translation file (which is XML)
line 2012: au BufNewFile,BufReadPost *.ts if getline(1) =~ '<?xml' |   setf xml | else |   setf typescript | endif
line 2018: 
line 2019: " TypeScript with React
line 2020: au BufNewFile,BufRead *.tsx^I^I^Isetf typescriptreact
line 2021: 
line 2022: " Motif UIT/UIL files
line 2023: au BufNewFile,BufRead *.uit,*.uil^I^Isetf uil
line 2024: 
line 2025: " Udev conf
line 2026: au BufNewFile,BufRead */etc/udev/udev.conf^Isetf udevconf
line 2027: 
line 2028: " Udev permissions
line 2029: au BufNewFile,BufRead */etc/udev/permissions.d/*.permissions setf udevperm
line 2030: "
line 2031: " Udev symlinks config
line 2032: au BufNewFile,BufRead */etc/udev/cdsymlinks.conf^Isetf sh
line 2033: 
line 2034: " UnrealScript
line 2035: au BufNewFile,BufRead *.uc^I^I^Isetf uc
line 2036: 
line 2037: " Updatedb
line 2038: au BufNewFile,BufRead */etc/updatedb.conf^Isetf updatedb
line 2039: 
line 2040: " Upstart (init(8)) config files
line 2041: au BufNewFile,BufRead */usr/share/upstart/*.conf^I       setf upstart
line 2042: au BufNewFile,BufRead */usr/share/upstart/*.override^I       setf upstart
line 2043: au BufNewFile,BufRead */etc/init/*.conf,*/etc/init/*.override  setf upstart
line 2044: au BufNewFile,BufRead */.init/*.conf,*/.init/*.override^I       setf upstart
line 2045: au BufNewFile,BufRead */.config/upstart/*.conf^I^I       setf upstart
line 2046: au BufNewFile,BufRead */.config/upstart/*.override^I       setf upstart
line 2047: 
line 2048: " Vala
line 2049: au BufNewFile,BufRead *.vala^I^I^Isetf vala
line 2050: 
line 2051: " Vera
line 2052: au BufNewFile,BufRead *.vr,*.vri,*.vrh^I^Isetf vera
line 2053: 
line 2054: " Vagrant (uses Ruby syntax)
line 2055: au BufNewFile,BufRead Vagrantfile^I^Isetf ruby
line 2056: 
line 2057: " Verilog HDL
line 2058: au BufNewFile,BufRead *.v^I^I^Isetf verilog
line 2059: 
line 2060: " Verilog-AMS HDL
line 2061: au BufNewFile,BufRead *.va,*.vams^I^Isetf verilogams
line 2062: 
line 2063: " SystemVerilog
line 2064: au BufNewFile,BufRead *.sv,*.svh^I^Isetf systemverilog
line 2065: 
line 2066: " VHDL
line 2067: au BufNewFile,BufRead *.hdl,*.vhd,*.vhdl,*.vbe,*.vst,*.vho  setf vhdl
line 2068: 
line 2069: " Vim script
line 2070: au BufNewFile,BufRead *.vim,*.vba,.exrc,_exrc^Isetf vim
line 2071: 
line 2072: " Viminfo file
line 2073: au BufNewFile,BufRead .viminfo,_viminfo^I^Isetf viminfo
line 2074: 
line 2075: " Virata Config Script File or Drupal module
line 2076: au BufRead,BufNewFile *.hw,*.module,*.pkg if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
line 2082: 
line 2083: " Visual Basic (also uses *.bas) or FORM
line 2084: au BufNewFile,BufRead *.frm^I^I^Icall dist#ft#FTfrm()
line 2085: 
line 2086: " SaxBasic is close to Visual Basic
line 2087: au BufNewFile,BufRead *.sba^I^I^Isetf vb
line 2088: 
line 2089: " Vgrindefs file
line 2090: au BufNewFile,BufRead vgrindefs^I^I^Isetf vgrindefs
line 2091: 
line 2092: " VRML V1.0c
line 2093: au BufNewFile,BufRead *.wrl^I^I^Isetf vrml
line 2094: 
line 2095: " Vroom (vim testing and executable documentation)
line 2096: au BufNewFile,BufRead *.vroom^I^I^Isetf vroom
line 2097: 
line 2098: " Vue.js Single File Component
line 2099: au BufNewFile,BufRead *.vue^I^I^Isetf vue
line 2100: 
line 2101: " WebAssembly
line 2102: au BufNewFile,BufRead *.wast,*.wat^I^Isetf wast
line 2103: 
line 2104: " Webmacro
line 2105: au BufNewFile,BufRead *.wm^I^I^Isetf webmacro
line 2106: 
line 2107: " Wget config
line 2108: au BufNewFile,BufRead .wgetrc,wgetrc^I^Isetf wget
line 2109: 
line 2110: " Website MetaLanguage
line 2111: au BufNewFile,BufRead *.wml^I^I^Isetf wml
line 2112: 
line 2113: " Winbatch
line 2114: au BufNewFile,BufRead *.wbt^I^I^Isetf winbatch
line 2115: 
line 2116: " WSML
line 2117: au BufNewFile,BufRead *.wsml^I^I^Isetf wsml
line 2118: 
line 2119: " WPL
line 2120: au BufNewFile,BufRead *.wpl^I^I^Isetf xml
line 2121: 
line 2122: " WvDial
line 2123: au BufNewFile,BufRead wvdial.conf,.wvdialrc^Isetf wvdial
line 2124: 
line 2125: " CVS RC file
line 2126: au BufNewFile,BufRead .cvsrc^I^I^Isetf cvsrc
line 2127: 
line 2128: " CVS commit file
line 2129: au BufNewFile,BufRead cvs\d\+^I^I^Isetf cvs
line 2130: 
line 2131: " WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment
line 2132: " lines in a WEB file).
line 2133: au BufNewFile,BufRead *.web if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
line 2139: 
line 2140: " Windows Scripting Host and Windows Script Component
line 2141: au BufNewFile,BufRead *.ws[fc]^I^I^Isetf wsh
line 2142: 
line 2143: " XHTML
line 2144: au BufNewFile,BufRead *.xhtml,*.xht^I^Isetf xhtml
line 2145: 
line 2146: " X Pixmap (dynamically sets colors, this used to trigger on BufEnter to make
line 2147: " it work better, but that breaks setting 'filetype' manually)
line 2148: au BufNewFile,BufRead *.xpm if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
line 2154: au BufNewFile,BufRead *.xpm2^I^I^Isetf xpm2
line 2155: 
line 2156: " XFree86 config
line 2157: au BufNewFile,BufRead XF86Config if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
line 2162: au BufNewFile,BufRead */xorg.conf.d/*.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
line 2165: 
line 2166: " Xorg config
line 2167: au BufNewFile,BufRead xorg.conf,xorg.conf-4^Ilet b:xf86conf_xfree86_version = 4 | setf xf86conf
line 2168: 
line 2169: " Xinetd conf
line 2170: au BufNewFile,BufRead */etc/xinetd.conf^I^Isetf xinetd
line 2171: 
line 2172: " XS Perl extension interface language
line 2173: au BufNewFile,BufRead *.xs^I^I^Isetf xs
line 2174: 
line 2175: " X resources file
line 2176: au BufNewFile,BufRead .Xdefaults,.Xpdefaults,.Xresources,xdm-config,*.ad setf xdefaults
line 2177: 
line 2178: " Xmath
line 2179: au BufNewFile,BufRead *.msc,*.msf^I^Isetf xmath
line 2180: au BufNewFile,BufRead *.ms if !dist#ft#FTnroff() | setf xmath | endif
line 2182: 
line 2183: " XML  specific variants: docbk and xbl
line 2184: au BufNewFile,BufRead *.xml^I^I^Icall dist#ft#FTxml()
line 2185: 
line 2186: " XMI (holding UML models) is also XML
line 2187: au BufNewFile,BufRead *.xmi^I^I^Isetf xml
line 2188: 
line 2189: " CSPROJ files are Visual Studio.NET's XML-based C# project config files
line 2190: au BufNewFile,BufRead *.csproj,*.csproj.user^Isetf xml
line 2191: 
line 2192: " FSPROJ files are Visual Studio.NET's XML-based F# project config files
line 2193: au BufNewFile,BufRead *.fsproj,*.fsproj.user^Isetf xml
line 2194: 
line 2195: " VBPROJ files are Visual Studio.NET's XML-based Visual Basic project config files
line 2196: au BufNewFile,BufRead *.vbproj,*.vbproj.user^Isetf xml
line 2197: 
line 2198: " Qt Linguist translation source and Qt User Interface Files are XML
line 2199: " However, for .ts Typescript is more common.
line 2200: au BufNewFile,BufRead *.ui^I^I^Isetf xml
line 2201: 
line 2202: " TPM's are RDF-based descriptions of TeX packages (Nikolai Weibull)
line 2203: au BufNewFile,BufRead *.tpm^I^I^Isetf xml
line 2204: 
line 2205: " Xdg menus
line 2206: au BufNewFile,BufRead */etc/xdg/menus/*.menu^Isetf xml
line 2207: 
line 2208: " ATI graphics driver configuration
line 2209: au BufNewFile,BufRead fglrxrc^I^I^Isetf xml
line 2210: 
line 2211: " Web Services Description Language (WSDL)
line 2212: au BufNewFile,BufRead *.wsdl^I^I^Isetf xml
line 2213: 
line 2214: " XLIFF (XML Localisation Interchange File Format) is also XML
line 2215: au BufNewFile,BufRead *.xlf^I^I^Isetf xml
line 2216: au BufNewFile,BufRead *.xliff^I^I^Isetf xml
line 2217: 
line 2218: " XML User Interface Language
line 2219: au BufNewFile,BufRead *.xul^I^I^Isetf xml
line 2220: 
line 2221: " X11 xmodmap (also see below)
line 2222: au BufNewFile,BufRead *Xmodmap^I^I^Isetf xmodmap
line 2223: 
line 2224: " Xquery
line 2225: au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy^Isetf xquery
line 2226: 
line 2227: " XSD
line 2228: au BufNewFile,BufRead *.xsd^I^I^Isetf xsd
line 2229: 
line 2230: " Xslt
line 2231: au BufNewFile,BufRead *.xsl,*.xslt^I^Isetf xslt
line 2232: 
line 2233: " Yacc
line 2234: au BufNewFile,BufRead *.yy,*.yxx,*.y++^I^Isetf yacc
line 2235: 
line 2236: " Yacc or racc
line 2237: au BufNewFile,BufRead *.y^I^I^Icall dist#ft#FTy()
line 2238: 
line 2239: " Yaml
line 2240: au BufNewFile,BufRead *.yaml,*.yml^I^Isetf yaml
line 2241: 
line 2242: " Raml
line 2243: au BufNewFile,BufRead *.raml^I^I^Isetf raml
line 2244: 
line 2245: " yum conf (close enough to dosini)
line 2246: au BufNewFile,BufRead */etc/yum.conf^I^Isetf dosini
line 2247: 
line 2248: " YANG
line 2249: au BufRead,BufNewFile *.yang^I^I^Isetf yang
line 2250: 
line 2251: " Zimbu
line 2252: au BufNewFile,BufRead *.zu^I^I^Isetf zimbu
line 2253: " Zimbu Templates
line 2254: au BufNewFile,BufRead *.zut^I^I^Isetf zimbutempl
line 2255: 
line 2256: " Zope
line 2257: "   dtml (zope dynamic template markup language), pt (zope page template),
line 2258: "   cpt (zope form controller page template)
line 2259: au BufNewFile,BufRead *.dtml,*.pt,*.cpt^I^Icall dist#ft#FThtml()
line 2260: "   zsql (zope sql method)
line 2261: au BufNewFile,BufRead *.zsql^I^I^Icall dist#ft#SQL()
line 2262: 
line 2263: " Z80 assembler asz80
line 2264: au BufNewFile,BufRead *.z8a^I^I^Isetf z8a
line 2265: 
line 2266: augroup END
line 2267: 
line 2268: 
line 2269: " Source the user-specified filetype file, for backwards compatibility with
line 2270: " Vim 5.x.
line 2271: if exists("myfiletypefile") && filereadable(expand(myfiletypefile))
line 2272:   execute "source " . myfiletypefile
line 2273: endif
line 2274: 
line 2275: 
line 2276: " Check for "*" after loading myfiletypefile, so that scripts.vim is only used
line 2277: " when there are no matching file name extensions.
line 2278: " Don't do this for compressed files.
line 2279: augroup filetypedetect
line 2280: au BufNewFile,BufRead * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
line 2283: au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif
line 2284: 
line 2285: 
line 2286: " Plain text files, needs to be far down to not override others.  This avoids
line 2287: " the "conf" type being used if there is a line starting with '#'.
line 2288: " But before patterns matching everything in a directory.
line 2289: au BufNewFile,BufRead *.text,README,LICENSE,COPYING,AUTHORS^Isetf text
line 2290: 
line 2291: 
line 2292: " Extra checks for when no filetype has been detected now.  Mostly used for
line 2293: " patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim
line 2294: " script file.
line 2295: " Most of these should call s:StarSetf() to avoid names ending in .gz and the
line 2296: " like are used.
line 2297: 
line 2298: " More Apache style config files
line 2299: au BufNewFile,BufRead */etc/proftpd/*.conf*,*/etc/proftpd/conf.*/*^Icall s:StarSetf('apachestyle')
line 2300: au BufNewFile,BufRead proftpd.conf*^I^I^I^I^Icall s:StarSetf('apachestyle')
line 2301: 
line 2302: " More Apache config files
line 2303: au BufNewFile,BufRead access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*^Icall s:StarSetf('apache')
line 2304: au BufNewFile,BufRead */etc/apache2/*.conf*,*/etc/apache2/conf.*/*,*/etc/apache2/mods-*/*,*/etc/apache2/sites-*/*,*/etc/httpd/conf.*/*,*/etc/httpd/mods-*/*,*/etc/httpd/sites-*/*,*/etc/httpd/conf.d/*.conf*^I^Icall s:StarSetf('apache')
line 2305: 
line 2306: " APT config file
line 2307: au BufNewFile,BufRead */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf} call s:StarSetf('aptconf')
line 2308: 
line 2309: " Asterisk config file
line 2310: au BufNewFile,BufRead *asterisk/*.conf*^I^Icall s:StarSetf('asterisk')
line 2311: au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')
line 2312: 
line 2313: " Bazaar version control
line 2314: au BufNewFile,BufRead bzr_log.*^I^I^Isetf bzr
line 2315: 
line 2316: " Bazel build file
line 2317: if !has("fname_case")
line 2318:   au BufNewFile,BufRead *.BUILD,BUILD^I^Isetf bzl
line 2319: endif
line 2320: 
line 2321: " BIND zone
line 2322: au BufNewFile,BufRead */named/db.*,*/bind/db.*^Icall s:StarSetf('bindzone')
line 2323: 
line 2324: au BufNewFile,BufRead cabal.project.*^I^Icall s:StarSetf('cabalproject')
line 2325: 
line 2326: " Calendar
line 2327: au BufNewFile,BufRead */.calendar/*,*/share/calendar/*/calendar.*,*/share/calendar/calendar.*^I^I^I^I^Icall s:StarSetf('calendar')
line 2330: 
line 2331: " Changelog
line 2332: au BufNewFile,BufRead [cC]hange[lL]og* if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
line 2338: 
line 2339: " Crontab
line 2340: au BufNewFile,BufRead crontab,crontab.*,*/etc/cron.d/*^I^Icall s:StarSetf('crontab')
line 2341: 
line 2342: " dnsmasq(8) configuration
line 2343: au BufNewFile,BufRead */etc/dnsmasq.d/*^I^Icall s:StarSetf('dnsmasq')
line 2344: 
line 2345: " Dockerfile
line 2346: au BufNewFile,BufRead Dockerfile.*,Containerfile.*^Icall s:StarSetf('dockerfile')
line 2347: 
line 2348: " Dracula
line 2349: au BufNewFile,BufRead drac.*^I^I^Icall s:StarSetf('dracula')
line 2350: 
line 2351: " Fvwm
line 2352: au BufNewFile,BufRead */.fvwm/*^I^I^Icall s:StarSetf('fvwm')
line 2353: au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook let b:fvwm_version = 1 | call s:StarSetf('fvwm')
line 2355: au BufNewFile,BufRead *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
line 2361: 
line 2362: " Gedcom
line 2363: au BufNewFile,BufRead */tmp/lltmp*^I^Icall s:StarSetf('gedcom')
line 2364: 
line 2365: " Git
line 2366: au BufNewFile,BufRead */.gitconfig.d/*,/etc/gitconfig.d/*^Icall s:StarSetf('gitconfig')
line 2367: 
line 2368: " Gitolite
line 2369: au BufNewFile,BufRead */gitolite-admin/conf/*^Icall s:StarSetf('gitolite')
line 2370: 
line 2371: " GTK RC
line 2372: au BufNewFile,BufRead .gtkrc*,gtkrc*^I^Icall s:StarSetf('gtkrc')
line 2373: 
line 2374: " Jam
line 2375: au BufNewFile,BufRead Prl*.*,JAM*.*^I^Icall s:StarSetf('jam')
line 2376: 
line 2377: " Jargon
line 2378: au! BufNewFile,BufRead *jarg* if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
line 2382: 
line 2383: " Java Properties resource file (note: doesn't catch font.properties.pl)
line 2384: au BufNewFile,BufRead *.properties_??_??_*^Icall s:StarSetf('jproperties')
line 2385: 
line 2386: " Kconfig
line 2387: au BufNewFile,BufRead Kconfig.*^I^I^Icall s:StarSetf('kconfig')
line 2388: 
line 2389: " Lilo: Linux loader
line 2390: au BufNewFile,BufRead lilo.conf*^I^Icall s:StarSetf('lilo')
line 2391: 
line 2392: " Libsensors
line 2393: au BufNewFile,BufRead */etc/sensors.d/[^.]*^Icall s:StarSetf('sensors')
line 2394: 
line 2395: " Logcheck
line 2396: au BufNewFile,BufRead */etc/logcheck/*.d*/*^Icall s:StarSetf('logcheck')
line 2397: 
line 2398: " Makefile
line 2399: au BufNewFile,BufRead [mM]akefile*^I^Icall s:StarSetf('make')
line 2400: 
line 2401: " Ruby Makefile
line 2402: au BufNewFile,BufRead [rR]akefile*^I^Icall s:StarSetf('ruby')
line 2403: 
line 2404: " Mail (also matches muttrc.vim, so this is below the other checks)
line 2405: au BufNewFile,BufRead {neo,}mutt[[:alnum:]._-]\\\{6\}^Isetf mail
line 2406: 
line 2407: au BufNewFile,BufRead reportbug-*^I^Icall s:StarSetf('mail')
line 2408: 
line 2409: " Modconf
line 2410: au BufNewFile,BufRead */etc/modutils/* if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
line 2414: au BufNewFile,BufRead */etc/modprobe.*^I^Icall s:StarSetf('modconf')
line 2415: 
line 2416: " Mutt setup files (must be before catch *.rc)
line 2417: au BufNewFile,BufRead */etc/Muttrc.d/*^I^Icall s:StarSetf('muttrc')
line 2418: 
line 2419: " Mutt setup file
line 2420: au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*^Icall s:StarSetf('muttrc')
line 2421: au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*^I^Icall s:StarSetf('muttrc')
line 2422: 
line 2423: " Neomutt setup file
line 2424: au BufNewFile,BufRead .neomuttrc*,*/.neomutt/neomuttrc*^Icall s:StarSetf('neomuttrc')
line 2425: au BufNewFile,BufRead neomuttrc*,Neomuttrc*^I^Icall s:StarSetf('neomuttrc')
line 2426: 
line 2427: " Nroff macros
line 2428: au BufNewFile,BufRead tmac.*^I^I^Icall s:StarSetf('nroff')
line 2429: 
line 2430: " OpenBSD hostname.if
line 2431: au BufNewFile,BufRead /etc/hostname.*^I^Icall s:StarSetf('config')
line 2432: 
line 2433: " Pam conf
line 2434: au BufNewFile,BufRead */etc/pam.d/*^I^Icall s:StarSetf('pamconf')
line 2435: 
line 2436: " Printcap and Termcap
line 2437: au BufNewFile,BufRead *printcap* if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
line 2441: au BufNewFile,BufRead *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
line 2445: 
line 2446: " ReDIF
line 2447: " Only used when the .rdf file was not detected to be XML.
line 2448: au BufRead,BufNewFile *.rdf^I^I^Icall dist#ft#Redif()
line 2449: 
line 2450: " Remind
line 2451: au BufNewFile,BufRead .reminders*^I^Icall s:StarSetf('remind')
line 2452: 
line 2453: " SGML catalog file
line 2454: au BufNewFile,BufRead sgml.catalog*^I^Icall s:StarSetf('catalog')
line 2455: 
line 2456: " avoid doc files being recognized a shell files
line 2457: au BufNewFile,BufRead */doc/{,.}bash[_-]completion{,.d,.sh}{,/*} setf text
line 2458: 
line 2459: " Shell scripts ending in a star
line 2460: au BufNewFile,BufRead .bashrc*,.bash[_-]profile*,.bash[_-]logout*,.bash[_-]aliases*,bash-fc[-.]*,PKGBUILD*,APKBUILD*,*/{,.}bash[_-]completion{,.d,.sh}{,/*} call dist#ft#SetFileTypeSH("bash")
line 2461: au BufNewFile,BufRead .kshrc* call dist#ft#SetFileTypeSH("ksh")
line 2462: au BufNewFile,BufRead .profile* call dist#ft#SetFileTypeSH(getline(1))
line 2463: 
line 2464: " Sudoers
line 2465: au BufNewFile,BufRead */etc/sudoers.d/*^I^Icall s:StarSetf('sudoers')
line 2466: 
line 2467: " tcsh scripts ending in a star
line 2468: au BufNewFile,BufRead .tcshrc*^Icall dist#ft#SetFileTypeShell("tcsh")
line 2469: 
line 2470: " csh scripts ending in a star
line 2471: au BufNewFile,BufRead .login*,.cshrc*  call dist#ft#CSH()
line 2472: 
line 2473: " tmux configuration with arbitrary extension
line 2474: au BufNewFile,BufRead {.,}tmux*.conf*^I^Isetf tmux
line 2475: 
line 2476: " VHDL
line 2477: au BufNewFile,BufRead *.vhdl_[0-9]*^I^Icall s:StarSetf('vhdl')
line 2478: 
line 2479: " Vim script
line 2480: au BufNewFile,BufRead *vimrc*^I^I^Icall s:StarSetf('vim')
line 2481: 
line 2482: " Subversion commit file
line 2483: au BufNewFile,BufRead svn-commit*.tmp^I^Isetf svn
line 2484: 
line 2485: " X resources file
line 2486: au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')
line 2487: 
line 2488: " XFree86 config
line 2489: au BufNewFile,BufRead XF86Config-4* let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
line 2491: au BufNewFile,BufRead XF86Config* if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
line 2496: 
line 2497: " X11 xmodmap
line 2498: au BufNewFile,BufRead *xmodmap*^I^I^Icall s:StarSetf('xmodmap')
line 2499: 
line 2500: " Xinetd conf
line 2501: au BufNewFile,BufRead */etc/xinetd.d/*^I^Icall s:StarSetf('xinetd')
line 2502: 
line 2503: " yum conf (close enough to dosini)
line 2504: au BufNewFile,BufRead */etc/yum.repos.d/*^Icall s:StarSetf('dosini')
line 2505: 
line 2506: " Z-Shell script ending in a star
line 2507: au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')
line 2508: au BufNewFile,BufRead zsh*,zlog*^I^Icall s:StarSetf('zsh')
line 2509: 
line 2510: 
line 2511: " Help files match *.txt but should have a last line that is a modeline. 
line 2512: au BufNewFile,BufRead *.txt  if getline('$') !~ 'vim:.*ft=help'|   setf text| endif       
line 2516: 
line 2517: if !exists('g:did_load_ftdetect')
line 2518:   " Use the filetype detect plugins.  They may overrule any of the previously
line 2519:   " detected filetypes.
line 2520:   runtime! ftdetect/*.vim
line 2521:   runtime! ftdetect/*.lua
line 2522: endif
line 2523: 
line 2524: " NOTE: The above command could have ended the filetypedetect autocmd group
line 2525: " and started another one. Let's make sure it has ended to get to a consistent
line 2526: " state.
line 2527: augroup END
line 2528: 
line 2529: " Generic configuration file. Use FALLBACK, it's just guessing!
line 2530: au filetypedetect BufNewFile,BufRead,StdinReadPost * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
line 2536: 
line 2537: 
line 2538: " If the GUI is already running, may still need to install the Syntax menu.
line 2539: " Don't do it when the 'M' flag is included in 'guioptions'.
line 2540: if has("menu") && has("gui_running") && !exists("did_install_syntax_menu") && &guioptions !~# "M"
line 2542:   source <sfile>:p:h/menu.vim
line 2543: endif
line 2544: 
line 2545: " Function called for testing all functions defined here.  These are
line 2546: " script-local, thus need to be executed here.
line 2547: " Returns a string with error messages (hopefully empty).
line 2548: func TestFiletypeFuncs(testlist)
line 2559: 
line 2560: " Restore 'cpoptions'
line 2561: let &cpo = s:cpo_save
line 2562: unlet s:cpo_save
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/filetype.vim"
line 149:   runtime! ftdetect/*.vim
Searching for "ftdetect/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftdetect/guihua.vim"
finished sourcing /home/thomaseckert/.config/nvim/plugged/guihua.lua/ftdetect/guihua.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftdetect/snippets.vim"
line 1: au BufRead,BufNewFile *.snippets setlocal filetype=snippets
finished sourcing /home/thomaseckert/.config/nvim/plugged/LuaSnip/ftdetect/snippets.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftdetect/polyglot.vim"
line 1: call polyglot#init#init()
calling function polyglot#init#init()

line 1:   " A no-op as sourcing this file is enough
function polyglot#init#init returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftdetect/polyglot.vim

finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftdetect/polyglot.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftdetect/fugitive.vim"
line 1: autocmd BufReadPost *.fugitiveblame setfiletype fugitiveblame
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftdetect/fugitive.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-go/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-go/ftdetect/gofiletype.vim"
line 1: " vint: -ProhibitAutocmdWithNoGroup
line 2: 
line 3: " don't spam the user when Vim is started in Vi compatibility mode
line 4: let s:cpo_save = &cpo
line 5: set cpo&vim
line 6: 
line 7: " Note: should not use augroup in ftdetect (see :help ftdetect)
line 8: au BufRead,BufNewFile *.go setfiletype go
line 9: au BufRead,BufNewFile *.s setfiletype asm
line 10: au BufRead,BufNewFile *.tmpl set filetype=gohtmltmpl
line 11: au BufRead,BufNewFile go.sum set filetype=gosum
line 12: au BufRead,BufNewFile go.work.sum set filetype=gosum
line 13: au BufRead,BufNewFile go.work set filetype=gowork
line 14: 
line 15: " remove the autocommands for modsim3, and lprolog files so that their
line 16: " highlight groups, syntax, etc. will not be loaded. *.MOD is included, so
line 17: " that on case insensitive file systems the module2 autocmds will not be
line 18: " executed.
line 19: au! BufRead,BufNewFile *.mod,*.MOD
line 20: " Set the filetype if the first non-comment and non-blank line starts with
line 21: " 'module <path>'.
line 22: au BufRead,BufNewFile go.mod call s:gomod()
line 23: 
line 24: fun! s:gomod()
line 38: 
line 39: " restore Vi compatibility settings
line 40: let &cpo = s:cpo_save
line 41: unlet s:cpo_save
line 42: 
line 43: " vim: sw=2 ts=2 et
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-go/ftdetect/gofiletype.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/go.nvim/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftdetect/go.vim"
line 1: let s:cpo_save = &cpo
line 2: set cpo&vim
line 3: 
line 4: au BufRead,BufNewFile *.go setfiletype go
line 5: au BufRead,BufNewFile *.s setfiletype asm
line 6: au BufRead,BufNewFile *.tmpl set filetype=gohtmltmpl
line 7: au BufRead,BufNewFile go.sum set filetype=gosum
line 8: au BufRead,BufNewFile go.work.sum set filetype=gosum
line 9: au BufRead,BufNewFile go.work set filetype=gowork
line 10: 
line 11: au! BufRead,BufNewFile *.mod,*.MOD
line 12: 
line 13: 
line 14: let &cpo = s:cpo_save
line 15: unlet s:cpo_save
line 16: 
line 17: " vim: sw=2 ts=2 et
finished sourcing /home/thomaseckert/.config/nvim/plugged/go.nvim/ftdetect/go.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftdetect/css.vim"
line 1: au BufEnter *.css :syntax sync fromstart
finished sourcing /home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftdetect/css.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftdetect/svelte.vim"
line 1: au BufRead,BufNewFile *.svelte setfiletype svelte
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-svelte/ftdetect/svelte.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/css.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.css setfiletype css
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/css.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/graphql.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.graphql,*.gql setfiletype graphql
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/graphql.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/html.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.html setfiletype html
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/javascript.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.js,*jsx setfiletype javascript
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/javascript.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/json.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.json setfiletype json
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/json.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/less.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.less setfiletype less
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/less.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/lua.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.lua setfiletype lua
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/lua.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/markdown.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.markdown,*.md,*.mdown,*.mkd,*.mkdn setfiletype markdown
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/markdown.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/php.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.php setfiletype php 
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/php.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/ruby.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.rb setfiletype ruby
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/ruby.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/scss.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.scss setfiletype scss
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/scss.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/svelte.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.svelte setfiletype svelte
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/svelte.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/typescript.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.ts setfiletype typescript
line 3:   autocmd BufNewFile,BufReadPost *.tsx setfiletype typescriptreact
line 4: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/typescript.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/vue.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.vue setfiletype vue
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/vue.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/xml.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.xml setfiletype xml
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/xml.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/yaml.vim"
line 1: augroup PrettierFileDetect
line 2:   autocmd BufNewFile,BufReadPost *.yaml,*.yml setfiletype yaml
line 3: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftdetect/yaml.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftdetect/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftdetect)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 149: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftdetect/markdown.vim"
line 1: au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn,mdx} set filetype=markdown
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftdetect/markdown.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
Searching for "/home/thomaseckert/.local/share/nvim/site/ftdetect/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftdetect/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftdetect/*.vim"
line 150: augroup END
line 151: 
line 152: 
line 153: augroup filetypedetect
line 154: 
line 155: " Switch to compatible mode for the time being
line 156: let s:cpo_save = &cpo
line 157: set cpo&vim
line 158: 
line 159: if !has_key(g:polyglot_is_disabled, 'ftdetect')
line 160: 
line 161: " It can happen vim filetype.vim loads first, then we need a reset
line 162: if exists("did_load_filetypes")
line 163:   au! filetypedetect
line 164: endif
line 165: 
line 166: " Prevent filetype.vim of vim from loading again
line 167: let did_load_filetypes = 1
line 168: 
line 169: 
line 170: " DO NOT EDIT CODE BELOW, IT IS GENERATED WITH MAKEFILE
line 171: 
line 172: if !has_key(g:polyglot_is_disabled, 'bicep')
line 173:   au BufNewFile,BufRead *.bicep setf bicep
line 174: endif
line 175: 
line 176: if !has_key(g:polyglot_is_disabled, 'org')
line 177:   au BufNewFile,BufRead *.org setf org
line 178: endif
line 179: 
line 180: if !has_key(g:polyglot_is_disabled, 'mermaid')
line 181:   au BufNewFile,BufRead *.mermaid,*.mm,*.mmd setf mermaid
line 182: endif
line 183: 
line 184: if !has_key(g:polyglot_is_disabled, 'openscad')
line 185:   au BufNewFile,BufRead *.scad setf openscad
line 186: endif
line 187: 
line 188: if !has_key(g:polyglot_is_disabled, 'nftables')
line 189:   au BufNewFile,BufRead *.nft,*/nftables.conf setf nftables
line 190: endif
line 191: 
line 192: if !has_key(g:polyglot_is_disabled, 'just')
line 193:   au BufNewFile,BufRead *.just,justfile setf just
line 194: endif
line 195: 
line 196: if !has_key(g:polyglot_is_disabled, 'sway')
line 197:   au BufNewFile,BufRead *.sway.config,*.swayconfig,*sway/config,swayconfig setf swayconfig
line 198: endif
line 199: 
line 200: if !has_key(g:polyglot_is_disabled, 'hjson')
line 201:   au BufNewFile,BufRead *.hjson setf hjson
line 202: endif
line 203: 
line 204: if !has_key(g:polyglot_is_disabled, 'gleam')
line 205:   au BufNewFile,BufRead *.gleam setf gleam
line 206: endif
line 207: 
line 208: if !has_key(g:polyglot_is_disabled, 'jsonc')
line 209:   au BufNewFile,BufRead *.cjson,*.jsonc,{.,}babelrc,{.,}eslintrc.json,{.,}jshintrc,{.,}jslintrc,{.,}mocharc.json,coc-settings.json,coffeelint.json,jsconfig.json,tsconfig.json setf jsonc
line 210: endif
line 211: 
line 212: if !has_key(g:polyglot_is_disabled, 'mint')
line 213:   au BufNewFile,BufRead *.mint setf mint
line 214: endif
line 215: 
line 216: if !has_key(g:polyglot_is_disabled, 'context')
line 217:   au BufNewFile,BufRead *.mkii,*.mkiv,*.mkvi setf context
line 218: endif
line 219: 
line 220: if !has_key(g:polyglot_is_disabled, 'xpm2')
line 221:   au BufNewFile,BufRead *.xpm2 setf xpm2
line 222: endif
line 223: 
line 224: if !has_key(g:polyglot_is_disabled, 'xpm')
line 225:   au! BufNewFile,BufRead,BufWritePost *.pm call polyglot#detect#Pm()
line 226:   au BufNewFile,BufRead *.xpm setf xpm
line 227: endif
line 228: 
line 229: if !has_key(g:polyglot_is_disabled, 'xf86conf')
line 230:   au BufNewFile,BufRead */xorg.conf.d/*.conf,xorg.conf,xorg.conf-4 setf xf86conf
line 231:   au BufNewFile,BufRead XF86Config-4* call s:StarSetf('xf86conf')
line 232:   au BufNewFile,BufRead XF86Config* call s:StarSetf('xf86conf')
line 233: endif
line 234: 
line 235: if !has_key(g:polyglot_is_disabled, 'text')
line 236:   au BufNewFile,BufRead *.text,README setf text
line 237: endif
line 238: 
line 239: if !has_key(g:polyglot_is_disabled, 'svn')
line 240:   au BufNewFile,BufRead svn-commit*.tmp setf svn
line 241: endif
line 242: 
line 243: if !has_key(g:polyglot_is_disabled, 'logcheck')
line 244:   au BufNewFile,BufRead */etc/logcheck/*.d*/* call s:StarSetf('logcheck')
line 245: endif
line 246: 
line 247: if !has_key(g:polyglot_is_disabled, 'fvwm')
line 248:   au BufNewFile,BufRead */.fvwm/* call s:StarSetf('fvwm')
line 249: endif
line 250: 
line 251: if !has_key(g:polyglot_is_disabled, 'crontab')
line 252:   au BufNewFile,BufRead crontab setf crontab
line 253:   au BufNewFile,BufRead crontab.* call s:StarSetf('crontab')
line 254:   au BufNewFile,BufRead */etc/cron.d/* call s:StarSetf('crontab')
line 255: endif
line 256: 
line 257: if !has_key(g:polyglot_is_disabled, 'bzr')
line 258:   au BufNewFile,BufRead bzr_log.* call s:StarSetf('bzr')
line 259: endif
line 260: 
line 261: if !has_key(g:polyglot_is_disabled, 'asteriskvm')
line 262:   au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')
line 263: endif
line 264: 
line 265: if !has_key(g:polyglot_is_disabled, 'asterisk')
line 266:   au BufNewFile,BufRead *asterisk/*.conf* call s:StarSetf('asterisk')
line 267: endif
line 268: 
line 269: if !has_key(g:polyglot_is_disabled, 'apachestyle')
line 270:   au BufNewFile,BufRead proftpd.conf* call s:StarSetf('apachestyle')
line 271:   au BufNewFile,BufRead */etc/proftpd/conf.*/* call s:StarSetf('apachestyle')
line 272:   au BufNewFile,BufRead */etc/proftpd/*.conf* call s:StarSetf('apachestyle')
line 273: endif
line 274: 
line 275: if !has_key(g:polyglot_is_disabled, 'z8a')
line 276:   au BufNewFile,BufRead *.z8a setf z8a
line 277: endif
line 278: 
line 279: if !has_key(g:polyglot_is_disabled, 'zimbu')
line 280:   au BufNewFile,BufRead *.zu setf zimbu
line 281: endif
line 282: 
line 283: if !has_key(g:polyglot_is_disabled, 'yacc')
line 284:   au BufNewFile,BufRead *.y++,*.yxx,*.yy setf yacc
line 285: endif
line 286: 
line 287: if !has_key(g:polyglot_is_disabled, 'xslt')
line 288:   au BufNewFile,BufRead *.xsl,*.xslt setf xslt
line 289: endif
line 290: 
line 291: if !has_key(g:polyglot_is_disabled, 'xsd')
line 292:   au BufNewFile,BufRead *.xsd setf xsd
line 293: endif
line 294: 
line 295: if !has_key(g:polyglot_is_disabled, 'xquery')
line 296:   au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy setf xquery
line 297: endif
line 298: 
line 299: if !has_key(g:polyglot_is_disabled, 'xmodmap')
line 300:   au BufNewFile,BufRead *Xmodmap setf xmodmap
line 301:   au BufNewFile,BufRead *xmodmap* call s:StarSetf('xmodmap')
line 302: endif
line 303: 
line 304: if !has_key(g:polyglot_is_disabled, 'xmath')
line 305:   au BufNewFile,BufRead *.msc,*.msf setf xmath
line 306: endif
line 307: 
line 308: if !has_key(g:polyglot_is_disabled, 'xdefaults')
line 309:   au BufNewFile,BufRead *.ad,{.,}Xdefaults,{.,}Xpdefaults,{.,}Xresources,xdm-config setf xdefaults
line 310:   au BufNewFile,BufRead Xresources* call s:StarSetf('xdefaults')
line 311:   au BufNewFile,BufRead */app-defaults/* call s:StarSetf('xdefaults')
line 312:   au BufNewFile,BufRead */Xresources/* call s:StarSetf('xdefaults')
line 313: endif
line 314: 
line 315: if !has_key(g:polyglot_is_disabled, 'xinetd')
line 316:   au BufNewFile,BufRead */etc/xinetd.conf setf xinetd
line 317:   au BufNewFile,BufRead */etc/xinetd.d/* call s:StarSetf('xinetd')
line 318: endif
line 319: 
line 320: if !has_key(g:polyglot_is_disabled, 'xhtml')
line 321:   au BufNewFile,BufRead *.xht,*.xhtml setf xhtml
line 322: endif
line 323: 
line 324: if !has_key(g:polyglot_is_disabled, 'wsh')
line 325:   au BufNewFile,BufRead *.ws[fc] setf wsh
line 326: endif
line 327: 
line 328: if !has_key(g:polyglot_is_disabled, 'cvs')
line 329:   au BufNewFile,BufRead cvs\d\+ setf cvs
line 330: endif
line 331: 
line 332: if !has_key(g:polyglot_is_disabled, 'cvsrc')
line 333:   au BufNewFile,BufRead {.,}cvsrc setf cvsrc
line 334: endif
line 335: 
line 336: if !has_key(g:polyglot_is_disabled, 'wvdial')
line 337:   au BufNewFile,BufRead {.,}wvdialrc,wvdial.conf setf wvdial
line 338: endif
line 339: 
line 340: if !has_key(g:polyglot_is_disabled, 'wsml')
line 341:   au BufNewFile,BufRead *.wsml setf wsml
line 342: endif
line 343: 
line 344: if !has_key(g:polyglot_is_disabled, 'winbatch')
line 345:   au BufNewFile,BufRead *.wbt setf winbatch
line 346: endif
line 347: 
line 348: if !has_key(g:polyglot_is_disabled, 'wml')
line 349:   au BufNewFile,BufRead *.wml setf wml
line 350: endif
line 351: 
line 352: if !has_key(g:polyglot_is_disabled, 'wget')
line 353:   au BufNewFile,BufRead {.,}wgetrc,wgetrc setf wget
line 354: endif
line 355: 
line 356: if !has_key(g:polyglot_is_disabled, 'webmacro')
line 357:   au BufNewFile,BufRead *.wm setf webmacro
line 358: endif
line 359: 
line 360: if !has_key(g:polyglot_is_disabled, 'wast')
line 361:   au BufNewFile,BufRead *.wast,*.wat setf wast
line 362: endif
line 363: 
line 364: if !has_key(g:polyglot_is_disabled, 'vroom')
line 365:   au BufNewFile,BufRead *.vroom setf vroom
line 366: endif
line 367: 
line 368: if !has_key(g:polyglot_is_disabled, 'vrml')
line 369:   au BufNewFile,BufRead *.wrl setf vrml
line 370: endif
line 371: 
line 372: if !has_key(g:polyglot_is_disabled, 'vgrindefs')
line 373:   au BufNewFile,BufRead vgrindefs setf vgrindefs
line 374: endif
line 375: 
line 376: if !has_key(g:polyglot_is_disabled, 'viminfo')
line 377:   au BufNewFile,BufRead {.,}viminfo,_viminfo setf viminfo
line 378: endif
line 379: 
line 380: if !has_key(g:polyglot_is_disabled, 'vim')
line 381:   au BufNewFile,BufRead *.vba,*.vim,{.,}exrc,_exrc setf vim
line 382:   au BufNewFile,BufRead *vimrc* call s:StarSetf('vim')
line 383: endif
line 384: 
line 385: if !has_key(g:polyglot_is_disabled, 'vhdl')
line 386:   au BufNewFile,BufRead *.hdl,*.vbe,*.vhd,*.vhdl,*.vho,*.vst setf vhdl
line 387:   au BufNewFile,BufRead *.vhdl_[0-9]* call s:StarSetf('vhdl')
line 388: endif
line 389: 
line 390: if !has_key(g:polyglot_is_disabled, 'systemverilog')
line 391:   au BufNewFile,BufRead *.sv,*.svh setf systemverilog
line 392: endif
line 393: 
line 394: if !has_key(g:polyglot_is_disabled, 'verilogams')
line 395:   au BufNewFile,BufRead *.va,*.vams setf verilogams
line 396: endif
line 397: 
line 398: if !has_key(g:polyglot_is_disabled, 'verilog')
line 399:   au BufNewFile,BufRead *.v setf verilog
line 400: endif
line 401: 
line 402: if !has_key(g:polyglot_is_disabled, 'vera')
line 403:   au BufNewFile,BufRead *.vr,*.vrh,*.vri setf vera
line 404: endif
line 405: 
line 406: if !has_key(g:polyglot_is_disabled, 'upstart')
line 407:   au BufNewFile,BufRead */.config/upstart/*.conf,*/.config/upstart/*.override,*/.init/*.conf,*/.init/*.override,*/etc/init/*.conf,*/etc/init/*.override,*/usr/share/upstart/*.conf,*/usr/share/upstart/*.override setf upstart
line 408: endif
line 409: 
line 410: if !has_key(g:polyglot_is_disabled, 'updatedb')
line 411:   au BufNewFile,BufRead */etc/updatedb.conf setf updatedb
line 412: endif
line 413: 
line 414: if !has_key(g:polyglot_is_disabled, 'uc')
line 415:   au BufNewFile,BufRead *.uc setf uc
line 416: endif
line 417: 
line 418: if !has_key(g:polyglot_is_disabled, 'udevperm')
line 419:   au BufNewFile,BufRead */etc/udev/permissions.d/*.permissions setf udevperm
line 420: endif
line 421: 
line 422: if !has_key(g:polyglot_is_disabled, 'udevconf')
line 423:   au BufNewFile,BufRead */etc/udev/udev.conf setf udevconf
line 424: endif
line 425: 
line 426: if !has_key(g:polyglot_is_disabled, 'uil')
line 427:   au BufNewFile,BufRead *.uil,*.uit setf uil
line 428: endif
line 429: 
line 430: if !has_key(g:polyglot_is_disabled, 'tsscl')
line 431:   au BufNewFile,BufRead *.tsscl setf tsscl
line 432: endif
line 433: 
line 434: if !has_key(g:polyglot_is_disabled, 'tssop')
line 435:   au BufNewFile,BufRead *.tssop setf tssop
line 436: endif
line 437: 
line 438: if !has_key(g:polyglot_is_disabled, 'tssgm')
line 439:   au BufNewFile,BufRead *.tssgm setf tssgm
line 440: endif
line 441: 
line 442: if !has_key(g:polyglot_is_disabled, 'trustees')
line 443:   au BufNewFile,BufRead trustees.conf setf trustees
line 444: endif
line 445: 
line 446: if !has_key(g:polyglot_is_disabled, 'treetop')
line 447:   au BufNewFile,BufRead *.treetop setf treetop
line 448: endif
line 449: 
line 450: if !has_key(g:polyglot_is_disabled, 'tpp')
line 451:   au BufNewFile,BufRead *.tpp setf tpp
line 452: endif
line 453: 
line 454: if !has_key(g:polyglot_is_disabled, 'tidy')
line 455:   au BufNewFile,BufRead {.,}tidyrc,tidy.conf,tidyrc setf tidy
line 456: endif
line 457: 
line 458: if !has_key(g:polyglot_is_disabled, 'texmf')
line 459:   au BufNewFile,BufRead texmf.cnf setf texmf
line 460: endif
line 461: 
line 462: if !has_key(g:polyglot_is_disabled, 'texinfo')
line 463:   au BufNewFile,BufRead *.texi,*.texinfo,*.txi setf texinfo
line 464: endif
line 465: 
line 466: if !has_key(g:polyglot_is_disabled, 'tex')
line 467:   au BufNewFile,BufRead *.bbl,*.dtx,*.latex,*.ltx,*.sty setf tex
line 468: endif
line 469: 
line 470: if !has_key(g:polyglot_is_disabled, 'terminfo')
line 471:   au BufNewFile,BufRead *.ti setf terminfo
line 472: endif
line 473: 
line 474: if !has_key(g:polyglot_is_disabled, 'teraterm')
line 475:   au BufNewFile,BufRead *.ttl setf teraterm
line 476: endif
line 477: 
line 478: if !has_key(g:polyglot_is_disabled, 'tsalt')
line 479:   au BufNewFile,BufRead *.slt setf tsalt
line 480: endif
line 481: 
line 482: if !has_key(g:polyglot_is_disabled, 'tli')
line 483:   au BufNewFile,BufRead *.tli setf tli
line 484: endif
line 485: 
line 486: if !has_key(g:polyglot_is_disabled, 'tcl')
line 487:   au BufNewFile,BufRead *.itcl,*.itk,*.jacl,*.tcl,*.tk setf tcl
line 488: endif
line 489: 
line 490: if !has_key(g:polyglot_is_disabled, 'taskedit')
line 491:   au BufNewFile,BufRead *.task setf taskedit
line 492: endif
line 493: 
line 494: if !has_key(g:polyglot_is_disabled, 'taskdata')
line 495:   au BufNewFile,BufRead {pending,completed,undo}.data setf taskdata
line 496: endif
line 497: 
line 498: if !has_key(g:polyglot_is_disabled, 'tak')
line 499:   au BufNewFile,BufRead *.tak setf tak
line 500: endif
line 501: 
line 502: if !has_key(g:polyglot_is_disabled, 'tags')
line 503:   au BufNewFile,BufRead tags setf tags
line 504: endif
line 505: 
line 506: if !has_key(g:polyglot_is_disabled, 'sudoers')
line 507:   au BufNewFile,BufRead */etc/sudoers,sudoers.tmp setf sudoers
line 508: endif
line 509: 
line 510: if !has_key(g:polyglot_is_disabled, 'sdc')
line 511:   au BufNewFile,BufRead *.sdc setf sdc
line 512: endif
line 513: 
line 514: if !has_key(g:polyglot_is_disabled, 'sysctl')
line 515:   au BufNewFile,BufRead */etc/sysctl.conf,*/etc/sysctl.d/*.conf setf sysctl
line 516: endif
line 517: 
line 518: if !has_key(g:polyglot_is_disabled, 'sil')
line 519:   au BufNewFile,BufRead *.sil setf sil
line 520: endif
line 521: 
line 522: if !has_key(g:polyglot_is_disabled, 'swiftgyb')
line 523:   au BufNewFile,BufRead *.swift.gyb setf swiftgyb
line 524: endif
line 525: 
line 526: if !has_key(g:polyglot_is_disabled, 'voscm')
line 527:   au BufNewFile,BufRead *.cm setf voscm
line 528: endif
line 529: 
line 530: if !has_key(g:polyglot_is_disabled, 'sml')
line 531:   au BufNewFile,BufRead *.sml setf sml
line 532: endif
line 533: 
line 534: if !has_key(g:polyglot_is_disabled, 'stp')
line 535:   au BufNewFile,BufRead *.stp setf stp
line 536: endif
line 537: 
line 538: if !has_key(g:polyglot_is_disabled, 'smcl')
line 539:   au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl setf smcl
line 540: endif
line 541: 
line 542: if !has_key(g:polyglot_is_disabled, 'stata')
line 543:   au BufNewFile,BufRead *.ado,*.do,*.imata,*.mata setf stata
line 544: endif
line 545: 
line 546: if !has_key(g:polyglot_is_disabled, 'sshdconfig')
line 547:   au BufNewFile,BufRead */etc/ssh/sshd_config.d/*.conf,sshd_config setf sshdconfig
line 548: endif
line 549: 
line 550: if !has_key(g:polyglot_is_disabled, 'sshconfig')
line 551:   au BufNewFile,BufRead */.ssh/config,*/etc/ssh/ssh_config.d/*.conf,ssh_config setf sshconfig
line 552: endif
line 553: 
line 554: if !has_key(g:polyglot_is_disabled, 'sqr')
line 555:   au BufNewFile,BufRead *.sqi,*.sqr setf sqr
line 556: endif
line 557: 
line 558: if !has_key(g:polyglot_is_disabled, 'sqlj')
line 559:   au BufNewFile,BufRead *.sqlj setf sqlj
line 560: endif
line 561: 
line 562: if !has_key(g:polyglot_is_disabled, 'squid')
line 563:   au BufNewFile,BufRead squid.conf setf squid
line 564: endif
line 565: 
line 566: if !has_key(g:polyglot_is_disabled, 'spice')
line 567:   au BufNewFile,BufRead *.sp,*.spice setf spice
line 568: endif
line 569: 
line 570: if !has_key(g:polyglot_is_disabled, 'slice')
line 571:   au BufNewFile,BufRead *.ice setf slice
line 572: endif
line 573: 
line 574: if !has_key(g:polyglot_is_disabled, 'spup')
line 575:   au BufNewFile,BufRead *.spd,*.spdata,*.speedup setf spup
line 576: endif
line 577: 
line 578: if !has_key(g:polyglot_is_disabled, 'hog')
line 579:   au BufNewFile,BufRead *.hog,snort.conf,vision.conf setf hog
line 580: endif
line 581: 
line 582: if !has_key(g:polyglot_is_disabled, 'mib')
line 583:   au BufNewFile,BufRead *.mib,*.my setf mib
line 584: endif
line 585: 
line 586: if !has_key(g:polyglot_is_disabled, 'snobol4')
line 587:   au BufNewFile,BufRead *.sno,*.spt setf snobol4
line 588: endif
line 589: 
line 590: if !has_key(g:polyglot_is_disabled, 'smith')
line 591:   au BufNewFile,BufRead *.smith,*.smt setf smith
line 592: endif
line 593: 
line 594: if !has_key(g:polyglot_is_disabled, 'st')
line 595:   au BufNewFile,BufRead *.st setf st
line 596: endif
line 597: 
line 598: if !has_key(g:polyglot_is_disabled, 'slrnsc')
line 599:   au BufNewFile,BufRead *.score setf slrnsc
line 600: endif
line 601: 
line 602: if !has_key(g:polyglot_is_disabled, 'slrnrc')
line 603:   au BufNewFile,BufRead {.,}slrnrc setf slrnrc
line 604: endif
line 605: 
line 606: if !has_key(g:polyglot_is_disabled, 'skill')
line 607:   au BufNewFile,BufRead *.cdf,*.il,*.ils setf skill
line 608: endif
line 609: 
line 610: if !has_key(g:polyglot_is_disabled, 'sisu')
line 611:   au BufNewFile,BufRead *.-sst,*.-sst.meta,*._sst,*._sst.meta,*.ssi,*.ssm,*.sst,*.sst.meta setf sisu
line 612: endif
line 613: 
line 614: if !has_key(g:polyglot_is_disabled, 'sinda')
line 615:   au BufNewFile,BufRead *.s85,*.sin setf sinda
line 616: endif
line 617: 
line 618: if !has_key(g:polyglot_is_disabled, 'simula')
line 619:   au BufNewFile,BufRead *.sim setf simula
line 620: endif
line 621: 
line 622: if !has_key(g:polyglot_is_disabled, 'screen')
line 623:   au BufNewFile,BufRead {.,}screenrc,screenrc setf screen
line 624: endif
line 625: 
line 626: if !has_key(g:polyglot_is_disabled, 'scheme')
line 627:   au BufNewFile,BufRead *.scm,*.ss setf scheme
line 628: endif
line 629: 
line 630: if !has_key(g:polyglot_is_disabled, 'catalog')
line 631:   au BufNewFile,BufRead catalog setf catalog
line 632:   au BufNewFile,BufRead sgml.catalog* call s:StarSetf('catalog')
line 633: endif
line 634: 
line 635: if !has_key(g:polyglot_is_disabled, 'setserial')
line 636:   au BufNewFile,BufRead */etc/serial.conf setf setserial
line 637: endif
line 638: 
line 639: if !has_key(g:polyglot_is_disabled, 'slpspi')
line 640:   au BufNewFile,BufRead */etc/slp.spi setf slpspi
line 641: endif
line 642: 
line 643: if !has_key(g:polyglot_is_disabled, 'spyce')
line 644:   au BufNewFile,BufRead *.spi,*.spy setf spyce
line 645: endif
line 646: 
line 647: if !has_key(g:polyglot_is_disabled, 'slpreg')
line 648:   au BufNewFile,BufRead */etc/slp.reg setf slpreg
line 649: endif
line 650: 
line 651: if !has_key(g:polyglot_is_disabled, 'slpconf')
line 652:   au BufNewFile,BufRead */etc/slp.conf setf slpconf
line 653: endif
line 654: 
line 655: if !has_key(g:polyglot_is_disabled, 'services')
line 656:   au BufNewFile,BufRead */etc/services setf services
line 657: endif
line 658: 
line 659: if !has_key(g:polyglot_is_disabled, 'sm')
line 660:   au BufNewFile,BufRead sendmail.cf setf sm
line 661: endif
line 662: 
line 663: if !has_key(g:polyglot_is_disabled, 'sieve')
line 664:   au BufNewFile,BufRead *.sieve,*.siv setf sieve
line 665: endif
line 666: 
line 667: if !has_key(g:polyglot_is_disabled, 'sdl')
line 668:   au BufNewFile,BufRead *.pr,*.sdl setf sdl
line 669: endif
line 670: 
line 671: if !has_key(g:polyglot_is_disabled, 'sd')
line 672:   au BufNewFile,BufRead *.sd setf sd
line 673: endif
line 674: 
line 675: if !has_key(g:polyglot_is_disabled, 'scilab')
line 676:   au BufNewFile,BufRead *.sce,*.sci setf scilab
line 677: endif
line 678: 
line 679: if !has_key(g:polyglot_is_disabled, 'sbt')
line 680:   au BufNewFile,BufRead *.sbt setf sbt
line 681: endif
line 682: 
line 683: if !has_key(g:polyglot_is_disabled, 'sather')
line 684:   au BufNewFile,BufRead *.sa setf sather
line 685: endif
line 686: 
line 687: if !has_key(g:polyglot_is_disabled, 'sass')
line 688:   au BufNewFile,BufRead *.sass setf sass
line 689: endif
line 690: 
line 691: if !has_key(g:polyglot_is_disabled, 'sas')
line 692:   au BufNewFile,BufRead *.sas setf sas
line 693: endif
line 694: 
line 695: if !has_key(g:polyglot_is_disabled, 'samba')
line 696:   au BufNewFile,BufRead smb.conf setf samba
line 697: endif
line 698: 
line 699: if !has_key(g:polyglot_is_disabled, 'slang')
line 700:   au BufNewFile,BufRead *.sl setf slang
line 701: endif
line 702: 
line 703: if !has_key(g:polyglot_is_disabled, 'rtf')
line 704:   au BufNewFile,BufRead *.rtf setf rtf
line 705: endif
line 706: 
line 707: if !has_key(g:polyglot_is_disabled, 'rpcgen')
line 708:   au BufNewFile,BufRead *.x setf rpcgen
line 709: endif
line 710: 
line 711: if !has_key(g:polyglot_is_disabled, 'robots')
line 712:   au BufNewFile,BufRead robots.txt setf robots
line 713: endif
line 714: 
line 715: if !has_key(g:polyglot_is_disabled, 'rpl')
line 716:   au BufNewFile,BufRead *.rpl setf rpl
line 717: endif
line 718: 
line 719: if !has_key(g:polyglot_is_disabled, 'rng')
line 720:   au BufNewFile,BufRead *.rng setf rng
line 721: endif
line 722: 
line 723: if !has_key(g:polyglot_is_disabled, 'rnc')
line 724:   au BufNewFile,BufRead *.rnc setf rnc
line 725: endif
line 726: 
line 727: if !has_key(g:polyglot_is_disabled, 'resolv')
line 728:   au BufNewFile,BufRead resolv.conf setf resolv
line 729: endif
line 730: 
line 731: if !has_key(g:polyglot_is_disabled, 'remind')
line 732:   au BufNewFile,BufRead *.rem,*.remind,{.,}reminders setf remind
line 733:   au BufNewFile,BufRead .reminders* call s:StarSetf('remind')
line 734: endif
line 735: 
line 736: if !has_key(g:polyglot_is_disabled, 'rrst')
line 737:   au BufNewFile,BufRead *.rrst,*.srst setf rrst
line 738: endif
line 739: 
line 740: if !has_key(g:polyglot_is_disabled, 'rmd')
line 741:   au BufNewFile,BufRead *.rmd,*.smd setf rmd
line 742: endif
line 743: 
line 744: if !has_key(g:polyglot_is_disabled, 'rnoweb')
line 745:   au BufNewFile,BufRead *.rnw,*.snw setf rnoweb
line 746: endif
line 747: 
line 748: if !has_key(g:polyglot_is_disabled, 'rexx')
line 749:   au BufNewFile,BufRead *.jrexx,*.orx,*.rex,*.rexx,*.rexxj,*.rxj,*.rxo,*.testGroup,*.testUnit setf rexx
line 750: endif
line 751: 
line 752: if !has_key(g:polyglot_is_disabled, 'rego')
line 753:   au BufNewFile,BufRead *.rego setf rego
line 754: endif
line 755: 
line 756: if !has_key(g:polyglot_is_disabled, 'rib')
line 757:   au BufNewFile,BufRead *.rib setf rib
line 758: endif
line 759: 
line 760: if !has_key(g:polyglot_is_disabled, 'readline')
line 761:   au BufNewFile,BufRead {.,}inputrc,inputrc setf readline
line 762: endif
line 763: 
line 764: if !has_key(g:polyglot_is_disabled, 'rcs')
line 765:   au BufNewFile,BufRead *\,v setf rcs
line 766: endif
line 767: 
line 768: if !has_key(g:polyglot_is_disabled, 'ratpoison')
line 769:   au BufNewFile,BufRead {.,}ratpoisonrc,ratpoisonrc setf ratpoison
line 770: endif
line 771: 
line 772: if !has_key(g:polyglot_is_disabled, 'radiance')
line 773:   au BufNewFile,BufRead *.mat,*.rad setf radiance
line 774: endif
line 775: 
line 776: if !has_key(g:polyglot_is_disabled, 'pyrex')
line 777:   au BufNewFile,BufRead *.pxd,*.pyx setf pyrex
line 778: endif
line 779: 
line 780: if !has_key(g:polyglot_is_disabled, 'protocols')
line 781:   au BufNewFile,BufRead */etc/protocols setf protocols
line 782: endif
line 783: 
line 784: if !has_key(g:polyglot_is_disabled, 'promela')
line 785:   au BufNewFile,BufRead *.pml setf promela
line 786: endif
line 787: 
line 788: if !has_key(g:polyglot_is_disabled, 'psf')
line 789:   au BufNewFile,BufRead *.psf setf psf
line 790: endif
line 791: 
line 792: if !has_key(g:polyglot_is_disabled, 'procmail')
line 793:   au BufNewFile,BufRead {.,}procmail,{.,}procmailrc setf procmail
line 794: endif
line 795: 
line 796: if !has_key(g:polyglot_is_disabled, 'privoxy')
line 797:   au BufNewFile,BufRead *.action setf privoxy
line 798: endif
line 799: 
line 800: if !has_key(g:polyglot_is_disabled, 'obj')
line 801:   au BufNewFile,BufRead *.obj setf obj
line 802: endif
line 803: 
line 804: if !has_key(g:polyglot_is_disabled, 'ppwiz')
line 805:   au BufNewFile,BufRead *.ih,*.it setf ppwiz
line 806: endif
line 807: 
line 808: if !has_key(g:polyglot_is_disabled, 'pccts')
line 809:   au BufNewFile,BufRead *.g setf pccts
line 810: endif
line 811: 
line 812: if !has_key(g:polyglot_is_disabled, 'povini')
line 813:   au BufNewFile,BufRead {.,}povrayrc setf povini
line 814: endif
line 815: 
line 816: if !has_key(g:polyglot_is_disabled, 'pov')
line 817:   au BufNewFile,BufRead *.pov setf pov
line 818: endif
line 819: 
line 820: if !has_key(g:polyglot_is_disabled, 'ppd')
line 821:   au BufNewFile,BufRead *.ppd setf ppd
line 822: endif
line 823: 
line 824: if !has_key(g:polyglot_is_disabled, 'postscr')
line 825:   au BufNewFile,BufRead *.afm,*.ai,*.eps,*.epsf,*.epsi,*.pfa,*.ps setf postscr
line 826: endif
line 827: 
line 828: if !has_key(g:polyglot_is_disabled, 'pfmain')
line 829:   au BufNewFile,BufRead main.cf setf pfmain
line 830: endif
line 831: 
line 832: if !has_key(g:polyglot_is_disabled, 'po')
line 833:   au BufNewFile,BufRead *.po,*.pot setf po
line 834: endif
line 835: 
line 836: if !has_key(g:polyglot_is_disabled, 'plp')
line 837:   au BufNewFile,BufRead *.plp setf plp
line 838: endif
line 839: 
line 840: if !has_key(g:polyglot_is_disabled, 'plsql')
line 841:   au BufNewFile,BufRead *.pls,*.plsql setf plsql
line 842: endif
line 843: 
line 844: if !has_key(g:polyglot_is_disabled, 'plm')
line 845:   au BufNewFile,BufRead *.p36,*.pac,*.plm setf plm
line 846: endif
line 847: 
line 848: if !has_key(g:polyglot_is_disabled, 'pli')
line 849:   au BufNewFile,BufRead *.pl1,*.pli setf pli
line 850: endif
line 851: 
line 852: if !has_key(g:polyglot_is_disabled, 'pine')
line 853:   au BufNewFile,BufRead {.,}pinerc,{.,}pinercex,pinerc,pinercex setf pine
line 854: endif
line 855: 
line 856: if !has_key(g:polyglot_is_disabled, 'pilrc')
line 857:   au BufNewFile,BufRead *.rcp setf pilrc
line 858: endif
line 859: 
line 860: if !has_key(g:polyglot_is_disabled, 'pinfo')
line 861:   au BufNewFile,BufRead */.pinforc,*/etc/pinforc setf pinfo
line 862: endif
line 863: 
line 864: if !has_key(g:polyglot_is_disabled, 'cmod')
line 865:   au BufNewFile,BufRead *.cmod setf cmod
line 866: endif
line 867: 
line 868: if !has_key(g:polyglot_is_disabled, 'pike')
line 869:   au BufNewFile,BufRead *.pike,*.pmod setf pike
line 870: endif
line 871: 
line 872: if !has_key(g:polyglot_is_disabled, 'pdf')
line 873:   au BufNewFile,BufRead *.pdf setf pdf
line 874: endif
line 875: 
line 876: if !has_key(g:polyglot_is_disabled, 'pascal')
line 877:   au BufNewFile,BufRead *.dpr,*.lpr,*.pas,*.pp setf pascal
line 878: endif
line 879: 
line 880: if !has_key(g:polyglot_is_disabled, 'passwd')
line 881:   au BufNewFile,BufRead */etc/passwd,*/etc/passwd-,*/etc/passwd.edit,*/etc/shadow,*/etc/shadow-,*/etc/shadow.edit,*/var/backups/passwd.bak,*/var/backups/shadow.bak setf passwd
line 882: endif
line 883: 
line 884: if !has_key(g:polyglot_is_disabled, 'papp')
line 885:   au BufNewFile,BufRead *.papp,*.pxml,*.pxsl setf papp
line 886: endif
line 887: 
line 888: if !has_key(g:polyglot_is_disabled, 'pamenv')
line 889:   au BufNewFile,BufRead {.,}pam_environment,pam_env.conf setf pamenv
line 890: endif
line 891: 
line 892: if !has_key(g:polyglot_is_disabled, 'pamconf')
line 893:   au BufNewFile,BufRead */etc/pam.conf setf pamconf
line 894:   au BufNewFile,BufRead */etc/pam.d/* call s:StarSetf('pamconf')
line 895: endif
line 896: 
line 897: if !has_key(g:polyglot_is_disabled, 'pf')
line 898:   au BufNewFile,BufRead pf.conf setf pf
line 899: endif
line 900: 
line 901: if !has_key(g:polyglot_is_disabled, 'ora')
line 902:   au BufNewFile,BufRead *.ora setf ora
line 903: endif
line 904: 
line 905: if !has_key(g:polyglot_is_disabled, 'opl')
line 906:   au BufNewFile,BufRead *.[Oo][Pp][Ll] setf opl
line 907: endif
line 908: 
line 909: if !has_key(g:polyglot_is_disabled, 'openroad')
line 910:   au BufNewFile,BufRead *.or setf openroad
line 911: endif
line 912: 
line 913: if !has_key(g:polyglot_is_disabled, 'omnimark')
line 914:   au BufNewFile,BufRead *.xin,*.xom setf omnimark
line 915: endif
line 916: 
line 917: if !has_key(g:polyglot_is_disabled, 'occam')
line 918:   au BufNewFile,BufRead *.occ setf occam
line 919: endif
line 920: 
line 921: if !has_key(g:polyglot_is_disabled, 'nsis')
line 922:   au BufNewFile,BufRead *.nsh,*.nsi setf nsis
line 923: endif
line 924: 
line 925: if !has_key(g:polyglot_is_disabled, 'nqc')
line 926:   au BufNewFile,BufRead *.nqc setf nqc
line 927: endif
line 928: 
line 929: if !has_key(g:polyglot_is_disabled, 'nroff')
line 930:   au BufNewFile,BufRead *.1,*.1in,*.1m,*.1x,*.2,*.3,*.3in,*.3m,*.3p,*.3pm,*.3qt,*.3x,*.4,*.5,*.6,*.7,*.8,*.9,*.man,*.mdoc setf nroff
line 931:   au BufNewFile,BufRead *.mom,*.nr,*.roff,*.tmac,*.tr setf nroff
line 932:   au BufNewFile,BufRead tmac.* call s:StarSetf('nroff')
line 933: endif
line 934: 
line 935: if !has_key(g:polyglot_is_disabled, 'ncf')
line 936:   au BufNewFile,BufRead *.ncf setf ncf
line 937: endif
line 938: 
line 939: if !has_key(g:polyglot_is_disabled, 'ninja')
line 940:   au BufNewFile,BufRead *.ninja setf ninja
line 941: endif
line 942: 
line 943: if !has_key(g:polyglot_is_disabled, 'netrc')
line 944:   au BufNewFile,BufRead {.,}netrc setf netrc
line 945: endif
line 946: 
line 947: if !has_key(g:polyglot_is_disabled, 'neomuttrc')
line 948:   au BufNewFile,BufRead Neomuttrc setf neomuttrc
line 949:   au BufNewFile,BufRead neomuttrc* call s:StarSetf('neomuttrc')
line 950:   au BufNewFile,BufRead Neomuttrc* call s:StarSetf('neomuttrc')
line 951:   au BufNewFile,BufRead .neomuttrc* call s:StarSetf('neomuttrc')
line 952:   au BufNewFile,BufRead */.neomutt/neomuttrc* call s:StarSetf('neomuttrc')
line 953: endif
line 954: 
line 955: if !has_key(g:polyglot_is_disabled, 'natural')
line 956:   au BufNewFile,BufRead *.NS[ACGLMNPS] setf natural
line 957: endif
line 958: 
line 959: if !has_key(g:polyglot_is_disabled, 'nanorc')
line 960:   au BufNewFile,BufRead *.nanorc,*/etc/nanorc setf nanorc
line 961: endif
line 962: 
line 963: if !has_key(g:polyglot_is_disabled, 'n1ql')
line 964:   au BufNewFile,BufRead *.n1ql,*.nql setf n1ql
line 965: endif
line 966: 
line 967: if !has_key(g:polyglot_is_disabled, 'mush')
line 968:   au BufNewFile,BufRead *.mush setf mush
line 969: endif
line 970: 
line 971: if !has_key(g:polyglot_is_disabled, 'mupad')
line 972:   au BufNewFile,BufRead *.mu setf mupad
line 973: endif
line 974: 
line 975: if !has_key(g:polyglot_is_disabled, 'muttrc')
line 976:   au BufNewFile,BufRead Mutt{ng,}rc setf muttrc
line 977:   au BufNewFile,BufRead mutt{ng,}rc* call s:StarSetf('muttrc')
line 978:   au BufNewFile,BufRead Mutt{ng,}rc* call s:StarSetf('muttrc')
line 979:   au BufNewFile,BufRead .mutt{ng,}rc* call s:StarSetf('muttrc')
line 980:   au BufNewFile,BufRead */etc/Muttrc.d/* call s:StarSetf('muttrc')
line 981:   au BufNewFile,BufRead */.mutt{ng,}/mutt{ng,}rc* call s:StarSetf('muttrc')
line 982: endif
line 983: 
line 984: if !has_key(g:polyglot_is_disabled, 'msql')
line 985:   au BufNewFile,BufRead *.msql setf msql
line 986: endif
line 987: 
line 988: if !has_key(g:polyglot_is_disabled, 'mrxvtrc')
line 989:   au BufNewFile,BufRead {.,}mrxvtrc,mrxvtrc setf mrxvtrc
line 990: endif
line 991: 
line 992: if !has_key(g:polyglot_is_disabled, 'srec')
line 993:   au BufNewFile,BufRead *.mot,*.s19,*.s28,*.s37,*.srec setf srec
line 994: endif
line 995: 
line 996: if !has_key(g:polyglot_is_disabled, 'mplayerconf')
line 997:   au BufNewFile,BufRead */.mplayer/config,mplayer.conf setf mplayerconf
line 998: endif
line 999: 
line 1000: if !has_key(g:polyglot_is_disabled, 'modconf')
line 1001:   au BufNewFile,BufRead */etc/conf.modules,*/etc/modules,*/etc/modules.conf setf modconf
line 1002:   au BufNewFile,BufRead */etc/modprobe.* call s:StarSetf('modconf')
line 1003: endif
line 1004: 
line 1005: if !has_key(g:polyglot_is_disabled, 'moo')
line 1006:   au BufNewFile,BufRead *.moo setf moo
line 1007: endif
line 1008: 
line 1009: if !has_key(g:polyglot_is_disabled, 'monk')
line 1010:   au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc setf monk
line 1011: endif
line 1012: 
line 1013: if !has_key(g:polyglot_is_disabled, 'modula3')
line 1014:   au BufNewFile,BufRead *.[mi][3g] setf modula3
line 1015: endif
line 1016: 
line 1017: if !has_key(g:polyglot_is_disabled, 'modula2')
line 1018:   au BufNewFile,BufRead *.DEF,*.MOD,*.m2,*.mi setf modula2
line 1019: endif
line 1020: 
line 1021: if !has_key(g:polyglot_is_disabled, 'mmp')
line 1022:   au BufNewFile,BufRead *.mmp setf mmp
line 1023: endif
line 1024: 
line 1025: if !has_key(g:polyglot_is_disabled, 'mix')
line 1026:   au BufNewFile,BufRead *.mix,*.mixal setf mix
line 1027: endif
line 1028: 
line 1029: if !has_key(g:polyglot_is_disabled, 'mgl')
line 1030:   au BufNewFile,BufRead *.mgl setf mgl
line 1031: endif
line 1032: 
line 1033: if !has_key(g:polyglot_is_disabled, 'mp')
line 1034:   au BufNewFile,BufRead *.mp setf mp
line 1035: endif
line 1036: 
line 1037: if !has_key(g:polyglot_is_disabled, 'mf')
line 1038:   au BufNewFile,BufRead *.mf setf mf
line 1039: endif
line 1040: 
line 1041: if !has_key(g:polyglot_is_disabled, 'messages')
line 1042:   au BufNewFile,BufRead */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*} setf messages
line 1043: endif
line 1044: 
line 1045: if !has_key(g:polyglot_is_disabled, 'hgcommit')
line 1046:   au BufNewFile,BufRead hg-editor-*.txt setf hgcommit
line 1047: endif
line 1048: 
line 1049: if !has_key(g:polyglot_is_disabled, 'mel')
line 1050:   au BufNewFile,BufRead *.mel setf mel
line 1051: endif
line 1052: 
line 1053: if !has_key(g:polyglot_is_disabled, 'maple')
line 1054:   au BufNewFile,BufRead *.mpl,*.mv,*.mws setf maple
line 1055: endif
line 1056: 
line 1057: if !has_key(g:polyglot_is_disabled, 'manconf')
line 1058:   au BufNewFile,BufRead */etc/man.conf,man.config setf manconf
line 1059: endif
line 1060: 
line 1061: if !has_key(g:polyglot_is_disabled, 'mallard')
line 1062:   au BufNewFile,BufRead *.page setf mallard
line 1063: endif
line 1064: 
line 1065: if !has_key(g:polyglot_is_disabled, 'ist')
line 1066:   au BufNewFile,BufRead *.ist,*.mst setf ist
line 1067: endif
line 1068: 
line 1069: if !has_key(g:polyglot_is_disabled, 'mailcap')
line 1070:   au BufNewFile,BufRead {.,}mailcap,mailcap setf mailcap
line 1071: endif
line 1072: 
line 1073: if !has_key(g:polyglot_is_disabled, 'mailaliases')
line 1074:   au BufNewFile,BufRead */etc/aliases,*/etc/mail/aliases setf mailaliases
line 1075: endif
line 1076: 
line 1077: if !has_key(g:polyglot_is_disabled, 'mail')
line 1078:   au BufNewFile,BufRead *.eml,{.,}article,{.,}article.\d\+,{.,}followup,{.,}letter,{.,}letter.\d\+,/tmp/SLRN[0-9A-Z.]\+,ae\d\+.txt,mutt[[:alnum:]_-]\\\{6\},mutt{ng,}-*-\w\+,neomutt-*-\w\+,neomutt[[:alnum:]_-]\\\{6\},pico.\d\+,snd.\d\+,{neo,}mutt[[:alnum:]._-]\\\{6\} setf mail
line 1079:   au BufNewFile,BufRead reportbug-* call s:StarSetf('mail')
line 1080: endif
line 1081: 
line 1082: if !has_key(g:polyglot_is_disabled, 'mgp')
line 1083:   au BufNewFile,BufRead *.mgp setf mgp
line 1084: endif
line 1085: 
line 1086: if !has_key(g:polyglot_is_disabled, 'lss')
line 1087:   au BufNewFile,BufRead *.lss setf lss
line 1088: endif
line 1089: 
line 1090: if !has_key(g:polyglot_is_disabled, 'lsl')
line 1091:   au BufNewFile,BufRead *.lsl setf lsl
line 1092: endif
line 1093: 
line 1094: if !has_key(g:polyglot_is_disabled, 'lout')
line 1095:   au BufNewFile,BufRead *.lou,*.lout setf lout
line 1096: endif
line 1097: 
line 1098: if !has_key(g:polyglot_is_disabled, 'lotos')
line 1099:   au BufNewFile,BufRead *.lot,*.lotos setf lotos
line 1100: endif
line 1101: 
line 1102: if !has_key(g:polyglot_is_disabled, 'logtalk')
line 1103:   au BufNewFile,BufRead *.lgt setf logtalk
line 1104: endif
line 1105: 
line 1106: if !has_key(g:polyglot_is_disabled, 'logindefs')
line 1107:   au BufNewFile,BufRead */etc/login.defs setf logindefs
line 1108: endif
line 1109: 
line 1110: if !has_key(g:polyglot_is_disabled, 'loginaccess')
line 1111:   au BufNewFile,BufRead */etc/login.access setf loginaccess
line 1112: endif
line 1113: 
line 1114: if !has_key(g:polyglot_is_disabled, 'litestep')
line 1115:   au BufNewFile,BufRead */LiteStep/*/*.rc setf litestep
line 1116: endif
line 1117: 
line 1118: if !has_key(g:polyglot_is_disabled, 'lite')
line 1119:   au BufNewFile,BufRead *.lite,*.lt setf lite
line 1120: endif
line 1121: 
line 1122: if !has_key(g:polyglot_is_disabled, 'liquid')
line 1123:   au BufNewFile,BufRead *.liquid setf liquid
line 1124: endif
line 1125: 
line 1126: if !has_key(g:polyglot_is_disabled, 'lisp')
line 1127:   au BufNewFile,BufRead *.cl,*.el,*.lisp,*.lsp,{.,}emacs,{.,}sawfishrc,{.,}sbclrc,sbclrc setf lisp
line 1128: endif
line 1129: 
line 1130: if !has_key(g:polyglot_is_disabled, 'lilo')
line 1131:   au BufNewFile,BufRead lilo.conf setf lilo
line 1132:   au BufNewFile,BufRead lilo.conf* call s:StarSetf('lilo')
line 1133: endif
line 1134: 
line 1135: if !has_key(g:polyglot_is_disabled, 'lifelines')
line 1136:   au BufNewFile,BufRead *.ll setf lifelines
line 1137: endif
line 1138: 
line 1139: if !has_key(g:polyglot_is_disabled, 'lftp')
line 1140:   au BufNewFile,BufRead *lftp/rc,{.,}lftprc,lftp.conf setf lftp
line 1141: endif
line 1142: 
line 1143: if !has_key(g:polyglot_is_disabled, 'sensors')
line 1144:   au BufNewFile,BufRead */etc/sensors.conf,*/etc/sensors3.conf setf sensors
line 1145: endif
line 1146: 
line 1147: if !has_key(g:polyglot_is_disabled, 'libao')
line 1148:   au BufNewFile,BufRead */.libao,*/etc/libao.conf setf libao
line 1149: endif
line 1150: 
line 1151: if !has_key(g:polyglot_is_disabled, 'lex')
line 1152:   au BufNewFile,BufRead *.l,*.l++,*.lex,*.lxx setf lex
line 1153: endif
line 1154: 
line 1155: if !has_key(g:polyglot_is_disabled, 'ld')
line 1156:   au BufNewFile,BufRead *.ld setf ld
line 1157: endif
line 1158: 
line 1159: if !has_key(g:polyglot_is_disabled, 'ldif')
line 1160:   au BufNewFile,BufRead *.ldif setf ldif
line 1161: endif
line 1162: 
line 1163: if !has_key(g:polyglot_is_disabled, 'lprolog')
line 1164:   au BufNewFile,BufRead *.sig setf lprolog
line 1165: endif
line 1166: 
line 1167: if !has_key(g:polyglot_is_disabled, 'limits')
line 1168:   au BufNewFile,BufRead */etc/*limits.conf,*/etc/*limits.d/*.conf,*/etc/limits setf limits
line 1169: endif
line 1170: 
line 1171: if !has_key(g:polyglot_is_disabled, 'latte')
line 1172:   au BufNewFile,BufRead *.latte,*.lte setf latte
line 1173: endif
line 1174: 
line 1175: if !has_key(g:polyglot_is_disabled, 'lace')
line 1176:   au BufNewFile,BufRead *.ACE,*.ace setf lace
line 1177: endif
line 1178: 
line 1179: if !has_key(g:polyglot_is_disabled, 'kconfig')
line 1180:   au BufNewFile,BufRead Kconfig,Kconfig.debug setf kconfig
line 1181:   au BufNewFile,BufRead Kconfig.* call s:StarSetf('kconfig')
line 1182: endif
line 1183: 
line 1184: if !has_key(g:polyglot_is_disabled, 'kscript')
line 1185:   au BufNewFile,BufRead *.ks setf kscript
line 1186: endif
line 1187: 
line 1188: if !has_key(g:polyglot_is_disabled, 'kivy')
line 1189:   au BufNewFile,BufRead *.kv setf kivy
line 1190: endif
line 1191: 
line 1192: if !has_key(g:polyglot_is_disabled, 'kwt')
line 1193:   au BufNewFile,BufRead *.k setf kwt
line 1194: endif
line 1195: 
line 1196: if !has_key(g:polyglot_is_disabled, 'kix')
line 1197:   au BufNewFile,BufRead *.kix setf kix
line 1198: endif
line 1199: 
line 1200: if !has_key(g:polyglot_is_disabled, 'jovial')
line 1201:   au BufNewFile,BufRead *.j73,*.jov,*.jovial setf jovial
line 1202: endif
line 1203: 
line 1204: if !has_key(g:polyglot_is_disabled, 'jgraph')
line 1205:   au BufNewFile,BufRead *.jgr setf jgraph
line 1206: endif
line 1207: 
line 1208: if !has_key(g:polyglot_is_disabled, 'jess')
line 1209:   au BufNewFile,BufRead *.clp setf jess
line 1210: endif
line 1211: 
line 1212: if !has_key(g:polyglot_is_disabled, 'jproperties')
line 1213:   au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_?? setf jproperties
line 1214:   au BufNewFile,BufRead *.properties_??_??_* call s:StarSetf('jproperties')
line 1215: endif
line 1216: 
line 1217: if !has_key(g:polyglot_is_disabled, 'jsp')
line 1218:   au BufNewFile,BufRead *.jsp setf jsp
line 1219: endif
line 1220: 
line 1221: if !has_key(g:polyglot_is_disabled, 'javacc')
line 1222:   au BufNewFile,BufRead *.jj,*.jjt setf javacc
line 1223: endif
line 1224: 
line 1225: if !has_key(g:polyglot_is_disabled, 'java')
line 1226:   au BufNewFile,BufRead *.jav,*.java setf java
line 1227: endif
line 1228: 
line 1229: if !has_key(g:polyglot_is_disabled, 'jam')
line 1230:   au BufNewFile,BufRead *.jpl,*.jpr setf jam
line 1231:   au BufNewFile,BufRead Prl*.* call s:StarSetf('jam')
line 1232:   au BufNewFile,BufRead JAM*.* call s:StarSetf('jam')
line 1233: endif
line 1234: 
line 1235: if !has_key(g:polyglot_is_disabled, 'jal')
line 1236:   au BufNewFile,BufRead *.JAL,*.jal setf jal
line 1237: endif
line 1238: 
line 1239: if !has_key(g:polyglot_is_disabled, 'j')
line 1240:   au BufNewFile,BufRead *.ijs setf j
line 1241: endif
line 1242: 
line 1243: if !has_key(g:polyglot_is_disabled, 'iss')
line 1244:   au BufNewFile,BufRead *.iss setf iss
line 1245: endif
line 1246: 
line 1247: if !has_key(g:polyglot_is_disabled, 'inittab')
line 1248:   au BufNewFile,BufRead inittab setf inittab
line 1249: endif
line 1250: 
line 1251: if !has_key(g:polyglot_is_disabled, 'fgl')
line 1252:   au BufNewFile,BufRead *.4gh,*.4gl,*.m4gl setf fgl
line 1253: endif
line 1254: 
line 1255: if !has_key(g:polyglot_is_disabled, 'ipfilter')
line 1256:   au BufNewFile,BufRead ipf.conf,ipf.rules,ipf6.conf setf ipfilter
line 1257: endif
line 1258: 
line 1259: if !has_key(g:polyglot_is_disabled, 'usw2kagtlog')
line 1260:   au BufNewFile,BufRead *.usw2kagt.log\c,usw2kagt.*.log\c,usw2kagt.log\c setf usw2kagtlog
line 1261: endif
line 1262: 
line 1263: if !has_key(g:polyglot_is_disabled, 'usserverlog')
line 1264:   au BufNewFile,BufRead *.usserver.log\c,usserver.*.log\c,usserver.log\c setf usserverlog
line 1265: endif
line 1266: 
line 1267: if !has_key(g:polyglot_is_disabled, 'upstreaminstalllog')
line 1268:   au BufNewFile,BufRead *.upstreaminstall.log\c,upstreaminstall.*.log\c,upstreaminstall.log\c setf upstreaminstalllog
line 1269: endif
line 1270: 
line 1271: if !has_key(g:polyglot_is_disabled, 'upstreamlog')
line 1272:   au BufNewFile,BufRead *.upstream.log\c,UPSTREAM-*.log\c,fdrupstream.log,upstream.*.log\c,upstream.log\c setf upstreamlog
line 1273: endif
line 1274: 
line 1275: if !has_key(g:polyglot_is_disabled, 'upstreamdat')
line 1276:   au BufNewFile,BufRead *.upstream.dat\c,upstream.*.dat\c,upstream.dat\c setf upstreamdat
line 1277: endif
line 1278: 
line 1279: if !has_key(g:polyglot_is_disabled, 'initng')
line 1280:   au BufNewFile,BufRead *.ii,*/etc/initng/*/*.i setf initng
line 1281: endif
line 1282: 
line 1283: if !has_key(g:polyglot_is_disabled, 'inform')
line 1284:   au BufNewFile,BufRead *.INF,*.inf setf inform
line 1285: endif
line 1286: 
line 1287: if !has_key(g:polyglot_is_disabled, 'indent')
line 1288:   au BufNewFile,BufRead {.,}indent.pro,indentrc setf indent
line 1289: endif
line 1290: 
line 1291: if !has_key(g:polyglot_is_disabled, 'icemenu')
line 1292:   au BufNewFile,BufRead */.icewm/menu setf icemenu
line 1293: endif
line 1294: 
line 1295: if !has_key(g:polyglot_is_disabled, 'msidl')
line 1296:   au BufNewFile,BufRead *.mof,*.odl setf msidl
line 1297: endif
line 1298: 
line 1299: if !has_key(g:polyglot_is_disabled, 'icon')
line 1300:   au BufNewFile,BufRead *.icn setf icon
line 1301: endif
line 1302: 
line 1303: if !has_key(g:polyglot_is_disabled, 'hb')
line 1304:   au BufNewFile,BufRead *.hb setf hb
line 1305: endif
line 1306: 
line 1307: if !has_key(g:polyglot_is_disabled, 'hostsaccess')
line 1308:   au BufNewFile,BufRead */etc/hosts.allow,*/etc/hosts.deny setf hostsaccess
line 1309: endif
line 1310: 
line 1311: if !has_key(g:polyglot_is_disabled, 'hostconf')
line 1312:   au BufNewFile,BufRead */etc/host.conf setf hostconf
line 1313: endif
line 1314: 
line 1315: if !has_key(g:polyglot_is_disabled, 'template')
line 1316:   au BufNewFile,BufRead *.tmpl setf template
line 1317: endif
line 1318: 
line 1319: if !has_key(g:polyglot_is_disabled, 'htmlm4')
line 1320:   au BufNewFile,BufRead *.html.m4 setf htmlm4
line 1321: endif
line 1322: 
line 1323: if !has_key(g:polyglot_is_disabled, 'tilde')
line 1324:   au BufNewFile,BufRead *.t.html setf tilde
line 1325: endif
line 1326: 
line 1327: if !has_key(g:polyglot_is_disabled, 'hollywood')
line 1328:   au BufNewFile,BufRead *.hws setf hollywood
line 1329: endif
line 1330: 
line 1331: if !has_key(g:polyglot_is_disabled, 'hex')
line 1332:   au BufNewFile,BufRead *.h32,*.hex setf hex
line 1333: endif
line 1334: 
line 1335: if !has_key(g:polyglot_is_disabled, 'hastepreproc')
line 1336:   au BufNewFile,BufRead *.htpp setf hastepreproc
line 1337: endif
line 1338: 
line 1339: if !has_key(g:polyglot_is_disabled, 'haste')
line 1340:   au BufNewFile,BufRead *.ht setf haste
line 1341: endif
line 1342: 
line 1343: if !has_key(g:polyglot_is_disabled, 'chaskell')
line 1344:   au BufNewFile,BufRead *.chs setf chaskell
line 1345: endif
line 1346: 
line 1347: if !has_key(g:polyglot_is_disabled, 'lhaskell')
line 1348:   au BufNewFile,BufRead *.lhs setf lhaskell
line 1349: endif
line 1350: 
line 1351: if !has_key(g:polyglot_is_disabled, 'gtkrc')
line 1352:   au BufNewFile,BufRead {.,}gtkrc,gtkrc setf gtkrc
line 1353:   au BufNewFile,BufRead gtkrc* call s:StarSetf('gtkrc')
line 1354:   au BufNewFile,BufRead .gtkrc* call s:StarSetf('gtkrc')
line 1355: endif
line 1356: 
line 1357: if !has_key(g:polyglot_is_disabled, 'group')
line 1358:   au BufNewFile,BufRead */etc/group,*/etc/group-,*/etc/group.edit,*/etc/gshadow,*/etc/gshadow-,*/etc/gshadow.edit,*/var/backups/group.bak,*/var/backups/gshadow.bak setf group
line 1359: endif
line 1360: 
line 1361: if !has_key(g:polyglot_is_disabled, 'gsp')
line 1362:   au BufNewFile,BufRead *.gsp setf gsp
line 1363: endif
line 1364: 
line 1365: if !has_key(g:polyglot_is_disabled, 'gretl')
line 1366:   au BufNewFile,BufRead *.gretl setf gretl
line 1367: endif
line 1368: 
line 1369: if !has_key(g:polyglot_is_disabled, 'grads')
line 1370:   au BufNewFile,BufRead *.gs setf grads
line 1371: endif
line 1372: 
line 1373: if !has_key(g:polyglot_is_disabled, 'gitolite')
line 1374:   au BufNewFile,BufRead gitolite.conf setf gitolite
line 1375:   au BufNewFile,BufRead */gitolite-admin/conf/* call s:StarSetf('gitolite')
line 1376: endif
line 1377: 
line 1378: if !has_key(g:polyglot_is_disabled, 'gnash')
line 1379:   au BufNewFile,BufRead {.,}gnashpluginrc,{.,}gnashrc,gnashpluginrc,gnashrc setf gnash
line 1380: endif
line 1381: 
line 1382: if !has_key(g:polyglot_is_disabled, 'gpg')
line 1383:   au BufNewFile,BufRead */.gnupg/gpg.conf,*/.gnupg/options,*/usr/*/gnupg/options.skel setf gpg
line 1384: endif
line 1385: 
line 1386: if !has_key(g:polyglot_is_disabled, 'gp')
line 1387:   au BufNewFile,BufRead *.gp,{.,}gprc setf gp
line 1388: endif
line 1389: 
line 1390: if !has_key(g:polyglot_is_disabled, 'gkrellmrc')
line 1391:   au BufNewFile,BufRead gkrellmrc,gkrellmrc_? setf gkrellmrc
line 1392: endif
line 1393: 
line 1394: if !has_key(g:polyglot_is_disabled, 'gedcom')
line 1395:   au BufNewFile,BufRead *.ged,lltxxxxx.txt setf gedcom
line 1396:   au BufNewFile,BufRead */tmp/lltmp* call s:StarSetf('gedcom')
line 1397: endif
line 1398: 
line 1399: if !has_key(g:polyglot_is_disabled, 'gdmo')
line 1400:   au BufNewFile,BufRead *.gdmo,*.mo setf gdmo
line 1401: endif
line 1402: 
line 1403: if !has_key(g:polyglot_is_disabled, 'gdb')
line 1404:   au BufNewFile,BufRead {.,}gdbinit setf gdb
line 1405: endif
line 1406: 
line 1407: if !has_key(g:polyglot_is_disabled, 'fstab')
line 1408:   au BufNewFile,BufRead fstab,mtab setf fstab
line 1409: endif
line 1410: 
line 1411: if !has_key(g:polyglot_is_disabled, 'framescript')
line 1412:   au BufNewFile,BufRead *.fsl setf framescript
line 1413: endif
line 1414: 
line 1415: if !has_key(g:polyglot_is_disabled, 'fortran')
line 1416:   au BufNewFile,BufRead *.f,*.f03,*.f08,*.f77,*.f90,*.f95,*.for,*.fortran,*.fpp,*.ftn setf fortran
line 1417: endif
line 1418: 
line 1419: if !has_key(g:polyglot_is_disabled, 'reva')
line 1420:   au BufNewFile,BufRead *.frt setf reva
line 1421: endif
line 1422: 
line 1423: if !has_key(g:polyglot_is_disabled, 'focexec')
line 1424:   au BufNewFile,BufRead *.fex,*.focexec setf focexec
line 1425: endif
line 1426: 
line 1427: if !has_key(g:polyglot_is_disabled, 'fetchmail')
line 1428:   au BufNewFile,BufRead {.,}fetchmailrc setf fetchmail
line 1429: endif
line 1430: 
line 1431: if !has_key(g:polyglot_is_disabled, 'fan')
line 1432:   au BufNewFile,BufRead *.fan,*.fwt setf fan
line 1433: endif
line 1434: 
line 1435: if !has_key(g:polyglot_is_disabled, 'falcon')
line 1436:   au BufNewFile,BufRead *.fal setf falcon
line 1437: endif
line 1438: 
line 1439: if !has_key(g:polyglot_is_disabled, 'exports')
line 1440:   au BufNewFile,BufRead exports setf exports
line 1441: endif
line 1442: 
line 1443: if !has_key(g:polyglot_is_disabled, 'expect')
line 1444:   au BufNewFile,BufRead *.exp setf expect
line 1445: endif
line 1446: 
line 1447: if !has_key(g:polyglot_is_disabled, 'exim')
line 1448:   au BufNewFile,BufRead exim.conf setf exim
line 1449: endif
line 1450: 
line 1451: if !has_key(g:polyglot_is_disabled, 'csc')
line 1452:   au BufNewFile,BufRead *.csc setf csc
line 1453: endif
line 1454: 
line 1455: if !has_key(g:polyglot_is_disabled, 'esterel')
line 1456:   au BufNewFile,BufRead *.strl setf esterel
line 1457: endif
line 1458: 
line 1459: if !has_key(g:polyglot_is_disabled, 'esqlc')
line 1460:   au BufNewFile,BufRead *.EC,*.ec setf esqlc
line 1461: endif
line 1462: 
line 1463: if !has_key(g:polyglot_is_disabled, 'esmtprc')
line 1464:   au BufNewFile,BufRead *esmtprc setf esmtprc
line 1465: endif
line 1466: 
line 1467: if !has_key(g:polyglot_is_disabled, 'elmfilt')
line 1468:   au BufNewFile,BufRead filter-rules setf elmfilt
line 1469: endif
line 1470: 
line 1471: if !has_key(g:polyglot_is_disabled, 'elinks')
line 1472:   au BufNewFile,BufRead elinks.conf setf elinks
line 1473: endif
line 1474: 
line 1475: if !has_key(g:polyglot_is_disabled, 'ecd')
line 1476:   au BufNewFile,BufRead *.ecd setf ecd
line 1477: endif
line 1478: 
line 1479: if !has_key(g:polyglot_is_disabled, 'edif')
line 1480:   au BufNewFile,BufRead *.ed\(f\|if\|o\) setf edif
line 1481: endif
line 1482: 
line 1483: if !has_key(g:polyglot_is_disabled, 'dts')
line 1484:   au BufNewFile,BufRead *.dts,*.dtsi setf dts
line 1485: endif
line 1486: 
line 1487: if !has_key(g:polyglot_is_disabled, 'dtd')
line 1488:   au BufNewFile,BufRead *.dtd setf dtd
line 1489: endif
line 1490: 
line 1491: if !has_key(g:polyglot_is_disabled, 'dsl')
line 1492:   au BufNewFile,BufRead *.dsl setf dsl
line 1493: endif
line 1494: 
line 1495: if !has_key(g:polyglot_is_disabled, 'datascript')
line 1496:   au BufNewFile,BufRead *.ds setf datascript
line 1497: endif
line 1498: 
line 1499: if !has_key(g:polyglot_is_disabled, 'dracula')
line 1500:   au BufNewFile,BufRead *.drac,*.drc,*lpe,*lvs setf dracula
line 1501:   au BufNewFile,BufRead drac.* call s:StarSetf('dracula')
line 1502: endif
line 1503: 
line 1504: if !has_key(g:polyglot_is_disabled, 'def')
line 1505:   au BufNewFile,BufRead *.def setf def
line 1506: endif
line 1507: 
line 1508: if !has_key(g:polyglot_is_disabled, 'dylan')
line 1509:   au BufNewFile,BufRead *.dylan setf dylan
line 1510: endif
line 1511: 
line 1512: if !has_key(g:polyglot_is_disabled, 'dylanintr')
line 1513:   au BufNewFile,BufRead *.intr setf dylanintr
line 1514: endif
line 1515: 
line 1516: if !has_key(g:polyglot_is_disabled, 'dylanlid')
line 1517:   au BufNewFile,BufRead *.lid setf dylanlid
line 1518: endif
line 1519: 
line 1520: if !has_key(g:polyglot_is_disabled, 'dot')
line 1521:   au BufNewFile,BufRead *.dot,*.gv setf dot
line 1522: endif
line 1523: 
line 1524: if !has_key(g:polyglot_is_disabled, 'dircolors')
line 1525:   au BufNewFile,BufRead */etc/DIR_COLORS,{.,}dir_colors,{.,}dircolors setf dircolors
line 1526: endif
line 1527: 
line 1528: if !has_key(g:polyglot_is_disabled, 'diff')
line 1529:   au BufNewFile,BufRead *.diff,*.rej setf diff
line 1530: endif
line 1531: 
line 1532: if !has_key(g:polyglot_is_disabled, 'dictdconf')
line 1533:   au BufNewFile,BufRead dictd.conf setf dictdconf
line 1534: endif
line 1535: 
line 1536: if !has_key(g:polyglot_is_disabled, 'dictconf')
line 1537:   au BufNewFile,BufRead {.,}dictrc,dict.conf setf dictconf
line 1538: endif
line 1539: 
line 1540: if !has_key(g:polyglot_is_disabled, 'desktop')
line 1541:   au BufNewFile,BufRead *.desktop,*.directory setf desktop
line 1542: endif
line 1543: 
line 1544: if !has_key(g:polyglot_is_disabled, 'desc')
line 1545:   au BufNewFile,BufRead *.desc setf desc
line 1546: endif
line 1547: 
line 1548: if !has_key(g:polyglot_is_disabled, 'dnsmasq')
line 1549:   au BufNewFile,BufRead */etc/dnsmasq.conf setf dnsmasq
line 1550:   au BufNewFile,BufRead */etc/dnsmasq.d/* call s:StarSetf('dnsmasq')
line 1551: endif
line 1552: 
line 1553: if !has_key(g:polyglot_is_disabled, 'denyhosts')
line 1554:   au BufNewFile,BufRead denyhosts.conf setf denyhosts
line 1555: endif
line 1556: 
line 1557: if !has_key(g:polyglot_is_disabled, 'debsources')
line 1558:   au BufNewFile,BufRead */etc/apt/sources.list,*/etc/apt/sources.list.d/*.list setf debsources
line 1559: endif
line 1560: 
line 1561: if !has_key(g:polyglot_is_disabled, 'debcopyright')
line 1562:   au BufNewFile,BufRead */debian/copyright setf debcopyright
line 1563: endif
line 1564: 
line 1565: if !has_key(g:polyglot_is_disabled, 'debcontrol')
line 1566:   au BufNewFile,BufRead */debian/control setf debcontrol
line 1567: endif
line 1568: 
line 1569: if !has_key(g:polyglot_is_disabled, 'cuplsim')
line 1570:   au BufNewFile,BufRead *.si setf cuplsim
line 1571: endif
line 1572: 
line 1573: if !has_key(g:polyglot_is_disabled, 'cupl')
line 1574:   au BufNewFile,BufRead *.pld setf cupl
line 1575: endif
line 1576: 
line 1577: if !has_key(g:polyglot_is_disabled, 'csp')
line 1578:   au BufNewFile,BufRead *.csp,*.fdr setf csp
line 1579: endif
line 1580: 
line 1581: if !has_key(g:polyglot_is_disabled, 'quake')
line 1582:   au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg,*quake[1-3]/*.cfg setf quake
line 1583: endif
line 1584: 
line 1585: if !has_key(g:polyglot_is_disabled, 'lynx')
line 1586:   au BufNewFile,BufRead lynx.cfg setf lynx
line 1587: endif
line 1588: 
line 1589: if !has_key(g:polyglot_is_disabled, 'eterm')
line 1590:   au BufNewFile,BufRead *Eterm/*.cfg setf eterm
line 1591: endif
line 1592: 
line 1593: if !has_key(g:polyglot_is_disabled, 'dcd')
line 1594:   au BufNewFile,BufRead *.dcd setf dcd
line 1595: endif
line 1596: 
line 1597: if !has_key(g:polyglot_is_disabled, 'dockerfile')
line 1598:   au BufNewFile,BufRead *.Dockerfile,*.dock,Containerfile,Dockerfile,dockerfile setf dockerfile
line 1599:   au BufNewFile,BufRead Dockerfile* call s:StarSetf('dockerfile')
line 1600: endif
line 1601: 
line 1602: if !has_key(g:polyglot_is_disabled, 'cuda')
line 1603:   au BufNewFile,BufRead *.cu,*.cuh setf cuda
line 1604: endif
line 1605: 
line 1606: if !has_key(g:polyglot_is_disabled, 'config')
line 1607:   au BufNewFile,BufRead Pipfile,configure.ac,configure.in setf config
line 1608:   au BufNewFile,BufRead /etc/hostname.* call s:StarSetf('config')
line 1609: endif
line 1610: 
line 1611: if !has_key(g:polyglot_is_disabled, 'cf')
line 1612:   au BufNewFile,BufRead *.cfc,*.cfi,*.cfm setf cf
line 1613: endif
line 1614: 
line 1615: if !has_key(g:polyglot_is_disabled, 'coco')
line 1616:   au BufNewFile,BufRead *.atg setf coco
line 1617: endif
line 1618: 
line 1619: if !has_key(g:polyglot_is_disabled, 'cobol')
line 1620:   au BufNewFile,BufRead *.cbl,*.cob,*.lib setf cobol
line 1621: endif
line 1622: 
line 1623: if !has_key(g:polyglot_is_disabled, 'cmusrc')
line 1624:   au BufNewFile,BufRead */.cmus/{autosave,rc,command-history,*.theme},*/cmus/{rc,*.theme} setf cmusrc
line 1625: endif
line 1626: 
line 1627: if !has_key(g:polyglot_is_disabled, 'cl')
line 1628:   au BufNewFile,BufRead *.eni setf cl
line 1629: endif
line 1630: 
line 1631: if !has_key(g:polyglot_is_disabled, 'clean')
line 1632:   au BufNewFile,BufRead *.dcl,*.icl setf clean
line 1633: endif
line 1634: 
line 1635: if !has_key(g:polyglot_is_disabled, 'chordpro')
line 1636:   au BufNewFile,BufRead *.cho,*.chopro,*.chordpro,*.crd,*.crdpro setf chordpro
line 1637: endif
line 1638: 
line 1639: if !has_key(g:polyglot_is_disabled, 'chill')
line 1640:   au BufNewFile,BufRead *..ch setf chill
line 1641: endif
line 1642: 
line 1643: if !has_key(g:polyglot_is_disabled, 'debchangelog')
line 1644:   au BufNewFile,BufRead */debian/changelog,NEWS.Debian,NEWS.dch,changelog.Debian,changelog.dch setf debchangelog
line 1645: endif
line 1646: 
line 1647: if !has_key(g:polyglot_is_disabled, 'cterm')
line 1648:   au BufNewFile,BufRead *.con setf cterm
line 1649: endif
line 1650: 
line 1651: if !has_key(g:polyglot_is_disabled, 'css')
line 1652:   au BufNewFile,BufRead *.css setf css
line 1653: endif
line 1654: 
line 1655: if !has_key(g:polyglot_is_disabled, 'ch')
line 1656:   au BufNewFile,BufRead *.chf setf ch
line 1657: endif
line 1658: 
line 1659: if !has_key(g:polyglot_is_disabled, 'cynpp')
line 1660:   au BufNewFile,BufRead *.cyn setf cynpp
line 1661: endif
line 1662: 
line 1663: if !has_key(g:polyglot_is_disabled, 'crm')
line 1664:   au BufNewFile,BufRead *.crm setf crm
line 1665: endif
line 1666: 
line 1667: if !has_key(g:polyglot_is_disabled, 'conaryrecipe')
line 1668:   au BufNewFile,BufRead *.recipe setf conaryrecipe
line 1669: endif
line 1670: 
line 1671: if !has_key(g:polyglot_is_disabled, 'cdl')
line 1672:   au BufNewFile,BufRead *.cdl setf cdl
line 1673: endif
line 1674: 
line 1675: if !has_key(g:polyglot_is_disabled, 'chaiscript')
line 1676:   au BufNewFile,BufRead *.chai setf chaiscript
line 1677: endif
line 1678: 
line 1679: if !has_key(g:polyglot_is_disabled, 'cdrdaoconf')
line 1680:   au BufNewFile,BufRead */etc/cdrdao.conf,*/etc/default/cdrdao,*/etc/defaults/cdrdao,{.,}cdrdao setf cdrdaoconf
line 1681: endif
line 1682: 
line 1683: if !has_key(g:polyglot_is_disabled, 'cdrtoc')
line 1684:   au BufNewFile,BufRead *.toc setf cdrtoc
line 1685: endif
line 1686: 
line 1687: if !has_key(g:polyglot_is_disabled, 'cabal')
line 1688:   au BufNewFile,BufRead *.cabal setf cabal
line 1689: endif
line 1690: 
line 1691: if !has_key(g:polyglot_is_disabled, 'csdl')
line 1692:   au BufNewFile,BufRead *.csdl setf csdl
line 1693: endif
line 1694: 
line 1695: if !has_key(g:polyglot_is_disabled, 'cs')
line 1696:   au BufNewFile,BufRead *.cs setf cs
line 1697: endif
line 1698: 
line 1699: if !has_key(g:polyglot_is_disabled, 'calendar')
line 1700:   au BufNewFile,BufRead calendar setf calendar
line 1701:   au BufNewFile,BufRead */share/calendar/calendar.* call s:StarSetf('calendar')
line 1702:   au BufNewFile,BufRead */share/calendar/*/calendar.* call s:StarSetf('calendar')
line 1703:   au BufNewFile,BufRead */.calendar/* call s:StarSetf('calendar')
line 1704: endif
line 1705: 
line 1706: if !has_key(g:polyglot_is_disabled, 'lpc')
line 1707:   au BufNewFile,BufRead *.lpc,*.ulpc setf lpc
line 1708: endif
line 1709: 
line 1710: if !has_key(g:polyglot_is_disabled, 'bsdl')
line 1711:   au BufNewFile,BufRead *.bsdl,*bsd setf bsdl
line 1712: endif
line 1713: 
line 1714: if !has_key(g:polyglot_is_disabled, 'blank')
line 1715:   au BufNewFile,BufRead *.bl setf blank
line 1716: endif
line 1717: 
line 1718: if !has_key(g:polyglot_is_disabled, 'bindzone')
line 1719:   au BufNewFile,BufRead named.root setf bindzone
line 1720:   au BufNewFile,BufRead */named/db.* call s:StarSetf('bindzone')
line 1721:   au BufNewFile,BufRead */bind/db.* call s:StarSetf('bindzone')
line 1722: endif
line 1723: 
line 1724: if !has_key(g:polyglot_is_disabled, 'named')
line 1725:   au BufNewFile,BufRead named*.conf,rndc*.conf,rndc*.key setf named
line 1726: endif
line 1727: 
line 1728: if !has_key(g:polyglot_is_disabled, 'bst')
line 1729:   au BufNewFile,BufRead *.bst setf bst
line 1730: endif
line 1731: 
line 1732: if !has_key(g:polyglot_is_disabled, 'bib')
line 1733:   au BufNewFile,BufRead *.bib setf bib
line 1734: endif
line 1735: 
line 1736: if !has_key(g:polyglot_is_disabled, 'bdf')
line 1737:   au BufNewFile,BufRead *.bdf setf bdf
line 1738: endif
line 1739: 
line 1740: if !has_key(g:polyglot_is_disabled, 'bc')
line 1741:   au BufNewFile,BufRead *.bc setf bc
line 1742: endif
line 1743: 
line 1744: if !has_key(g:polyglot_is_disabled, 'dosbatch')
line 1745:   au BufNewFile,BufRead *.bat,*.sys setf dosbatch
line 1746: endif
line 1747: 
line 1748: if !has_key(g:polyglot_is_disabled, 'hamster')
line 1749:   au BufNewFile,BufRead *.hsc,*.hsm setf hamster
line 1750: endif
line 1751: 
line 1752: if !has_key(g:polyglot_is_disabled, 'freebasic')
line 1753:   au BufNewFile,BufRead *.bi,*.fb setf freebasic
line 1754: endif
line 1755: 
line 1756: if !has_key(g:polyglot_is_disabled, 'ibasic')
line 1757:   au BufNewFile,BufRead *.iba,*.ibi setf ibasic
line 1758: endif
line 1759: 
line 1760: if !has_key(g:polyglot_is_disabled, 'b')
line 1761:   au BufNewFile,BufRead *.imp,*.mch,*.ref setf b
line 1762: endif
line 1763: 
line 1764: if !has_key(g:polyglot_is_disabled, 'sql')
line 1765:   au BufNewFile,BufRead *.bdy,*.ddl,*.fnc,*.pck,*.pkb,*.pks,*.plb,*.pls,*.plsql,*.prc,*.spc,*.sql,*.tpb,*.tps,*.trg,*.tyb,*.tyc,*.typ,*.vw setf sql
line 1766: endif
line 1767: 
line 1768: if !has_key(g:polyglot_is_disabled, 'gitignore')
line 1769:   au BufNewFile,BufRead *.git/info/exclude,*/.config/git/ignore,{.,}gitignore setf gitignore
line 1770: endif
line 1771: 
line 1772: if !has_key(g:polyglot_is_disabled, 'prolog')
line 1773:   au! BufNewFile,BufRead,BufWritePost *.pl call polyglot#detect#Pl()
line 1774:   au BufNewFile,BufRead *.pdb,*.pro,*.prolog,*.yap setf prolog
line 1775: endif
line 1776: 
line 1777: if !has_key(g:polyglot_is_disabled, 'bzl')
line 1778:   au BufNewFile,BufRead *.BUILD,*.bazel,*.bzl,BUCK,BUILD,BUILD.bazel,Tiltfile,WORKSPACE setf bzl
line 1779: endif
line 1780: 
line 1781: if !has_key(g:polyglot_is_disabled, 'odin')
line 1782:   au BufNewFile,BufRead *.odin setf odin
line 1783: endif
line 1784: 
line 1785: if !has_key(g:polyglot_is_disabled, 'dosini')
line 1786:   au BufNewFile,BufRead *.dof,*.ini,*.lektorproject,*.prefs,*.pro,*.properties,*.url,*/etc/pacman.conf,*/etc/yum.conf,{.,}editorconfig,{.,}flake8,{.,}npmrc,buildozer.spec setf dosini
line 1787:   au BufNewFile,BufRead php.ini-* call s:StarSetf('dosini')
line 1788:   au BufNewFile,BufRead */etc/yum.repos.d/* call s:StarSetf('dosini')
line 1789: endif
line 1790: 
line 1791: if !has_key(g:polyglot_is_disabled, 'spec')
line 1792:   au BufNewFile,BufRead *.spec setf spec
line 1793: endif
line 1794: 
line 1795: if !has_key(g:polyglot_is_disabled, 'visual-basic')
line 1796:   au! BufNewFile,BufRead,BufWritePost *.bas call polyglot#detect#Bas()
line 1797:   au BufNewFile,BufRead *.cls,*.ctl,*.dsm,*.frm,*.frx,*.sba,*.vba,*.vbs setf vb
line 1798: endif
line 1799: 
line 1800: if !has_key(g:polyglot_is_disabled, 'basic')
line 1801:   au BufNewFile,BufRead *.basic setf basic
line 1802: endif
line 1803: 
line 1804: if !has_key(g:polyglot_is_disabled, 'trasys')
line 1805:   au! BufNewFile,BufRead,BufWritePost *.inp call polyglot#detect#Inp()
line 1806: endif
line 1807: 
line 1808: if !has_key(g:polyglot_is_disabled, 'zig')
line 1809:   au BufNewFile,BufRead *.zir setf zir
line 1810:   au BufNewFile,BufRead *.zig,*.zir setf zig
line 1811: endif
line 1812: 
line 1813: if !has_key(g:polyglot_is_disabled, 'zephir')
line 1814:   au BufNewFile,BufRead *.zep setf zephir
line 1815: endif
line 1816: 
line 1817: if !has_key(g:polyglot_is_disabled, 'help')
line 1818:   au BufNewFile,BufRead $VIMRUNTIME/doc/*.txt setf help
line 1819: endif
line 1820: 
line 1821: if !has_key(g:polyglot_is_disabled, 'helm')
line 1822:   au BufNewFile,BufRead */templates/*.tpl,*/templates/*.yaml setf helm
line 1823: endif
line 1824: 
line 1825: if !has_key(g:polyglot_is_disabled, 'smarty')
line 1826:   au BufNewFile,BufRead *.tpl setf smarty
line 1827: endif
line 1828: 
line 1829: if !has_key(g:polyglot_is_disabled, 'ansible')
line 1830:   au BufNewFile,BufRead handlers.*.y{a,}ml,local.y{a,}ml,main.y{a,}ml,playbook.y{a,}ml,requirements.y{a,}ml,roles.*.y{a,}ml,site.y{a,}ml,tasks.*.y{a,}ml setf yaml.ansible
line 1831:   au BufNewFile,BufRead host_vars/* call s:StarSetf('yaml.ansible')
line 1832:   au BufNewFile,BufRead group_vars/* call s:StarSetf('yaml.ansible')
line 1833: endif
line 1834: 
line 1835: if !has_key(g:polyglot_is_disabled, 'xsl')
line 1836:   au BufNewFile,BufRead *.xsl,*.xslt setf xsl
line 1837: endif
line 1838: 
line 1839: if !has_key(g:polyglot_is_disabled, 'xdc')
line 1840:   au BufNewFile,BufRead *.xdc setf xdc
line 1841: endif
line 1842: 
line 1843: if !has_key(g:polyglot_is_disabled, 'vue')
line 1844:   au BufNewFile,BufRead *.vue,*.wpy setf vue
line 1845: endif
line 1846: 
line 1847: if !has_key(g:polyglot_is_disabled, 'vmasm')
line 1848:   au BufNewFile,BufRead *.mar setf vmasm
line 1849: endif
line 1850: 
line 1851: if !has_key(g:polyglot_is_disabled, 'velocity')
line 1852:   au BufNewFile,BufRead *.vm setf velocity
line 1853: endif
line 1854: 
line 1855: if !has_key(g:polyglot_is_disabled, 'vcl')
line 1856:   au BufNewFile,BufRead *.vcl setf vcl
line 1857: endif
line 1858: 
line 1859: if !has_key(g:polyglot_is_disabled, 'vbnet')
line 1860:   au BufNewFile,BufRead *.vb,*.vbhtml setf vbnet
line 1861: endif
line 1862: 
line 1863: if !has_key(g:polyglot_is_disabled, 'vala')
line 1864:   au BufNewFile,BufRead *.vala,*.valadoc,*.vapi setf vala
line 1865: endif
line 1866: 
line 1867: if !has_key(g:polyglot_is_disabled, 'v')
line 1868:   au BufNewFile,BufRead *.v,*.vsh,*.vv setf vlang
line 1869: endif
line 1870: 
line 1871: if !has_key(g:polyglot_is_disabled, 'unison')
line 1872:   au BufNewFile,BufRead *.u,*.uu setf unison
line 1873: endif
line 1874: 
line 1875: if !has_key(g:polyglot_is_disabled, 'typescript')
line 1876:   au BufNewFile,BufRead *.ts setf typescript
line 1877:   au BufNewFile,BufRead *.tsx setf typescriptreact
line 1878: endif
line 1879: 
line 1880: if !has_key(g:polyglot_is_disabled, 'twig')
line 1881:   au BufNewFile,BufRead *.twig setf html.twig
line 1882:   au BufNewFile,BufRead *.xml.twig setf xml.twig
line 1883: endif
line 1884: 
line 1885: if !has_key(g:polyglot_is_disabled, 'tutor')
line 1886:   au BufNewFile,BufRead *.tutor setf tutor
line 1887: endif
line 1888: 
line 1889: if !has_key(g:polyglot_is_disabled, 'tptp')
line 1890:   au BufNewFile,BufRead *.ax,*.p,*.tptp setf tptp
line 1891: endif
line 1892: 
line 1893: if !has_key(g:polyglot_is_disabled, 'toml')
line 1894:   au BufNewFile,BufRead *.toml,*/.cargo/config,*/.cargo/credentials,Cargo.lock,Gopkg.lock,Pipfile,poetry.lock setf toml
line 1895: endif
line 1896: 
line 1897: if !has_key(g:polyglot_is_disabled, 'tmux')
line 1898:   au BufNewFile,BufRead {.,}tmux*.conf setf tmux
line 1899: endif
line 1900: 
line 1901: if !has_key(g:polyglot_is_disabled, 'thrift')
line 1902:   au BufNewFile,BufRead *.thrift setf thrift
line 1903: endif
line 1904: 
line 1905: if !has_key(g:polyglot_is_disabled, 'textile')
line 1906:   au BufNewFile,BufRead *.textile setf textile
line 1907: endif
line 1908: 
line 1909: if !has_key(g:polyglot_is_disabled, 'terraform')
line 1910:   au BufNewFile,BufRead *.tf,*.tfvars setf terraform
line 1911:   au BufNewFile,BufRead *.hcl,*.nomad,*.workflow,{.,}terraformrc,Appfile,terraform.rc setf hcl
line 1912: endif
line 1913: 
line 1914: if !has_key(g:polyglot_is_disabled, 'tf')
line 1915:   au BufNewFile,BufRead *.tf,{.,}tfrc,tfrc setf tf
line 1916: endif
line 1917: 
line 1918: if !has_key(g:polyglot_is_disabled, 'systemd')
line 1919:   au BufNewFile,BufRead *.automount,*.dnssd,*.link,*.mount,*.netdev,*.network,*.nspawn,*.path,*.service,*.slice,*.socket,*.swap,*.target,*.timer,*/systemd/*.conf setf systemd
line 1920:   au BufNewFile,BufRead *.#* call s:StarSetf('systemd')
line 1921: endif
line 1922: 
line 1923: if !has_key(g:polyglot_is_disabled, 'sxhkd')
line 1924:   au BufNewFile,BufRead *.sxhkdrc,sxhkdrc setf sxhkdrc
line 1925: endif
line 1926: 
line 1927: if !has_key(g:polyglot_is_disabled, 'swift')
line 1928:   au BufNewFile,BufRead *.swift setf swift
line 1929: endif
line 1930: 
line 1931: if !has_key(g:polyglot_is_disabled, 'svg')
line 1932:   au BufNewFile,BufRead *.svg setf svg
line 1933: endif
line 1934: 
line 1935: if !has_key(g:polyglot_is_disabled, 'svelte')
line 1936:   au BufNewFile,BufRead *.svelte setf svelte
line 1937: endif
line 1938: 
line 1939: if !has_key(g:polyglot_is_disabled, 'stylus')
line 1940:   au BufNewFile,BufRead *.styl,*.stylus setf stylus
line 1941: endif
line 1942: 
line 1943: if !has_key(g:polyglot_is_disabled, 'solidity')
line 1944:   au BufNewFile,BufRead *.sol setf solidity
line 1945: endif
line 1946: 
line 1947: if !has_key(g:polyglot_is_disabled, 'smt2')
line 1948:   au BufNewFile,BufRead *.smt,*.smt2 setf smt2
line 1949: endif
line 1950: 
line 1951: if !has_key(g:polyglot_is_disabled, 'slime')
line 1952:   au BufNewFile,BufRead *.slime setf slime
line 1953: endif
line 1954: 
line 1955: if !has_key(g:polyglot_is_disabled, 'slim')
line 1956:   au BufNewFile,BufRead *.slim setf slim
line 1957: endif
line 1958: 
line 1959: if !has_key(g:polyglot_is_disabled, 'sh')
line 1960:   au BufNewFile,BufRead *.bash,*.bats,*.cgi,*.command,*.env,*.fcgi,*.ksh,*.sh,*.sh.in,*.tmux,*.tool,*.zsh-theme,*/etc/udev/cdsymlinks.conf,{.,}bash_aliases,{.,}bash_history,{.,}bash_logout,{.,}bash_profile,{.,}bashrc,{.,}cshrc,{.,}env,{.,}env.example,{.,}flaskenv,{.,}kshrc,{.,}login,{.,}profile,9fs,PKGBUILD,bash_aliases,bash_logout,bash_profile,bashrc,cshrc,gradlew,kshrc,login,man,profile setf sh
line 1961:   au BufNewFile,BufRead *.zsh,*/etc/zprofile,{.,}zfbfmarks,{.,}zlogin,{.,}zlogout,{.,}zprofile,{.,}zshenv,{.,}zshrc setf zsh
line 1962:   au BufNewFile,BufRead .zsh* call s:StarSetf('zsh')
line 1963:   au BufNewFile,BufRead .zlog* call s:StarSetf('zsh')
line 1964:   au BufNewFile,BufRead .zcompdump* call s:StarSetf('zsh')
line 1965: endif
line 1966: 
line 1967: if !has_key(g:polyglot_is_disabled, 'scss')
line 1968:   au BufNewFile,BufRead *.scss setf scss
line 1969: endif
line 1970: 
line 1971: if !has_key(g:polyglot_is_disabled, 'scala')
line 1972:   au BufNewFile,BufRead *.kojo,*.sc,*.scala setf scala
line 1973: endif
line 1974: 
line 1975: if !has_key(g:polyglot_is_disabled, 'rust')
line 1976:   au BufNewFile,BufRead *.rs,*.rs.in setf rust
line 1977: endif
line 1978: 
line 1979: if !has_key(g:polyglot_is_disabled, 'brewfile')
line 1980:   au BufNewFile,BufRead Brewfile setf brewfile
line 1981: endif
line 1982: 
line 1983: if !has_key(g:polyglot_is_disabled, 'rspec')
line 1984:   au BufNewFile,BufRead *_spec.rb set ft=ruby syntax=rspec
line 1985: endif
line 1986: 
line 1987: if !has_key(g:polyglot_is_disabled, 'ruby')
line 1988:   au BufNewFile,BufRead *.axlsx,*.builder,*.cap,*.eye,*.fcgi,*.gemspec,*.god,*.jbuilder,*.mspec,*.opal,*.pluginspec,*.podspec,*.prawn,*.rabl,*.rake,*.rant,*.rb,*.rbi,*.rbuild,*.rbw,*.rbx,*.rjs,*.ru,*.ruby,*.rxml,*.spec,*.thor,*.watchr,{.,}Brewfile,{.,}Guardfile,{.,}autotest,{.,}irbrc,{.,}pryrc,{.,}simplecov,Appraisals,Berksfile,Buildfile,Capfile,Cheffile,Dangerfile,Deliverfile,Fastfile,Gemfile,Guardfile,Jarfile,KitchenSink,Mavenfile,Podfile,Puppetfile,Rakefile,Routefile,Snapfile,Steepfile,Thorfile,Vagrantfile,[Rr]antfile,buildfile,vagrantfile setf ruby
line 1989:   au BufNewFile,BufRead [Rr]akefile* call s:StarSetf('ruby')
line 1990:   au BufNewFile,BufRead *.erb,*.erb.deface,*.rhtml setf eruby
line 1991: endif
line 1992: 
line 1993: if !has_key(g:polyglot_is_disabled, 'rst')
line 1994:   au BufNewFile,BufRead *.rest,*.rest.txt,*.rst,*.rst.txt setf rst
line 1995: endif
line 1996: 
line 1997: if !has_key(g:polyglot_is_disabled, 'reason')
line 1998:   au! BufNewFile,BufRead,BufWritePost *.re call polyglot#detect#Re()
line 1999:   au BufNewFile,BufRead *.rei setf reason
line 2000: endif
line 2001: 
line 2002: if !has_key(g:polyglot_is_disabled, 'razor')
line 2003:   au BufNewFile,BufRead *.cshtml,*.razor setf razor
line 2004: endif
line 2005: 
line 2006: if !has_key(g:polyglot_is_disabled, 'raml')
line 2007:   au BufNewFile,BufRead *.raml setf raml
line 2008: endif
line 2009: 
line 2010: if !has_key(g:polyglot_is_disabled, 'ragel')
line 2011:   au BufNewFile,BufRead *.rl setf ragel
line 2012: endif
line 2013: 
line 2014: if !has_key(g:polyglot_is_disabled, 'racket')
line 2015:   au BufNewFile,BufRead *.rkt,*.rktd,*.rktl,*.scrbl setf racket
line 2016: endif
line 2017: 
line 2018: if !has_key(g:polyglot_is_disabled, 'r-lang')
line 2019:   au BufNewFile,BufRead *.S,*.r,*.rsx,*.s,{.,}Rprofile,expr-dist setf r
line 2020:   au BufNewFile,BufRead *.rd setf rhelp
line 2021: endif
line 2022: 
line 2023: if !has_key(g:polyglot_is_disabled, 'qml')
line 2024:   au BufNewFile,BufRead *.qbs,*.qml setf qml
line 2025: endif
line 2026: 
line 2027: if !has_key(g:polyglot_is_disabled, 'qmake')
line 2028:   au BufNewFile,BufRead *.pri,*.pro setf qmake
line 2029: endif
line 2030: 
line 2031: if !has_key(g:polyglot_is_disabled, 'requirements')
line 2032:   au BufNewFile,BufRead *.pip,*require.{txt,in},*requirements.{txt,in},constraints.{txt,in} setf requirements
line 2033: endif
line 2034: 
line 2035: if !has_key(g:polyglot_is_disabled, 'python')
line 2036:   au BufNewFile,BufRead *.cgi,*.fcgi,*.gyp,*.gypi,*.lmi,*.ptl,*.py,*.py3,*.pyde,*.pyi,*.pyp,*.pyt,*.pyw,*.rpy,*.smk,*.spec,*.tac,*.wsgi,*.xpy,{.,}gclient,{.,}pythonrc,{.,}pythonstartup,DEPS,SConscript,SConstruct,Snakefile,wscript setf python
line 2037: endif
line 2038: 
line 2039: if !has_key(g:polyglot_is_disabled, 'purescript')
line 2040:   au BufNewFile,BufRead *.purs setf purescript
line 2041: endif
line 2042: 
line 2043: if !has_key(g:polyglot_is_disabled, 'puppet')
line 2044:   au BufNewFile,BufRead *.pp,Modulefile setf puppet
line 2045:   au BufNewFile,BufRead *.epp setf embeddedpuppet
line 2046: endif
line 2047: 
line 2048: if !has_key(g:polyglot_is_disabled, 'pug')
line 2049:   au BufNewFile,BufRead *.jade,*.pug setf pug
line 2050: endif
line 2051: 
line 2052: if !has_key(g:polyglot_is_disabled, 'protobuf')
line 2053:   au BufNewFile,BufRead *.proto setf proto
line 2054: endif
line 2055: 
line 2056: if !has_key(g:polyglot_is_disabled, 'powershell')
line 2057:   au BufNewFile,BufRead *.ps1,*.psd1,*.psm1,*.pssc setf ps1
line 2058:   au BufNewFile,BufRead *.ps1xml setf ps1xml
line 2059: endif
line 2060: 
line 2061: if !has_key(g:polyglot_is_disabled, 'pony')
line 2062:   au BufNewFile,BufRead *.pony setf pony
line 2063: endif
line 2064: 
line 2065: if !has_key(g:polyglot_is_disabled, 'plantuml')
line 2066:   au BufNewFile,BufRead *.iuml,*.plantuml,*.pu,*.puml,*.uml setf plantuml
line 2067: endif
line 2068: 
line 2069: if !has_key(g:polyglot_is_disabled, 'pest')
line 2070:   au BufNewFile,BufRead *.pest setf pest
line 2071: endif
line 2072: 
line 2073: if !has_key(g:polyglot_is_disabled, 'blade')
line 2074:   au BufNewFile,BufRead *.blade,*.blade.php setf blade
line 2075: endif
line 2076: 
line 2077: if !has_key(g:polyglot_is_disabled, 'php')
line 2078:   au BufNewFile,BufRead *.aw,*.ctp,*.fcgi,*.inc,*.php,*.php3,*.php4,*.php5,*.php9,*.phps,*.phpt,*.phtml,{.,}php,{.,}php_cs,{.,}php_cs.dist,Phakefile setf php
line 2079: endif
line 2080: 
line 2081: if !has_key(g:polyglot_is_disabled, 'cql')
line 2082:   au BufNewFile,BufRead *.cql setf cql
line 2083: endif
line 2084: 
line 2085: if !has_key(g:polyglot_is_disabled, 'pgsql')
line 2086:   au BufNewFile,BufRead *.pgsql let b:sql_type_override='pgsql' | set ft=sql
line 2087: endif
line 2088: 
line 2089: if !has_key(g:polyglot_is_disabled, 'opencl')
line 2090:   au BufNewFile,BufRead *.cl,*.opencl setf opencl
line 2091: endif
line 2092: 
line 2093: if !has_key(g:polyglot_is_disabled, 'octave')
line 2094:   au! BufNewFile,BufRead,BufWritePost *.m call polyglot#detect#M()
line 2095:   au BufNewFile,BufRead *.oct setf octave
line 2096: endif
line 2097: 
line 2098: if !has_key(g:polyglot_is_disabled, 'ocaml')
line 2099:   au BufNewFile,BufRead *.eliom,*.eliomi,*.ml,*.ml.cppo,*.ml4,*.mli,*.mli.cppo,*.mlip,*.mll,*.mlp,*.mlt,*.mly,{.,}ocamlinit setf ocaml
line 2100:   au BufNewFile,BufRead *.om,OMakefile,OMakeroot,OMakeroot.in setf omake
line 2101:   au BufNewFile,BufRead *.opam,*.opam.template,opam setf opam
line 2102:   au BufNewFile,BufRead _oasis setf oasis
line 2103:   au BufNewFile,BufRead dune,dune-project,dune-workspace,jbuild setf dune
line 2104:   au BufNewFile,BufRead _tags setf ocamlbuild_tags
line 2105:   au BufNewFile,BufRead *.ocp setf ocpbuild
line 2106:   au BufNewFile,BufRead *.root setf ocpbuildroot
line 2107:   au BufNewFile,BufRead *.sexp setf sexplib
line 2108: endif
line 2109: 
line 2110: if !has_key(g:polyglot_is_disabled, 'objc')
line 2111:   au! BufNewFile,BufRead,BufWritePost *.m call polyglot#detect#M()
line 2112:   au! BufNewFile,BufRead,BufWritePost *.h call polyglot#detect#H()
line 2113: endif
line 2114: 
line 2115: if !has_key(g:polyglot_is_disabled, 'nix')
line 2116:   au BufNewFile,BufRead *.nix setf nix
line 2117: endif
line 2118: 
line 2119: if !has_key(g:polyglot_is_disabled, 'nim')
line 2120:   au BufNewFile,BufRead *.nim,*.nim.cfg,*.nimble,*.nimrod,*.nims,nim.cfg setf nim
line 2121: endif
line 2122: 
line 2123: if !has_key(g:polyglot_is_disabled, 'nginx')
line 2124:   au BufNewFile,BufRead *.nginx,*.nginxconf,*.vhost,*/nginx/*.conf,*nginx.conf,nginx*.conf,nginx.conf setf nginx
line 2125:   au BufNewFile,BufRead */usr/local/nginx/conf/* call s:StarSetf('nginx')
line 2126:   au BufNewFile,BufRead */etc/nginx/* call s:StarSetf('nginx')
line 2127: endif
line 2128: 
line 2129: if !has_key(g:polyglot_is_disabled, 'murphi')
line 2130:   au! BufNewFile,BufRead,BufWritePost *.m call polyglot#detect#M()
line 2131: endif
line 2132: 
line 2133: if !has_key(g:polyglot_is_disabled, 'moonscript')
line 2134:   au BufNewFile,BufRead *.moon setf moon
line 2135: endif
line 2136: 
line 2137: if !has_key(g:polyglot_is_disabled, 'meson')
line 2138:   au BufNewFile,BufRead meson.build,meson_options.txt setf meson
line 2139:   au BufNewFile,BufRead *.wrap setf dosini
line 2140: endif
line 2141: 
line 2142: if !has_key(g:polyglot_is_disabled, 'mdx')
line 2143:   au BufNewFile,BufRead *.mdx setf markdown.mdx
line 2144: endif
line 2145: 
line 2146: if !has_key(g:polyglot_is_disabled, 'mathematica')
line 2147:   au! BufNewFile,BufRead,BufWritePost *.m call polyglot#detect#M()
line 2148:   au BufNewFile,BufRead *.cdf,*.ma,*.mathematica,*.mma,*.mt,*.nb,*.nbp,*.wl,*.wls,*.wlt setf mma
line 2149: endif
line 2150: 
line 2151: if !has_key(g:polyglot_is_disabled, 'mako')
line 2152:   au BufNewFile,BufRead *.mako,*.mao setf mako
line 2153:   au BufReadPre *.*.mao execute "do BufRead filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
line 2154:   au BufNewFile *.*.mao execute "do BufNewFile filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
line 2155:   au BufReadPre *.*.mako execute "do BufRead filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
line 2156:   au BufNewFile *.*.mako execute "do BufNewFile filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
line 2157: endif
line 2158: 
line 2159: if !has_key(g:polyglot_is_disabled, 'm4')
line 2160:   au BufNewFile,BufRead *.at,*.m4,*.mc setf m4
line 2161: endif
line 2162: 
line 2163: if !has_key(g:polyglot_is_disabled, 'lua')
line 2164:   au BufNewFile,BufRead *.fcgi,*.lua,*.nse,*.p8,*.pd_lua,*.rbxs,*.rockspec,*.wlua,{.,}luacheckrc setf lua
line 2165: endif
line 2166: 
line 2167: if !has_key(g:polyglot_is_disabled, 'log')
line 2168:   au BufNewFile,BufRead *.LOG,*.log,*_LOG,*_log setf log
line 2169: endif
line 2170: 
line 2171: if !has_key(g:polyglot_is_disabled, 'llvm')
line 2172:   au BufNewFile,BufRead *.ll setf llvm
line 2173:   au BufNewFile,BufRead *.td setf tablegen
line 2174: endif
line 2175: 
line 2176: if !has_key(g:polyglot_is_disabled, 'livescript')
line 2177:   au BufNewFile,BufRead *._ls,*.ls,Slakefile setf ls
line 2178: endif
line 2179: 
line 2180: if !has_key(g:polyglot_is_disabled, 'lilypond')
line 2181:   au BufNewFile,BufRead *.ily,*.ly setf lilypond
line 2182: endif
line 2183: 
line 2184: if !has_key(g:polyglot_is_disabled, 'less')
line 2185:   au BufNewFile,BufRead *.less setf less
line 2186: endif
line 2187: 
line 2188: if !has_key(g:polyglot_is_disabled, 'ledger')
line 2189:   au BufNewFile,BufRead *.journal,*.ldg,*.ledger setf ledger
line 2190: endif
line 2191: 
line 2192: if !has_key(g:polyglot_is_disabled, 'kotlin')
line 2193:   au BufNewFile,BufRead *.kt,*.ktm,*.kts setf kotlin
line 2194: endif
line 2195: 
line 2196: if !has_key(g:polyglot_is_disabled, 'julia')
line 2197:   au BufNewFile,BufRead *.jl setf julia
line 2198: endif
line 2199: 
line 2200: if !has_key(g:polyglot_is_disabled, 'jst')
line 2201:   au BufNewFile,BufRead *.ect,*.ejs,*.ejs.t,*.jst setf jst
line 2202: endif
line 2203: 
line 2204: if !has_key(g:polyglot_is_disabled, 'tads')
line 2205:   au! BufNewFile,BufRead,BufWritePost *.t call polyglot#detect#T()
line 2206: endif
line 2207: 
line 2208: if !has_key(g:polyglot_is_disabled, 'raku')
line 2209:   au! BufNewFile,BufRead,BufWritePost *.t call polyglot#detect#T()
line 2210:   au! BufNewFile,BufRead,BufWritePost *.pm call polyglot#detect#Pm()
line 2211:   au! BufNewFile,BufRead,BufWritePost *.pl call polyglot#detect#Pl()
line 2212:   au BufNewFile,BufRead *.6pl,*.6pm,*.nqp,*.p6,*.p6l,*.p6m,*.pl6,*.pm6,*.pod6,*.raku,*.rakudoc,*.rakumod,*.rakutest,*.t6 setf raku
line 2213: endif
line 2214: 
line 2215: if !has_key(g:polyglot_is_disabled, 'perl')
line 2216:   au! BufNewFile,BufRead,BufWritePost *.t call polyglot#detect#T()
line 2217:   au! BufNewFile,BufRead,BufWritePost *.pm call polyglot#detect#Pm()
line 2218:   au! BufNewFile,BufRead,BufWritePost *.pl call polyglot#detect#Pl()
line 2219:   au BufNewFile,BufRead *.al,*.cgi,*.fcgi,*.perl,*.ph,*.plx,*.psgi,{.,}gitolite.rc,Makefile.PL,Rexfile,ack,cpanfile,example.gitolite.rc setf perl
line 2220:   au BufNewFile,BufRead *.pod setf pod
line 2221:   au BufNewFile,BufRead *.comp,*.mason,*.mhtml setf mason
line 2222:   au! BufNewFile,BufRead,BufWritePost *.tt2 call polyglot#detect#Tt2()
line 2223:   au! BufNewFile,BufRead,BufWritePost *.tt2 call polyglot#detect#Tt2()
line 2224:   au BufNewFile,BufRead *.xs setf xs
line 2225: endif
line 2226: 
line 2227: if !has_key(g:polyglot_is_disabled, 'rc')
line 2228:   au BufNewFile,BufRead *.rc,*.rch setf rc
line 2229: endif
line 2230: 
line 2231: if !has_key(g:polyglot_is_disabled, 'jsonnet')
line 2232:   au BufNewFile,BufRead *.jsonnet,*.libsonnet setf jsonnet
line 2233: endif
line 2234: 
line 2235: if !has_key(g:polyglot_is_disabled, 'json')
line 2236:   au BufNewFile,BufRead *.JSON-tmLanguage,*.avsc,*.geojson,*.gltf,*.har,*.ice,*.json,*.jsonl,*.jsonp,*.mcmeta,*.template,*.tfstate,*.tfstate.backup,*.topojson,*.webapp,*.webmanifest,*.yy,*.yyp,{.,}arcconfig,{.,}auto-changelog,{.,}c8rc,{.,}htmlhintrc,{.,}imgbotconfig,{.,}nycrc,{.,}tern-config,{.,}tern-project,{.,}watchmanconfig,Pipfile.lock,composer.lock,mcmod.info setf json
line 2237: endif
line 2238: 
line 2239: if !has_key(g:polyglot_is_disabled, 'json5')
line 2240:   au BufNewFile,BufRead *.json5 setf json5
line 2241: endif
line 2242: 
line 2243: if !has_key(g:polyglot_is_disabled, 'jq')
line 2244:   au BufNewFile,BufRead *.jq,{.,}jqrc setf jq
line 2245:   au BufNewFile,BufRead .jqrc* call s:StarSetf('jq')
line 2246: endif
line 2247: 
line 2248: if !has_key(g:polyglot_is_disabled, 'htmldjango')
line 2249:   au BufNewFile,BufRead *.j2,*.jinja,*.jinja2 setf htmldjango
line 2250: endif
line 2251: 
line 2252: if !has_key(g:polyglot_is_disabled, 'jenkins')
line 2253:   au BufNewFile,BufRead *.Jenkinsfile,*.jenkinsfile,Jenkinsfile setf Jenkinsfile
line 2254:   au BufNewFile,BufRead Jenkinsfile* call s:StarSetf('Jenkinsfile')
line 2255: endif
line 2256: 
line 2257: if !has_key(g:polyglot_is_disabled, 'ion')
line 2258:   au BufNewFile,BufRead *.ion,~/.config/ion/initrc setf ion
line 2259: endif
line 2260: 
line 2261: if !has_key(g:polyglot_is_disabled, 'idris2')
line 2262:   au! BufNewFile,BufRead,BufWritePost *.idr call polyglot#detect#Idr()
line 2263:   au BufNewFile,BufRead *.ipkg,idris-response setf idris2
line 2264:   au! BufNewFile,BufRead,BufWritePost *.lidr call polyglot#detect#Lidr()
line 2265: endif
line 2266: 
line 2267: if !has_key(g:polyglot_is_disabled, 'idris')
line 2268:   au! BufNewFile,BufRead,BufWritePost *.lidr call polyglot#detect#Lidr()
line 2269:   au! BufNewFile,BufRead,BufWritePost *.idr call polyglot#detect#Idr()
line 2270:   au BufNewFile,BufRead idris-response setf idris
line 2271: endif
line 2272: 
line 2273: if !has_key(g:polyglot_is_disabled, 'icalendar')
line 2274:   au BufNewFile,BufRead *.ics setf icalendar
line 2275: endif
line 2276: 
line 2277: if !has_key(g:polyglot_is_disabled, 'hive')
line 2278:   au BufNewFile,BufRead *.hql,*.q,*.ql setf hive
line 2279: endif
line 2280: 
line 2281: if !has_key(g:polyglot_is_disabled, 'haxe')
line 2282:   au BufNewFile,BufRead *.hx,*.hxsl setf haxe
line 2283:   au BufNewFile,BufRead *.hxml setf hxml
line 2284:   au BufNewFile,BufRead *.hss setf hss
line 2285: endif
line 2286: 
line 2287: if !has_key(g:polyglot_is_disabled, 'haskell')
line 2288:   au BufNewFile,BufRead *.bpk,*.hs,*.hs-boot,*.hsc,*.hsig setf haskell
line 2289: endif
line 2290: 
line 2291: if !has_key(g:polyglot_is_disabled, 'haproxy')
line 2292:   au BufNewFile,BufRead haproxy*.conf* call s:StarSetf('haproxy')
line 2293:   au BufNewFile,BufRead haproxy*.cfg* call s:StarSetf('haproxy')
line 2294: endif
line 2295: 
line 2296: if !has_key(g:polyglot_is_disabled, 'handlebars')
line 2297:   au BufNewFile,BufRead *.hjs,*.hogan,*.hulk,*.mustache setf html.mustache
line 2298:   au BufNewFile,BufRead *.handlebars,*.hb,*.hbs,*.hdbs setf html.handlebars
line 2299: endif
line 2300: 
line 2301: if !has_key(g:polyglot_is_disabled, 'haml')
line 2302:   au BufNewFile,BufRead *.haml,*.haml.deface,*.hamlbars,*.hamlc setf haml
line 2303: endif
line 2304: 
line 2305: if !has_key(g:polyglot_is_disabled, 'grub')
line 2306:   au BufNewFile,BufRead */boot/grub/grub.conf,*/boot/grub/menu.lst,*/etc/grub.conf setf grub
line 2307: endif
line 2308: 
line 2309: if !has_key(g:polyglot_is_disabled, 'groovy')
line 2310:   au BufNewFile,BufRead *.gradle,*.groovy,*.grt,*.gtpl,*.gvy,Jenkinsfile setf groovy
line 2311: endif
line 2312: 
line 2313: if !has_key(g:polyglot_is_disabled, 'graphql')
line 2314:   au BufNewFile,BufRead *.gql,*.graphql,*.graphqls setf graphql
line 2315: endif
line 2316: 
line 2317: if !has_key(g:polyglot_is_disabled, 'jsx')
line 2318:   au BufNewFile,BufRead *.jsx setf javascriptreact
line 2319: endif
line 2320: 
line 2321: if !has_key(g:polyglot_is_disabled, 'javascript')
line 2322:   au! BufNewFile,BufRead,BufWritePost *.frag call polyglot#detect#Frag()
line 2323:   au BufNewFile,BufRead *._js,*.bones,*.cjs,*.es,*.es6,*.gs,*.jake,*.javascript,*.js,*.jsb,*.jscad,*.jsfl,*.jslib,*.jsm,*.jspre,*.jss,*.jsx,*.mjs,*.njs,*.pac,*.sjs,*.ssjs,*.xsjs,*.xsjslib,Jakefile setf javascript
line 2324:   au BufNewFile,BufRead *.flow setf flow
line 2325: endif
line 2326: 
line 2327: if !has_key(g:polyglot_is_disabled, 'go')
line 2328:   au BufNewFile,BufRead *.go setf go
line 2329:   au BufNewFile,BufRead go.mod setf gomod
line 2330:   au BufNewFile,BufRead go.sum setf gosum
line 2331:   au BufNewFile,BufRead go.work setf gowork
line 2332:   au BufNewFile,BufRead *.tmpl setf gohtmltmpl
line 2333: endif
line 2334: 
line 2335: if !has_key(g:polyglot_is_disabled, 'hercules')
line 2336:   au BufNewFile,BufRead *.errsum,*.ev,*.sum,*.vc setf hercules
line 2337: endif
line 2338: 
line 2339: if !has_key(g:polyglot_is_disabled, 'gnuplot')
line 2340:   au BufNewFile,BufRead *.gnu,*.gnuplot,*.gp,*.gpi,*.p,*.plot,*.plt setf gnuplot
line 2341: endif
line 2342: 
line 2343: if !has_key(g:polyglot_is_disabled, 'gmpl')
line 2344:   au BufNewFile,BufRead *.mod setf gmpl
line 2345: endif
line 2346: 
line 2347: if !has_key(g:polyglot_is_disabled, 'glsl')
line 2348:   au! BufNewFile,BufRead,BufWritePost *.fs call polyglot#detect#Fs()
line 2349:   au! BufNewFile,BufRead,BufWritePost *.frag call polyglot#detect#Frag()
line 2350:   au BufNewFile,BufRead *.comp,*.fp,*.frg,*.fsh,*.fshader,*.geo,*.geom,*.glsl,*.glslf,*.glslv,*.gs,*.gshader,*.rchit,*.rmiss,*.shader,*.tesc,*.tese,*.vert,*.vrx,*.vsh,*.vshader setf glsl
line 2351: endif
line 2352: 
line 2353: if !has_key(g:polyglot_is_disabled, 'git')
line 2354:   au BufNewFile,BufRead *.gitconfig,*.git/config,*.git/modules/*/config,*/.config/git/config,*/git/config,{.,}gitconfig,{.,}gitmodules setf gitconfig
line 2355:   au BufNewFile,BufRead */{.,}gitconfig.d/* call s:StarSetf('gitconfig')
line 2356:   au BufNewFile,BufRead git-rebase-todo setf gitrebase
line 2357:   au BufNewFile,BufRead .gitsendemail.* call s:StarSetf('gitsendemail')
line 2358:   au BufNewFile,BufRead COMMIT_EDITMSG,MERGE_MSG,TAG_EDITMSG setf gitcommit
line 2359: endif
line 2360: 
line 2361: if !has_key(g:polyglot_is_disabled, 'gdscript')
line 2362:   au BufNewFile,BufRead *.gd setf gdscript3
line 2363: endif
line 2364: 
line 2365: if !has_key(g:polyglot_is_disabled, 'fsharp')
line 2366:   au! BufNewFile,BufRead,BufWritePost *.fs call polyglot#detect#Fs()
line 2367:   au BufNewFile,BufRead *.fsi,*.fsx setf fsharp
line 2368: endif
line 2369: 
line 2370: if !has_key(g:polyglot_is_disabled, 'forth')
line 2371:   au! BufNewFile,BufRead,BufWritePost *.fs call polyglot#detect#Fs()
line 2372:   au BufNewFile,BufRead *.ft,*.fth setf forth
line 2373: endif
line 2374: 
line 2375: if !has_key(g:polyglot_is_disabled, 'flatbuffers')
line 2376:   au BufNewFile,BufRead *.fbs setf fbs
line 2377: endif
line 2378: 
line 2379: if !has_key(g:polyglot_is_disabled, 'fish')
line 2380:   au BufNewFile,BufRead *.fish setf fish
line 2381: endif
line 2382: 
line 2383: if !has_key(g:polyglot_is_disabled, 'ferm')
line 2384:   au BufNewFile,BufRead *.ferm,ferm.conf setf ferm
line 2385: endif
line 2386: 
line 2387: if !has_key(g:polyglot_is_disabled, 'fennel')
line 2388:   au BufNewFile,BufRead *.fnl setf fennel
line 2389: endif
line 2390: 
line 2391: if !has_key(g:polyglot_is_disabled, 'erlang')
line 2392:   au BufNewFile,BufRead *.app,*.app.src,*.erl,*.es,*.escript,*.hrl,*.xrl,*.yaws,*.yrl,Emakefile,rebar.config,rebar.config.lock,rebar.lock setf erlang
line 2393: endif
line 2394: 
line 2395: if !has_key(g:polyglot_is_disabled, 'emblem')
line 2396:   au BufNewFile,BufRead *.em,*.emblem setf emblem
line 2397: endif
line 2398: 
line 2399: if !has_key(g:polyglot_is_disabled, 'emberscript')
line 2400:   au BufNewFile,BufRead *.em,*.emberscript setf ember-script
line 2401: endif
line 2402: 
line 2403: if !has_key(g:polyglot_is_disabled, 'elm')
line 2404:   au BufNewFile,BufRead *.elm setf elm
line 2405: endif
line 2406: 
line 2407: if !has_key(g:polyglot_is_disabled, 'elixir')
line 2408:   au BufNewFile,BufRead *.ex,*.exs,mix.lock setf elixir
line 2409:   au BufNewFile,BufRead *.eex,*.html.heex,*.html.leex,*.leex setf eelixir
line 2410: endif
line 2411: 
line 2412: if !has_key(g:polyglot_is_disabled, 'docker-compose')
line 2413:   au BufNewFile,BufRead docker-compose*.yaml,docker-compose*.yml setf yaml.docker-compose
line 2414: endif
line 2415: 
line 2416: if !has_key(g:polyglot_is_disabled, 'yaml')
line 2417:   au BufNewFile,BufRead *.mir,*.reek,*.rviz,*.sublime-syntax,*.syntax,*.yaml,*.yaml-tmlanguage,*.yaml.sed,*.yml,*.yml.mysql,{.,}clang-format,{.,}clang-tidy,{.,}gemrc,CITATION.cff,fish_history,fish_read_history,glide.lock,yarn.lock setf yaml
line 2418: endif
line 2419: 
line 2420: if !has_key(g:polyglot_is_disabled, 'mysql')
line 2421:   au BufNewFile,BufRead *.mysql setf mysql
line 2422: endif
line 2423: 
line 2424: if !has_key(g:polyglot_is_disabled, 'sed')
line 2425:   au BufNewFile,BufRead *.sed setf sed
line 2426: endif
line 2427: 
line 2428: if !has_key(g:polyglot_is_disabled, 'dlang')
line 2429:   au BufNewFile,BufRead *.d,*.di setf d
line 2430:   au BufNewFile,BufRead *.lst setf dcov
line 2431:   au BufNewFile,BufRead *.dd setf dd
line 2432:   au BufNewFile,BufRead *.ddoc setf ddoc
line 2433:   au BufNewFile,BufRead *.sdl setf dsdl
line 2434: endif
line 2435: 
line 2436: if !has_key(g:polyglot_is_disabled, 'dhall')
line 2437:   au BufNewFile,BufRead *.dhall setf dhall
line 2438: endif
line 2439: 
line 2440: if !has_key(g:polyglot_is_disabled, 'dart')
line 2441:   au BufNewFile,BufRead *.dart,*.drt setf dart
line 2442: endif
line 2443: 
line 2444: if !has_key(g:polyglot_is_disabled, 'cue')
line 2445:   au BufNewFile,BufRead *.cue setf cuesheet
line 2446: endif
line 2447: 
line 2448: if !has_key(g:polyglot_is_disabled, 'cucumber')
line 2449:   au BufNewFile,BufRead *.feature,*.story setf cucumber
line 2450: endif
line 2451: 
line 2452: if !has_key(g:polyglot_is_disabled, 'crystal')
line 2453:   au BufNewFile,BufRead *.cr,Projectfile setf crystal
line 2454:   au BufNewFile,BufRead *.ecr setf ecrystal
line 2455: endif
line 2456: 
line 2457: if !has_key(g:polyglot_is_disabled, 'cryptol')
line 2458:   au BufNewFile,BufRead *.cry,*.cyl,*.lcry,*.lcyl setf cryptol
line 2459: endif
line 2460: 
line 2461: if !has_key(g:polyglot_is_disabled, 'coffee-script')
line 2462:   au BufNewFile,BufRead *._coffee,*.cake,*.cjsx,*.coffee,*.coffeekup,*.cson,*.iced,Cakefile setf coffee
line 2463:   au BufNewFile,BufRead *.coffee.md,*.litcoffee setf litcoffee
line 2464: endif
line 2465: 
line 2466: if !has_key(g:polyglot_is_disabled, 'markdown')
line 2467:   au BufNewFile,BufRead *.markdown,*.md,*.mdown,*.mdwn,*.mkd,*.mkdn,*.mkdown,*.ronn,*.scd,*.workbook,contents.lr setf markdown
line 2468: endif
line 2469: 
line 2470: if !has_key(g:polyglot_is_disabled, 'cmake')
line 2471:   au BufNewFile,BufRead *.cmake,*.cmake.in,CMakeLists.txt setf cmake
line 2472: endif
line 2473: 
line 2474: if !has_key(g:polyglot_is_disabled, 'clojure')
line 2475:   au BufNewFile,BufRead *.boot,*.cl2,*.clj,*.cljc,*.cljs,*.cljs.hl,*.cljscm,*.cljx,*.edn,*.hic,build.boot,profile.boot,riemann.config setf clojure
line 2476: endif
line 2477: 
line 2478: if !has_key(g:polyglot_is_disabled, 'carp')
line 2479:   au BufNewFile,BufRead *.carp setf carp
line 2480: endif
line 2481: 
line 2482: if !has_key(g:polyglot_is_disabled, 'caddyfile')
line 2483:   au BufNewFile,BufRead Caddyfile setf caddyfile
line 2484: endif
line 2485: 
line 2486: if !has_key(g:polyglot_is_disabled, 'awk')
line 2487:   au BufNewFile,BufRead *.awk,*.gawk setf awk
line 2488: endif
line 2489: 
line 2490: if !has_key(g:polyglot_is_disabled, 'ave')
line 2491:   au BufNewFile,BufRead *.ave setf ave
line 2492: endif
line 2493: 
line 2494: if !has_key(g:polyglot_is_disabled, 'autoit')
line 2495:   au BufNewFile,BufRead *.au3 setf autoit
line 2496: endif
line 2497: 
line 2498: if !has_key(g:polyglot_is_disabled, 'atlas')
line 2499:   au BufNewFile,BufRead *.as,*.atl setf atlas
line 2500: endif
line 2501: 
line 2502: if !has_key(g:polyglot_is_disabled, 'aspperl')
line 2503:   au! BufNewFile,BufRead,BufWritePost *.asp call polyglot#detect#Asp()
line 2504: endif
line 2505: 
line 2506: if !has_key(g:polyglot_is_disabled, 'aspvbs')
line 2507:   au! BufNewFile,BufRead,BufWritePost *.asp call polyglot#detect#Asp()
line 2508:   au! BufNewFile,BufRead,BufWritePost *.asa call polyglot#detect#Asa()
line 2509: endif
line 2510: 
line 2511: if !has_key(g:polyglot_is_disabled, 'asn')
line 2512:   au BufNewFile,BufRead *.asn,*.asn1 setf asn
line 2513: endif
line 2514: 
line 2515: if !has_key(g:polyglot_is_disabled, 'automake')
line 2516:   au BufNewFile,BufRead GNUmakefile.am,[mM]akefile.am setf automake
line 2517: endif
line 2518: 
line 2519: if !has_key(g:polyglot_is_disabled, 'elf')
line 2520:   au BufNewFile,BufRead *.am setf elf
line 2521: endif
line 2522: 
line 2523: if !has_key(g:polyglot_is_disabled, 'make')
line 2524:   au BufNewFile,BufRead *.dsp,*.mak,*.mk,*[mM]akefile setf make
line 2525: endif
line 2526: 
line 2527: if !has_key(g:polyglot_is_disabled, 'autohotkey')
line 2528:   au BufNewFile,BufRead *.ahk,*.ahkl setf autohotkey
line 2529: endif
line 2530: 
line 2531: if !has_key(g:polyglot_is_disabled, 'asciidoc')
line 2532:   au BufNewFile,BufRead *.adoc,*.asc,*.asciidoc setf asciidoc
line 2533: endif
line 2534: 
line 2535: if !has_key(g:polyglot_is_disabled, 'art')
line 2536:   au BufNewFile,BufRead *.art setf art
line 2537: endif
line 2538: 
line 2539: if !has_key(g:polyglot_is_disabled, 'arduino')
line 2540:   au BufNewFile,BufRead *.ino,*.pde setf arduino
line 2541: endif
line 2542: 
line 2543: if !has_key(g:polyglot_is_disabled, 'c/c++')
line 2544:   au! BufNewFile,BufRead,BufWritePost *.h call polyglot#detect#H()
line 2545:   au BufNewFile,BufRead *.c++,*.cc,*.cp,*.cpp,*.cxx,*.h++,*.hh,*.hpp,*.hxx,*.inc,*.inl,*.ipp,*.ixx,*.moc,*.tcc,*.tlh,*.tpp setf cpp
line 2546:   au! BufNewFile,BufRead,BufWritePost *.h call polyglot#detect#H()
line 2547:   au BufNewFile,BufRead *.c,*.cats,*.idc,*.qc,*enlightenment/*.cfg setf c
line 2548: endif
line 2549: 
line 2550: if !has_key(g:polyglot_is_disabled, 'arch')
line 2551:   au BufNewFile,BufRead {.,}arch-inventory,=tagging-method setf arch
line 2552: endif
line 2553: 
line 2554: if !has_key(g:polyglot_is_disabled, 'aptconf')
line 2555:   au BufNewFile,BufRead */.aptitude/config,*/etc/apt/apt.conf.d/*.conf,apt.conf setf aptconf
line 2556:   au BufNewFile,BufRead */etc/apt/apt.conf.d/[^.]* call s:StarSetf('aptconf')
line 2557: endif
line 2558: 
line 2559: if !has_key(g:polyglot_is_disabled, 'applescript')
line 2560:   au BufNewFile,BufRead *.applescript,*.scpt setf applescript
line 2561: endif
line 2562: 
line 2563: if !has_key(g:polyglot_is_disabled, 'apiblueprint')
line 2564:   au BufNewFile,BufRead *.apib setf apiblueprint
line 2565: endif
line 2566: 
line 2567: if !has_key(g:polyglot_is_disabled, 'apache')
line 2568:   au BufNewFile,BufRead */etc/apache2/sites-*/*.com,*/etc/httpd/*.conf,{.,}htaccess setf apache
line 2569:   au BufNewFile,BufRead srm.conf* call s:StarSetf('apache')
line 2570:   au BufNewFile,BufRead httpd.conf* call s:StarSetf('apache')
line 2571:   au BufNewFile,BufRead apache2.conf* call s:StarSetf('apache')
line 2572:   au BufNewFile,BufRead apache.conf* call s:StarSetf('apache')
line 2573:   au BufNewFile,BufRead access.conf* call s:StarSetf('apache')
line 2574:   au BufNewFile,BufRead */etc/httpd/conf.d/*.conf* call s:StarSetf('apache')
line 2575:   au BufNewFile,BufRead */etc/apache2/sites-*/* call s:StarSetf('apache')
line 2576:   au BufNewFile,BufRead */etc/apache2/mods-*/* call s:StarSetf('apache')
line 2577:   au BufNewFile,BufRead */etc/apache2/conf.*/* call s:StarSetf('apache')
line 2578:   au BufNewFile,BufRead */etc/apache2/*.conf* call s:StarSetf('apache')
line 2579: endif
line 2580: 
line 2581: if !has_key(g:polyglot_is_disabled, 'ant')
line 2582:   au BufNewFile,BufRead build.xml setf ant
line 2583: endif
line 2584: 
line 2585: if !has_key(g:polyglot_is_disabled, 'xml')
line 2586:   au BufNewFile,BufRead *.adml,*.admx,*.ant,*.axaml,*.axml,*.builds,*.ccproj,*.ccxml,*.cdxml,*.clixml,*.cproject,*.cscfg,*.csdef,*.csl,*.csproj,*.csproj.user,*.ct,*.depproj,*.dita,*.ditamap,*.ditaval,*.dll.config,*.dotsettings,*.filters,*.fsproj,*.fxml,*.glade,*.gml,*.gmx,*.grxml,*.gst,*.hzp,*.iml,*.ivy,*.jelly,*.jsproj,*.kml,*.launch,*.mdpolicy,*.mjml,*.mod,*.mxml,*.natvis,*.ncl,*.ndproj,*.nproj,*.nuspec,*.odd,*.osm,*.pkgproj,*.pluginspec,*.proj,*.props,*.psc1,*.pt,*.rdf,*.res,*.resx,*.rss,*.sch,*.scxml,*.sfproj,*.shproj,*.srdf,*.storyboard,*.sublime-snippet,*.targets,*.tml,*.tpm,*.ui,*.urdf,*.ux,*.vbproj,*.vcxproj,*.vsixmanifest,*.vssettings,*.vstemplate,*.vxml,*.wixproj,*.workflow,*.wpl,*.wsdl,*.wsf,*.wxi,*.wxl,*.wxs,*.x3d,*.xacro,*.xaml,*.xib,*.xlf,*.xliff,*.xmi,*.xml,*.xml.dist,*.xmp,*.xproj,*.xsd,*.xspec,*.xul,*.zcml,*/etc/blkid.tab,*/etc/blkid.tab.old,*/etc/xdg/menus/*.menu,*fglrxrc,{.,}classpath,{.,}cproject,{.,}project,App.config,NuGet.config,Settings.StyleCop,Web.Debug.config,Web.Release.
line 2587: endif
line 2588: 
line 2589: if !has_key(g:polyglot_is_disabled, 'csv')
line 2590:   au BufNewFile,BufRead *.csv,*.tab,*.tsv setf csv
line 2591: endif
line 2592: 
line 2593: if !has_key(g:polyglot_is_disabled, 'ampl')
line 2594:   " AMPL
line 2595:   au BufNewFile,BufRead *.run setf ampl
line 2596: endif
line 2597: 
line 2598: if !has_key(g:polyglot_is_disabled, 'aml')
line 2599:   au BufNewFile,BufRead *.aml setf aml
line 2600: endif
line 2601: 
line 2602: if !has_key(g:polyglot_is_disabled, 'alsaconf')
line 2603:   au BufNewFile,BufRead */etc/asound.conf,*/usr/share/alsa/alsa.conf,{.,}asoundrc setf alsaconf
line 2604: endif
line 2605: 
line 2606: if !has_key(g:polyglot_is_disabled, 'conf')
line 2607:   au BufNewFile,BufRead *.conf,*/etc/hosts,auto.master,config setf conf
line 2608: endif
line 2609: 
line 2610: if !has_key(g:polyglot_is_disabled, 'master')
line 2611:   au BufNewFile,BufRead *.mas,*.master setf master
line 2612: endif
line 2613: 
line 2614: if !has_key(g:polyglot_is_disabled, 'aidl')
line 2615:   " AIDL
line 2616:   au BufNewFile,BufRead *.aidl setf aidl
line 2617: endif
line 2618: 
line 2619: if !has_key(g:polyglot_is_disabled, 'ahdl')
line 2620:   " AHDL
line 2621:   au BufNewFile,BufRead *.tdf setf ahdl
line 2622: endif
line 2623: 
line 2624: if !has_key(g:polyglot_is_disabled, 'ada')
line 2625:   " Ada (83, 9X, 95)
line 2626:   au BufNewFile,BufRead *.ada,*.ada_m,*.adb,*.adc,*.ads,*.gpr setf ada
line 2627: endif
line 2628: 
line 2629: if !has_key(g:polyglot_is_disabled, 'acpiasl')
line 2630:   au BufNewFile,BufRead *.asl,*.dsl setf asl
line 2631: endif
line 2632: 
line 2633: if !has_key(g:polyglot_is_disabled, 'acedb')
line 2634:   " AceDB
line 2635:   au BufNewFile,BufRead *.wrm setf acedb
line 2636: endif
line 2637: 
line 2638: if !has_key(g:polyglot_is_disabled, 'abel')
line 2639:   " ABEL
line 2640:   au BufNewFile,BufRead *.abl setf abel
line 2641: endif
line 2642: 
line 2643: if !has_key(g:polyglot_is_disabled, 'abc')
line 2644:   " ABC music notation
line 2645:   au BufNewFile,BufRead *.abc setf abc
line 2646: endif
line 2647: 
line 2648: if !has_key(g:polyglot_is_disabled, 'abaqus')
line 2649:   au! BufNewFile,BufRead,BufWritePost *.inp call polyglot#detect#Inp()
line 2650: endif
line 2651: 
line 2652: if !has_key(g:polyglot_is_disabled, 'abap')
line 2653:   " ABAB/4
line 2654:   au BufNewFile,BufRead *.abap setf abap
line 2655: endif
line 2656: 
line 2657: if !has_key(g:polyglot_is_disabled, 'aap')
line 2658:   " A-A-P recipe
line 2659:   au BufNewFile,BufRead *.aap setf aap
line 2660: endif
line 2661: 
line 2662: if !has_key(g:polyglot_is_disabled, 'a65')
line 2663:   " XA65 MOS6510 cross assembler
line 2664:   au BufNewFile,BufRead *.a65 setf a65
line 2665: endif
line 2666: 
line 2667: if !has_key(g:polyglot_is_disabled, 'a2ps')
line 2668:   au BufNewFile,BufRead */etc/a2ps.cfg,*/etc/a2ps/*.cfg,{.,}a2psrc,a2psrc setf a2ps
line 2669: endif
line 2670: 
line 2671: if !has_key(g:polyglot_is_disabled, 'cfg')
line 2672:   au BufNewFile,BufRead *.cfg,*.hgrc,*hgrc setf cfg
line 2673: endif
line 2674: 
line 2675: if !has_key(g:polyglot_is_disabled, '8th')
line 2676:   " 8th (Firth-derivative)
line 2677:   au BufNewFile,BufRead *.8th setf 8th
line 2678: endif
line 2679: 
line 2680: 
line 2681: " DO NOT EDIT CODE ABOVE, IT IS GENERATED WITH MAKEFILE
line 2682: 
line 2683: let s:detect_func = 'shebang#Detect'
line 2684: 
line 2685: func! s:PolyglotObserve(fn)
line 2688: 
line 2689: func! s:Observe()
line 2695: 
line 2696: au BufNewFile,BufRead,StdinReadPost,BufWritePost * if (&ft == "" || &ft == "conf") && expand("<afile>:e") == "" | call polyglot#shebang#Detect() | endif
line 2698: 
line 2699: au BufWinEnter * if &ft == "" && expand("<afile>:e") == "" | call s:Observe() | endif
line 2701: 
line 2702: au BufWritePost * au! polyglot-observer
line 2703: 
line 2704: augroup END
line 2705: 
line 2706: endif
line 2707: 
line 2708: if !has_key(g:polyglot_is_disabled, 'sensible')
line 2709:   " Use 2-spaces tab indentation by default
line 2710:   if &tabstop == 8
line 2711:     let &tabstop = 2
line 2712:   endif
line 2713: 
line 2714:   " Set shiftwidth to proper value as users often mix it with tabstop
line 2715:   if &shiftwidth > &tabstop
line 2716:     let &shiftwidth = &tabstop
line 2717:   endif
line 2718: 
line 2719:   " Use utf-8 encoding by default
line 2720:   set encoding=utf-8
line 2721: 
line 2722:   " Reload unchanged files automatically.
line 2723:   set autoread
line 2724: 
line 2725:   " This is needed to avoid swapfile warning when auto-reloading
line 2726:   set shortmess+=A
line 2727: 
line 2728:   " Avoids swapfiles in current directory
line 2729:   if &directory =~# '^\.,'
line 2730:     if !empty($HOME)
line 2731:       if has('win32')
line 2732:         let &directory = expand('$HOME/vimfiles') . '//,' . &directory
line 2733:       else
line 2734:         let &directory = expand('$HOME/.vim') . '//,' . &directory
line 2735:       endif
line 2736:     endif
line 2737:     if !empty($XDG_DATA_HOME)
line 2738:       let &directory = expand('$XDG_DATA_HOME') . '//,' . &directory
line 2739:     endif
line 2740:     if has('macunix')
line 2741:       let &directory = expand('$HOME/Library/Autosave Information') . '//,' . &directory
line 2742:     endif
line 2743:   endif
line 2744: 
line 2745:   " Autoindent when starting new line, or using `o` or `O`.
line 2746:   set autoindent
line 2747: endif
line 2748: 
line 2749: if !has_key(g:polyglot_is_disabled, 'autoindent')
line 2750:   " Code below re-implements sleuth for vim-polyglot
line 2751:   let g:loaded_sleuth = 1
line 2752: 
line 2753:   let s:default_shiftwidth = &shiftwidth
line 2754: 
line 2755:   func! s:get_shiftwidth(indents) abort
line 2776: 
line 2777:   func! s:guess(lines) abort
line 2909: 
line 2910:   func! s:detect_indent() abort
line 2960: 
line 2961:   set smarttab
line 2962: 
line 2963:   func! SleuthIndicator() abort
line 2973: 
line 2974:   augroup polyglot-sleuth
line 2975:     au!
line 2976:     au BufEnter * call s:detect_indent()
line 2977:     au User Flags call Hoist('buffer', 5, 'SleuthIndicator')
line 2978:   augroup END
line 2979: 
line 2980:   command! -bar -bang Sleuth call s:detect_indent()
line 2981: endif
line 2982: 
line 2983: augroup filetypedetect
line 2984: 
line 2985: " Ignored extensions
line 2986: if exists("*fnameescape")
line 2987: au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-dist,?\+.dpkg-old,?\+.dpkg-new,?\+.dpkg-bak,?\+.rpmsave,?\+.rpmnew,?\+.pacsave,?\+.pacnew exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
line 2989: au BufNewFile,BufRead *~ let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
line 2996: au BufNewFile,BufRead ?\+.in if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
line 3000: elseif &verbose > 0
line 3001:   echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"
line 3002: endif
line 3003: 
line 3004: " Pattern used to match file names which should not be inspected.
line 3005: " Currently finds compressed files.
line 3006: if !exists("g:ft_ignore_pat")
line 3007:   let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'
line 3008: endif
line 3009: 
line 3010: " *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.
line 3011: au BufNewFile,BufRead *.cmd if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
line 3013: 
line 3014: " Batch file for 4DOS
line 3015: au BufNewFile,BufRead *.btm^I^I^Icall polyglot#ft#FTbtm()
line 3016: 
line 3017: " BIND zone
line 3018: au BufNewFile,BufRead *.db^I^I^Icall polyglot#ft#BindzoneCheck('')
line 3019: 
line 3020: " C or lpc
line 3021: au BufNewFile,BufRead *.c^I^I^Icall polyglot#ft#FTlpc()
line 3022: 
line 3023: " Cynlib
line 3024: " .cc and .cpp files can be C++ or Cynlib.
line 3025: au BufNewFile,BufRead *.cpp if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
line 3026: 
line 3027: au BufNewFile,BufRead *.h^I^I^Icall polyglot#ft#FTheader()
line 3028: 
line 3029: au BufNewFile,BufRead [cC]hange[lL]og  if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
line 3035: 
line 3036: au BufNewFile,BufRead NEWS  if getline(1) =~ '; urgency='|   setf debchangelog| endif
line 3040: 
line 3041: " Changes for WEB and CWEB or CHILL
line 3042: au BufNewFile,BufRead *.ch^I^I^Icall polyglot#ft#FTchange()
line 3043: 
line 3044: " Clever or dtd
line 3045: au BufNewFile,BufRead *.ent^I^I^Icall polyglot#ft#FTent()
line 3046: 
line 3047: " Clipper (or FoxPro; could also be eviews)
line 3048: au BufNewFile,BufRead *.prg if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
line 3054: 
line 3055: au BufNewFile,BufRead *.cpy if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
line 3061: 
line 3062: " Euphoria 3 or 4
line 3063: au BufNewFile,BufRead *.eu,*.ew,*.ex,*.exu,*.exw  call polyglot#ft#EuphoriaCheck()
line 3064: if has("fname_case")
line 3065:    au BufNewFile,BufRead *.EU,*.EW,*.EX,*.EXU,*.EXW  call polyglot#ft#EuphoriaCheck()
line 3066: endif
line 3067: 
line 3068: au BufNewFile,BufRead control  if getline(1) =~ '^Source:'|   setf debcontrol| endif
line 3072: 
line 3073: au BufNewFile,BufRead copyright  if getline(1) =~ '^Format:'|   setf debcopyright| endif
line 3077: 
line 3078: " the D language or dtrace
line 3079: au BufNewFile,BufRead *.d^I^I^Icall polyglot#ft#DtraceCheck()
line 3080: 
line 3081: au BufNewFile,BufRead *.patch if getline(1) =~ '^From [0-9a-f]\{40\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
line 3087: 
line 3088: " Diva (with Skill) or InstallShield
line 3089: au BufNewFile,BufRead *.rul if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
line 3095: 
line 3096: " DCL (Digital Command Language - vms) or DNS zone file
line 3097: au BufNewFile,BufRead *.com^I^I^Icall polyglot#ft#BindzoneCheck('dcl')
line 3098: 
line 3099: au BufNewFile,BufRead *.edn if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
line 3105: 
line 3106: " Eiffel or Specman or Euphoria
line 3107: au BufNewFile,BufRead *.e,*.E^I^I^Icall polyglot#ft#FTe()
line 3108: 
line 3109: if !empty($XDG_CONFIG_HOME)
line 3110:   au BufNewFile,BufRead $XDG_CONFIG_HOME/git/config^I^Isetf gitconfig
line 3111: endif
line 3112: 
line 3113: au BufNewFile,BufRead .msg.[0-9]* if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
line 3117: au BufNewFile,BufRead *.git/* if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
line 3121: 
line 3122: if !empty($GNUPGHOME)
line 3123:   au BufNewFile,BufRead $GNUPGHOME/options^Isetf gpg
line 3124:   au BufNewFile,BufRead $GNUPGHOME/gpg.conf^Isetf gpg
line 3125: endif
line 3126: 
line 3127: " HTML (.shtml and .stm for server side)
line 3128: au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call polyglot#ft#FThtml()
line 3129: 
line 3130: " IDL (Interface Description Language)
line 3131: au BufNewFile,BufRead *.idl^I^I^Icall polyglot#ft#FTidl()
line 3132: 
line 3133: au BufNewFile,BufRead indent.pro^I^Icall polyglot#ft#ProtoCheck('indent')
line 3134: 
line 3135: " IDL (Interactive Data Language)
line 3136: au BufNewFile,BufRead *.pro^I^I^Icall polyglot#ft#ProtoCheck('idlang')
line 3137: 
line 3138: " M4
line 3139: au BufNewFile,BufRead *.m4 if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
line 3141: 
line 3142: " Mathematica, Matlab, Murphi or Objective C
line 3143: au BufNewFile,BufRead *.m^I^I^Icall polyglot#ft#FTm()
line 3144: 
line 3145: " MMIX or VMS makefile
line 3146: au BufNewFile,BufRead *.mms^I^I^Icall polyglot#ft#FTmms()
line 3147: 
line 3148: " Modsim III (or LambdaProlog)
line 3149: au BufNewFile,BufRead *.mod if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
line 3155: 
line 3156: " Mutt setup files (must be before catch *.rc)
line 3157: au BufNewFile,BufRead */etc/Muttrc.d/*^I^Icall s:StarSetf('muttrc')
line 3158: 
line 3159: " Nroff/Troff (*.ms and *.t are checked below)
line 3160: au BufNewFile,BufRead *.me if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
line 3164: au BufNewFile,BufRead *.[1-9]^I^I^Icall polyglot#ft#FTnroff()
line 3165: 
line 3166: " Nroff or Objective C++
line 3167: au BufNewFile,BufRead *.mm^I^I^Icall polyglot#ft#FTmm()
line 3168: 
line 3169: " Pacman hooks
line 3170: au BufNewFile,BufRead *.hook if getline(1) == '[Trigger]' |   setf dosini | endif
line 3174: 
line 3175: " Perl
line 3176: au BufNewFile,BufRead *.pl^I^I^Icall polyglot#ft#FTpl()
line 3177: 
line 3178: " Perl, XPM or XPM2
line 3179: au BufNewFile,BufRead *.pm if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
line 3187: 
line 3188: " Povray, PHP or assembly
line 3189: au BufNewFile,BufRead *.inc^I^I^Icall polyglot#ft#FTinc()
line 3190: 
line 3191: " Printcap and Termcap
line 3192: au BufNewFile,BufRead *printcap let b:ptcap_type = "print" | setf ptcap
line 3194: au BufNewFile,BufRead *termcap let b:ptcap_type = "term" | setf ptcap
line 3196: 
line 3197: " Progress or CWEB
line 3198: au BufNewFile,BufRead *.w^I^I^Icall polyglot#ft#FTprogress_cweb()
line 3199: 
line 3200: " Progress or assembly
line 3201: au BufNewFile,BufRead *.i^I^I^Icall polyglot#ft#FTprogress_asm()
line 3202: 
line 3203: " Progress or Pascal
line 3204: au BufNewFile,BufRead *.p^I^I^Icall polyglot#ft#FTprogress_pascal()
line 3205: 
line 3206: " Software Distributor Product Specification File (POSIX 1387.2-1995)
line 3207: au BufNewFile,BufRead INDEX,INFO if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
line 3211: 
line 3212: " Registry for MS-Windows
line 3213: au BufNewFile,BufRead *.reg if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
line 3215: 
line 3216: " Rexx, Rebol or R
line 3217: au BufNewFile,BufRead *.r,*.R^I^I^I^Icall polyglot#ft#FTr()
line 3218: 
line 3219: " Sendmail .mc files are actually m4.  Could also be MS Message text file.
line 3220: au BufNewFile,BufRead *.mc^I^I^Icall polyglot#ft#McSetf()
line 3221: 
line 3222: " SGML
line 3223: au BufNewFile,BufRead *.sgm,*.sgml if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
line 3233: 
line 3234: " SGMLDECL
line 3235: au BufNewFile,BufRead *.decl,*.dcl,*.dec if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
line 3239: 
line 3240: " Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.
line 3241: " Gentoo ebuilds and Arch Linux PKGBUILDs are actually bash scripts
line 3242: " NOTE: Patterns ending in a star are further down, these have lower priority.
line 3243: au BufNewFile,BufRead .bashrc,bashrc,bash.bashrc,.bash[_-]profile,.bash[_-]logout,.bash[_-]aliases,bash-fc[-.],*.bash,*/{,.}bash[_-]completion{,.d,.sh}{,/*},*.ebuild,*.eclass,PKGBUILD call polyglot#ft#SetFileTypeSH("bash")
line 3244: au BufNewFile,BufRead .kshrc,*.ksh call polyglot#ft#SetFileTypeSH("ksh")
line 3245: au BufNewFile,BufRead */etc/profile,.profile,*.sh,*.env call polyglot#ft#SetFileTypeSH(getline(1))
line 3246: 
line 3247: 
line 3248: " Shell script (Arch Linux) or PHP file (Drupal)
line 3249: au BufNewFile,BufRead *.install if getline(1) =~ '<?php' |   setf php | else |   call polyglot#ft#SetFileTypeSH("bash") | endif
line 3255: 
line 3256: " tcsh scripts (patterns ending in a star further below)
line 3257: au BufNewFile,BufRead .tcshrc,*.tcsh,tcsh.tcshrc,tcsh.login^Icall polyglot#ft#SetFileTypeShell("tcsh")
line 3258: 
line 3259: " csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)
line 3260: " (patterns ending in a start further below)
line 3261: au BufNewFile,BufRead .login,.cshrc,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call polyglot#ft#CSH()
line 3262: 
line 3263: au BufNewFile,BufRead *.cls if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
line 3271: 
line 3272: " SMIL or XML
line 3273: au BufNewFile,BufRead *.smil if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
line 3279: 
line 3280: " SMIL or SNMP MIB file
line 3281: au BufNewFile,BufRead *.smi if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
line 3287: 
line 3288: au BufNewFile,BufRead *.rules^I^I^Icall polyglot#ft#FTRules()
line 3289: 
line 3290: " SQL
line 3291: au BufNewFile,BufRead *.sql^I^I^Icall polyglot#ft#SQL()
line 3292: 
line 3293: " Also *.class, but not when it's a Java bytecode file
line 3294: au BufNewFile,BufRead *.class if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
line 3296: 
line 3297: au BufNewFile,BufRead *.tex^I^I^Icall polyglot#ft#FTtex()
line 3298: 
line 3299: " Virata Config Script File or Drupal module
line 3300: au BufRead,BufNewFile *.hw,*.module,*.pkg if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
line 3306: 
line 3307: " Visual Basic (also uses *.bas) or FORM
line 3308: au BufNewFile,BufRead *.frm^I^I^Icall polyglot#ft#FTVB("form")
line 3309: 
line 3310: " WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment
line 3311: " lines in a WEB file).
line 3312: au BufNewFile,BufRead *.web if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
line 3318: 
line 3319: " X Pixmap (dynamically sets colors, use BufEnter to make it work better)
line 3320: au BufEnter *.xpm if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
line 3326: 
line 3327: " XFree86 config
line 3328: au BufNewFile,BufRead XF86Config if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
line 3333: au BufNewFile,BufRead */xorg.conf.d/*.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
line 3336: 
line 3337: " Xorg config
line 3338: au BufNewFile,BufRead xorg.conf,xorg.conf-4^Ilet b:xf86conf_xfree86_version = 4 | setf xf86conf
line 3339: 
line 3340: au BufNewFile,BufRead *.ms if !polyglot#ft#FTnroff() | setf xmath | endif
line 3342: 
line 3343: " XML  specific variants: docbk and xbl
line 3344: au BufNewFile,BufRead *.xml^I^I^Icall polyglot#ft#FTxml()
line 3345: 
line 3346: " Yacc or racc
line 3347: au BufNewFile,BufRead *.y^I^I^Icall polyglot#ft#FTy()
line 3348: 
line 3349: " Zope
line 3350: "   dtml (zope dynamic template markup language), pt (zope page template),
line 3351: "   cpt (zope form controller page template)
line 3352: au BufNewFile,BufRead *.dtml,*.pt,*.cpt^I^Icall polyglot#ft#FThtml()
line 3353: "   zsql (zope sql method)
line 3354: au BufNewFile,BufRead *.zsql^I^I^Icall polyglot#ft#SQL()
line 3355: 
line 3356: augroup END
line 3357: 
line 3358: 
line 3359: " Source the user-specified filetype file, for backwards compatibility with
line 3360: " Vim 5.x.
line 3361: if exists("myfiletypefile") && filereadable(expand(myfiletypefile))
line 3362:   execute "source " . myfiletypefile
line 3363: endif
line 3364: 
line 3365: 
line 3366: " Check for "*" after loading myfiletypefile, so that scripts.vim is only used
line 3367: " when there are no matching file name extensions.
line 3368: " Don't do this for compressed files.
line 3369: augroup filetypedetect
line 3370: au BufNewFile,BufRead * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
line 3373: au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif
line 3374: 
line 3375: 
line 3376: " Extra checks for when no filetype has been detected now.  Mostly used for
line 3377: " patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim
line 3378: " script file.
line 3379: " Most of these should call s:StarSetf() to avoid names ending in .gz and the
line 3380: " like are used.
line 3381: 
line 3382: " More Apache style config files
line 3383: au BufNewFile,BufRead */etc/proftpd/*.conf*,*/etc/proftpd/conf.*/*^Icall s:StarSetf('apachestyle')
line 3384: au BufNewFile,BufRead proftpd.conf*^I^I^I^I^Icall s:StarSetf('apachestyle')
line 3385: 
line 3386: " More Apache config files
line 3387: au BufNewFile,BufRead access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*^Icall s:StarSetf('apache')
line 3388: au BufNewFile,BufRead */etc/apache2/*.conf*,*/etc/apache2/conf.*/*,*/etc/apache2/mods-*/*,*/etc/apache2/sites-*/*,*/etc/httpd/conf.d/*.conf*^I^Icall s:StarSetf('apache')
line 3389: 
line 3390: " Asterisk config file
line 3391: au BufNewFile,BufRead *asterisk/*.conf*^I^Icall s:StarSetf('asterisk')
line 3392: au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')
line 3393: 
line 3394: " BIND zone
line 3395: au BufNewFile,BufRead */named/db.*,*/bind/db.*^Icall s:StarSetf('bindzone')
line 3396: 
line 3397: " Calendar
line 3398: au BufNewFile,BufRead */.calendar/*,*/share/calendar/*/calendar.*,*/share/calendar/calendar.*^I^I^I^I^Icall s:StarSetf('calendar')
line 3401: 
line 3402: " Changelog
line 3403: au BufNewFile,BufRead [cC]hange[lL]og* if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
line 3409: 
line 3410: " Crontab
line 3411: au BufNewFile,BufRead crontab,crontab.*,*/etc/cron.d/*^I^Icall s:StarSetf('crontab')
line 3412: 
line 3413: " dnsmasq(8) configuration
line 3414: au BufNewFile,BufRead */etc/dnsmasq.d/*^I^Icall s:StarSetf('dnsmasq')
line 3415: 
line 3416: " Dracula
line 3417: au BufNewFile,BufRead drac.*^I^I^Icall s:StarSetf('dracula')
line 3418: 
line 3419: " Fvwm
line 3420: au BufNewFile,BufRead */.fvwm/*^I^I^Icall s:StarSetf('fvwm')
line 3421: au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook let b:fvwm_version = 1 | call s:StarSetf('fvwm')
line 3423: au BufNewFile,BufRead *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
line 3429: 
line 3430: " Gedcom
line 3431: au BufNewFile,BufRead */tmp/lltmp*^I^Icall s:StarSetf('gedcom')
line 3432: 
line 3433: " Git
line 3434: au BufNewFile,BufRead */.gitconfig.d/*,/etc/gitconfig.d/*^Icall s:StarSetf('gitconfig')
line 3435: 
line 3436: " Gitolite
line 3437: au BufNewFile,BufRead */gitolite-admin/conf/*^Icall s:StarSetf('gitolite')
line 3438: 
line 3439: " GTK RC
line 3440: au BufNewFile,BufRead .gtkrc*,gtkrc*^I^Icall s:StarSetf('gtkrc')
line 3441: 
line 3442: " Jam
line 3443: au BufNewFile,BufRead Prl*.*,JAM*.*^I^Icall s:StarSetf('jam')
line 3444: 
line 3445: " Jargon
line 3446: au! BufNewFile,BufRead *jarg* if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
line 3450: 
line 3451: " Java Properties resource file (note: doesn't catch font.properties.pl)
line 3452: au BufNewFile,BufRead *.properties_??_??_*^Icall s:StarSetf('jproperties')
line 3453: 
line 3454: " Kconfig
line 3455: au BufNewFile,BufRead Kconfig.*^I^I^Icall s:StarSetf('kconfig')
line 3456: 
line 3457: " Lilo: Linux loader
line 3458: au BufNewFile,BufRead lilo.conf*^I^Icall s:StarSetf('lilo')
line 3459: 
line 3460: " Logcheck
line 3461: au BufNewFile,BufRead */etc/logcheck/*.d*/*^Icall s:StarSetf('logcheck')
line 3462: 
line 3463: " Makefile
line 3464: au BufNewFile,BufRead [mM]akefile*^I^Icall s:StarSetf('make')
line 3465: 
line 3466: " Ruby Makefile
line 3467: au BufNewFile,BufRead [rR]akefile*^I^Icall s:StarSetf('ruby')
line 3468: 
line 3469: " Mail (also matches muttrc.vim, so this is below the other checks)
line 3470: au BufNewFile,BufRead {neo,}mutt[[:alnum:]._-]\\\{6\}^Isetf mail
line 3471: 
line 3472: au BufNewFile,BufRead reportbug-*^I^Icall s:StarSetf('mail')
line 3473: 
line 3474: " Modconf
line 3475: au BufNewFile,BufRead */etc/modutils/* if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
line 3479: au BufNewFile,BufRead */etc/modprobe.*^I^Icall s:StarSetf('modconf')
line 3480: 
line 3481: " Mutt setup file
line 3482: au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*^Icall s:StarSetf('muttrc')
line 3483: au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*^I^Icall s:StarSetf('muttrc')
line 3484: 
line 3485: " Neomutt setup file
line 3486: au BufNewFile,BufRead .neomuttrc*,*/.neomutt/neomuttrc*^Icall s:StarSetf('neomuttrc')
line 3487: au BufNewFile,BufRead neomuttrc*,Neomuttrc*^I^Icall s:StarSetf('neomuttrc')
line 3488: 
line 3489: " Nroff macros
line 3490: au BufNewFile,BufRead tmac.*^I^I^Icall s:StarSetf('nroff')
line 3491: 
line 3492: " OpenBSD hostname.if
line 3493: au BufNewFile,BufRead /etc/hostname.*^I^Icall s:StarSetf('config')
line 3494: 
line 3495: " Pam conf
line 3496: au BufNewFile,BufRead */etc/pam.d/*^I^Icall s:StarSetf('pamconf')
line 3497: 
line 3498: " Printcap and Termcap
line 3499: au BufNewFile,BufRead *printcap* if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
line 3503: au BufNewFile,BufRead *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
line 3507: 
line 3508: " ReDIF
line 3509: " Only used when the .rdf file was not detected to be XML.
line 3510: au BufRead,BufNewFile *.rdf^I^I^Icall polyglot#ft#Redif()
line 3511: 
line 3512: " Remind
line 3513: au BufNewFile,BufRead .reminders*^I^Icall s:StarSetf('remind')
line 3514: 
line 3515: " SGML catalog file
line 3516: au BufNewFile,BufRead sgml.catalog*^I^Icall s:StarSetf('catalog')
line 3517: 
line 3518: " Shell scripts ending in a star
line 3519: au BufNewFile,BufRead .bashrc*,.bash[_-]profile*,.bash[_-]logout*,.bash[_-]aliases*,bash-fc[-.]*,PKGBUILD* call polyglot#ft#SetFileTypeSH("bash")
line 3520: au BufNewFile,BufRead .kshrc* call polyglot#ft#SetFileTypeSH("ksh")
line 3521: au BufNewFile,BufRead .profile* call polyglot#ft#SetFileTypeSH(getline(1))
line 3522: 
line 3523: " tcsh scripts ending in a star
line 3524: au BufNewFile,BufRead .tcshrc*^Icall polyglot#ft#SetFileTypeShell("tcsh")
line 3525: 
line 3526: " csh scripts ending in a star
line 3527: au BufNewFile,BufRead .login*,.cshrc*  call polyglot#ft#CSH()
line 3528: 
line 3529: " VHDL
line 3530: au BufNewFile,BufRead *.vhdl_[0-9]*^I^Icall s:StarSetf('vhdl')
line 3531: 
line 3532: " Vim script
line 3533: au BufNewFile,BufRead *vimrc*^I^I^Icall s:StarSetf('vim')
line 3534: 
line 3535: " Subversion commit file
line 3536: au BufNewFile,BufRead svn-commit*.tmp^I^Isetf svn
line 3537: 
line 3538: " X resources file
line 3539: au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')
line 3540: 
line 3541: " XFree86 config
line 3542: au BufNewFile,BufRead XF86Config-4* let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
line 3544: au BufNewFile,BufRead XF86Config* if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
line 3549: 
line 3550: " X11 xmodmap
line 3551: au BufNewFile,BufRead *xmodmap*^I^I^Icall s:StarSetf('xmodmap')
line 3552: 
line 3553: " Xinetd conf
line 3554: au BufNewFile,BufRead */etc/xinetd.d/*^I^Icall s:StarSetf('xinetd')
line 3555: 
line 3556: " yum conf (close enough to dosini)
line 3557: au BufNewFile,BufRead */etc/yum.repos.d/*^Icall s:StarSetf('dosini')
line 3558: 
line 3559: " Z-Shell script ending in a star
line 3560: au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')
line 3561: au BufNewFile,BufRead zsh*,zlog*^I^Icall s:StarSetf('zsh')
line 3562: 
line 3563: 
line 3564: " Help files match *.txt but should have a last line that is a modeline.
line 3565: au BufNewFile,BufRead *.txt  if getline('$') !~ 'vim:.*ft=help'|   setf text| endif
line 3569: 
line 3570: 
line 3571: " NOTE: The above command could have ended the filetypedetect autocmd group
line 3572: " and started another one. Let's make sure it has ended to get to a consistent
line 3573: " state.
line 3574: augroup END
line 3575: 
line 3576: " Use the filetype detect plugins.  They may overrule any of the previously
line 3577: " detected filetypes. No need to load if everything is enabled
line 3578: if exists("did_load_filetypes") && exists("g:polyglot_disabled")
line 3579:   unlet did_load_filetypes
line 3580:   runtime! extras/filetype.vim
line 3581: endif
line 3582: 
line 3583: let s:runtime = resolve($VIMRUNTIME)
line 3584: let s:base = resolve(expand('<sfile>:p:h:h:h'))
line 3585: 
line 3586: func! s:process_rtp(rtp)
line 3628: 
line 3629: " We want vim-polyglot files to load only as fallback
line 3630: let &rtp = join(s:process_rtp(split(&rtp, ',')), ',')
calling function <SNR>20_process_rtp(['/home/thomaseckert/.config/nvim', '/.../home/thomaseckert/.config/nvim/after'])

line 1:   " Remove vim-polyglot from paths and make everything absolute
line 2:   let rtp = []
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 3:   for path in a:rtp[1:-2]
line 4:     let abspath = resolve(path)
line 5:     if stridx(abspath, s:base) != 0
line 6:       call add(rtp, abspath)
line 7:     endif
line 8:   endfor
line 9:   let result = [a:rtp[0]]
line 10:   " Then all other stuff (until vimruntime)
line 11:   let i = 0
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 12:   for path in rtp[0:len(rtp)-1]
line 13:     if path == s:runtime
line 14:       break
line 15:     endif
line 16:     call add(result, path)
line 17:     let i = i + 1
line 18:   endfor
line 19:   " Then vim-polyglot
line 20:   call add(result, s:base)
line 21:   " Then all other files, until after-files
line 22:   while i < len(rtp)
line 23:     let path = rtp[i]
line 24:     if match(path, '[/\\]after$') > -1
line 25:       break
line 26:     endif
line 27:     call add(result, path)
line 28:     let i = i + 1
line 29:   endwhile
line 22:   while i < len(rtp)
line 23:     let path = rtp[i]
line 24:     if match(path, '[/\\]after$') > -1
line 25:       break
line 26:     endif
line 27:     call add(result, path)
line 28:     let i = i + 1
line 29:   endwhile
line 22:   while i < len(rtp)
line 23:     let path = rtp[i]
line 24:     if match(path, '[/\\]after$') > -1
line 25:       break
line 26:     endif
line 27:     call add(result, path)
line 28:     let i = i + 1
line 29:   endwhile
line 30:   " Then vim-polyglot after path
line 31:   call add(result, s:base . '/after')
line 32:   " Then all other after paths
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 33:   while i < len(rtp)
line 34:     let path = rtp[i]
line 35:     call add(result, path)
line 36:     let i = i + 1
line 37:   endwhile
line 38:   " User's after directory is always last
line 39:   call add(result, a:rtp[len(a:rtp)-1])
line 40:   return result
function <SNR>20_process_rtp returning ['/home/thomaseckert/.config/nvim', '/.../home/thomaseckert/.config/nvim/after']

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim

line 3631: 
line 3632: " Restore 'cpoptions'
line 3633: let &cpo = s:cpo_save
line 3634: unlet s:cpo_save
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/init.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim
calling function polyglot#init#init()

line 1:   " A no-op as sourcing this file is enough
function polyglot#init#init returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim

finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/filetype.vim
continuing in function plug#end
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/filetype.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/filetype.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua"
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.lua
continuing in function plug#end
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim"
line 1: " Vim support file to detect file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2022 Apr 07
line 5: 
line 6: " Listen very carefully, I will say this only once
line 7: if exists("did_load_filetypes")
line 8:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/filetype.vim
continuing in function plug#end
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/filetype.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/filetype.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/filetype.vim"
Searching for "ftplugin.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim"
line 1: " Vim support file to switch on loading plugins for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last change:^I2006 Apr 30
line 5: 
line 6: if exists("did_load_ftplugin")
line 7:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin.vim
continuing in function plug#end
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin.vim"
Searching for "indent.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 83: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim"
line 1: " Vim support file to switch on loading indent files for file types
line 2: "
line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>
line 4: " Last Change:^I2008 Feb 22
line 5: 
line 6: if exists("did_indent_on")
line 7:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent.vim
continuing in function plug#end
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent.vim"
line 84:   if has('vim_starting')
line 85:     if has('syntax') && !exists('g:syntax_on')
line 86:       syntax enable
line 87:     end
line 88:   else
line 89:     call s:reload_plugins()
line 90:   endif
function plug#end returning #0

continuing in /home/thomaseckert/.config/nvim/init.lua

Executing: silent hi WinSeparator
WinSeparator   xxx links to VertSplit
Executing: silent! autocmd! FileExplorer *
Error detected while processing nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0:
E216: No such group or event: FileExplorer *
Executing: autocmd VimEnter * ++once silent! autocmd! FileExplorer *
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeIndentMarker guifg=#8094b4
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeSymlink gui=bold guifg=11
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeFolderIcon guifg=#8094b4
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeRootFolder guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeExecFile gui=bold guifg=13
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeSpecialFile gui=bold,underline guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeImageFile gui=bold guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeOpenedFile gui=bold guifg=13
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitDirty guifg=11
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitDeleted guifg=11
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitStaged guifg=13
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitMerge guifg=13
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitRenamed guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeGitNew guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeWindowPicker gui=bold guifg=#ededed guibg=#4493c8
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeLiveFilterPrefix gui=bold guifg=81
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeLiveFilterValue gui=bold guifg=#fff
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def NvimTreeBookmark guifg=13
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeEmptyFolderName Directory
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeOpenedFolderName Directory
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeNormal Normal
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeCursorLine CursorLine
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeVertSplit VertSplit
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeWinSeparator NvimTreeVertSplit
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeCursorColumn CursorColumn
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileDirty NvimTreeGitDirty
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileNew NvimTreeGitNew
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileRenamed NvimTreeGitRenamed
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileMerge NvimTreeGitMerge
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileStaged NvimTreeGitStaged
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileDeleted NvimTreeGitDeleted
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFileIgnored NvimTreeGitIgnored
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreePopup Normal
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeGitIgnored Comment
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeStatusLine StatusLine
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeFolderName Directory
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeLspDiagnosticsHint DiagnosticHint
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeLspDiagnosticsWarning DiagnosticWarn
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeLspDiagnosticsInformation DiagnosticInfo
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: hi def link NvimTreeLspDiagnosticsError DiagnosticError
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJsx guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCobol guifg=#005ca5 ctermfg=25
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCrystal guifg=#000000 ctermfg=16
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconAwk guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconClojureC guifg=#8dc149 ctermfg=107
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconClojure guifg=#8dc149 ctermfg=107
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconNix guifg=#7ebae4 ctermfg=110
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDefault guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCson guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJs guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSql guifg=#dad8d8 ctermfg=188
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCsv guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHh guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPpt guifg=#cb4a32 ctermfg=167
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconProlog guifg=#e4b854 ctermfg=179
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPl guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBabelrc guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGo guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconProcfile guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPsb guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPsd guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconConf guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCMakeLists guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconH guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDoc guifg=#185abd ctermfg=25
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSystemVerilog guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDrools guifg=#ffafaf ctermfg=217
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSwift guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSvg guifg=#FFB13B ctermfg=215
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSvelte guifg=#ff3e00 ctermfg=202
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDb guifg=#dad8d8 ctermfg=188
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconD guifg=#427819 ctermfg=64
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCsh guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEdn guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMd guifg=#ffffff ctermfg=white
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconAi guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconR guifg=#358a5b ctermfg=65
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconZig guifg=#f69a1b ctermfg=208
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHpp guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconYml guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSig guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconIni guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFsharp guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJava guifg=#cc3e44 ctermfg=167
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCss guifg=#42a5f5 ctermfg=39
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJpg guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJpeg guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPng guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGif guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEex guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHaml guifg=#eaeae1 ctermfg=188
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDart guifg=#03589C ctermfg=25
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHbs guifg=#f0772b ctermfg=208
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRmd guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconScala guifg=#cc3e44 ctermfg=167
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHrl guifg=#B83998 ctermfg=132
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTex guifg=#3D6117 ctermfg=58
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRss guifg=#FB9D3B ctermfg=215
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBmp guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVimrc guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTerminal guifg=#31B53E ctermfg=71
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBinaryGLTF guifg=#FFB13B ctermfg=215
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLeex guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconExs guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTwig guifg=#8dc149 ctermfg=107
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTxt guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCs guifg=#596706 ctermfg=58
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFavicon guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGodotProject guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconYaml guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGruntfile guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDiff guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPhp guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHeex guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDesktopEntry guifg=#563d7c ctermfg=60
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGulpfile guifg=#cc3e44 ctermfg=167
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFsscript guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPp guifg=#FFA61A
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPyd guifg=#ffe291 ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLess guifg=#563d7c ctermfg=60
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPdf guifg=#b30b00 ctermfg=124
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPrisma guifg=#ffffff ctermfg=white
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSass guifg=#f55385 ctermfg=204
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRakefile guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVue guifg=#8dc149 ctermfg=107
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSln guifg=#854CC7 ctermfg=98
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGemspec guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPm guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFennel guifg=#fff3d7 ctermfg=230
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHs guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJson guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRproj guifg=#358a5b ctermfg=65
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVim guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBashProfile guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFs guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEnv guifg=#faf743 ctermfg=226
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGDScript guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEjs guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBashrc guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDsStore guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFsi guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconImportConfiguration guifg=#ECECEC ctermfg=231
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMakefile guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitAttributes guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconWebp guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconClojureJS guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconWebpack guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconZshrc guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTextResource guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconXcPlayground guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVHDL guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconXls guifg=#207245 ctermfg=23
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconStyl guifg=#8dc149 ctermfg=107
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMarkdown guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGvimrc guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSuo guifg=#e37933 ctermfg=98
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitCommit guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCpp guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconNPMrc guifg=#E8274B ctermfg=161
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconNPMIgnore guifg=#E8274B ctermfg=161
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconXml guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDump guifg=#dad8d8 ctermfg=188
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconErl guifg=#B83998 ctermfg=132
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSlim guifg=#e34c26 ctermfg=166
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSettingsJson guifg=#854CC7 ctermfg=98
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLicense guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBat guifg=#C1F12E ctermfg=154
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitIgnore guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTcl guifg=#1e5cb3 ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTextScene guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconKotlinScript guifg=#F88A02 ctermfg=208
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLock guifg=#bbbbbb ctermfg=250
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMotoko guifg=#9772FB ctermfg=99
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBrewfile guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLua guifg=#51a0cf ctermfg=74
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFsx guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitModules guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitConfig guifg=#41535b ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMint guifg=#87c095 ctermfg=108
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconIco guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconZshenv guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCPlusPlus guifg=#f34b7d ctermfg=204
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTor guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRlib guifg=#dea584 ctermfg=180
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSolidity guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGemfile guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconKsh guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconFish guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHxx guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCp guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitLogo guifg=#F14C28 ctermfg=202
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMustache guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVagrantfile guifg=#1563FF ctermfg=27
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconNim guifg=#f3d400 ctermfg=220
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMdx guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMixLock guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPackageJson guifg=#e8274b
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMl guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMli guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconNodeModules guifg=#E8274B ctermfg=161
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMjs guifg=#f1e05a ctermfg=221
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHtml guifg=#e44d26 ctermfg=202
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconOPUS guifg=#F88A02 ctermfg=208
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTs guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPromptPs1 guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconOpenTypeFont guifg=#ECECEC ctermfg=231
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconHtm guifg=#e34c26 ctermfg=166
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPyc guifg=#ffe291 ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconZsh guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPyo guifg=#ffe291 ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPackageLockJson guifg=#7a0d21
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLhs guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRake guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPackedResource guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSh guifg=#4d5a5e ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRs guifg=#dea584 ctermfg=180
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconScss guifg=#f55385 ctermfg=204
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconZshprofile guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconC guifg=#599eff ctermfg=75
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconPy guifg=#ffbc03 ctermfg=61
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconSml guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconKotlin guifg=#F88A02 ctermfg=208
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconMaterial guifg=#B83998 ctermfg=132
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCMake guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconBash guifg=#89e051 ctermfg=113
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconVerilog guifg=#019833 ctermfg=29
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconErb guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEx guifg=#a074c4 ctermfg=140
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconRb guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconJl guifg=#a270ba ctermfg=133
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCxx guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconXul guifg=#e37933 ctermfg=173
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconEpp guifg=#FFA61A
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDockerfile guifg=#384d54 ctermfg=59
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconLog guifg=#ffffff ctermfg=white
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconWebmanifest guifg=#f1e05a ctermfg=221
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconElm guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconConfiguration guifg=#ECECEC ctermfg=231
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconClojureDart guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconToml guifg=#6d8086 ctermfg=66
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconGitlabCI guifg=#e24329 ctermfg=166
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconCoffee guifg=#cbcb41 ctermfg=185
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconTsx guifg=#519aba ctermfg=67
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconDropbox guifg=#0061FE ctermfg=27
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! DevIconConfigRu guifg=#701516 ctermfg=52
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: augroup NvimWebDevicons
Executing: autocmd!
Executing: autocmd ColorScheme * lua require('nvim-web-devicons').set_up_highlights()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: augroup END
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/mason/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/mason/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/mason/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/mason/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/mason/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:         augroup luasnip
Executing:             au!
Executing:             autocmd InsertLeave * lua require("luasnip").unlink_current_if_deleted()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:             autocmd InsertLeave * lua require("luasnip").active_update_dependents()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:             autocmd InsertEnter * lua require("luasnip").exit_out_of_region(require("luasnip").session.current_nodes[vim.api.nvim_get_current_buf()])
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I"Remove buffers' nodes on deletion+wipeout.
Executing: ^I^I^Iautocmd BufDelete,BufWipeout * lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I^Iaugroup END
Executing: ^I^I
Searching for "package.json" in runtime path
Searching for "/home/thomaseckert/.config/nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/package.json"
Searching for "/home/thomaseckert/.local/share/nvim/site/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/package.json"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/package.json"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/package.json"
Executing: ^I^I^I^I^Iaugroup luasnip_watch_reload
Executing: ^I^I^I^I^Iautocmd BufWritePost /home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/global.json ++once lua require("luasnip.loaders.from_vscode").reload_file("all", "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/global.json")
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip/loaders)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I^I^Iaugroup END
Executing: ^I^I^I^I
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:       augroup lsp_cmds
Executing:         autocmd!
Executing:         autocmd FileType * lua vim.defer_fn(require('lsp-zero').suggest_server, 5)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:       augroup END
Executing:     
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/lua/mason-lspconfig/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/lua/mason-lspconfig/api)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! LspZeroWorkspaceAdd lua vim.lsp.buf.add_workspace_folder()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! LspZeroWorkspaceList lua vim.notify(vim.inspect(vim.lsp.buf.list_workspace_folders()))
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType aspnetcorerazor,astro,astro-markdown,blade,django-html,htmldjango,edge,eelixir,ejs,erb,eruby,gohtml,haml,handlebars,hbs,html,html-eex,heex,jade,leaf,liquid,markdown,mdx,mustache,njk,nunjucks,php,razor,slim,twig,css,less,postcss,sass,scss,stylus,sugarss,javascript,javascriptreact,reason,rescript,typescript,typescriptreact,vue,svelte unsilent lua require'lspconfig'["tailwindcss"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType go,gomod unsilent lua require'lspconfig'["golangci_lint_ls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType sh unsilent lua require'lspconfig'["bashls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType go,gomod,gowork,gotmpl unsilent lua require'lspconfig'["gopls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType terraform unsilent lua require'lspconfig'["terraformls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType graphql,typescriptreact,javascriptreact unsilent lua require'lspconfig'["graphql"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType terraform unsilent lua require'lspconfig'["tflint"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType html unsilent lua require'lspconfig'["html"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType javascript,javascriptreact,javascript.jsx,typescript,typescriptreact,typescript.tsx unsilent lua require'lspconfig'["tsserver"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType rust unsilent lua require'lspconfig'["rust_analyzer"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType cs,vb unsilent lua require'lspconfig'["omnisharp"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType lua unsilent lua require'lspconfig'["sumneko_lua"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType markdown unsilent lua require'lspconfig'["marksman"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType json,jsonc unsilent lua require'lspconfig'["jsonls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType dockerfile unsilent lua require'lspconfig'["dockerls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType xml,xsd,xsl,xslt,svg unsilent lua require'lspconfig'["lemminx"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType svelte unsilent lua require'lspconfig'["svelte"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType sql,mysql unsilent lua require'lspconfig'["sqls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType yaml,yaml.docker-compose unsilent lua require'lspconfig'["yamlls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType python unsilent lua require'lspconfig'["pyright"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType css,scss,less unsilent lua require'lspconfig'["cssls"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd FileType lua unsilent lua require'lspconfig'["sumneko_lua"].manager.try_add()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: colorscheme nightfox
Searching for "colors/nightfox.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/colors/nightfox.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/colors/nightfox.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/colors)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 0: sourcing "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/colors/nightfox.vim"
line 1: lua << EOF
Executing: set background=dark
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: set termguicolors
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight Normal guifg=#cdcecf guibg=NONE gui=NONE guisp=NONE
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/nightfox/lib)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/plugged/nightfox.nvim/colors/nightfox.vim
continuing in nvim_exec() called at /home/thomaseckert/.config/nvim/init.lua:0
Executing ColorScheme Autocommands for "*"
autocommand lua require('nvim-web-devicons').set_up_highlights()

Executing: lua require('nvim-web-devicons').set_up_highlights()
Executing ColorScheme Autocommands for "*"
autocommand <lua: 3>

Executing: hi def NvimTreeIndentMarker guifg=#8094b4
Executing: hi def NvimTreeSymlink gui=bold guifg=#63cdcf
Executing: hi def NvimTreeFolderIcon guifg=#8094b4
Executing: hi def NvimTreeRootFolder guifg=#9d79d6
Executing: hi def NvimTreeExecFile gui=bold guifg=#81b29a
Executing: hi def NvimTreeSpecialFile gui=bold,underline guifg=#dbc074
Executing: hi def NvimTreeImageFile gui=bold guifg=#9d79d6
Executing: hi def NvimTreeOpenedFile gui=bold guifg=#81b29a
Executing: hi def NvimTreeGitDirty guifg=#d16983
Executing: hi def NvimTreeGitDeleted guifg=#d16983
Executing: hi def NvimTreeGitStaged guifg=#81b29a
Executing: hi def NvimTreeGitMerge guifg=#e0c989
Executing: hi def NvimTreeGitRenamed guifg=#9d79d6
Executing: hi def NvimTreeGitNew guifg=#dbc074
Executing: hi def NvimTreeWindowPicker gui=bold guifg=#ededed guibg=#4493c8
Executing: hi def NvimTreeLiveFilterPrefix gui=bold guifg=#9d79d6
Executing: hi def NvimTreeLiveFilterValue gui=bold guifg=#fff
Executing: hi def NvimTreeBookmark guifg=#81b29a
Executing: hi def link NvimTreeEmptyFolderName Directory
Executing: hi def link NvimTreeOpenedFolderName Directory
Executing: hi def link NvimTreeNormal Normal
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
Executing: hi def link NvimTreeCursorLine CursorLine
Executing: hi def link NvimTreeVertSplit VertSplit
Executing: hi def link NvimTreeWinSeparator NvimTreeVertSplit
Executing: hi def link NvimTreeCursorColumn CursorColumn
Executing: hi def link NvimTreeFileDirty NvimTreeGitDirty
Executing: hi def link NvimTreeFileNew NvimTreeGitNew
Executing: hi def link NvimTreeFileRenamed NvimTreeGitRenamed
Executing: hi def link NvimTreeFileMerge NvimTreeGitMerge
Executing: hi def link NvimTreeFileStaged NvimTreeGitStaged
Executing: hi def link NvimTreeFileDeleted NvimTreeGitDeleted
Executing: hi def link NvimTreeFileIgnored NvimTreeGitIgnored
Executing: hi def link NvimTreePopup Normal
Executing: hi def link NvimTreeGitIgnored Comment
Executing: hi def link NvimTreeStatusLine StatusLine
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
Executing: hi def link NvimTreeFolderName Directory
Executing: 
Executing: augroup lualine | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Searching for "lua/lualine/themes/iceberg_dark.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/lua/lualine/themes/iceberg_dark.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/lua/lualine/themes/iceberg_dark.lua"
Executing: highlight! lualine_a_normal guifg=#17171b guibg=#818596 gui=bold
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_normal guifg=#6b7089 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_c_normal guifg=#3e445e guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_a_visual guifg=#161821 guibg=#b4be82 gui=bold
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_visual guifg=#6b7089 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_a_insert guifg=#161821 guibg=#84a0c6 gui=bold
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_insert guifg=#6b7089 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_a_replace guifg=#161821 guibg=#e2a478 gui=bold
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_replace guifg=#6b7089 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_a_inactive guifg=#3e445e guibg=#0f1117 gui=bold
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_inactive guifg=#3e445e guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_c_inactive guifg=#3e445e guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd lualine ColorScheme * lua require'lualine'.setup()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:     autocmd lualine OptionSet background lua require'lualine'.setup()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: au lualine BufEnter *
--- Autocommands ---
Executing: autocmd lualine BufEnter * lua require'lualine.components.branch.git_branch'.find_git_dir()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_normal guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_insert guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_visual guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_replace guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_command guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_terminal guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_added_inactive guifg=#81b29a guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_normal guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_insert guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_visual guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_replace guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_command guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_terminal guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_modified_inactive guifg=#dbc074 guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_normal guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_insert guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_visual guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_replace guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_command guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_terminal guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diff_removed_inactive guifg=#c94f6d guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: au lualine BufEnter *
--- Autocommands ---
lualine  BufEnter
    *         lua require'lualine.components.branch.git_branch'.find_git_dir()
	Last set from ~/.config/nvim/plugged/lualine.nvim/lua/lualine/utils/utils.lua line 91
Executing: autocmd lualine BufEnter * lua require'lualine.components.diff.git_diff'.update_diff_args()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: au lualine BufWritePost *
--- Autocommands ---
Executing: autocmd lualine BufWritePost * lua require'lualine.components.diff.git_diff'.update_git_diff()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_normal guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_insert guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_visual guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_replace guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_command guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_terminal guifg=#c94f6d guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_error_inactive guifg=#c94f6d guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_normal guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_insert guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_visual guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_replace guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_command guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_terminal guifg=#dbc074 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_warn_inactive guifg=#dbc074 guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_normal guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_insert guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_visual guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_replace guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_command guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_terminal guifg=#719cd6 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_info_inactive guifg=#719cd6 guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_normal guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_insert guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_visual guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_replace guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_command guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_terminal guifg=#81b29a guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_b_diagnostics_hint_inactive guifg=#81b29a guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: augroup lualine_stl_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: au lualine WinEnter,BufEnter,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,ModeChanged *
--- Autocommands ---
Executing: autocmd lualine_stl_refresh WinEnter,BufEnter,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,ModeChanged * call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: augroup lualine_tal_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: augroup lualine_wb_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: let g:prettier#autoformat = 1
Executing: let g:prettier#autoformat_require_pragma = 0
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: autocmd! TermOpen term://* lua set_terminal_keymaps()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/init.lua
Searching for "plugin/**/*.vim" in "/home/thomaseckert/.config/nvim,/home/thomaseckert/.config/nvim/plugged/nvim-treesitter,/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig,/home/thomaseckert/.config/nvim/plugged/mason.nvim,/home/thomaseckert/.config/nvim/plugged/lualine.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons,/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim,/home/thomaseckert/.config/nvim/plugged/plenary.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua,/home/thomaseckert/.config/nvim/plugged/nvim-autopairs,/home/thomaseckert/.config/nvim/plugged/vim-abolish,/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua,/home/thomaseckert/.config/nvim/plugged/fd,/home/thomaseckert/.config/nvim/plugged/telescope.nvim,/home/thomaseckert/.config/nvim/plugged/hologram.nvim,/home/thomaseckert/.config/nvim/plugged/guihua.lua,/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-cmp,/home/thomaseckert/.config/nvim/plugged/cmp-nvim
Searching for "/home/thomaseckert/.config/nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/plugin/lspconfig.vim"
line 1: if exists('g:lspconfig')
line 2:   finish
line 3: endif
line 4: let g:lspconfig = 1
line 5: 
line 6: lua << EOF
line 16: command! -nargs=? -complete=custom,v:lua.lsp_complete_configured_servers LspStart lua require'lspconfig'["_root"].commands["LspStart"][1](<f-args>)
line 16: command! -nargs=? -complete=customlist,v:lua.lsp_get_active_client_ids LspRestart lua require'lspconfig'["_root"].commands["LspRestart"][1](<f-args>)
line 16: command! -nargs=0 LspInfo lua require'lspconfig'["_root"].commands["LspInfo"][1](<f-args>)
line 16: command! -nargs=? -complete=customlist,v:lua.lsp_get_active_client_ids LspStop lua require'lspconfig'["_root"].commands["LspStop"][1](<f-args>)
line 16: command! -nargs=0 LspLog lua require'lspconfig'["_root"].commands["LspLog"][1](<f-args>)
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/plugin/lspconfig.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/plugin/nvim-web-devicons.vim"
line 1: if exists('g:loaded_devicons') | finish | endif
line 1:  finish | endif
line 1:  endif
line 2: 
line 3: let s:save_cpo = &cpo
line 4: set cpo&vim
line 5: 
line 6: " TODO change so its easier to get
line 7: let g:nvim_web_devicons = 1
line 8: 
line 9: let &cpo = s:save_cpo
line 10: unlet s:save_cpo
line 11: 
line 12: let g:loaded_devicons = 1
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/plugin/nvim-web-devicons.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/plenary.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/plugin/plenary.vim"
line 1: 
line 2: " Create command for running busted
line 3: command! -nargs=1 -complete=file PlenaryBustedFile lua require('plenary.busted').run(vim.fn.expand("<args>"))
line 5: 
line 6: command! -nargs=+ -complete=file PlenaryBustedDirectory lua require('plenary.test_harness').test_directory_command(vim.fn.expand("<args>"))
line 8: 
line 9: nnoremap <Plug>PlenaryTestFile :lua require('plenary.test_harness').test_directory(vim.fn.expand("%:p"))<CR>
finished sourcing /home/thomaseckert/.config/nvim/plugged/plenary.nvim/plugin/plenary.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim"
line 1: " abolish.vim - Language friendly searches, substitutions, and abbreviations
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: " Version:      1.1
line 4: " GetLatestVimScripts: 1545 1 :AutoInstall: abolish.vim
line 5: 
line 6: " Initialization {{{1
line 7: 
line 8: if exists("g:loaded_abolish") || &cp || v:version < 700
line 9:   finish
line 10: endif
line 11: let g:loaded_abolish = 1
line 12: 
line 13: if !exists("g:abolish_save_file")
line 14:   if isdirectory(expand("~/.vim"))
line 15:     let g:abolish_save_file = expand("~/.vim/after/plugin/abolish.vim")
line 16:   elseif isdirectory(expand("~/vimfiles")) || has("win32")
line 17:     let g:abolish_save_file = expand("~/vimfiles/after/plugin/abolish.vim")
line 18:   else
line 19:     let g:abolish_save_file = expand("~/.vim/after/plugin/abolish.vim")
line 20:   endif
line 21: endif
line 22: 
line 23: " }}}1
line 24: " Utility functions {{{1
line 25: 
line 26: function! s:function(name)
line 29: 
line 30: function! s:send(self,func,...)
line 49: 
line 50: let s:object = {}
line 51: function! s:object.clone(...)
line 55: 
line 56: if !exists("g:Abolish")
line 57:   let Abolish = {}
line 58: endif
line 59: call extend(Abolish, s:object, 'force')
line 60: call extend(Abolish, {'Coercions': {}}, 'keep')
line 61: 
line 62: function! s:throw(msg)
line 66: 
line 67: function! s:words()
line 81: 
line 82: function! s:extractopts(list,opts)
line 103: 
line 104: " }}}1
line 105: " Dictionary creation {{{1
line 106: 
line 107: function! s:mixedcase(word)
line 110: 
line 111: function! s:camelcase(word)
line 119: 
line 120: function! s:snakecase(word)
line 128: 
line 129: function! s:uppercase(word)
line 132: 
line 133: function! s:dashcase(word)
line 136: 
line 137: function! s:spacecase(word)
line 140: 
line 141: function! s:dotcase(word)
line 144: 
line 145: function! s:titlecase(word)
line 148: 
line 149: call extend(Abolish, { 'camelcase':  s:function('s:camelcase'), 'mixedcase':  s:function('s:mixedcase'), 'snakecase':  s:function('s:snakecase'), 'uppercase':  s:function('s:uppercase'), 'dashcase':   s:function('s:dashcase'), 'dotcase':    s:function('s:dotcase'), 'spacecase':  s:function('s:spacecase'), 'titlecase':  s:function('s:titlecase') }, 'keep')
calling function <SNR>75_function('s:camelcase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_camelcase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:mixedcase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_mixedcase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:snakecase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_snakecase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:uppercase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_uppercase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:dashcase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_dashcase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:dotcase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_dotcase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:spacecase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_spacecase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

calling function <SNR>75_function('s:titlecase')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_titlecase')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 159: 
line 160: function! s:create_dictionary(lhs,rhs,opts)
line 175: 
line 176: function! s:expand_braces(dict)
line 204: 
line 205: " }}}1
line 206: " Abolish Dispatcher {{{1
line 207: 
line 208: function! s:SubComplete(A,L,P)
line 216: 
line 217: function! s:Complete(A,L,P)
line 229: 
line 230: let s:commands = {}
line 231: let s:commands.abstract = s:object.clone()
calling function 1()

line 1:   let sub = deepcopy(self)
line 2:   return a:0 ? extend(sub,a:1) : sub
function 1 returning {'clone': function('1')}

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 232: 
line 233: function! s:commands.abstract.dispatch(bang,line1,line2,count,args)
line 236: 
line 237: function! s:commands.abstract.go(bang,line1,line2,count,args)
line 244: 
line 245: function! s:dispatcher(bang,line1,line2,count,args)
line 266: 
line 267: " }}}1
line 268: " Subvert Dispatcher {{{1
line 269: 
line 270: function! s:subvert_dispatcher(bang,line1,line2,count,args)
line 280: 
line 281: function! s:parse_subvert(bang,line1,line2,count,args)
line 307: 
line 308: function! s:normalize_options(flags)
line 327: 
line 328: " }}}1
line 329: " Searching {{{1
line 330: 
line 331: function! s:subesc(pattern)
line 334: 
line 335: function! s:sort(a,b)
line 344: 
line 345: function! s:pattern(dict,boundaries)
line 358: 
line 359: function! s:egrep_pattern(dict,boundaries)
line 372: 
line 373: function! s:c()
line 377: 
line 378: function! s:find_command(cmd,flags,word)
line 396: 
line 397: function! s:grep_command(args,bang,flags,word)
line 409: 
line 410: let s:commands.search = s:commands.abstract.clone()
calling function 1()

line 1:   let sub = deepcopy(self)
line 2:   return a:0 ? extend(sub,a:1) : sub
function 1 returning {'clone': function('1'), 'go': function('3'), 'dispatch': function('2')}

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 411: let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}
line 412: 
line 413: function! s:commands.search.process(bang,line1,line2,count,args)
line 429: 
line 430: " }}}1
line 431: " Substitution {{{1
line 432: 
line 433: function! Abolished()
line 436: 
line 437: function! s:substitute_command(cmd,bad,good,flags)
line 444: 
line 445: function! s:parse_substitute(bang,line1,line2,count,args)
line 466: 
line 467: let s:commands.substitute = s:commands.abstract.clone()
calling function 1()

line 1:   let sub = deepcopy(self)
line 2:   return a:0 ? extend(sub,a:1) : sub
function 1 returning {'clone': function('1'), 'go': function('3'), 'dispatch': function('2')}

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 468: let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}
line 469: 
line 470: function! s:commands.substitute.process(bang,line1,line2,count,args)
line 486: 
line 487: " }}}1
line 488: " Abbreviations {{{1
line 489: 
line 490: function! s:badgood(args)
line 501: 
line 502: function! s:abbreviate_from_dict(cmd,dict)
line 507: 
line 508: let s:commands.abbrev     = s:commands.abstract.clone()
calling function 1()

line 1:   let sub = deepcopy(self)
line 2:   return a:0 ? extend(sub,a:1) : sub
function 1 returning {'clone': function('1'), 'go': function('3'), 'dispatch': function('2')}

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 509: let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}
line 510: function! s:commands.abbrev.process(bang,line1,line2,count,args)
line 554: 
line 555: let s:commands.delete   = s:commands.abbrev.clone()
calling function 1()

line 1:   let sub = deepcopy(self)
line 2:   return a:0 ? extend(sub,a:1) : sub
function 1 returning {'options': {'cmdline': 0, 'delete': 0...unction('2'), 'process': function('6')}

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 556: let s:commands.delete.options.delete = 1
line 557: 
line 558: " }}}1
line 559: " Maps {{{1
line 560: 
line 561: function! s:unknown_coercion(letter,word)
line 564: 
line 565: call extend(Abolish.Coercions, { 'c': Abolish.camelcase, 'm': Abolish.mixedcase, 's': Abolish.snakecase, '_': Abolish.snakecase, 'u': Abolish.uppercase, 'U': Abolish.uppercase, '-': Abolish.dashcase, 'k': Abolish.dashcase, '.': Abolish.dotcase, ' ': Abolish.spacecase, 't': Abolish.titlecase, "function missing": s:function("s:unknown_coercion")}, "keep")
calling function <SNR>75_function('s:unknown_coercion')

line 1:   return function(substitute(a:name,'^s:',matchstr(expand('<sfile>'), '<SNR>\d\+_'),''))
function <SNR>75_function returning function('<SNR>75_unknown_coercion')

continuing in /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim

line 579: 
line 580: function! s:coerce(type) abort
line 619: 
line 620: nnoremap <expr> <Plug>(abolish-coerce) <SID>coerce(nr2char(getchar()))
line 621: vnoremap <expr> <Plug>(abolish-coerce) <SID>coerce(nr2char(getchar()))
line 622: nnoremap <expr> <plug>(abolish-coerce-word) <SID>coerce(nr2char(getchar())).'iw'
line 623: 
line 624: " }}}1
line 625: 
line 626: if !exists("g:abolish_no_mappings") || ! g:abolish_no_mappings
line 627:   nmap cr  <Plug>(abolish-coerce-word)
line 628: endif
line 629: 
line 630: command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish :exec s:dispatcher(<bang>0,<line1>,<line2>,<count>,[<f-args>])
line 632: command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert :exec s:subvert_dispatcher(<bang>0,<line1>,<line2>,<count>,<q-args>)
line 634: if exists(':S') != 2
line 635:   command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S :exec s:subvert_dispatcher(<bang>0,<line1>,<line2>,<count>,<q-args>)
line 637: endif
line 638: 
line 639: " vim:set ft=vim sw=2 sts=2:
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/abolish.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/plugin/colorizer.vim"
line 1: if exists('g:loaded_colorizer')
line 2:   finish
line 3: endif
line 4: 
line 5: command! ColorizerAttachToBuffer lua require'colorizer'.attach_to_buffer(0)
line 6: command! ColorizerDetachFromBuffer lua require'colorizer'.detach_from_buffer(0)
line 7: command! ColorizerReloadAllBuffers lua require'colorizer'.reload_all_buffers()
line 8: command! ColorizerToggle lua local c = require'colorizer' if c.is_buffer_attached(0) then c.detach_from_buffer(0) else c.attach_to_buffer(0) end
line 11: 
line 12: let g:loaded_colorizer = 1
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/plugin/colorizer.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/hologram.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/plugin/hologram.vim"
line 1: if !has('nvim') || exists('g:loaded_hologram')
line 2: ^Ifinish
line 3: endif
line 4: 
line 5: let g:loaded_hologram = 1
finished sourcing /home/thomaseckert/.config/nvim/plugged/hologram.nvim/plugin/hologram.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/LuaSnip/plugin/luasnip.vim"
line 1: inoremap <silent> <Plug>luasnip-expand-or-jump <cmd>lua require'luasnip'.expand_or_jump()<Cr>
line 2: inoremap <silent> <Plug>luasnip-expand-snippet <cmd>lua require'luasnip'.expand()<Cr>
line 3: inoremap <silent> <Plug>luasnip-next-choice <cmd>lua require'luasnip'.change_choice(1)<Cr>
line 4: inoremap <silent> <Plug>luasnip-prev-choice <cmd>lua require'luasnip'.change_choice(-1)<Cr>
line 5: inoremap <silent> <Plug>luasnip-jump-next <cmd>lua require'luasnip'.jump(1)<Cr>
line 6: inoremap <silent> <Plug>luasnip-jump-prev <cmd>lua require'luasnip'.jump(-1)<Cr>
line 7: 
line 8: noremap <silent> <Plug>luasnip-delete-check <cmd>lua require'luasnip'.unlink_current_if_deleted()<Cr>
line 9: noremap! <silent> <Plug>luasnip-delete-check <cmd>lua require'luasnip'.unlink_current_if_deleted()<Cr>
line 10: 
line 11: noremap <silent> <Plug>luasnip-expand-repeat <cmd>lua require'luasnip'.expand_repeat()<Cr>
line 12: noremap! <silent> <Plug>luasnip-expand-repeat <cmd>lua require'luasnip'.expand_repeat()<Cr>
line 13: 
line 14: snoremap <silent> <Plug>luasnip-expand-or-jump <cmd>lua require'luasnip'.expand_or_jump()<Cr>
line 15: snoremap <silent> <Plug>luasnip-expand-snippet <cmd>lua require'luasnip'.expand()<Cr>
line 16: snoremap <silent> <Plug>luasnip-next-choice <cmd>lua require'luasnip'.change_choice(1)<Cr>
line 17: snoremap <silent> <Plug>luasnip-prev-choice <cmd>lua require'luasnip'.change_choice(-1)<Cr>
line 18: snoremap <silent> <Plug>luasnip-jump-next <cmd>lua require'luasnip'.jump(1)<Cr>
line 19: snoremap <silent> <Plug>luasnip-jump-prev <cmd>lua require'luasnip'.jump(-1)<Cr>
line 20: 
line 21: command! LuaSnipUnlinkCurrent lua require'luasnip'.unlink_current()
line 22: command! LuaSnipListAvailable lua print(vim.inspect(require'luasnip'.available()))
line 23: 
line 24: function! luasnip#expandable()
line 27: 
line 28: function! luasnip#expand_or_jumpable()
line 31: 
line 32: function! luasnip#expand_or_locally_jumpable()
line 35: 
line 36: function! luasnip#jumpable(direction)
line 39: 
line 40: function! luasnip#choice_active()
line 43: 
line 44: lua require('luasnip.config')._setup()
Executing:         augroup luasnip
Executing:             au!
Executing:             autocmd InsertLeave * lua require("luasnip").unlink_current_if_deleted()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:             autocmd InsertLeave * lua require("luasnip").active_update_dependents()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:             autocmd InsertEnter * lua require("luasnip").exit_out_of_region(require("luasnip").session.current_nodes[vim.api.nvim_get_current_buf()])
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I"Remove buffers' nodes on deletion+wipeout.
Executing: ^I^I^Iautocmd BufDelete,BufWipeout * lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I^Iaugroup END
Executing: ^I^I
line 45: 
line 46: " register these during startup so lazy_load will also load filetypes whose
line 47: " events fired only before lazy_load is actually called.
line 48: " (BufWinEnter -> lazy_load() wouldn't load any files without these).
line 49: augroup _luasnip_lazy_load
line 50: ^Iau!
line 51: ^Iau BufWinEnter,FileType * lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
line 52: ^Iau BufWinEnter,FileType * lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
line 53: ^Iau BufWinEnter,FileType * lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
line 54: augroup END
finished sourcing /home/thomaseckert/.config/nvim/plugged/LuaSnip/plugin/luasnip.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/plugin/lsp-zero.vim"
line 1: function! s:installed_servers(...) abort
line 4: 
line 5: command! -nargs=* -bang -complete=custom,s:installed_servers LspZeroSetupServers lua require('lsp-zero').use({<f-args>}, {root_dir = '<bang>' == '!'}, true)
line 6: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/plugin/lsp-zero.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/plugin/nightfox.vim"
line 1: " Load only once
line 2: if exists('g:loaded_nightfox') | finish | endif
line 2:  finish | endif
line 2:  endif
line 3: 
line 4: command! NightfoxCompile lua require('nightfox').compile()
line 5: command! NightfoxClean lua require('nightfox').clean()
line 6: command! NightfoxStatus lua require('nightfox').status()
line 7: 
line 8: command! NightfoxInteractive lua require('nightfox.interactive').attach()
line 9: 
line 10: let g:loaded_nightfox = 1
finished sourcing /home/thomaseckert/.config/nvim/plugged/nightfox.nvim/plugin/nightfox.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin/nuuid.vim"
line 1: if exists('g:nuuid_loaded') && g:nuuid_loaded
line 2: ^Ifinish
line 3: endif
line 4: let g:nuuid_loaded = 1
line 5: 
line 6: if !exists('g:nuuid_case')
line 7: ^Ilet g:nuuid_case = "lower"
line 8: endif
line 9: 
line 10: " Make sure we have python
line 11: if !has('python')
line 12: ^I" finish
line 13: endif
line 14: 
line 15: " Use python to generate a new UUID
line 16: function! NuuidNewUuid()
line 29: 
line 30: 
line 31: function! s:NuuidInsertAbbrev()
line 36: 
line 37: function! s:NuuidInsertUnabbrev()
line 42: 
line 43: function! s:NuuidToggleInsertAbbrev()
line 50: 
line 51: " set the initial abbreviation state
line 52: if !exists('g:nuuid_iabbrev') || g:nuuid_iabbrev
line 53: ^Icall s:NuuidInsertAbbrev()
calling function <SNR>81_NuuidInsertAbbrev()

line 1: ^Iinoreabbrev <expr> nuuid NuuidNewUuid()
line 2: ^Iinoreabbrev <expr> nguid NuuidNewUuid()
line 3: ^Ilet g:nuuid_iabbrev = 1
function <SNR>81_NuuidInsertAbbrev returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin/nuuid.vim

line 54: else
line 55: ^Icall s:NuuidInsertUnabbrev()
line 56: endif
line 57: 
line 58: " commands
line 59: command! -nargs=0 NuuidToggleAbbrev call s:NuuidToggleInsertAbbrev()
line 60: command! -range -nargs=0 NuuidAll <line1>,<line2>substitute/\v<n[ug]uid>/\=NuuidNewUuid()/geI
line 61: command! -range -nargs=0 NuuidReplaceAll <line1>,<line2>substitute/\v<([0-9a-f]{8}\-?([0-9a-f]{4}\-?){3}[0-9a-f]{12}|n[gu]uid)>/\=NuuidNewUuid()/geI
line 62: 
line 63: " Mappings
line 64: nnoremap <Plug>Nuuid i<C-R>=NuuidNewUuid()<CR><Esc>
line 65: inoremap <Plug>Nuuid <C-R>=NuuidNewUuid()<CR>
line 66: vnoremap <Plug>Nuuid c<C-R>=NuuidNewUuid()<CR><Esc>
line 67: 
line 68: if !exists("g:nuuid_no_mappings") || !g:nuuid_no_mappings
line 69: ^Inmap <Leader>u <Plug>Nuuid
line 70: ^Ivmap <Leader>u <Plug>Nuuid
line 71: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin/nuuid.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/fugitive.vim"
line 1: " fugitive.vim - A Git wrapper so awesome, it should be illegal
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: " Version:      3.7
line 4: " GetLatestVimScripts: 2975 1 :AutoInstall: fugitive.vim
line 5: 
line 6: if exists('g:loaded_fugitive')
line 7:   finish
line 8: endif
line 9: let g:loaded_fugitive = 1
line 10: 
line 11: let s:bad_git_dir = '/$\|^fugitive:'
line 12: 
line 13: " FugitiveGitDir() returns the detected Git dir for the given buffer number,
line 14: " or the current buffer if no argument is passed.  This will be an empty
line 15: " string if no Git dir was found.  Use !empty(FugitiveGitDir()) to check if
line 16: " Fugitive is active in the current buffer.  Do not rely on this for direct
line 17: " filesystem access; use FugitiveFind('.git/whatever') instead.
line 18: function! FugitiveGitDir(...) abort
line 47: 
line 48: " FugitiveReal() takes a fugitive:// URL and returns the corresponding path in
line 49: " the work tree.  This may be useful to get a cleaner path for inclusion in
line 50: " the statusline, for example.  Note that the file and its parent directories
line 51: " are not guaranteed to exist.
line 52: "
line 53: " This is intended as an abstract API to be used on any "virtual" path.  For a
line 54: " buffer named foo://bar, check for a function named FooReal(), and if it
line 55: " exists, call FooReal("foo://bar").
line 56: function! FugitiveReal(...) abort
line 70: 
line 71: " FugitiveFind() takes a Fugitive object and returns the appropriate Vim
line 72: " buffer name.  You can use this to generate Fugitive URLs ("HEAD:README") or
line 73: " to get the absolute path to a file in the Git dir (".git/HEAD"), the common
line 74: " dir (".git/config"), or the work tree (":(top)Makefile").
line 75: "
line 76: " An optional second argument provides the Git dir, or the buffer number of a
line 77: " buffer with a Git dir.  The default is the current buffer.
line 78: function! FugitiveFind(...) abort
line 85: 
line 86: " FugitiveParse() takes a fugitive:// URL and returns a 2 element list
line 87: " containing an object name ("commit:file") and the Git dir.  It's effectively
line 88: " the inverse of FugitiveFind().
line 89: function! FugitiveParse(...) abort
line 100: 
line 101: " FugitiveGitVersion() queries the version of Git in use.  Pass up to 3
line 102: " arguments to return a Boolean of whether a certain minimum version is
line 103: " available (FugitiveGitVersion(2,3,4) checks for 2.3.4 or higher) or no
line 104: " arguments to get a raw string.
line 105: function! FugitiveGitVersion(...) abort
line 108: 
line 109: " FugitiveResult() returns an object encapsulating the result of the most
line 110: " recent :Git command.  Will be empty if no result is available.  During a
line 111: " User FugitiveChanged event, this is guaranteed to correspond to the :Git
line 112: " command that triggered the event, or be empty if :Git was not the trigger.
line 113: " Pass in the name of a temp buffer to get the result object for that command
line 114: " instead.  Contains the following keys:
line 115: "
line 116: " * "args": List of command arguments, starting with the subcommand.  Will be
line 117: "   empty for usages like :Git --help.
line 118: " * "git_dir": Git dir of the relevant repository.
line 119: " * "exit_status": The integer exit code of the process.
line 120: " * "flags": Flags passed directly to Git, like -c and --help.
line 121: " * "file": Path to file containing command output.  Not guaranteed to exist,
line 122: "   so verify with filereadable() before trying to access it.
line 123: function! FugitiveResult(...) abort
line 126: 
line 127: " FugitiveExecute() runs Git with a list of arguments and returns a dictionary
line 128: " with the following keys:
line 129: "
line 130: " * "exit_status": The integer exit code of the process.
line 131: " * "stdout": The stdout produced by the process, as a list of lines.
line 132: " * "stderr": The stdout produced by the process, as a list of lines.
line 133: "
line 134: " An optional second argument provides the Git dir, or the buffer number of a
line 135: " buffer with a Git dir.  The default is the current buffer.
line 136: "
line 137: " An optional final argument is a callback Funcref, for asynchronous
line 138: " execution.
line 139: function! FugitiveExecute(args, ...) abort
line 142: 
line 143: " FugitiveShellCommand() turns an array of arugments into a Git command string
line 144: " which can be executed with functions like system() and commands like :!.
line 145: " Integer arguments will be treated as buffer numbers, and the appropriate
line 146: " relative path inserted in their place.
line 147: "
line 148: " An optional second argument provides the Git dir, or the buffer number of a
line 149: " buffer with a Git dir.  The default is the current buffer.
line 150: function! FugitiveShellCommand(...) abort
line 153: 
line 154: " FugitiveConfig() get returns an opaque structure that can be passed to other
line 155: " FugitiveConfig functions in lieu of a Git directory.  This can be faster
line 156: " when performing multiple config queries.  Do not rely on the internal
line 157: " structure of the return value as it is not guaranteed.  If you want a full
line 158: " dictionary of every config value, use FugitiveConfigGetRegexp('.*').
line 159: "
line 160: " An optional argument provides the Git dir, or the buffer number of a
line 161: " buffer with a Git dir.  The default is the current buffer.  Pass a blank
line 162: " string to limit to the global config.
line 163: function! FugitiveConfig(...) abort
line 166: 
line 167: " FugitiveConfigGet() retrieves a Git configuration value.  An optional second
line 168: " argument can be either the object returned by FugitiveConfig(), or a Git
line 169: " dir or buffer number to be passed along to FugitiveConfig().
line 170: function! FugitiveConfigGet(name, ...) abort
line 173: 
line 174: " FugitiveConfigGetAll() is like FugitiveConfigGet() but returns a list of
line 175: " all values.
line 176: function! FugitiveConfigGetAll(name, ...) abort
line 179: 
line 180: " FugitiveConfigGetRegexp() retrieves a dictionary of all configuration values
line 181: " with a key matching the given pattern.  Like git config --get-regexp, but
line 182: " using a Vim regexp.  Second argument has same semantics as
line 183: " FugitiveConfigGet().
line 184: function! FugitiveConfigGetRegexp(pattern, ...) abort
line 187: 
line 188: " FugitiveRemoteUrl() retrieves the remote URL for the given remote name,
line 189: " defaulting to the current branch's remote or "origin" if no argument is
line 190: " given.  Similar to `git remote get-url`, but also attempts to resolve HTTP
line 191: " redirects and SSH host aliases.
line 192: "
line 193: " An optional second argument provides the Git dir, or the buffer number of a
line 194: " buffer with a Git dir.  The default is the current buffer.
line 195: function! FugitiveRemoteUrl(...) abort
line 198: 
line 199: " FugitiveRemote() returns a data structure parsed from the remote URL.
line 200: " For example, for remote URL "https://me@example.com:1234/repo.git", the
line 201: " returned dictionary will contain the following:
line 202: "
line 203: " * "scheme": "https"
line 204: " * "authority": "user@example.com:1234"
line 205: " * "path": "/repo.git" (for SSH URLs this may be a relative path)
line 206: " * "pathname": "/repo.git" (always coerced to absolute path)
line 207: " * "host": "example.com:1234"
line 208: " * "hostname": "example.com"
line 209: " * "port": "1234"
line 210: " * "user": "me"
line 211: " * "path": "/repo.git"
line 212: " * "url": "https://me@example.com:1234/repo.git"
line 213: function! FugitiveRemote(...) abort
line 216: 
line 217: " FugitiveDidChange() triggers a FugitiveChanged event and reloads the summary
line 218: " buffer for the current or given buffer number's repository.  You can also
line 219: " give the result of a FugitiveExecute() and that context will be made
line 220: " available inside the FugitiveChanged() event.
line 221: "
line 222: " Passing the special argument 0 (the number zero) softly expires summary
line 223: " buffers for all repositories.  This can be used after a call to system()
line 224: " with unclear implications.
line 225: function! FugitiveDidChange(...) abort
line 228: 
line 229: " FugitiveHead() retrieves the name of the current branch. If the current HEAD
line 230: " is detached, FugitiveHead() will return the empty string, unless the
line 231: " optional argument is given, in which case the hash of the current commit
line 232: " will be truncated to the given number of characters.
line 233: "
line 234: " An optional second argument provides the Git dir, or the buffer number of a
line 235: " buffer with a Git dir.  The default is the current buffer.
line 236: function! FugitiveHead(...) abort
line 252: 
line 253: function! FugitivePath(...) abort
line 264: 
line 265: function! FugitiveStatusline(...) abort
line 271: 
line 272: let s:resolved_git_dirs = {}
line 273: function! FugitiveActualDir(...) abort
line 283: 
line 284: let s:commondirs = {}
line 285: function! FugitiveCommonDir(...) abort
line 307: 
line 308: function! FugitiveWorkTree(...) abort
line 316: 
line 317: function! FugitiveIsGitDir(...) abort
line 326: 
line 327: function! s:ReadFile(path, line_count) abort
line 337: 
line 338: let s:worktree_for_dir = {}
line 339: let s:dir_for_worktree = {}
line 340: function! s:Tree(path) abort
line 387: 
line 388: function! s:CeilingDirectories() abort
line 404: 
line 405: function! s:ResolveGitDir(git_dir) abort
line 422: 
line 423: function! FugitiveExtractGitDir(path) abort
line 468: 
line 469: function! FugitiveDetect(...) abort
line 481: 
line 482: function! FugitiveGitPath(path) abort
line 485: 
line 486: if exists('+shellslash')
line 487: 
line 488:   function! s:Slash(path) abort
line 491: 
line 492:   function! s:VimSlash(path) abort
line 495: 
line 496:   function FugitiveVimPath(path) abort
line 499: 
line 500: else
line 501: 
line 502:   function! s:Slash(path) abort
line 505: 
line 506:   function! s:VimSlash(path) abort
line 509: 
line 510:   if has('win32unix') && filereadable('/git-bash.exe')
line 511:     function! FugitiveVimPath(path) abort
line 514:   else
line 515:     function! FugitiveVimPath(path) abort
line 518:   endif
line 519: 
line 520: endif
line 521: 
line 522: function! s:ProjectionistDetect() abort
line 539: 
line 540: let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''
line 541: let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''
line 542: let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''
line 543: 
line 544: if exists(':G') != 2
line 545:   command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 546: endif
line 547: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 548: 
line 549: if exists(':Gstatus') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 550:   exe 'command! -bang -bar     -range=-1' s:addr_other 'Gstatus exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gstatus is deprecated in favor of :Git (with no arguments)"|echohl NONE'
line 552: endif
line 553: 
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 554: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 555:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 556:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 559:   endif
line 560: endfor
line 561: unlet s:cmd
line 562: 
line 563: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)"
line 563: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)
line 564: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)"
line 564: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)
line 565: 
line 566: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 566: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 567: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)'
line 567: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)
line 568: 
line 569: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 569: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 570: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 570: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 571: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 571: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 572: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 572: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 573: 
line 574: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 574: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 575: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 575: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 576: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)'
line 576: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)
line 577: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)'
line 577: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)
line 578: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)'
line 578: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)
line 579: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_tabs  '-complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)'
line 579: command! -bar -bang -nargs=* -range=-1 -addr=tabs -complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)
line 580: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 580: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 581: 
line 582: if exists(':Gr') != 2
line 583:   exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 583: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 584: endif
line 585: exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 585: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 586: 
line 587: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)'
line 587: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)
line 588: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)'
line 588: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)
line 589: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)'
line 589: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)
line 590: 
line 591: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 591: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 592: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 592: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 593: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 593: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 594: 
line 595: exe 'command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 595: command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 596: exe 'command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 596: command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 597: exe 'command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 597: command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 598: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 598: command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 599: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 599: command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 600: if exists(':Gremove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 601:   exe 'command! -bar -bang -nargs=0 Gremove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gremove is deprecated in favor of :GRemove"|echohl NONE'
line 603: elseif exists(':Gremove') != 2 && !exists('g:fugitive_legacy_commands')
line 604:   exe 'command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"'
line 604: command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"
line 605: endif
line 606: if exists(':Gdelete') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 607:   exe 'command! -bar -bang -nargs=0 Gdelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gdelete is deprecated in favor of :GDelete"|echohl NONE'
line 609: elseif exists(':Gdelete') != 2 && !exists('g:fugitive_legacy_commands')
line 610:   exe 'command! -bar -bang -nargs=0 Gdelete echoerr ":Gremove has been removed in favor of :GRemove"'
line 610: command! -bar -bang -nargs=0 Gdelete echoerr ":Gremove has been removed in favor of :GRemove"
line 611: endif
line 612: if exists(':Gmove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 613:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject Gmove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gmove is deprecated in favor of :GMove"|echohl NONE'
line 615: elseif exists(':Gmove') != 2 && !exists('g:fugitive_legacy_commands')
line 616:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove' 'echoerr ":Gmove has been removed in favor of :GMove"'
line 616: command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove echoerr ":Gmove has been removed in favor of :GMove"
line 618: endif
line 619: if exists(':Grename') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 620:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete Grename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Grename is deprecated in favor of :GRename"|echohl NONE'
line 622: elseif exists(':Grename') != 2 && !exists('g:fugitive_legacy_commands')
line 623:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename' 'echoerr ":Grename has been removed in favor of :GRename"'
line 623: command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename echoerr ":Grename has been removed in favor of :GRename"
line 625: endif
line 626: 
line 627: exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 627: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 628: if exists(':Gbrowse') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 629:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|if <bang>1|redraw!|endif|echohl WarningMSG|echomsg ":Gbrowse is deprecated in favor of :GBrowse"|echohl NONE'
line 631: elseif exists(':Gbrowse') != 2 && !exists('g:fugitive_legacy_commands')
line 632:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse' 'echoerr ":Gbrowse has been removed in favor of :GBrowse"'
line 632: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse echoerr ":Gbrowse has been removed in favor of :GBrowse"
line 634: endif
line 635: 
line 636: if v:version < 704
line 637:   finish
line 638: endif
line 639: 
line 640: let g:io_fugitive = { 'simplify': function('fugitive#simplify'), 'resolve': function('fugitive#resolve'), 'getftime': function('fugitive#getftime'), 'getfsize': function('fugitive#getfsize'), 'getftype': function('fugitive#getftype'), 'filereadable': function('fugitive#filereadable'), 'filewritable': function('fugitive#filewritable'), 'isdirectory': function('fugitive#isdirectory'), 'getfperm': function('fugitive#getfperm'), 'setfperm': function('fugitive#setfperm'), 'readfile': function('fugitive#readfile'), 'writefile': function('fugitive#writefile'), 'glob': function('fugitive#glob'), 'delete': function('fugitive#delete'), 'Real': function('FugitiveReal')}
line 656: 
line 657: augroup fugitive
line 658:   autocmd!
line 659: 
line 660:   autocmd BufNewFile,BufReadPost * if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 664:   autocmd FileType           netrw if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 668:   autocmd BufFilePost            *  unlet! b:git_dir
line 669: 
line 670:   autocmd FileType git call fugitive#MapCfile()
line 672:   autocmd FileType gitcommit call fugitive#MapCfile('fugitive#MessageCfile()')
line 674:   autocmd FileType git,gitcommit if &foldtext ==# 'foldtext()' |    setlocal foldtext=fugitive#Foldtext() | endif
line 678:   autocmd FileType fugitive call fugitive#MapCfile('fugitive#PorcelainCfile()')
line 680:   autocmd FileType gitrebase let &l:include = '^\%(pick\|squash\|edit\|reword\|fixup\|drop\|[pserfd]\)\>' | if &l:includeexpr !~# 'Fugitive' |   let &l:includeexpr = 'v:fname =~# ''^\x\{4,\}$'' && len(FugitiveGitDir()) ? FugitiveFind(v:fname) : ' .     (len(&l:includeexpr) ? &l:includeexpr : 'v:fname') | endif | let b:undo_ftplugin = get(b:, 'undo_ftplugin', 'exe') . '|setl inex= inc='
line 687: 
line 688:   autocmd BufReadCmd index{,.lock} nested if FugitiveIsGitDir(expand('<amatch>:p:h')) |   let b:git_dir = s:Slash(expand('<amatch>:p:h')) |   exe fugitive#BufReadStatus(v:cmdbang) | elseif filereadable(expand('<amatch>')) |   silent doautocmd BufReadPre |   keepalt noautocmd read <amatch> |   silent 1delete_ |   silent doautocmd BufReadPost | else |   silent doautocmd BufNewFile | endif
line 700: 
line 701:   autocmd BufReadCmd   fugitive://*          nested exe fugitive#BufReadCmd() | if &path =~# '^\.\%(,\|$\)' |   let &l:path = substitute(&path, '^\.,\=', '', '') | endif
line 705:   autocmd BufWriteCmd  fugitive://*          nested exe fugitive#BufWriteCmd()
line 706:   autocmd FileReadCmd  fugitive://*          nested exe fugitive#FileReadCmd()
line 707:   autocmd FileWriteCmd fugitive://*          nested exe fugitive#FileWriteCmd()
line 708:   if exists('##SourceCmd')
line 709:     autocmd SourceCmd     fugitive://*       nested exe fugitive#SourceCmd()
line 710:   endif
line 711: 
line 712:   autocmd User Flags call Hoist('buffer', function('FugitiveStatusline'))
line 713: 
line 714:   autocmd User ProjectionistDetect call s:ProjectionistDetect()
line 715: augroup END
line 716: 
line 717: nmap <script><silent> <Plug>fugitive:y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 718: nmap <script> <Plug>fugitive: <Nop>
line 719: 
line 720: if get(g:, 'fugitive_no_maps')
line 721:   finish
line 722: endif
line 723: 
line 724: function! s:Map(mode, lhs, rhs, flags) abort
line 746: 
line 747: call s:Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')
calling function <SNR>82_Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: cmap <expr><script><nowait> <C-R><C-G> fnameescape(fugitive#Object(@%))
line 20:   endif
function <SNR>82_Map returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/fugitive.vim

line 748: call s:Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')
calling function <SNR>82_Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: nmap <silent><script><nowait> y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 20:   endif
function <SNR>82_Map returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/fugitive.vim

finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/fugitive.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-commentary/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-commentary/plugin/commentary.vim"
line 1: " commentary.vim - Comment stuff out
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: " Version:      1.3
line 4: " GetLatestVimScripts: 3695 1 :AutoInstall: commentary.vim
line 5: 
line 6: if exists("g:loaded_commentary") || v:version < 703
line 7:   finish
line 8: endif
line 9: let g:loaded_commentary = 1
line 10: 
line 11: function! s:surroundings() abort
line 15: 
line 16: function! s:strip_white_space(l,r,line) abort
line 26: 
line 27: function! s:go(...) abort
line 83: 
line 84: function! s:textobject(inner) abort
line 104: 
line 105: command! -range -bar -bang Commentary call s:go(<line1>,<line2>,<bang>0)
line 106: xnoremap <expr>   <Plug>Commentary     <SID>go()
line 107: nnoremap <expr>   <Plug>Commentary     <SID>go()
line 108: nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'
line 109: onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==# 'c')<CR>
line 110: nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>
line 111: nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>
line 112: 
line 113: if !hasmapto('<Plug>Commentary') || maparg('gc','n') ==# ''
line 114:   xmap gc  <Plug>Commentary
line 115:   nmap gc  <Plug>Commentary
line 116:   omap gc  <Plug>Commentary
line 117:   nmap gcc <Plug>CommentaryLine
line 118:   nmap gcu <Plug>Commentary<Plug>Commentary
line 119: endif
line 120: 
line 121: " vim:set et sw=2:
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-commentary/plugin/commentary.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/tabular/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/tabular/plugin/Tabular.vim"
line 1: " Tabular:     Align columnar data using regex-designated column boundaries
line 2: " Maintainer:  Matthew Wozniski (godlygeek@gmail.com)
line 3: " Date:        Thu, 03 May 2012 20:49:32 -0400
line 4: " Version:     1.0
line 5: "
line 6: " Long Description:
line 7: " Sometimes, it's useful to line up text.  Naturally, it's nicer to have the
line 8: " computer do this for you, since aligning things by hand quickly becomes
line 9: " unpleasant.  While there are other plugins for aligning text, the ones I've
line 10: " tried are either impossibly difficult to understand and use, or too simplistic
line 11: " to handle complicated tasks.  This plugin aims to make the easy things easy
line 12: " and the hard things possible, without providing an unnecessarily obtuse
line 13: " interface.  It's still a work in progress, and criticisms are welcome.
line 14: "
line 15: " License:
line 16: " Copyright (c) 2012, Matthew J. Wozniski
line 17: " All rights reserved.
line 18: "
line 19: " Redistribution and use in source and binary forms, with or without
line 20: " modification, are permitted provided that the following conditions are met:
line 21: "     * Redistributions of source code must retain the above copyright notice,
line 22: "       this list of conditions and the following disclaimer.
line 23: "     * Redistributions in binary form must reproduce the above copyright
line 24: "       notice, this list of conditions and the following disclaimer in the
line 25: "       documentation and/or other materials provided with the distribution.
line 26: "     * The names of the contributors may not be used to endorse or promote
line 27: "       products derived from this software without specific prior written
line 28: "       permission.
line 29: "
line 30: " THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY EXPRESS
line 31: " OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
line 32: " OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
line 33: " NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT,
line 34: " INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
line 35: " LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
line 36: " OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
line 37: " LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
line 38: " NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
line 39: " EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
line 40: 
line 41: " Abort if running in vi-compatible mode or the user doesn't want us.
line 42: if &cp || exists('g:tabular_loaded')
line 43:   if &cp && &verbose
line 44:     echo "Not loading Tabular in compatible mode."
line 45:   endif
line 46:   finish
line 47: endif
line 48: 
line 49: let g:tabular_loaded = 1
line 50: 
line 51: " Stupid vimscript crap                                                   {{{1
line 52: let s:savecpo = &cpo
line 53: set cpo&vim
line 54: 
line 55: " Private Things                                                          {{{1
line 56: 
line 57: " Dictionary of command name to command
line 58: let s:TabularCommands = {}
line 59: 
line 60: " Generate tab completion list for :Tabularize                            {{{2
line 61: " Return a list of commands that match the command line typed so far.
line 62: " NOTE: Tries to handle commands with spaces in the name, but Vim doesn't seem
line 63: "       to handle that terribly well... maybe I should give up on that.
line 64: function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)
line 74: 
line 75: " Choose the proper command map from the given command line               {{{2
line 76: " Returns [ command map, command line with leading <buffer> removed ]
line 77: function! s:ChooseCommandMap(commandline)
line 91: 
line 92: " Parse '/pattern/format' into separate pattern and format parts.         {{{2
line 93: " If parsing fails, return [ '', '' ]
line 94: function! s:ParsePattern(string)
line 110: 
line 111: " Split apart a list of | separated expressions.                          {{{2
line 112: function! s:SplitCommands(string)
line 152: 
line 153: " Public Things                                                           {{{1
line 154: 
line 155: " Command associating a command name with a simple pattern command        {{{2
line 156: " AddTabularPattern[!] [<buffer>] name /pattern[/format]
line 157: "
line 158: " If <buffer> is provided, the command will only be available in the current
line 159: " buffer, and will be used instead of any global command with the same name.
line 160: "
line 161: " If a command with the same name and scope already exists, it is an error,
line 162: " unless the ! is provided, in which case the existing command will be
line 163: " replaced.
line 164: "
line 165: " pattern is a regex describing the delimiter to be used.
line 166: "
line 167: " format describes the format pattern to be used.  The default will be used if
line 168: " none is provided.
line 169: com! -nargs=+ -bang AddTabularPattern call AddTabularPattern(<q-args>, <bang>0)
line 171: 
line 172: function! AddTabularPattern(command, force)
line 204: 
line 205: " Command associating a command name with a pipeline of functions         {{{2
line 206: " AddTabularPipeline[!] [<buffer>] name /pattern/ func [ | func2 [ | func3 ] ]
line 207: "
line 208: " If <buffer> is provided, the command will only be available in the current
line 209: " buffer, and will be used instead of any global command with the same name.
line 210: "
line 211: " If a command with the same name and scope already exists, it is an error,
line 212: " unless the ! is provided, in which case the existing command will be
line 213: " replaced.
line 214: "
line 215: " pattern is a regex that will be used to determine which lines will be
line 216: " filtered.  If the cursor line doesn't match the pattern, using the command
line 217: " will be a no-op, otherwise the cursor and all contiguous lines matching the
line 218: " pattern will be filtered.
line 219: "
line 220: " Each 'func' argument represents a function to be called.  This function
line 221: " will have access to a:lines, a List containing one String per line being
line 222: " filtered.
line 223: com! -nargs=+ -bang AddTabularPipeline call AddTabularPipeline(<q-args>, <bang>0)
line 225: 
line 226: function! AddTabularPipeline(command, force)
line 257: 
line 258: " Tabularize /pattern[/format]                                            {{{2
line 259: " Tabularize name
line 260: "
line 261: " Align text, either using the given pattern, or the command associated with
line 262: " the given name.
line 263: com! -nargs=* -range -complete=customlist,<SID>CompleteTabularizeCommand Tabularize <line1>,<line2>call Tabularize(<q-args>)
line 265: 
line 266: function! Tabularize(command, ...) range
line 320: 
line 321: " GTabularize /pattern[/format]                                           {{{2
line 322: " GTabularize name
line 323: "
line 324: " Align text on only matching lines, either using the given pattern, or the
line 325: " command associated with the given name.  Mnemonically, this is similar to
line 326: " the :global command, which takes some action on all rows matching a pattern
line 327: " in a range.  This command is different from normal :Tabularize in 3 ways:
line 328: "   1) If a line in the range does not match the pattern, it will be left
line 329: "      unchanged, and not in any way affect the outcome of other lines in the
line 330: "      range (at least, normally - but Pipelines can and will still look at
line 331: "      non-matching rows unless they are specifically written to be aware of
line 332: "      tabular#DoGTabularize() and handle it appropriately).
line 333: "   2) No automatic range determination - :Tabularize automatically expands
line 334: "      a single-line range (or a call with no range) to include all adjacent
line 335: "      matching lines.  That behavior does not make sense for this command.
line 336: "   3) If called without a range, it will act on all lines in the buffer (like
line 337: "      :global) rather than only a single line
line 338: com! -nargs=* -range=% -complete=customlist,<SID>CompleteTabularizeCommand GTabularize <line1>,<line2> call Tabularize(<q-args>, { 'mode': 'GTabularize' } )
line 341: 
line 342: " Stupid vimscript crap, part 2                                           {{{1
line 343: let &cpo = s:savecpo
line 344: unlet s:savecpo
line 345: 
line 346: " vim:set sw=2 sts=2 fdm=marker:
finished sourcing /home/thomaseckert/.config/nvim/plugged/tabular/plugin/Tabular.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin/editorconfig.vim"
line 1: " plugin/editorconfig.vim: EditorConfig native Vimscript plugin file
line 2: " Copyright (c) 2011-2019 EditorConfig Team
line 3: " All rights reserved.
line 4: "
line 5: " Redistribution and use in source and binary forms, with or without
line 6: " modification, are permitted provided that the following conditions are met:
line 7: "
line 8: " 1. Redistributions of source code must retain the above copyright notice,
line 9: "    this list of conditions and the following disclaimer.
line 10: " 2. Redistributions in binary form must reproduce the above copyright notice,
line 11: "    this list of conditions and the following disclaimer in the documentation
line 12: "    and/or other materials provided with the distribution.
line 13: "
line 14: " THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
line 15: " AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
line 16: " IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
line 17: " ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
line 18: " LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
line 19: " CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
line 20: " SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
line 21: " INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
line 22: " CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
line 23: " ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
line 24: " POSSIBILITY OF SUCH DAMAGE.
line 25: "
line 26: 
line 27: " check for Vim versions and duplicate script loading.
line 28: if v:version < 700 || exists("g:loaded_EditorConfig")
line 29:     finish
line 30: endif
line 31: let g:loaded_EditorConfig = 1
line 32: 
line 33: let s:saved_cpo = &cpo
line 34: set cpo&vim
line 35: 
line 36: " variables {{{1
line 37: 
line 38: " Make sure the globals all exist
line 39: if !exists('g:EditorConfig_exec_path')
line 40:     let g:EditorConfig_exec_path = ''
line 41: endif
line 42: 
line 43: if !exists('g:EditorConfig_verbose')
line 44:     let g:EditorConfig_verbose = 0
line 45: endif
line 46: 
line 47: if !exists('g:EditorConfig_preserve_formatoptions')
line 48:     let g:EditorConfig_preserve_formatoptions = 0
line 49: endif
line 50: 
line 51: if !exists('g:EditorConfig_max_line_indicator')
line 52:     let g:EditorConfig_max_line_indicator = 'line'
line 53: endif
line 54: 
line 55: if !exists('g:EditorConfig_exclude_patterns')
line 56:     let g:EditorConfig_exclude_patterns = []
line 57: endif
line 58: 
line 59: if !exists('g:EditorConfig_disable_rules')
line 60:     let g:EditorConfig_disable_rules = []
line 61: endif
line 62: 
line 63: " Copy some of the globals into script variables --- changes to these
line 64: " globals won't affect the plugin until the plugin is reloaded.
line 65: if exists('g:EditorConfig_core_mode') && !empty(g:EditorConfig_core_mode)
line 66:     let s:editorconfig_core_mode = g:EditorConfig_core_mode
line 67: else
line 68:     let s:editorconfig_core_mode = ''
line 69: endif
line 70: 
line 71: if exists('g:EditorConfig_exec_path') && !empty(g:EditorConfig_exec_path)
line 72:     let s:editorconfig_exec_path = g:EditorConfig_exec_path
line 73: else
line 74:     let s:editorconfig_exec_path = ''
line 75: endif
line 76: 
line 77: let s:initialized = 0
line 78: 
line 79: " }}}1
line 80: 
line 81: " shellslash handling {{{1
line 82: function! s:DisableShellSlash() " {{{2
line 94: 
line 95: function! s:ResetShellSlash() " {{{2
line 102: " }}}1
line 103: 
line 104: " Mode initialization functions {{{1
line 105: 
line 106: function! s:InitializeVimCore()
line 116: 
line 117: function! s:InitializeExternalCommand()
line 136: " }}}1
line 137: 
line 138: function! s:Initialize() " Initialize the plugin.  {{{1
line 178: 
line 179: function! s:GetFilenames(path, filename) " {{{1
line 194: 
line 195: function! s:UseConfigFiles() abort " Apply config to the current buffer {{{1
line 255: 
line 256: " Custom commands, and autoloading {{{1
line 257: 
line 258: " Autocommands, and function to enable/disable the plugin {{{2
line 259: function! s:EditorConfigEnable(should_enable)
line 267: 
line 268: " }}}2
line 269: 
line 270: " Commands {{{2
line 271: command! EditorConfigEnable call s:EditorConfigEnable(1)
line 272: command! EditorConfigDisable call s:EditorConfigEnable(0)
line 273: 
line 274: command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files
line 275: " }}}2
line 276: 
line 277: " On startup, enable the autocommands
line 278: call s:EditorConfigEnable(1)
calling function <SNR>85_EditorConfigEnable(1)

line 1:     augroup editorconfig
line 2:         autocmd!
line 3:         if a:should_enable
line 4:             autocmd BufNewFile,BufReadPost,BufFilePost * call s:UseConfigFiles()
line 5:         endif
line 6:     augroup END
function <SNR>85_EditorConfigEnable returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin/editorconfig.vim

line 279: 
line 280: " Always set the filetype for .editorconfig files
line 281: augroup editorconfig_dosini
line 282:     autocmd!
line 283:     autocmd BufNewFile,BufRead .editorconfig set filetype=dosini
line 284: augroup END
line 285: 
line 286: " }}}1
line 287: 
line 288: " UseConfigFiles function for different modes {{{1
line 289: 
line 290: function! s:UseConfigFiles_VimCore()
line 301: 
line 302: function! s:UseConfigFiles_ExternalCommand()
line 311: 
line 312: function! s:SpawnExternalParser(cmd) " {{{2
line 366: 
line 367: " }}}1
line 368: 
line 369: function! s:ApplyConfig(config) abort " Set the buffer options {{{1
line 498: 
line 499: " }}}1
line 500: 
line 501: function! s:TrimTrailingWhitespace() " {{{1
line 512: 
line 513: function! s:IsRuleActive(name, config) " {{{1
line 517: 
line 518: let &cpo = s:saved_cpo
line 519: unlet! s:saved_cpo
line 520: 
line 521: " vim: fdm=marker fdc=3
finished sourcing /home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin/editorconfig.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/black/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/black/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/black/plugin/black.vim"
line 1: " black.vim
line 2: " Author: Łukasz Langa
line 3: " Created: Mon Mar 26 23:27:53 2018 -0700
line 4: " Requires: Vim Ver7.0+
line 5: " Version:  1.2
line 6: "
line 7: " Documentation:
line 8: "   This plugin formats Python files.
line 9: "
line 10: " History:
line 11: "  1.0:
line 12: "    - initial version
line 13: "  1.1:
line 14: "    - restore cursor/window position after formatting
line 15: "  1.2:
line 16: "    - use autoload script
line 17: 
line 18: if exists("g:load_black")
line 19:   finish
line 20: endif
line 21: 
line 22: if v:version < 700 || !has('python3')
Searching for "autoload/provider/python3.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/provider/python3.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/provider/python3.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 22: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim"
line 1: " The Python3 provider uses a Python3 host to emulate an environment for running
line 2: " python3 plugins. :help provider
line 3: "
line 4: " Associating the plugin with the Python3 host is the first step because
line 5: " plugins will be passed as command-line arguments
line 6: 
line 7: if exists('g:loaded_python3_provider')
line 8:   finish
line 9: endif
line 10: let [s:prog, s:err] = provider#pythonx#Detect(3)
Searching for "autoload/provider/pythonx.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/provider/pythonx.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/provider/pythonx.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/pythonx.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/pythonx.vim"
line 1: " The Python provider helper
line 2: if exists('s:loaded_pythonx_provider')
line 3:   finish
line 4: endif
line 5: 
line 6: let s:loaded_pythonx_provider = 1
line 7: 
line 8: function! provider#pythonx#Require(host) abort
line 22: 
line 23: function! s:get_python_executable_from_host_var(major_version) abort
line 26: 
line 27: function! s:get_python_candidates(major_version) abort
line 32: 
line 33: " Returns [path_to_python_executable, error_message]
line 34: function! provider#pythonx#Detect(major_version) abort
line 37: 
line 38: " Returns [path_to_python_executable, error_message]
line 39: function! provider#pythonx#DetectByModule(module, major_version) abort
line 61: 
line 62: " Returns array: [prog_exitcode, prog_version]
line 63: function! s:import_module(prog, module) abort
line 73: 
line 74: " Returns array: [was_success, error_message]
line 75: function! provider#pythonx#CheckForModule(prog, module, major_version) abort
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/pythonx.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim
calling function provider#pythonx#Detect(3)

line 1:   return provider#pythonx#DetectByModule('neovim', a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule('neovim', 3)

line 1:   let python_exe = s:get_python_executable_from_host_var(a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[1]..<SNR>88_get_python_executable_from_host_var(3)

line 1:   return expand(get(g:, 'python'.(a:major_version == 3 ? '3' : execute("throw 'unsupported'")).'_host_prog', ''), v:true)
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[1]..<SNR>88_get_python_executable_from_host_var returning ''

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 2: 
line 3:   if !empty(python_exe)
line 4:     return [exepath(expand(python_exe, v:true)), '']
line 5:   endif
line 6: 
line 7:   let candidates = s:get_python_candidates(a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[7]..<SNR>88_get_python_candidates(3)

line 1:   return { 3: ['python3', 'python3.10', 'python3.9', 'python3.8', 'python3.7', 'python'] }[a:major_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[7]..<SNR>88_get_python_candidates returning ['python3', 'python3.10', 'python3.9', 'python3.8', 'python3.7', 'python']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 8:   let errors = []
line 9: 
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python3', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
line 4:   endif
line 5: 
line 6:   let min_version = '3.7'
line 7: 
line 8:   " Try to load module, and output Python version.
line 9:   " Exit codes:
line 10:   "   0  module can be loaded.
line 11:   "   2  module cannot be loaded.
line 12:   "   Otherwise something else went wrong (e.g. 1 or 127).
line 13:   let [prog_exitcode, prog_version] = s:import_module(a:prog, a:module)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module('python3', 'neovim')

line 1:   let prog_version = system([a:prog, '-c' , printf( 'import sys; ' . 'sys.path = list(filter(lambda x: x != "", sys.path)); ' . 'sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); ' . 'import pkgutil; ' . 'exit(2*int(pkgutil.get_loader("%s") is None))', a:module)])
Executing command: "'/home/linuxbrew/.linuxbrew/opt/python@3.10/bin/python3' '-c' 'import sys; sys.path = list(filter(lambda x: x != "", sys.path)); sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); import pkgutil; exit(2*int(pkgutil.get_loader(..."


line 8:   return [v:shell_error, prog_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module returning [2, '3.10']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule

line 14: 
line 15:   if prog_exitcode == 2 || prog_exitcode == 0
line 16:     " Check version only for expected return codes.
line 17:     if prog_version !~ '^' . a:major_version
line 18:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python ' . a:major_version . '.']
line 20:     elseif prog_version =~ '^' . a:major_version && str2nr(prog_version[2:]) < str2nr(min_version[2:])
line 21:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python >= ' . min_version . '.']
line 23:     endif
line 24:   endif
line 25: 
line 26:   if prog_exitcode == 2
line 27:     return [0, prog_path.' does not have the "' . a:module . '" module.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, '/home/linuxbrew/.linuxbrew/opt/py...n3 does not have the "neovim" module.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python3.10', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
line 4:   endif
line 5: 
line 6:   let min_version = '3.7'
line 7: 
line 8:   " Try to load module, and output Python version.
line 9:   " Exit codes:
line 10:   "   0  module can be loaded.
line 11:   "   2  module cannot be loaded.
line 12:   "   Otherwise something else went wrong (e.g. 1 or 127).
line 13:   let [prog_exitcode, prog_version] = s:import_module(a:prog, a:module)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module('python3.10', 'neovim')

line 1:   let prog_version = system([a:prog, '-c' , printf( 'import sys; ' . 'sys.path = list(filter(lambda x: x != "", sys.path)); ' . 'sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); ' . 'import pkgutil; ' . 'exit(2*int(pkgutil.get_loader("%s") is None))', a:module)])
Executing command: "'/home/linuxbrew/.linuxbrew/opt/python@3.10/bin/python3.10' '-c' 'import sys; sys.path = list(filter(lambda x: x != "", sys.path)); sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); import pkgutil; exit(2*int(pkgutil.get_load..."


line 8:   return [v:shell_error, prog_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module returning [2, '3.10']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule

line 14: 
line 15:   if prog_exitcode == 2 || prog_exitcode == 0
line 16:     " Check version only for expected return codes.
line 17:     if prog_version !~ '^' . a:major_version
line 18:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python ' . a:major_version . '.']
line 20:     elseif prog_version =~ '^' . a:major_version && str2nr(prog_version[2:]) < str2nr(min_version[2:])
line 21:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python >= ' . min_version . '.']
line 23:     endif
line 24:   endif
line 25: 
line 26:   if prog_exitcode == 2
line 27:     return [0, prog_path.' does not have the "' . a:module . '" module.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, '/home/linuxbrew/.linuxbrew/opt/py...10 does not have the "neovim" module.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python3.9', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
line 4:   endif
line 5: 
line 6:   let min_version = '3.7'
line 7: 
line 8:   " Try to load module, and output Python version.
line 9:   " Exit codes:
line 10:   "   0  module can be loaded.
line 11:   "   2  module cannot be loaded.
line 12:   "   Otherwise something else went wrong (e.g. 1 or 127).
line 13:   let [prog_exitcode, prog_version] = s:import_module(a:prog, a:module)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module('python3.9', 'neovim')

line 1:   let prog_version = system([a:prog, '-c' , printf( 'import sys; ' . 'sys.path = list(filter(lambda x: x != "", sys.path)); ' . 'sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); ' . 'import pkgutil; ' . 'exit(2*int(pkgutil.get_loader("%s") is None))', a:module)])
Executing command: "'/home/linuxbrew/.linuxbrew/bin/python3.9' '-c' 'import sys; sys.path = list(filter(lambda x: x != "", sys.path)); sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); import pkgutil; exit(2*int(pkgutil.get_loader("neovim") is N..."


line 8:   return [v:shell_error, prog_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module returning [2, '3.9']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule

line 14: 
line 15:   if prog_exitcode == 2 || prog_exitcode == 0
line 16:     " Check version only for expected return codes.
line 17:     if prog_version !~ '^' . a:major_version
line 18:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python ' . a:major_version . '.']
line 20:     elseif prog_version =~ '^' . a:major_version && str2nr(prog_version[2:]) < str2nr(min_version[2:])
line 21:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python >= ' . min_version . '.']
line 23:     endif
line 24:   endif
line 25: 
line 26:   if prog_exitcode == 2
line 27:     return [0, prog_path.' does not have the "' . a:module . '" module.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, '/home/linuxbrew/.linuxbrew/bin/py....9 does not have the "neovim" module.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python3.8', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
line 4:   endif
line 5: 
line 6:   let min_version = '3.7'
line 7: 
line 8:   " Try to load module, and output Python version.
line 9:   " Exit codes:
line 10:   "   0  module can be loaded.
line 11:   "   2  module cannot be loaded.
line 12:   "   Otherwise something else went wrong (e.g. 1 or 127).
line 13:   let [prog_exitcode, prog_version] = s:import_module(a:prog, a:module)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module('python3.8', 'neovim')

line 1:   let prog_version = system([a:prog, '-c' , printf( 'import sys; ' . 'sys.path = list(filter(lambda x: x != "", sys.path)); ' . 'sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); ' . 'import pkgutil; ' . 'exit(2*int(pkgutil.get_loader("%s") is None))', a:module)])
Executing command: "'/usr/bin/python3.8' '-c' 'import sys; sys.path = list(filter(lambda x: x != "", sys.path)); sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); import pkgutil; exit(2*int(pkgutil.get_loader("neovim") is None))'"


line 8:   return [v:shell_error, prog_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module returning [2, '3.8']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule

line 14: 
line 15:   if prog_exitcode == 2 || prog_exitcode == 0
line 16:     " Check version only for expected return codes.
line 17:     if prog_version !~ '^' . a:major_version
line 18:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python ' . a:major_version . '.']
line 20:     elseif prog_version =~ '^' . a:major_version && str2nr(prog_version[2:]) < str2nr(min_version[2:])
line 21:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python >= ' . min_version . '.']
line 23:     endif
line 24:   endif
line 25: 
line 26:   if prog_exitcode == 2
line 27:     return [0, prog_path.' does not have the "' . a:module . '" module.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, '/usr/bin/python3.8 does not have the "neovim" module.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python3.7', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, 'python3.7 not found in search path or not executable.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule('python', 'neovim', 3)

line 1:   let prog_path = exepath(a:prog)
line 2:   if prog_path ==# ''
line 3:     return [0, a:prog . ' not found in search path or not executable.']
line 4:   endif
line 5: 
line 6:   let min_version = '3.7'
line 7: 
line 8:   " Try to load module, and output Python version.
line 9:   " Exit codes:
line 10:   "   0  module can be loaded.
line 11:   "   2  module cannot be loaded.
line 12:   "   Otherwise something else went wrong (e.g. 1 or 127).
line 13:   let [prog_exitcode, prog_version] = s:import_module(a:prog, a:module)
calling function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module('python', 'neovim')

line 1:   let prog_version = system([a:prog, '-c' , printf( 'import sys; ' . 'sys.path = list(filter(lambda x: x != "", sys.path)); ' . 'sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); ' . 'import pkgutil; ' . 'exit(2*int(pkgutil.get_loader("%s") is None))', a:module)])
Executing command: "'/usr/bin/python' '-c' 'import sys; sys.path = list(filter(lambda x: x != "", sys.path)); sys.stdout.write(str(sys.version_info[0]) + "." + str(sys.version_info[1])); import pkgutil; exit(2*int(pkgutil.get_loader("neovim") is None))'"


line 8:   return [v:shell_error, prog_version]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule[13]..<SNR>88_import_module returning [2, '2.7']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule

line 14: 
line 15:   if prog_exitcode == 2 || prog_exitcode == 0
line 16:     " Check version only for expected return codes.
line 17:     if prog_version !~ '^' . a:major_version
line 18:       return [0, prog_path . ' is Python ' . prog_version . ' and cannot provide Python ' . a:major_version . '.']
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule[11]..provider#pythonx#CheckForModule returning [0, '/usr/bin/python is Python 2.7 and cannot provide Python 3.']

continuing in function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule

line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 10:   for exe in candidates
line 11:     let [result, error] = provider#pythonx#CheckForModule(exe, a:module, a:major_version)
line 12:     if result
line 13:       return [exe, error]
line 14:     endif
line 15:     " Accumulate errors in case we don't find any suitable Python executable.
line 16:     call add(errors, error)
line 17:   endfor
line 18: 
line 19:   " No suitable Python executable found.
line 20:   return ['', 'Could not load Python '.a:major_version.":\n".join(errors, "\n")]
function provider#pythonx#Detect[1]..provider#pythonx#DetectByModule returning ['', 'Could not load Python 3:^@/home/...thon 2.7 and cannot provide Python 3.']

continuing in function provider#pythonx#Detect

function provider#pythonx#Detect returning ['', 'Could not load Python 3:^@/home/...thon 2.7 and cannot provide Python 3.']

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim

line 11: let g:loaded_python3_provider = empty(s:prog) ? 1 : 2
line 12: 
line 13: function! provider#python3#Prog() abort
line 16: 
line 17: function! provider#python3#Error() abort
line 20: 
line 21: " The Python3 provider plugin will run in a separate instance of the Python3
line 22: " host.
line 23: call remote#host#RegisterClone('legacy-python3-provider', 'python3')
Searching for "autoload/remote/host.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/remote/host.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/remote/host.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 23: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim"
line 1: let s:hosts = {}
line 2: let s:plugin_patterns = {}
line 3: let s:plugins_for_host = {}
line 4: 
line 5: " Register a host by associating it with a factory(funcref)
line 6: function! remote#host#Register(name, pattern, factory) abort
line 14: 
line 15: " Register a clone to an existing host. The new host will use the same factory
line 16: " as `source`, but it will run as a different process. This can be used by
line 17: " plugins that should run isolated from other plugins created for the same host
line 18: " type
line 19: function! remote#host#RegisterClone(name, orig_name) abort
line 31: 
line 32: " Get a host channel, bootstrapping it if necessary
line 33: function! remote#host#Require(name) abort
line 48: 
line 49: function! remote#host#IsRunning(name) abort
line 55: 
line 56: " Example of registering a Python plugin with two commands (one async), one
line 57: " autocmd (async) and one function (sync):
line 58: "
line 59: " let s:plugin_path = expand('<sfile>:p:h').'/nvim_plugin.py'
line 60: " call remote#host#RegisterPlugin('python', s:plugin_path, [
line 61: "   \ {'type': 'command', 'name': 'PyCmd', 'sync': 1, 'opts': {}},
line 62: "   \ {'type': 'command', 'name': 'PyAsyncCmd', 'sync': 0, 'opts': {'eval': 'cursor()'}},
line 63: "   \ {'type': 'autocmd', 'name': 'BufEnter', 'sync': 0, 'opts': {'eval': 'expand("<afile>")'}},
line 64: "   \ {'type': 'function', 'name': 'PyFunc', 'sync': 1, 'opts': {}}
line 65: "   \ ])
line 66: "
line 67: " The third item in a declaration is a boolean: non zero means the command,
line 68: " autocommand or function will be executed synchronously with rpcrequest.
line 69: function! remote#host#RegisterPlugin(host, path, specs) abort
line 111: 
line 112: function! s:RegistrationCommands(host) abort
line 155: 
line 156: function! remote#host#UpdateRemotePlugins() abort
line 176: 
line 177: function! remote#host#PluginsForHost(host) abort
line 183: 
line 184: function! remote#host#LoadErrorForHost(host, log) abort
line 190: 
line 191: " Registration of standard hosts
line 192: 
line 193: " Python/Python3
line 194: call remote#host#Register('python', '*', function('provider#pythonx#Require'))
calling function remote#host#Register('python', '*', function('provider#pythonx#Require'))

line 1:   let s:hosts[a:name] = {'factory': a:factory, 'channel': 0, 'initialized': 0}
line 2:   let s:plugin_patterns[a:name] = a:pattern
line 3:   if type(a:factory) == type(1) && a:factory
line 4:     " Passed a channel directly
line 5:     let s:hosts[a:name].channel = a:factory
line 6:   endif
function remote#host#Register returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim

line 196: call remote#host#Register('python3', '*', function('provider#pythonx#Require'))
calling function remote#host#Register('python3', '*', function('provider#pythonx#Require'))

line 1:   let s:hosts[a:name] = {'factory': a:factory, 'channel': 0, 'initialized': 0}
line 2:   let s:plugin_patterns[a:name] = a:pattern
line 3:   if type(a:factory) == type(1) && a:factory
line 4:     " Passed a channel directly
line 5:     let s:hosts[a:name].channel = a:factory
line 6:   endif
function remote#host#Register returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim

line 198: 
line 199: " Ruby
line 200: call remote#host#Register('ruby', '*.rb', function('provider#ruby#Require'))
calling function remote#host#Register('ruby', '*.rb', function('provider#ruby#Require'))

line 1:   let s:hosts[a:name] = {'factory': a:factory, 'channel': 0, 'initialized': 0}
line 2:   let s:plugin_patterns[a:name] = a:pattern
line 3:   if type(a:factory) == type(1) && a:factory
line 4:     " Passed a channel directly
line 5:     let s:hosts[a:name].channel = a:factory
line 6:   endif
function remote#host#Register returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim

line 202: 
line 203: " nodejs
line 204: call remote#host#Register('node', '*', function('provider#node#Require'))
calling function remote#host#Register('node', '*', function('provider#node#Require'))

line 1:   let s:hosts[a:name] = {'factory': a:factory, 'channel': 0, 'initialized': 0}
line 2:   let s:plugin_patterns[a:name] = a:pattern
line 3:   if type(a:factory) == type(1) && a:factory
line 4:     " Passed a channel directly
line 5:     let s:hosts[a:name].channel = a:factory
line 6:   endif
function remote#host#Register returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim

line 206: 
line 207: " perl
line 208: call remote#host#Register('perl', '*', function('provider#perl#Require'))
calling function remote#host#Register('perl', '*', function('provider#perl#Require'))

line 1:   let s:hosts[a:name] = {'factory': a:factory, 'channel': 0, 'initialized': 0}
line 2:   let s:plugin_patterns[a:name] = a:pattern
line 3:   if type(a:factory) == type(1) && a:factory
line 4:     " Passed a channel directly
line 5:     let s:hosts[a:name].channel = a:factory
line 6:   endif
function remote#host#Register returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim

finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/remote/host.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim
calling function remote#host#RegisterClone('legacy-python3-provider', 'python3')

line 1:   if !has_key(s:hosts, a:orig_name)
line 2:     throw 'No host named "'.a:orig_name.'" is registered'
line 3:   endif
line 4:   let Factory = s:hosts[a:orig_name].factory
line 5:   let s:hosts[a:name] = { 'factory': Factory, 'channel': 0, 'initialized': 0, 'orig_name': a:orig_name }
function remote#host#RegisterClone returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim

line 24: call remote#host#RegisterPlugin('legacy-python3-provider', 'script_host.py', [])
calling function remote#host#RegisterPlugin('legacy-python3-provider', 'script_host.py', [])

line 1:   let plugins = remote#host#PluginsForHost(a:host)
calling function remote#host#RegisterPlugin[1]..remote#host#PluginsForHost('legacy-python3-provider')

line 1:   if !has_key(s:plugins_for_host, a:host)
line 2:     let s:plugins_for_host[a:host] = []
line 3:   end
line 4:   return s:plugins_for_host[a:host]
function remote#host#RegisterPlugin[1]..remote#host#PluginsForHost returning []

continuing in function remote#host#RegisterPlugin

line 2: 
line 3:   for plugin in plugins
line 4:     if plugin.path == a:path
line 5:       throw 'Plugin "'.a:path.'" is already registered'
line 6:     endif
line 7:   endfor
line 8: 
line 9:   if has_key(s:hosts, a:host) && remote#host#IsRunning(a:host)
calling function remote#host#RegisterPlugin[9]..remote#host#IsRunning('legacy-python3-provider')

line 1:   if !has_key(s:hosts, a:name)
line 2:     throw 'No host named "'.a:name.'" is registered'
line 3:   endif
line 4:   return s:hosts[a:name].channel != 0
function remote#host#RegisterPlugin[9]..remote#host#IsRunning returning #0

continuing in function remote#host#RegisterPlugin

line 10:     " For now we won't allow registration of plugins when the host is already
line 11:     " running.
line 12:     throw 'Host "'.a:host.'" is already running'
line 13:   endif
line 14: 
line 15:   for spec in a:specs
line 16:     let type = spec.type
line 17:     let name = spec.name
line 18:     let sync = spec.sync
line 19:     let opts = spec.opts
line 20:     let rpc_method = a:path
line 21:     if type == 'command'
line 22:       let rpc_method .= ':command:'.name
line 23:       call remote#define#CommandOnHost(a:host, rpc_method, sync, name, opts)
line 24:     elseif type == 'autocmd'
line 25:       " Since multiple handlers can be attached to the same autocmd event by a
line 26:       " single plugin, we need a way to uniquely identify the rpc method to
line 27:       " call.  The solution is to append the autocmd pattern to the method
line 28:       " name(This still has a limit: one handler per event/pattern combo, but
line 29:       " there's no need to allow plugins define multiple handlers in that case)
line 30:       let rpc_method .= ':autocmd:'.name.':'.get(opts, 'pattern', '*')
line 31:       call remote#define#AutocmdOnHost(a:host, rpc_method, sync, name, opts)
line 32:     elseif type == 'function'
line 33:       let rpc_method .= ':function:'.name
line 34:       call remote#define#FunctionOnHost(a:host, rpc_method, sync, name, opts)
line 35:     else
line 36:       echoerr 'Invalid declaration type: '.type
line 37:     endif
line 38:   endfor
line 39: 
line 40:   call add(plugins, {'path': a:path, 'specs': a:specs})
function remote#host#RegisterPlugin returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim

line 25: 
line 26: function! provider#python3#Call(method, args) abort
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/python3.vim
continuing in /home/thomaseckert/.config/nvim/plugged/black/plugin/black.vim
line 23:     func! __BLACK_MISSING()
line 26:     command! Black :call __BLACK_MISSING()
line 27:     command! BlackUpgrade :call __BLACK_MISSING()
line 28:     command! BlackVersion :call __BLACK_MISSING()
line 29:     finish
finished sourcing /home/thomaseckert/.config/nvim/plugged/black/plugin/black.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-go/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-go/plugin/go.vim"
line 1: " install necessary Go tools
line 2: if exists("g:go_loaded_install")
line 3:   finish
line 4: endif
line 5: let g:go_loaded_install = 1
line 6: 
line 7: " don't spam the user when Vim is started in Vi compatibility mode
line 8: let s:cpo_save = &cpo
line 9: set cpo&vim
line 10: 
line 11: function! s:checkVersion() abort
line 35: 
line 36: call s:checkVersion()
calling function <SNR>90_checkVersion()

line 1:   let l:unsupported = 0
line 2:   if go#config#VersionWarning() != 0
Searching for "autoload/go/config.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/go/config.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/config.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 2: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/config.vim"
line 1: " don't spam the user when Vim is started in Vi compatibility mode
line 2: let s:cpo_save = &cpo
line 3: set cpo&vim
line 4: 
line 5: function! go#config#ListTypeCommands() abort
line 8: 
line 9: function! go#config#VersionWarning() abort
line 12: 
line 13: function! go#config#BuildTags() abort
line 16: 
line 17: function! go#config#SetBuildTags(value) abort
line 27: 
line 28: function! go#config#TestTimeout() abort
line 31: 
line 32: function! go#config#TestShowName() abort
line 35: 
line 36: function! go#config#TermHeight() abort
line 39: 
line 40: function! go#config#TermWidth() abort
line 43: 
line 44: function! go#config#TermMode() abort
line 47: 
line 48: function! go#config#TermCloseOnExit() abort
line 51: 
line 52: function! go#config#TermReuse() abort
line 55: 
line 56: function! go#config#SetTermCloseOnExit(value) abort
line 59: 
line 60: function! go#config#TermEnabled() abort
line 66: 
line 67: function! go#config#SetTermEnabled(value) abort
line 70: 
line 71: function! go#config#TemplateUsePkg() abort
line 74: 
line 75: function! go#config#TemplateTestFile() abort
line 78: 
line 79: function! go#config#TemplateFile() abort
line 82: 
line 83: function! go#config#StatuslineDuration() abort
line 86: 
line 87: function! go#config#SnippetEngine() abort
line 101: 
line 102: function! go#config#PlayBrowserCommand() abort
line 119: 
line 120: function! go#config#MetalinterDeadline() abort
line 131: 
line 132: function! go#config#ListType() abort
line 135: 
line 136: function! go#config#ListAutoclose() abort
line 139: 
line 140: function! go#config#InfoMode() abort
line 143: 
line 144: function! go#config#GuruScope() abort
line 155: 
line 156: function! go#config#SetGuruScope(scope) abort
line 165: 
line 166: function! go#config#EchoCommandInfo() abort
line 169: 
line 170: function! go#config#DocUrl() abort
line 183: 
line 184: function! go#config#DocPopupWindow() abort
line 187: function! go#config#DefReuseBuffer() abort
line 190: 
line 191: function! go#config#DefMode() abort
line 194: 
line 195: function! go#config#DeclsIncludes() abort
line 198: 
line 199: function! go#config#Debug() abort
line 202: 
line 203: function! go#config#DebugWindows() abort
line 213: 
line 214: function! go#config#DebugSubstitutePaths() abort
line 217: 
line 218: function! go#config#DebugPreserveLayout() abort
line 221: 
line 222: function! go#config#DebugAddress() abort
line 225: 
line 226: function! go#config#DebugCommands() abort
line 231: 
line 232: function! go#config#DebugLogOutput() abort
line 235: 
line 236: function! go#config#LspLog() abort
line 241: 
line 242: function! go#config#SetDebugDiag(value) abort
line 245: 
line 246: function! go#config#AutoSameids() abort
line 249: 
line 250: function! go#config#SetAutoSameids(value) abort
line 253: 
line 254: function! go#config#AddtagsTransform() abort
line 257: 
line 258: function! go#config#AddtagsSkipUnexported() abort
line 261: 
line 262: function! go#config#TemplateAutocreate() abort
line 265: 
line 266: function! go#config#SetTemplateAutocreate(value) abort
line 269: 
line 270: let s:default_metalinter = 'staticcheck'
line 271: function! go#config#MetalinterCommand() abort
line 274: 
line 275: function! go#config#MetalinterAutosaveEnabled() abort
line 283: 
line 284: function! go#config#MetalinterEnabled() abort
line 292: 
line 293: function! go#config#GolintBin() abort
line 296: 
line 297: function! go#config#ErrcheckBin() abort
line 300: 
line 301: function! go#config#MetalinterAutosave() abort
line 304: 
line 305: function! go#config#SetMetalinterAutosave(value) abort
line 308: 
line 309: function! go#config#ListHeight() abort
line 312: 
line 313: function! go#config#FmtAutosave() abort
line 316: 
line 317: function! go#config#ImportsAutosave() abort
line 320: 
line 321: function! go#config#SetFmtAutosave(value) abort
line 324: 
line 325: function! go#config#AsmfmtAutosave() abort
line 328: 
line 329: function! go#config#SetAsmfmtAutosave(value) abort
line 332: 
line 333: function! go#config#ModFmtAutosave() abort
line 336: 
line 337: function! go#config#SetModFmtAutosave(value) abort
line 340: 
line 341: function! go#config#DocMaxHeight() abort
line 344: 
line 345: function! go#config#AutoTypeInfo() abort
line 348: 
line 349: function! go#config#SetAutoTypeInfo(value) abort
line 352: 
line 353: function! go#config#AlternateMode() abort
line 356: 
line 357: function! go#config#DeclsMode() abort
line 360: 
line 361: function! go#config#FmtCommand() abort
line 364: 
line 365: function! go#config#ImportsMode() abort
line 368: 
line 369: function! go#config#FmtOptions() abort
line 372: 
line 373: function! go#config#FmtFailSilently() abort
line 376: 
line 377: function! go#config#FmtExperimental() abort
line 380: 
line 381: function! go#config#PlayOpenBrowser() abort
line 384: 
line 385: function! go#config#RenameCommand() abort
line 389: 
line 390: function! go#config#GorenameBin() abort
line 393: 
line 394: function! go#config#GorenamePrefill() abort
line 399: 
line 400: function! go#config#TextobjIncludeFunctionDoc() abort
line 403: 
line 404: function! go#config#TextobjIncludeVariable() abort
line 407: 
line 408: function! go#config#BinPath() abort
line 411: 
line 412: function! go#config#SearchBinPathFirst() abort
line 415: 
line 416: function! go#config#HighlightArrayWhitespaceError() abort
line 419: 
line 420: function! go#config#HighlightChanWhitespaceError() abort
line 423: 
line 424: function! go#config#HighlightExtraTypes() abort
line 427: 
line 428: function! go#config#HighlightSpaceTabError() abort
line 431: 
line 432: function! go#config#HighlightTrailingWhitespaceError() abort
line 435: 
line 436: function! go#config#HighlightOperators() abort
line 439: 
line 440: function! go#config#HighlightFunctions() abort
line 443: 
line 444: function! go#config#HighlightFunctionParameters() abort
line 448: 
line 449: function! go#config#HighlightFunctionCalls() abort
line 452: 
line 453: function! go#config#HighlightFields() abort
line 456: 
line 457: function! go#config#HighlightTypes() abort
line 460: 
line 461: function! go#config#HighlightBuildConstraints() abort
line 464: 
line 465: function! go#config#HighlightStringSpellcheck() abort
line 468: 
line 469: function! go#config#HighlightFormatStrings() abort
line 472: 
line 473: function! go#config#HighlightGenerateTags() abort
line 476: 
line 477: function! go#config#HighlightVariableAssignments() abort
line 480: 
line 481: function! go#config#HighlightVariableDeclarations() abort
line 484: 
line 485: function! go#config#HighlightDiagnosticErrors() abort
line 488: 
line 489: function! go#config#HighlightDiagnosticWarnings() abort
line 492: 
line 493: function! go#config#HighlightDebug() abort
line 496: 
line 497: function! go#config#DebugBreakpointSignText() abort
line 500: 
line 501: function! go#config#FoldEnable(...) abort
line 507: 
line 508: function! go#config#EchoGoInfo() abort
line 511: 
line 512: function! go#config#CodeCompletionEnabled() abort
line 515: 
line 516: function! go#config#CodeCompletionIcase() abort
line 519: 
line 520: function! go#config#Updatetime() abort
line 524: 
line 525: function! go#config#ReferrersMode() abort
line 528: 
line 529: function! go#config#ImplementsMode() abort
line 532: 
line 533: function! go#config#GoplsCompleteUnimported() abort
line 536: 
line 537: function! go#config#GoplsDeepCompletion() abort
line 540: 
line 541: function! go#config#GoplsMatcher() abort
line 547: 
line 548: function! go#config#GoplsStaticCheck() abort
line 551: 
line 552: function! go#config#GoplsUsePlaceholders() abort
line 555: 
line 556: function! go#config#GoplsTempModfile() abort
line 559: 
line 560: function! go#config#GoplsAnalyses() abort
line 563: 
line 564: function! go#config#GoplsLocal() abort
line 567: 
line 568: function! go#config#GoplsGofumpt() abort
line 571: 
line 572: function! go#config#GoplsSettings() abort
line 575: 
line 576: function! go#config#GoplsEnabled() abort
line 579: 
line 580: " TODO(bc): remove support for g:go_diagnostics_enabled;
line 581: " g:go_diagnostics_level is the replacement.
line 582: function! go#config#DiagnosticsEnabled() abort
line 585: 
line 586: function! go#config#DiagnosticsLevel() abort
line 594: 
line 595: function! go#config#GoplsOptions() abort
line 598: 
line 599: function! go#config#FillStructMode() abort
line 602: 
line 603: function! go#config#DebugMappings() abort
line 617: 
line 618: function! go#config#DocBalloon() abort
line 621: 
line 622: " Set the default value. A value of "1" is a shortcut for this, for
line 623: " compatibility reasons.
line 624: if exists("g:go_gorename_prefill") && g:go_gorename_prefill == 1
line 625:   unlet g:go_gorename_prefill
line 626: endif
line 627: 
line 628: " restore Vi compatibility settings
line 629: let &cpo = s:cpo_save
line 630: unlet s:cpo_save
line 631: 
line 632: " vim: sw=2 ts=2 et
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/config.vim
continuing in function <SNR>90_checkVersion
calling function <SNR>90_checkVersion[2]..go#config#VersionWarning()

line 1:   return get(g:, 'go_version_warning', 1)
function <SNR>90_checkVersion[2]..go#config#VersionWarning returning #1

continuing in function <SNR>90_checkVersion

line 3:     if has('nvim')
line 4:       let l:unsupported = !has('nvim-0.4.0')
line 5:     else
line 6:       let l:unsupported = !has('patch-8.0.1453')
line 7:     endif
line 8: 
line 9:     if l:unsupported == 1
line 10:       echohl Error
line 11:       echom "vim-go requires at least Vim 8.0.1453 or Neovim 0.4.0, but you're using an older version."
line 12:       echom "Please update your Vim for the best vim-go experience."
line 13:       echom "If you really want to continue you can set this to make the error go away:"
line 14:       echom "    let g:go_version_warning = 0"
line 15:       echom "Note that some features may error out or behave incorrectly."
line 16:       echom "Please do not report bugs unless you're using at least Vim 8.0.1453 or Neovim 0.4.0."
line 17:       echohl None
line 18: 
line 19:       " Make sure people see this.
line 20:       sleep 2
line 21:     endif
line 22:   endif
function <SNR>90_checkVersion returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-go/plugin/go.vim

line 37: 
line 38: " these packages are used by vim-go and can be automatically installed if
line 39: " needed by the user with GoInstallBinaries.
line 40: 
line 41: " NOTE(bc): varying the binary name and the tail of the import path does not yet work in module aware mode.
line 42: let s:packages = { 'asmfmt':        ['github.com/klauspost/asmfmt/cmd/asmfmt@latest'], 'dlv':           ['github.com/go-delve/delve/cmd/dlv@latest'], 'errcheck':      ['github.com/kisielk/errcheck@latest'], 'fillstruct':    ['github.com/davidrjenni/reftools/cmd/fillstruct@master'], 'godef':         ['github.com/rogpeppe/godef@latest'], 'goimports':     ['golang.org/x/tools/cmd/goimports@master'], 'revive':        ['github.com/mgechev/revive@latest'], 'gopls':         ['golang.org/x/tools/gopls@latest', {}, {'after': function('go#lsp#Restart', [])}], 'golangci-lint': ['github.com/golangci/golangci-lint/cmd/golangci-lint@latest'], 'staticcheck':   ['honnef.co/go/tools/cmd/staticcheck@latest'], 'gomodifytags':  ['github.com/fatih/gomodifytags@latest'], 'gorename':      ['golang.org/x/tools/cmd/gorename@master'], 'gotags':        ['github.com/jstemmer/gotags@master'], 'guru':          ['golang.org/x/tools/cmd/guru@master'], 'impl':          ['github.com/josharian/impl@master'], 'keyify':        ['honnef.
line 62: 
line 63: " These commands are available on any filetypes
line 64: command! -nargs=* -complete=customlist,s:complete GoInstallBinaries call s:GoInstallBinaries(-1, <f-args>)
line 65: command! -nargs=* -complete=customlist,s:complete GoUpdateBinaries  call s:GoInstallBinaries(1, <f-args>)
line 66: command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)
line 67: 
line 68: fun! s:complete(lead, cmdline, cursor)
line 71: 
line 72: " GoInstallBinaries downloads and installs binaries defined in s:packages to
line 73: " $GOBIN or $GOPATH/bin. GoInstallBinaries will update already installed
line 74: " binaries only if updateBinaries = 1. By default, all packages in s:packages
line 75: " will be installed, but the set can be limited by passing the desired
line 76: " packages in the unnamed arguments.
line 77: function! s:GoInstallBinaries(updateBinaries, ...)
line 214: 
line 215: " CheckBinaries checks if the necessary binaries to install the Go tool
line 216: " commands are available.
line 217: function! s:CheckBinaries()
line 228: 
line 229: " Autocommands
line 230: " ============================================================================
line 231: "
line 232: 
line 233: " We take care to preserve the user's fileencodings and fileformats,
line 234: " because those settings are global (not buffer local), yet we want
line 235: " to override them for loading Go files, which are defined to be UTF-8.
line 236: let s:current_fileformats = ''
line 237: let s:current_fileencodings = ''
line 238: 
line 239: " define fileencodings to open as utf-8 encoding even if it's ascii.
line 240: function! s:gofiletype_pre()
line 245: 
line 246: " restore fileencodings as others
line 247: function! s:gofiletype_post()
line 251: 
line 252: function! s:register()
line 261: 
line 262: function! s:noop(...) abort
line 264: 
line 265: augroup vim-go
line 266:   autocmd!
line 267: 
line 268:   autocmd BufNewFile *.go if &modifiable | setlocal fileencoding=utf-8 fileformat=unix | endif
line 269:   autocmd BufNewFile *.go call go#auto#template_autocreate()
line 270:   autocmd BufRead *.go call s:gofiletype_pre()
line 271:   autocmd BufReadPost *.go call s:gofiletype_post()
line 272: 
line 273:   autocmd BufNewFile *.s if &modifiable | setlocal fileencoding=utf-8 fileformat=unix | endif
line 274:   autocmd BufRead *.s call s:gofiletype_pre()
line 275:   autocmd BufReadPost *.s call s:gofiletype_post()
line 276: 
line 277:   if go#util#has_job()
Searching for "autoload/go/util.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/go/util.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/util.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 277: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/util.vim"
line 1: " don't spam the user when Vim is started in Vi compatibility mode
line 2: let s:cpo_save = &cpo
line 3: set cpo&vim
line 4: 
line 5: " PathSep returns the appropriate OS specific path separator.
line 6: function! go#util#PathSep() abort
line 12: 
line 13: " PathListSep returns the appropriate OS specific path list separator.
line 14: function! go#util#PathListSep() abort
line 20: 
line 21: " LineEnding returns the correct line ending, based on the current fileformat
line 22: function! go#util#LineEnding() abort
line 31: 
line 32: " Join joins any number of path elements into a single path, adding a
line 33: " Separator if necessary and returns the result
line 34: function! go#util#Join(...) abort
line 37: 
line 38: " IsWin returns 1 if current OS is Windows or 0 otherwise
line 39: " Note that has('win32') is always 1 when has('win64') is 1, so has('win32') is enough.
line 40: function! go#util#IsWin() abort
line 43: 
line 44: " IsMac returns 1 if current OS is macOS or 0 otherwise.
line 45: function! go#util#IsMac() abort
line 51: 
line 52:  " Checks if using:
line 53:  " 1) Windows system,
line 54:  " 2) And has cygpath executable,
line 55:  " 3) And uses *sh* as 'shell'
line 56: function! go#util#IsUsingCygwinShell()
line 59: 
line 60: " Check if Vim jobs API is supported.
line 61: "
line 62: " The (optional) first parameter can be added to indicate the 'cwd' or 'env'
line 63: " parameters will be used, which wasn't added until a later version.
line 64: function! go#util#has_job(...) abort
line 67: 
line 68: let s:env_cache = {}
line 69: 
line 70: " env returns the go environment variable for the given key. Where key can be
line 71: " GOARCH, GOOS, GOROOT, etc... It caches the result and returns the cached
line 72: " version.
line 73: function! go#util#env(key) abort
line 92: 
line 93: " gobin returns 'go env GOBIN'. This is an internal function and shouldn't be
line 94: " used. Use go#util#env('gobin') instead.
line 95: function! go#util#gobin() abort
line 98: 
line 99: " goarch returns 'go env GOARCH'. This is an internal function and shouldn't
line 100: " be used. Use go#util#env('goarch') instead.
line 101: function! go#util#goarch() abort
line 104: 
line 105: " goos returns 'go env GOOS'. This is an internal function and shouldn't be
line 106: " used. Use go#util#env('goos') instead.
line 107: function! go#util#goos() abort
line 110: 
line 111: " goroot returns 'go env GOROOT'. This is an internal function and shouldn't
line 112: " be used. Use go#util#env('goroot') instead.
line 113: function! go#util#goroot() abort
line 116: 
line 117: " gopath returns 'go env GOPATH'. This is an internal function and shouldn't
line 118: " be used. Use go#util#env('gopath') instead.
line 119: function! go#util#gopath() abort
line 122: 
line 123: " gomod returns 'go env GOMOD'. gomod changes depending on the folder. Don't
line 124: " use go#util#env as it caches the value.
line 125: function! go#util#gomod() abort
line 128: 
line 129: " gomodcache returns 'go env GOMODCACHE'. This is an internal function and
line 130: " shouldn't be used. Use go#util#env('gomodcache') instead.
line 131: function! go#util#gomodcache() abort
line 134: 
line 135: " hostosarch returns the OS and ARCH values that the go binary is intended for.
line 136: function! go#util#hostosarch() abort
line 141: 
line 142: " go#util#ModuleRoot returns the root directory of the module of the current
line 143: " buffer. An optional argument can be provided to check an arbitrary
line 144: " directory.
line 145: function! go#util#ModuleRoot(...) abort
line 175: 
line 176: " Run a shell command.
line 177: "
line 178: " It will temporary set the shell to /bin/sh for Unix-like systems if possible,
line 179: " so that we always use a standard POSIX-compatible Bourne shell (and not e.g.
line 180: " csh, fish, etc.) See #988 and #1276.
line 181: function! s:system(cmd, ...) abort
line 213: 
line 214: " System runs a shell command "str". Every arguments after "str" is passed to
line 215: " stdin.
line 216: function! go#util#System(str, ...) abort
line 219: 
line 220: " Exec runs a shell command "cmd", which must be a list, one argument per item.
line 221: " Every list entry will be automatically shell-escaped
line 222: " Every other argument is passed to stdin.
line 223: function! go#util#Exec(cmd, ...) abort
line 242: 
line 243: " ExecInDir will execute cmd with the working directory set to the current
line 244: " buffer's directory.
line 245: function! go#util#ExecInDir(cmd, ...) abort
line 249: 
line 250: " ExecInWorkDir will execute cmd with the working diretory set to wd. Additional arguments will be passed
line 251: " to cmd.
line 252: function! go#util#ExecInWorkDir(cmd, wd, ...) abort
line 265: 
line 266: function! s:exec(cmd, ...) abort
line 276: 
line 277: function! go#util#ShellError() abort
line 280: 
line 281: " StripPath strips the path's last character if it's a path separator.
line 282: " example: '/foo/bar/'  -> '/foo/bar'
line 283: function! go#util#StripPathSep(path) abort
line 291: 
line 292: " StripTrailingSlash strips the trailing slash from the given path list.
line 293: " example: ['/foo/bar/']  -> ['/foo/bar']
line 294: function! go#util#StripTrailingSlash(paths) abort
line 297: 
line 298: " Shelljoin returns a shell-safe string representation of arglist. The
line 299: " {special} argument of shellescape() may optionally be passed.
line 300: function! go#util#Shelljoin(arglist, ...) abort
line 329: 
line 330: " Shelllist returns a shell-safe representation of the items in the given
line 331: " arglist. The {special} argument of shellescape() may optionally be passed.
line 332: function! go#util#Shelllist(arglist, ...) abort
line 344: 
line 345: " Returns the byte offset for line and column
line 346: function! go#util#Offset(line, col) abort
line 355: "
line 356: " Returns the byte offset for the cursor
line 357: function! go#util#OffsetCursor() abort
line 360: 
line 361: " Windo is like the built-in :windo, only it returns to the window the command
line 362: " was issued from
line 363: function! go#util#Windo(command) abort
line 372: 
line 373: " snippetcase converts the given word to given preferred snippet setting type
line 374: " case.
line 375: function! go#util#snippetcase(word) abort
line 385: 
line 386: " snakecase converts a string to snake case. i.e: FooBar -> foo_bar
line 387: " Copied from tpope/vim-abolish
line 388: function! go#util#snakecase(word) abort
line 396: 
line 397: " camelcase converts a string to camel case. e.g. FooBar or foo_bar will become
line 398: " fooBar.
line 399: " Copied from tpope/vim-abolish.
line 400: function! go#util#camelcase(word) abort
line 408: 
line 409: " pascalcase converts a string to 'PascalCase'. e.g. fooBar or foo_bar will
line 410: " become FooBar.
line 411: function! go#util#pascalcase(word) abort
line 415: 
line 416: " Echo a message to the screen and highlight it with the group in a:hi.
line 417: "
line 418: " The message can be a list or string; every line with be :echomsg'd separately.
line 419: function! s:echo(msg, hi)
line 436: 
line 437: function! go#util#EchoSuccess(msg)
line 440: function! go#util#EchoError(msg)
line 443: function! go#util#EchoWarning(msg)
line 446: function! go#util#EchoProgress(msg)
line 450: function! go#util#EchoInfo(msg)
line 453: 
line 454: " Get all lines in the buffer as a a list.
line 455: function! go#util#GetLines()
line 467: 
line 468: " Convert the current buffer to the "archive" format of
line 469: " golang.org/x/tools/go/buildutil:
line 470: " https://godoc.org/golang.org/x/tools/go/buildutil#ParseOverlayArchive
line 471: "
line 472: " > The archive consists of a series of files. Each file consists of a name, a
line 473: " > decimal file size and the file contents, separated by newlinews. No newline
line 474: " > follows after the file contents.
line 475: function! go#util#archive()
line 479: 
line 480: " Make a named temporary directory which starts with "prefix".
line 481: "
line 482: " Unfortunately Vim's tempname() is not portable enough across various systems;
line 483: " see: https://github.com/mattn/vim-go/pull/3#discussion_r138084911
line 484: function! go#util#tempdir(prefix) abort
line 511: 
line 512: " Report if the user enabled a debug flag in g:go_debug.
line 513: function! go#util#HasDebug(flag)
line 516: 
line 517: function! go#util#OpenBrowser(url) abort
line 540: 
line 541: function! go#util#ParseErrors(lines) abort
line 570: 
line 571: function! go#util#ShowInfo(info)
line 578: 
line 579: " go#util#SetEnv takes the name of an environment variable and what its value
line 580: " should be and returns a function that will restore it to its original value.
line 581: function! go#util#SetEnv(name, value) abort
line 605: 
line 606: function! go#util#ClearHighlights(group) abort
line 622: 
line 623: function! s:clear_group_from_matches(group) abort
line 636: 
line 637: function! s:unset(name) abort
line 653: 
line 654: function! s:noop(...) abort dict
line 656: 
line 657: " go#util#HighlightPositions highlights using text properties if possible and
line 658: " falls back to matchaddpos() if necessary. It works around matchaddpos()'s
line 659: " limit of only 8 positions per call by calling matchaddpos() with no more
line 660: " than 8 positions per call.
line 661: "
line 662: " pos should be a list of 3 element lists. The lists should be [line, col,
line 663: " length] as used by matchaddpos().
line 664: function! go#util#HighlightPositions(group, pos) abort
line 712: 
line 713: " s:matchaddpos works around matchaddpos()'s limit of only 8 positions per
line 714: " call by calling matchaddpos() with no more than 8 positions per call.
line 715: function! s:matchaddpos(group, pos) abort
line 732: 
line 733: function! go#util#Chdir(dir) abort
line 742: 
line 743: " go#util#TestName returns the name of the test function that preceeds the
line 744: " cursor.
line 745: function go#util#TestName() abort
line 763: 
line 764: function go#util#ExpandPattern(...) abort
line 779: 
line 780: " restore Vi compatibility settings
line 781: let &cpo = s:cpo_save
line 782: unlet s:cpo_save
line 783: 
line 784: " vim: sw=2 ts=2 et
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-go/autoload/go/util.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-go/plugin/go.vim
calling function go#util#has_job()

line 1:   return has('job') || has('nvim')
function go#util#has_job returning #1

continuing in /home/thomaseckert/.config/nvim/plugged/vim-go/plugin/go.vim

line 278:     autocmd FileType * call s:register()
line 279:   endif
line 280: augroup end
line 281: 
line 282: " restore Vi compatibility settings
line 283: let &cpo = s:cpo_save
line 284: unlet s:cpo_save
line 285: 
line 286: " vim: sw=2 ts=2 et
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-go/plugin/go.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/plugin/prettier.vim"
line 1: " vim-prettier: A vim plugin wrapper for prettier, pre-configured with custom default prettier settings.
line 2: "
line 3: " Script Info  {{{
line 4: "==========================================================================================================
line 5: " Name Of File: prettier.vim
line 6: "  Description: A vim plugin wrapper for prettier, pre-configured with custom default prettier settings.
line 7: "   Maintainer: Mitermayer Reis <mitermayer.reis at gmail.com>
line 8: "      Version: 1.0.0-beta
line 9: "        Usage: Use :help vim-prettier-usage, or visit https://github.com/prettier/vim-prettier
line 10: "
line 11: "==========================================================================================================
line 12: " }}}
line 13: 
line 14: if exists('g:loaded_prettier')
line 15:   finish
line 16: endif
line 17: let g:loaded_prettier = 1
line 18: 
line 19: " => Plugin config
line 20: " autoformating disabled by default upon saving
line 21: let g:prettier#autoformat = get(g:, 'prettier#autoformat', 0)
line 22: 
line 23: " autoformating requires pragma by default
line 24: let g:prettier#autoformat_require_pragma = get(g:, 'prettier#autoformat_require_pragma', 1)
line 25: 
line 26: " whether to turn autoformatting on if a prettier config file is found
line 27: let g:prettier#autoformat_config_present = get(g:, 'prettier#autoformat_config_present', 0)
line 28: 
line 29: " prettier config files to search current directory and parent directories for
line 30: let g:prettier#autoformat_config_files = get(g:, 'prettier#autoformat_config_files', ['.prettierrc','.prettierrc.yml','.prettierrc.yaml','.prettierrc.js','.prettierrc.config.js','.prettierrc.json','.prettierrc.toml'])
line 38: 
line 39: " path to prettier cli
line 40: let g:prettier#exec_cmd_path = get(g:, 'prettier#exec_cmd_path', 0)
line 41: 
line 42: " calling :Prettier by default runs synchronous
line 43: let g:prettier#exec_cmd_async = get(g:, 'prettier#exec_cmd_async', 0)
line 44: 
line 45: " when having formatting errors will open the quickfix by default
line 46: let g:prettier#quickfix_enabled = get(g:, 'prettier#quickfix_enabled', 1)
line 47: 
line 48: " Don't leave the quicklist focused on error.
line 49: let g:prettier#quickfix_auto_focus = get(g:, 'prettier#quickfix_auto_focus', 1)
line 50: 
line 51: " Send to prettier entire buffer and use --range-start and --range-end as delimter
line 52: let g:prettier#partial_format = get(g:, 'prettier#partial_format', 0)
line 53: 
line 54: " default|fb
line 55: " Use prettier defaults
line 56: let g:prettier#preset#config = get(g:,'prettier#preset#config', 'default')
line 57: 
line 58: " => Prettier CLI config
line 59: " Max line length that prettier will wrap on: a number or 'auto' (use
line 60: " textwidth).
line 61: " default: 'auto'
line 62: " See more: https://prettier.io/docs/en/options.html#print-width
line 63: let g:prettier#config#print_width = get(g:, 'prettier#config#print_width', 'auto')
line 64: 
line 65: " number of spaces per indentation level: a number or 'auto' (use
line 66: " softtabstop)
line 67: " default: 'auto'
line 68: " See more: https://prettier.io/docs/en/options.html#tab-width
line 69: let g:prettier#config#tab_width = get(g:,'prettier#config#tab_width', 'auto')
line 70: 
line 71: " use tabs instead of spaces: true, false, or auto (use the expandtab setting).
line 72: " default: 'auto'
line 73: " See more: https://prettier.io/docs/en/options.html#tabs
line 74: let g:prettier#config#use_tabs = get(g:,'prettier#config#use_tabs', 'auto')
line 75: 
line 76: " flow|babylon|typescript|css|less|scss|json|graphql|markdown or empty string
line 77: " (let prettier choose).
line 78: " default: ''
line 79: " See more: https://prettier.io/docs/en/options.html#parser
line 80: let g:prettier#config#parser = get(g:,'prettier#config#parser', '')
line 81: 
line 82: " cli-override|file-override|prefer-file
line 83: " default: 'file-override'
line 84: " See more: https://prettier.io/docs/en/cli.html#--config-precedence
line 85: let g:prettier#config#config_precedence = get(g:, 'prettier#config#config_precedence', 'file-override')
line 86: 
line 87: " always|never|preserve
line 88: " default: 'preserve'
line 89: " See more: https://prettier.io/docs/en/options.html#prose-wrap
line 90: let g:prettier#config#prose_wrap = get(g:, 'prettier#config#prose_wrap', 'preserve')
line 91: 
line 92: " css|strict|ignore
line 93: " default: 'css'
line 94: " See more: https://prettier.io/docs/en/options.html#html-whitespace-sensitivity
line 95: let g:prettier#config#html_whitespace_sensitivity = get(g:, 'prettier#config#html_whitespace_sensitivity', 'css')
line 96: 
line 97: " print semicolons
line 98: " default: 'true'
line 99: " See more: https://prettier.io/docs/en/options.html#semicolons
line 100: let g:prettier#config#semi = get(g:,'prettier#config#semi', 'true')
line 101: 
line 102: " Use single quotes instead of double quotes.
line 103: " default: 'false'
line 104: " See more: https://prettier.io/docs/en/options.html#quotes
line 105: let g:prettier#config#single_quote = get(g:,'prettier#config#single_quote', 'false')
line 106: 
line 107: " print spaces between brackets
line 108: " default: 'true'
line 109: " See more: https://prettier.io/docs/en/options.html#bracket-spacing
line 110: let g:prettier#config#bracket_spacing = get(g:,'prettier#config#bracket_spacing', 'true')
line 111: 
line 112: " put > on the last line instead of new line
line 113: " default: 'false'
line 114: " See more: https://prettier.io/docs/en/options.html#jsx-brackets
line 115: let g:prettier#config#jsx_bracket_same_line = get(g:,'prettier#config#jsx_bracket_same_line', 'false')
line 116: 
line 117: " avoid wrapping a single arrow function param in parens
line 118: " avoid|always
line 119: " default: 'always'
line 120: " See more: https://prettier.io/docs/en/options.html#arrow-function-parentheses
line 121: let g:prettier#config#arrow_parens = get(g:,'prettier#config#arrow_parens', 'always')
line 122: 
line 123: " Define the flavor of line endings
line 124: " lf|crlf|cr|all
line 125: " defaut: 'lf' 
line 126: let g:prettier#config#end_of_line = get(g:, 'prettier#config#end_of_line', 'lf')
line 127: 
line 128: " Print trailing commas wherever possible when multi-line.
line 129: " none|es5|all
line 130: " default: 'es5'
line 131: " See more: https://prettier.io/docs/en/options.html#trailing-commas
line 132: let g:prettier#config#trailing_comma = get(g:,'prettier#config#trailing_comma', 'es5')
line 133: 
line 134: " restrict itself to only format files that contain a special comment @prettier or @format
line 135: " See more: https://prettier.io/docs/en/options.html#require-pragma
line 136: let g:prettier#config#require_pragma=  get(g:, 'prettier#config#require_pragma', 'false')
line 137: 
line 138: " synchronous by default
line 139: command! -nargs=? -range=% Prettier call prettier#Prettier(g:prettier#exec_cmd_async, <line1>, <line2>, g:prettier#partial_format)
line 140: 
line 141: " prettier async
line 142: command! -nargs=? -range=% PrettierAsync call prettier#Prettier(1, <line1>, <line2>, g:prettier#partial_format)
line 143: 
line 144: " prints vim-prettier version
line 145: command! -nargs=? -range=% PrettierVersion echom '1.0.0-beta'
line 146: 
line 147: " call prettier cli
line 148: command! -nargs=? -range=% PrettierCli call prettier#PrettierCli(<q-args>)
line 149: 
line 150: " call prettier cli to get its version
line 151: command! -nargs=? -range=% PrettierCliVersion call prettier#PrettierCli('--version')
line 152: 
line 153: " prints prettier resolved cli path
line 154: command! -nargs=? -range=% PrettierCliPath call prettier#PrettierCliPath()
line 155: 
line 156: " sends selected text to prettier cli for formatting
line 157: command! -nargs=? -range=% PrettierFragment call prettier#Prettier(g:prettier#exec_cmd_async, <line1>, <line2>, 0)
line 158: 
line 159: " sends entire buffer to prettier cli but format just selection 
line 160: command! -nargs=? -range=% PrettierPartial call prettier#Prettier(g:prettier#exec_cmd_async, <line1>, <line2>, 1)
line 161: 
line 162: " map command
line 163: if !hasmapto('<Plug>(Prettier)') && maparg('<Leader>p', 'n') ==# ''
line 164:   nmap <unique> <Leader>p <Plug>(Prettier)
line 165: endif
line 166: nnoremap <silent> <Plug>(Prettier) :Prettier<CR>
line 167: nnoremap <silent> <Plug>(PrettierAsync) :PrettierAsync<CR>
line 168: nnoremap <silent> <Plug>(PrettierFragment) :PrettierFragment<CR>
line 169: nnoremap <silent> <Plug>(PrettierPartial) :PrettierPartial<CR>
line 170: nnoremap <silent> <Plug>(PrettierVersion) :PrettierVersion<CR>
line 171: nnoremap <silent> <Plug>(PrettierCli) :PrettierCli<CR>
line 172: nnoremap <silent> <Plug>(PrettierCliVersion) :PrettierCliVersion<CR>
line 173: nnoremap <silent> <Plug>(PrettierCliPath) :PrettierCliPath<CR>
line 174: 
line 175: augroup Prettier
line 176:   autocmd!
line 177:   autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.gql,*.markdown,*.md,*.mdown,*.mkd,*.mkdn,*.mdx,*.vue,*.svelte,*.yml,*.yaml,*.html,*.php,*.rb,*.ruby,*.xml noautocmd call prettier#Autoformat()
line 178: augroup end
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/plugin/prettier.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim"
line 1: lua require('ts_context_commentstring').init()
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin/emmet.vim"
line 1: "=============================================================================
line 2: " File: emmet.vim
line 3: " Author: Yasuhiro Matsumoto <mattn.jp@gmail.com>
line 4: " Last Change: 26-Jul-2015.
line 5: " Version: 0.86
line 6: " WebPage: http://github.com/mattn/emmet-vim
line 7: " Description: vim plugins for HTML and CSS hi-speed coding.
line 8: " SeeAlso: http://emmet.io/
line 9: " Usage:
line 10: "
line 11: "   This is vim script support expanding abbreviation like emmet.
line 12: "   ref: http://emmet.io/
line 13: "
line 14: "   Type abbreviation
line 15: "      +-------------------------------------
line 16: "      | html:5_
line 17: "      +-------------------------------------
line 18: "   "_" is a cursor position. and type "<c-y>," (Ctrl+y and Comma)
line 19: "   NOTE: Don't worry about key map. you can change it easily.
line 20: "      +-------------------------------------
line 21: "      | <!DOCTYPE HTML>
line 22: "      | <html lang="en">
line 23: "      | <head>
line 24: "      |     <title></title>
line 25: "      |     <meta charset="UTF-8">
line 26: "      |     <meta name="viewport" content="width=device-width, initial-scale=1.0">
line 27: "      | </head>
line 28: "      | <body>
line 29: "      |      _
line 30: "      | </body>
line 31: "      | </html>
line 32: "      +-------------------------------------
line 33: "   Type following
line 34: "      +-------------------------------------
line 35: "      | div#foo$*2>div.bar
line 36: "      +-------------------------------------
line 37: "   And type "<c-y>,"
line 38: "      +-------------------------------------
line 39: "      |<div id="foo1">
line 40: "      |    <div class="bar">_</div>
line 41: "      |</div>
line 42: "      |<div id="foo2">
line 43: "      |    <div class="bar"></div>
line 44: "      |</div>
line 45: "      +-------------------------------------
line 46: "
line 47: " Tips:
line 48: "
line 49: "   You can customize behavior of expanding with overriding config.
line 50: "   This configuration will be merged at loading plugin.
line 51: "
line 52: "     let g:user_emmet_settings = {
line 53: "     \  'indentation' : '  ',
line 54: "     \  'perl' : {
line 55: "     \    'aliases' : {
line 56: "     \      'req' : 'require '
line 57: "     \    },
line 58: "     \    'snippets' : {
line 59: "     \      'use' : "use strict\nuse warnings\n\n",
line 60: "     \      'warn' : "warn \"|\";",
line 61: "     \    }
line 62: "     \  }
line 63: "     \}
line 64: "
line 65: "   You can set language attribute in html using 'emmet_settings.lang'.
line 66: "
line 67: " GetLatestVimScripts: 2981 1 :AutoInstall: emmet.vim
line 68: " script type: plugin
line 69: 
line 70: if &compatible || v:version < 702 || (exists('g:loaded_emmet_vim') && g:loaded_emmet_vim)
line 71:   finish
line 72: endif
line 73: let g:loaded_emmet_vim = 1
line 74: 
line 75: let s:save_cpo = &cpoptions
line 76: set cpoptions&vim
line 77: 
line 78: if !exists('g:emmet_html5')
line 79:   let g:emmet_html5 = 1
line 80: endif
line 81: 
line 82: if !exists('g:emmet_docroot')
line 83:   let g:emmet_docroot = {}
line 84: endif
line 85: 
line 86: if !exists('g:emmet_debug')
line 87:   let g:emmet_debug = 0
line 88: endif
line 89: 
line 90: if !exists('g:emmet_curl_command')
line 91:   let g:emmet_curl_command = 'curl -s -L -A Mozilla/5.0'
line 92: endif
line 93: 
line 94: if !exists('g:user_emmet_leader_key')
line 95:   let g:user_emmet_leader_key = '<c-y>'
line 96: endif
line 97: 
line 98: function! s:install_plugin(mode, buffer)
line 167: 
line 168: command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)
line 169: 
line 170: if get(g:, 'user_emmet_install_global', 1)
line 171:   call s:install_plugin(get(g:, 'user_emmet_mode', 'a'), 0)
calling function <SNR>95_install_plugin('a', 0)

line 1:   let buffer = a:buffer ? '<buffer>' : ''
line 2:   let items = [ {'mode': 'i', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(0,"")<cr>'}, {'mode': 'n', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': ':call emmet#expandAbbr(3,"")<cr>'}, {'mode': 'v', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': ':call emmet#expandAbbr(2,"")<cr>'}, {'mode': 'i', 'var': 'user_emmet_expandword_key', 'key': ';', 'plug': 'emmet-expand-word', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(1,"")<cr>'}, {'mode': 'n', 'var': 'user_emmet_expandword_key', 'key': ';', 'plug': 'emmet-expand-word', 'func': ':call emmet#expandAbbr(1,"")<cr>'}, {'mode': 'i', 'var': 'user_emmet_update_tag', 'key': 'u', 'plug': 'emmet-update-tag', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#updateTag()<cr>'}, {'mode': 'n', 'var': 'user_emmet_update_tag', 'key': 'u', 'plug': 'emmet-update-tag', 'func': '
line 42: 
line 43:   let only_plug = get(g:, 'emmet_install_only_plug', 0)
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-expand-abbr) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(0,"")<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>, <plug>(emmet-expand-abbr)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-expand-abbr) :call emmet#expandAbbr(3,"")<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>, <plug>(emmet-expand-abbr)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: vnoremap  <plug>(emmet-expand-abbr) :call emmet#expandAbbr(2,"")<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: vmap  <unique> <silent><c-y>, <plug>(emmet-expand-abbr)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-expand-word) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(1,"")<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>; <plug>(emmet-expand-word)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-expand-word) :call emmet#expandAbbr(1,"")<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>; <plug>(emmet-expand-word)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-update-tag) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#updateTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>u <plug>(emmet-update-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-update-tag) :call emmet#updateTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>u <plug>(emmet-update-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-balance-tag-inward) <esc>:call emmet#balanceTag(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>d <plug>(emmet-balance-tag-inward)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-balance-tag-inward) :call emmet#balanceTag(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>d <plug>(emmet-balance-tag-inward)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: vnoremap  <plug>(emmet-balance-tag-inward) <esc>:call emmet#balanceTag(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: vmap  <unique> <silent><c-y>d <plug>(emmet-balance-tag-inward)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-balance-tag-outword) <esc>:call emmet#balanceTag(-1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>D <plug>(emmet-balance-tag-outword)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-balance-tag-outword) :call emmet#balanceTag(-1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>D <plug>(emmet-balance-tag-outword)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: vnoremap  <plug>(emmet-balance-tag-outword) <esc>:call emmet#balanceTag(-1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: vmap  <unique> <silent><c-y>D <plug>(emmet-balance-tag-outword)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-move-next) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#moveNextPrev(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>n <plug>(emmet-move-next)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-move-next) :call emmet#moveNextPrev(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>n <plug>(emmet-move-next)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-move-prev) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#moveNextPrev(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>N <plug>(emmet-move-prev)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-move-prev) :call emmet#moveNextPrev(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>N <plug>(emmet-move-prev)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-move-next-item) <esc>:call emmet#moveNextPrevItem(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-move-next-item) :call emmet#moveNextPrevItem(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-move-prev-item) <esc>:call emmet#moveNextPrevItem(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-move-prev-item) :call emmet#moveNextPrevItem(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-image-size) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#imageSize()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>i <plug>(emmet-image-size)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-image-size) :call emmet#imageSize()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>i <plug>(emmet-image-size)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-image-encode) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#imageEncode()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>I <plug>(emmet-image-encode)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-image-encode) :call emmet#imageEncode()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>I <plug>(emmet-image-encode)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-toggle-comment) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#toggleComment()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>/ <plug>(emmet-toggle-comment)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-toggle-comment) :call emmet#toggleComment()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>/ <plug>(emmet-toggle-comment)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-split-join-tag) <esc>:call emmet#splitJoinTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>j <plug>(emmet-split-join-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-split-join-tag) :call emmet#splitJoinTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>j <plug>(emmet-split-join-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-remove-tag) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#removeTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>k <plug>(emmet-remove-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-remove-tag) :call emmet#removeTag()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>k <plug>(emmet-remove-tag)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-anchorize-url) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#anchorizeURL(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>a <plug>(emmet-anchorize-url)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-anchorize-url) :call emmet#anchorizeURL(0)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>a <plug>(emmet-anchorize-url)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-anchorize-summary) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#anchorizeURL(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>A <plug>(emmet-anchorize-summary)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-anchorize-summary) :call emmet#anchorizeURL(1)<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>A <plug>(emmet-anchorize-summary)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: inoremap  <plug>(emmet-merge-lines) <c-r>=emmet#util#closePopup()<cr><c-r>=emmet#mergeLines()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: imap  <unique> <silent><c-y>m <plug>(emmet-merge-lines)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: nnoremap  <plug>(emmet-merge-lines) :call emmet#mergeLines()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: nmap  <unique> <silent><c-y>m <plug>(emmet-merge-lines)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 48: vnoremap  <plug>(emmet-code-pretty) :call emmet#codePretty()<cr>
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 56: vmap  <unique> <silent><c-y>c <plug>(emmet-code-pretty)
line 57:       endif
line 58:     endif
line 59:   endfor
line 44:   for item in items
line 45:     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
line 46:       continue
line 47:     endif
line 48:     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
line 49:     if item.var != '' && !only_plug
line 50:       if exists('g:' . item.var)
line 51:         let key = eval('g:' . item.var)
line 52:       else
line 53:         let key = g:user_emmet_leader_key . item.key
line 54:       endif
line 55:       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
line 56:         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
line 57:       endif
line 58:     endif
line 59:   endfor
line 60: 
line 61:   if exists('g:user_emmet_complete_tag') && g:user_emmet_complete_tag
line 62:     if get(g:, 'user_emmet_install_global', 1)
line 63:       set omnifunc=emmet#completeTag
line 64:     else
line 65:       setlocal omnifunc=emmet#completeTag
line 66:     endif
line 67:   endif
function <SNR>95_install_plugin returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin/emmet.vim

line 172: endif
line 173: 
line 174: if get(g:, 'user_emmet_install_command', 1)
line 175:   command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)
line 176: endif
line 177: 
line 178: function! s:setup_styledEmmetAbbreviation() abort
line 183: 
line 184: augroup ___emmet_setup___
line 185:   au!
line 186:   autocmd Syntax * call s:setup_styledEmmetAbbreviation()
line 187: augroup END
line 188: 
line 189: let &cpoptions = s:save_cpo
line 190: unlet s:save_cpo
line 191: 
line 192: " vim:set et:
finished sourcing /home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin/emmet.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/plugin/**/*.vim"
Searching for "/etc/xdg/nvim/plugin/**/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/plugin/**/*.vim"
Searching for "/usr/local/share/nvim/site/plugin/**/*.vim"
Searching for "/usr/share/nvim/site/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin/polyglot.vim"
line 1: call polyglot#init#init()
calling function polyglot#init#init()

line 1:   " A no-op as sourcing this file is enough
function polyglot#init#init returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin/polyglot.vim

line 2: 
line 3: " Turn on filetype plugins (:help filetype-plugin).
line 4: if has('autocmd') && !(exists("did_load_filetypes") && exists("did_indent_on"))
line 5:   filetype plugin indent on
line 6: endif
line 7: 
line 8: " Enable syntax highlighting.
line 9: if has('syntax') && !exists('g:syntax_on')
line 10:   syntax enable
line 11: endif
line 12: 
line 13: " No need to duplicate work
line 14: if exists('g:loaded_sensible')
line 15:   finish
line 16: endif
line 17: 
line 18: " Code taken from https://github.com/tpope/vim-sensible
line 19: " and (mostly comments) from https://github.com/sheerun/vimrc
line 20: "
line 21: " Only settings that matter for proper editing are left
line 22: if !has_key(g:polyglot_is_disabled, 'sensible')
line 23:   " Allow backspace in insert mode.
line 24:   if &backspace == ""
line 25:     set backspace=indent,eol,start
line 26:   endif
line 27: 
line 28:   " Allow for mappings including `Esc`, while preserving
line 29:   " zero timeout after pressing it manually.
line 30:   " (only vim needs a fix for this)
line 31:   if !has('nvim') && &ttimeoutlen == -1
line 32:     set ttimeout
line 33:     set ttimeoutlen=100
line 34:   endif
line 35: 
line 36:   " Set default whitespace characters when using `:set list`
line 37:   if &listchars ==# 'eol:$'
line 38:     set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
line 39:   endif
line 40: 
line 41:   " Delete comment character when joining commented lines
line 42:   if v:version > 703 || v:version == 703 && has("patch541")
line 43:     set formatoptions+=j
line 44:   endif
line 45: 
line 46:   " Search upwards for tags file instead only locally
line 47:   if has('path_extra')
line 48:     setglobal tags-=./tags tags-=./tags; tags^=./tags;
line 49:   endif
line 50: 
line 51:   " Fix issues with fish shell
line 52:   " https://github.com/tpope/vim-sensible/issues/50
line 53:   if &shell =~# 'fish$' && (v:version < 704 || v:version == 704 && !has('patch276'))
line 54:     set shell=/usr/bin/env\ bash
line 55:   endif
line 56: 
line 57:   " Increase history size to 1000 items.
line 58:   if &history < 1000
line 59:     set history=1000
line 60:   endif
line 61: 
line 62:   " Allow for up to 50 opened tabs on Vim start.
line 63:   if &tabpagemax < 50
line 64:     set tabpagemax=50
line 65:   endif
line 66: 
line 67:   " Reduce updatetime from 4000 to 300 to avoid issues with coc.nvim
line 68:   if &updatetime == 4000
line 69:     set updatetime=300
line 70:   endif
line 71: 
line 72:   " Automatically reload file if changed somewhere else
line 73:   redir => capture
line 74:   silent autocmd CursorHold
--- Autocommands ---
line 75:   redir END
line 76:   if match(capture, 'checktime') == -1
line 77:     augroup polyglot-sensible
line 78:       au!
line 79:       au CursorHold * silent! checktime
line 80:     augroup END
line 81:   endif
line 82: 
line 83:   " Always save upper case variables to viminfo file.
line 84:   if !empty(&viminfo)
line 85:     set viminfo^=!
line 86:   endif
line 87: 
line 88:   " Don't save options in sessions and views
line 89:   set sessionoptions-=options
line 90:   set viewoptions-=options
line 91: 
line 92:   " Allow color schemes to do bright colors without forcing bold.
line 93:   if &t_Co == 8 && $TERM !~# '^Eterm'
line 94:     set t_Co=16
line 95:   endif
line 96: 
line 97:   " Load matchit.vim, but only if the user hasn't installed a newer version.
line 98:   if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
line 99:     runtime! macros/matchit.vim
line 100:   endif
line 101: 
line 102:   " `Ctrl-U` in insert mode deletes a lot. Use `Ctrl-G` u to first break undo,
line 103:   " so that you can undo `Ctrl-U` without undoing what you typed before it.
line 104:   if empty(mapcheck('<C-U>', 'i'))
line 105:     inoremap <C-U> <C-G>u<C-U>
line 106:   endif
line 107: 
line 108:   if empty(mapcheck('<C-W>', 'i'))
line 109:     inoremap <C-W> <C-G>u<C-W>
line 110:   endif
line 111: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin/polyglot.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/gzip.vim"
line 1: " Vim plugin for editing compressed files.
line 2: " Maintainer: Bram Moolenaar <Bram@vim.org>
line 3: " Last Change: 2016 Oct 30
line 4: 
line 5: " Exit quickly when:
line 6: " - this plugin was already loaded
line 7: " - when 'compatible' is set
line 8: " - some autocommands are already taking care of compressed files
line 9: if exists("loaded_gzip") || &cp || exists("#BufReadPre#*.gz")
line 10:   finish
line 11: endif
line 12: let loaded_gzip = 1
line 13: 
line 14: augroup gzip
line 15:   " Remove all gzip autocommands
line 16:   au!
line 17: 
line 18:   " Enable editing of gzipped files.
line 19:   " The functions are defined in autoload/gzip.vim.
line 20:   "
line 21:   " Set binary mode before reading the file.
line 22:   " Use "gzip -d", gunzip isn't always available.
line 23:   autocmd BufReadPre,FileReadPre^I*.gz,*.bz2,*.Z,*.lzma,*.xz,*.lz,*.zst,*.br,*.lzo setlocal bin
line 24:   autocmd BufReadPost,FileReadPost^I*.gz  call gzip#read("gzip -dn")
line 25:   autocmd BufReadPost,FileReadPost^I*.bz2 call gzip#read("bzip2 -d")
line 26:   autocmd BufReadPost,FileReadPost^I*.Z   call gzip#read("uncompress")
line 27:   autocmd BufReadPost,FileReadPost^I*.lzma call gzip#read("lzma -d")
line 28:   autocmd BufReadPost,FileReadPost^I*.xz  call gzip#read("xz -d")
line 29:   autocmd BufReadPost,FileReadPost^I*.lz  call gzip#read("lzip -d")
line 30:   autocmd BufReadPost,FileReadPost^I*.zst call gzip#read("zstd -d --rm")
line 31:   autocmd BufReadPost,FileReadPost^I*.br call gzip#read("brotli -d --rm")
line 32:   autocmd BufReadPost,FileReadPost^I*.lzo call gzip#read("lzop -d -U")
line 33:   autocmd BufWritePost,FileWritePost^I*.gz  call gzip#write("gzip")
line 34:   autocmd BufWritePost,FileWritePost^I*.bz2 call gzip#write("bzip2")
line 35:   autocmd BufWritePost,FileWritePost^I*.Z   call gzip#write("compress -f")
line 36:   autocmd BufWritePost,FileWritePost^I*.lzma call gzip#write("lzma -z")
line 37:   autocmd BufWritePost,FileWritePost^I*.xz  call gzip#write("xz -z")
line 38:   autocmd BufWritePost,FileWritePost^I*.lz  call gzip#write("lzip")
line 39:   autocmd BufWritePost,FileWritePost^I*.zst  call gzip#write("zstd --rm")
line 40:   autocmd BufWritePost,FileWritePost^I*.br  call gzip#write("brotli --rm")
line 41:   autocmd BufWritePost,FileWritePost^I*.lzo  call gzip#write("lzop -U")
line 42:   autocmd FileAppendPre^I^I^I*.gz  call gzip#appre("gzip -dn")
line 43:   autocmd FileAppendPre^I^I^I*.bz2 call gzip#appre("bzip2 -d")
line 44:   autocmd FileAppendPre^I^I^I*.Z   call gzip#appre("uncompress")
line 45:   autocmd FileAppendPre^I^I^I*.lzma call gzip#appre("lzma -d")
line 46:   autocmd FileAppendPre^I^I^I*.xz   call gzip#appre("xz -d")
line 47:   autocmd FileAppendPre^I^I^I*.lz   call gzip#appre("lzip -d")
line 48:   autocmd FileAppendPre^I^I^I*.zst call gzip#appre("zstd -d --rm")
line 49:   autocmd FileAppendPre^I^I^I*.br call gzip#appre("brotli -d --rm")
line 50:   autocmd FileAppendPre^I^I^I*.lzo call gzip#appre("lzop -d -U")
line 51:   autocmd FileAppendPost^I^I*.gz  call gzip#write("gzip")
line 52:   autocmd FileAppendPost^I^I*.bz2 call gzip#write("bzip2")
line 53:   autocmd FileAppendPost^I^I*.Z   call gzip#write("compress -f")
line 54:   autocmd FileAppendPost^I^I*.lzma call gzip#write("lzma -z")
line 55:   autocmd FileAppendPost^I^I*.xz call gzip#write("xz -z")
line 56:   autocmd FileAppendPost^I^I*.lz call gzip#write("lzip")
line 57:   autocmd FileAppendPost^I^I*.zst call gzip#write("zstd --rm")
line 58:   autocmd FileAppendPost^I^I*.br call gzip#write("brotli --rm")
line 59:   autocmd FileAppendPost^I^I*.lzo call gzip#write("lzop -U")
line 60: augroup END
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/gzip.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/health.vim"
line 1: autocmd CmdUndefined CheckHealth checkhealth
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/health.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/man.vim"
line 1: " Maintainer: Anmol Sethi <hi@nhooyr.io>
line 2: 
line 3: if exists('g:loaded_man')
line 4:   finish
line 5: endif
line 6: let g:loaded_man = 1
line 7: 
line 8: command! -bang -bar -addr=other -complete=customlist,man#complete -nargs=* Man if <bang>0 | call man#init_pager() | else | call man#open_page(<count>, <q-mods>, <f-args>) | endif
line 11: 
line 12: augroup man
line 13:   autocmd!
line 14:   autocmd BufReadCmd man://* call man#read_page(matchstr(expand('<amatch>'), 'man://\zs.*'))
line 15: augroup END
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/man.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/matchit.vim"
line 1: " Nvim: load the matchit plugin by default.
line 2: if !exists("g:loaded_matchit") && stridx(&packpath, $VIMRUNTIME) >= 0
line 3:   packadd matchit
Searching for "pack/*/start/matchit" in "/home/thomaseckert/.config/nvim,/etc/xdg/nvim,/home/thomaseckert/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/thomaseckert/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/thomaseckert/.config/nvim/after"
Searching for "/home/thomaseckert/.config/nvim/pack/*/start/matchit"
Searching for "/etc/xdg/nvim/pack/*/start/matchit"
Searching for "/home/thomaseckert/.local/share/nvim/site/pack/*/start/matchit"
Searching for "/usr/local/share/nvim/site/pack/*/start/matchit"
Searching for "/usr/share/nvim/site/pack/*/start/matchit"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/*/start/matchit"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/pack/*/start/matchit"
Searching for "/usr/share/nvim/site/after/pack/*/start/matchit"
Searching for "/usr/local/share/nvim/site/after/pack/*/start/matchit"
Searching for "/home/thomaseckert/.local/share/nvim/site/after/pack/*/start/matchit"
Searching for "/etc/xdg/nvim/after/pack/*/start/matchit"
Searching for "/home/thomaseckert/.config/nvim/after/pack/*/start/matchit"
not found in 'packpath': "pack/*/start/matchit"
Searching for "pack/*/opt/matchit" in "/home/thomaseckert/.config/nvim,/etc/xdg/nvim,/home/thomaseckert/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/thomaseckert/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/thomaseckert/.config/nvim/after"
Searching for "/home/thomaseckert/.config/nvim/pack/*/opt/matchit"
Searching for "/etc/xdg/nvim/pack/*/opt/matchit"
Searching for "/home/thomaseckert/.local/share/nvim/site/pack/*/opt/matchit"
Searching for "/usr/local/share/nvim/site/pack/*/opt/matchit"
Searching for "/usr/share/nvim/site/pack/*/opt/matchit"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/*/opt/matchit"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/plenary.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-autopairs)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-abolish)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/fd)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/telescope.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/hologram.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/guihua.lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-buffer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-path)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-cmdline)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp_luasnip)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/friendly-snippets)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nightfox.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-nuuid)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-fugitive)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-commentary)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/tabular)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/editorconfig-vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/black)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-go)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/go.nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/css.vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/postcss.vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-svelte)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/emmet-vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/MatchTag)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/etc/xdg/nvim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.local/share/nvim/site)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/usr/local/share/nvim/site)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/usr/share/nvim/site)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 3: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim"
line 1: "  matchit.vim: (global plugin) Extended "%" matching
line 2: "  Maintainer:  Christian Brabandt
line 3: "  Version:     1.18
line 4: "  Last Change: 2020 Dec 23
line 5: "  Repository:  https://github.com/chrisbra/matchit
line 6: "  Previous URL:http://www.vim.org/script.php?script_id=39
line 7: "  Previous Maintainer:  Benji Fisher PhD   <benji@member.AMS.org>
line 8: 
line 9: " Documentation:
line 10: "  The documentation is in a separate file: ../doc/matchit.txt
line 11: 
line 12: " Credits:
line 13: "  Vim editor by Bram Moolenaar (Thanks, Bram!)
line 14: "  Original script and design by Raul Segura Acevedo
line 15: "  Support for comments by Douglas Potts
line 16: "  Support for back references and other improvements by Benji Fisher
line 17: "  Support for many languages by Johannes Zellner
line 18: "  Suggestions for improvement, bug reports, and support for additional
line 19: "  languages by Jordi-Albert Batalla, Neil Bird, Servatius Brandt, Mark
line 20: "  Collett, Stephen Wall, Dany St-Amant, Yuheng Xie, and Johannes Zellner.
line 21: 
line 22: " Debugging:
line 23: "  If you'd like to try the built-in debugging commands...
line 24: "   :MatchDebug      to activate debugging for the current buffer
line 25: "  This saves the values of several key script variables as buffer-local
line 26: "  variables.  See the MatchDebug() function, below, for details.
line 27: 
line 28: " TODO:  I should think about multi-line patterns for b:match_words.
line 29: "   This would require an option:  how many lines to scan (default 1).
line 30: "   This would be useful for Python, maybe also for *ML.
line 31: " TODO:  Maybe I should add a menu so that people will actually use some of
line 32: "   the features that I have implemented.
line 33: " TODO:  Eliminate the MultiMatch function.  Add yet another argument to
line 34: "   Match_wrapper() instead.
line 35: " TODO:  Allow :let b:match_words = '\(\(foo\)\(bar\)\):\3\2:end\1'
line 36: " TODO:  Make backrefs safer by using '\V' (very no-magic).
line 37: " TODO:  Add a level of indirection, so that custom % scripts can use my
line 38: "   work but extend it.
line 39: 
line 40: " Allow user to prevent loading and prevent duplicate loading.
line 41: if exists("g:loaded_matchit") || &cp
line 42:   finish
line 43: endif
line 44: let g:loaded_matchit = 1
line 45: 
line 46: let s:save_cpo = &cpo
line 47: set cpo&vim
line 48: 
line 49: nnoremap <silent> <Plug>(MatchitNormalForward)     :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
line 50: nnoremap <silent> <Plug>(MatchitNormalBackward)    :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
line 51: xnoremap <silent> <Plug>(MatchitVisualForward)     :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") \| exe ":normal! m'" \| endif<cr>gv``
line 53: xnoremap <silent> <Plug>(MatchitVisualBackward)    :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
line 54: onoremap <silent> <Plug>(MatchitOperationForward)  :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
line 55: onoremap <silent> <Plug>(MatchitOperationBackward) :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
line 56: 
line 57: " Analogues of [{ and ]} using matching patterns:
line 58: nnoremap <silent> <Plug>(MatchitNormalMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>
line 59: nnoremap <silent> <Plug>(MatchitNormalMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>
line 60: xnoremap <silent> <Plug>(MatchitVisualMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
line 61: xnoremap <silent> <Plug>(MatchitVisualMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
line 62: onoremap <silent> <Plug>(MatchitOperationMultiBackward) :<C-U>call matchit#MultiMatch("bW", "o")<CR>
line 63: onoremap <silent> <Plug>(MatchitOperationMultiForward)  :<C-U>call matchit#MultiMatch("W",  "o")<CR>
line 64: 
line 65: " text object:
line 66: xmap <silent> <Plug>(MatchitVisualTextObject) <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
line 67: 
line 68: if !exists("g:no_plugin_maps")
line 69:   nmap <silent> %  <Plug>(MatchitNormalForward)
line 70:   nmap <silent> g% <Plug>(MatchitNormalBackward)
line 71:   xmap <silent> %  <Plug>(MatchitVisualForward)
line 72:   xmap <silent> g% <Plug>(MatchitVisualBackward)
line 73:   omap <silent> %  <Plug>(MatchitOperationForward)
line 74:   omap <silent> g% <Plug>(MatchitOperationBackward)
line 75: 
line 76:   " Analogues of [{ and ]} using matching patterns:
line 77:   nmap <silent> [% <Plug>(MatchitNormalMultiBackward)
line 78:   nmap <silent> ]% <Plug>(MatchitNormalMultiForward)
line 79:   xmap <silent> [% <Plug>(MatchitVisualMultiBackward)
line 80:   xmap <silent> ]% <Plug>(MatchitVisualMultiForward)
line 81:   omap <silent> [% <Plug>(MatchitOperationMultiBackward)
line 82:   omap <silent> ]% <Plug>(MatchitOperationMultiForward)
line 83: 
line 84:   " Text object
line 85:   xmap a% <Plug>(MatchitVisualTextObject)
line 86: endif
line 87: 
line 88: " Call this function to turn on debugging information.  Every time the main
line 89: " script is run, buffer variables will be saved.  These can be used directly
line 90: " or viewed using the menu items below.
line 91: if !exists(":MatchDebug")
line 92:   command! -nargs=0 MatchDebug call matchit#Match_debug()
line 93: endif
line 94: 
line 95: let &cpo = s:save_cpo
line 96: unlet s:save_cpo
line 97: 
line 98: " vim:sts=2:sw=2:et:
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/matchit.vim
line 3: augroup filetypedetect
line 3: augroup END
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/pack/*/opt/matchit"
Searching for "/usr/share/nvim/site/after/pack/*/opt/matchit"
Searching for "/usr/local/share/nvim/site/after/pack/*/opt/matchit"
Searching for "/home/thomaseckert/.local/share/nvim/site/after/pack/*/opt/matchit"
Searching for "/etc/xdg/nvim/after/pack/*/opt/matchit"
Searching for "/home/thomaseckert/.config/nvim/after/pack/*/opt/matchit"
line 4: endif
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/matchit.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/matchparen.vim"
line 1: " Vim plugin for showing matching parens
line 2: " Maintainer:  Bram Moolenaar <Bram@vim.org>
line 3: " Last Change: 2021 Apr 08
line 4: 
line 5: " Exit quickly when:
line 6: " - this plugin was already loaded (or disabled)
line 7: " - when 'compatible' is set
line 8: " - the "CursorMoved" autocmd event is not available.
line 9: if exists("g:loaded_matchparen") || &cp || !exists("##CursorMoved")
line 10:   finish
line 11: endif
line 12: let g:loaded_matchparen = 1
line 13: 
line 14: if !exists("g:matchparen_timeout")
line 15:   let g:matchparen_timeout = 300
line 16: endif
line 17: if !exists("g:matchparen_insert_timeout")
line 18:   let g:matchparen_insert_timeout = 60
line 19: endif
line 20: 
line 21: augroup matchparen
line 22:   " Replace all matchparen autocommands
line 23:   autocmd! CursorMoved,CursorMovedI,WinEnter * call s:Highlight_Matching_Pair()
line 24:   autocmd! WinLeave * call s:Remove_Matches()
line 25:   if exists('##TextChanged')
line 26:     autocmd! TextChanged,TextChangedI * call s:Highlight_Matching_Pair()
line 27:   endif
line 28: augroup END
line 29: 
line 30: " Skip the rest if it was already done.
line 31: if exists("*s:Highlight_Matching_Pair")
line 32:   finish
line 33: endif
line 34: 
line 35: let s:cpo_save = &cpo
line 36: set cpo-=C
line 37: 
line 38: " The function that is invoked (very often) to define a ":match" highlighting
line 39: " for any matching paren.
line 40: func s:Highlight_Matching_Pair()
line 196: 
line 197: func s:Remove_Matches()
line 203: 
line 204: 
line 205: " Define commands that will disable and enable the plugin.
line 206: command DoMatchParen call s:DoMatchParen()
line 207: command NoMatchParen call s:NoMatchParen()
line 208: 
line 209: func s:NoMatchParen()
line 216: 
line 217: func s:DoMatchParen()
line 223: 
line 224: let &cpo = s:cpo_save
line 225: unlet s:cpo_save
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/matchparen.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/netrwPlugin.vim"
line 1: " netrwPlugin.vim: Handles file transfer and remote directory listing across a network
line 2: "            PLUGIN SECTION
line 3: " Date:^I^IFeb 09, 2021
line 4: " Maintainer:^ICharles E Campbell <NcampObell@SdrPchip.AorgM-NOSPAM>
line 5: " GetLatestVimScripts: 1075 1 :AutoInstall: netrw.vim
line 6: " Copyright:    Copyright (C) 1999-2021 Charles E. Campbell {{{1
line 7: "               Permission is hereby granted to use and distribute this code,
line 8: "               with or without modifications, provided that this copyright
line 9: "               notice is copied with it. Like anything else that's free,
line 10: "               netrw.vim, netrwPlugin.vim, and netrwSettings.vim are provided
line 11: "               *as is* and comes with no warranty of any kind, either
line 12: "               expressed or implied. By using this plugin, you agree that
line 13: "               in no event will the copyright holder be liable for any damages
line 14: "               resulting from the use of this software.
line 15: "
line 16: "  But be doers of the Word, and not only hearers, deluding your own selves {{{1
line 17: "  (James 1:22 RSV)
line 18: " =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
line 19: " Load Once: {{{1
line 20: if &cp || exists("g:loaded_netrwPlugin")
line 21:  finish
line 22: endif
line 23: let g:loaded_netrwPlugin = "v171"
line 24: let s:keepcpo = &cpo
line 25: set cpo&vim
line 26: "DechoRemOn
line 27: 
line 28: " ---------------------------------------------------------------------
line 29: " Public Interface: {{{1
line 30: 
line 31: " Local Browsing Autocmds: {{{2
line 32: augroup FileExplorer
line 33:  au!
line 34:  au BufLeave *  if &ft != "netrw"|let w:netrw_prvfile= expand("%:p")|endif
line 35:  au BufEnter *^Isil call s:LocalBrowse(expand("<amatch>"))
line 36:  au VimEnter *^Isil call s:VimEnter(expand("<amatch>"))
line 37:  if has("win32") || has("win95") || has("win64") || has("win16")
line 38:   au BufEnter .* sil call s:LocalBrowse(expand("<amatch>"))
line 39:  endif
line 40: augroup END
line 41: 
line 42: " Network Browsing Reading Writing: {{{2
line 43: augroup Network
line 44:  au!
line 45:  au BufReadCmd   file://*^I^I^I^I^I^I^I^I^I^I^Icall netrw#FileUrlEdit(expand("<amatch>"))
line 46:  au BufReadCmd   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
line 47:  au FileReadCmd  ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
line 48:  au BufWriteCmd  ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
line 49:  au FileWriteCmd ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
line 50:  try
line 51:   au SourceCmd   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 52:  catch /^Vim\%((\a\+)\)\=:E216/
line 53:   au SourcePre   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 54:  endtry
line 55: augroup END
line 56: 
line 57: " Commands: :Nread, :Nwrite, :NetUserPass {{{2
line 58: com! -count=1 -nargs=*^INread^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call winrestview(s:svpos)
line 59: com! -range=% -nargs=*^INwrite^I^Ilet s:svpos= winsaveview()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call winrestview(s:svpos)
line 60: com! -nargs=*^I^INetUserPass^Icall NetUserPass(<f-args>)
line 61: com! -nargs=*^I        Nsource^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetSource(<f-args>)<bar>call winrestview(s:svpos)
line 62: com! -nargs=?^I^INtree^I^Icall netrw#SetTreetop(1,<q-args>)
line 63: 
line 64: " Commands: :Explore, :Sexplore, Hexplore, Vexplore, Lexplore {{{2
line 65: com! -nargs=* -bar -bang -count=0 -complete=dir^IExplore^I^Icall netrw#Explore(<count>,0,0+<bang>0,<q-args>)
line 66: com! -nargs=* -bar -bang -count=0 -complete=dir^ISexplore^Icall netrw#Explore(<count>,1,0+<bang>0,<q-args>)
line 67: com! -nargs=* -bar -bang -count=0 -complete=dir^IHexplore^Icall netrw#Explore(<count>,1,2+<bang>0,<q-args>)
line 68: com! -nargs=* -bar -bang -count=0 -complete=dir^IVexplore^Icall netrw#Explore(<count>,1,4+<bang>0,<q-args>)
line 69: com! -nargs=* -bar       -count=0 -complete=dir^ITexplore^Icall netrw#Explore(<count>,0,6        ,<q-args>)
line 70: com! -nargs=* -bar -bang^I^I^INexplore^Icall netrw#Explore(-1,0,0,<q-args>)
line 71: com! -nargs=* -bar -bang^I^I^IPexplore^Icall netrw#Explore(-2,0,0,<q-args>)
line 72: com! -nargs=* -bar -bang -count=0 -complete=dir Lexplore^Icall netrw#Lexplore(<count>,<bang>0,<q-args>)
line 73: 
line 74: " Commands: NetrwSettings {{{2
line 75: com! -nargs=0^INetrwSettings^Icall netrwSettings#NetrwSettings()
line 76: com! -bang^INetrwClean^Icall netrw#Clean(<bang>0)
line 77: 
line 78: " Maps:
line 79: if !exists("g:netrw_nogx")
line 80:  if maparg('gx','n') == ""
line 81:   if !hasmapto('<Plug>NetrwBrowseX')
line 82:    nmap <unique> gx <Plug>NetrwBrowseX
line 83:   endif
line 84:   nno <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<cr>
line 85:  endif
line 86:  if maparg('gx','x') == ""
line 87:   if !hasmapto('<Plug>NetrwBrowseXVis')
line 88:    xmap <unique> gx <Plug>NetrwBrowseXVis
line 89:   endif
line 90:   xno <silent> <Plug>NetrwBrowseXVis :<c-u>call netrw#BrowseXVis()<cr>
line 91:  endif
line 92: endif
line 93: if exists("g:netrw_usetab") && g:netrw_usetab
line 94:  if maparg('<c-tab>','n') == ""
line 95:   nmap <unique> <c-tab> <Plug>NetrwShrink
line 96:  endif
line 97:  nno <silent> <Plug>NetrwShrink :call netrw#Shrink()<cr>
line 98: endif
line 99: 
line 100: " ---------------------------------------------------------------------
line 101: " LocalBrowse: invokes netrw#LocalBrowseCheck() on directory buffers {{{2
line 102: fun! s:LocalBrowse(dirname)
line 146: 
line 147: " ---------------------------------------------------------------------
line 148: " s:VimEnter: after all vim startup stuff is done, this function is called. {{{2
line 149: "             Its purpose: to look over all windows and run s:LocalBrowse() on
line 150: "             them, which checks if they're directories and will create a directory
line 151: "             listing when appropriate.
line 152: "             It also sets s:vimentered, letting s:LocalBrowse() know that s:VimEnter()
line 153: "             has already been called.
line 154: fun! s:VimEnter(dirname)
line 174: 
line 175: " ---------------------------------------------------------------------
line 176: " NetrwStatusLine: {{{1
line 177: fun! NetrwStatusLine()
line 188: 
line 189: " ------------------------------------------------------------------------
line 190: " NetUserPass: set username and password for subsequent ftp transfer {{{1
line 191: "   Usage:  :call NetUserPass()^I^I^I-- will prompt for userid and password
line 192: "^I    :call NetUserPass("uid")^I^I-- will prompt for password
line 193: "^I    :call NetUserPass("uid","password") -- sets global userid and password
line 194: fun! NetUserPass(...)
line 218: 
line 219: " ------------------------------------------------------------------------
line 220: " Modelines And Restoration: {{{1
line 221: let &cpo= s:keepcpo
line 222: unlet s:keepcpo
line 223: " vim:ts=8 fdm=marker
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/netrwPlugin.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/rplugin.vim"
line 1: if exists('g:loaded_remote_plugins')
line 2:   finish
line 3: endif
line 4: let g:loaded_remote_plugins = '/path/to/manifest'
line 5: 
line 6: " Get the path to the rplugin manifest file.
line 7: function! s:GetManifestPath() abort
line 24: 
line 25: " Old manifest file based on known script locations.
line 26: function! s:GetOldManifestPaths() abort
line 41: 
line 42: function! s:GetManifest() abort
line 55: 
line 56: function! s:LoadRemotePlugins() abort
line 62: 
line 63: command! -bar UpdateRemotePlugins call remote#host#UpdateRemotePlugins()
line 64: 
line 65: if index(v:argv, "--clean") < 0
line 66:   call s:LoadRemotePlugins()
calling function <SNR>104_LoadRemotePlugins()

line 1:   let g:loaded_remote_plugins = s:GetManifest()
calling function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest()

line 1:   let manifest = s:GetManifestPath()
calling function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest[1]..<SNR>104_GetManifestPath()

line 1:   let manifest_base = ''
line 2: 
line 3:   if exists('$NVIM_RPLUGIN_MANIFEST')
line 4:     return fnamemodify($NVIM_RPLUGIN_MANIFEST, ':p')
line 5:   endif
line 6: 
line 7:   let dest = stdpath('data')
line 8:   if !empty(dest)
line 9:     if !isdirectory(dest)
line 10:       call mkdir(dest, 'p', 0700)
line 11:     endif
line 12:     let manifest_base = dest
line 13:   endif
line 14: 
line 15:   return manifest_base.'/rplugin.vim'
function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest[1]..<SNR>104_GetManifestPath returning '/home/thomaseckert/.local/share/nvim/rplugin.vim'

continuing in function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest

line 2:   if !filereadable(manifest)
line 3:     " Check if an old manifest file exists and move it to the new location.
line 4:     for old_manifest in s:GetOldManifestPaths()
calling function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest[4]..<SNR>104_GetOldManifestPaths()

line 1:   let prefix = exists('$MYVIMRC') ? $MYVIMRC : matchstr(get(split(execute('scriptnames'), '\n'), 0, ''), '\f\+$')
line 4:   let origpath = fnamemodify(expand(prefix, 1), ':h').'/.'.fnamemodify(prefix, ':t').'-rplugin~'
line 6:   if !has('win32')
line 7:     return [origpath]
function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest[4]..<SNR>104_GetOldManifestPaths returning ['/home/thomaseckert/.config/nvim/.init.lua-rplugin~']

continuing in function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest

line 5:       if filereadable(old_manifest)
line 6:         call rename(old_manifest, manifest)
line 7:         break
line 8:       endif
line 9:     endfor
line 4:     for old_manifest in s:GetOldManifestPaths()
line 5:       if filereadable(old_manifest)
line 6:         call rename(old_manifest, manifest)
line 7:         break
line 8:       endif
line 9:     endfor
line 10:   endif
line 11:   return manifest
function <SNR>104_LoadRemotePlugins[1]..<SNR>104_GetManifest returning '/home/thomaseckert/.local/share/nvim/rplugin.vim'

continuing in function <SNR>104_LoadRemotePlugins

line 2:   if filereadable(g:loaded_remote_plugins)
line 3:     execute 'source' fnameescape(g:loaded_remote_plugins)
line 4:   endif
function <SNR>104_LoadRemotePlugins returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/rplugin.vim

line 67: endif
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/rplugin.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/shada.vim"
line 1: if exists('g:loaded_shada_plugin')
line 2:   finish
line 3: endif
line 4: let g:loaded_shada_plugin = 1
line 5: 
line 6: augroup ShaDaCommands
line 7:   autocmd!
line 8:   autocmd BufReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call setline('.', shada#get_strings(readfile(expand('<afile>'),'b'))) |setlocal filetype=shada
line 12:   autocmd FileReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call append("'[", shada#get_strings(readfile(expand('<afile>'), 'b')))
line 15:   autocmd BufWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |if writefile(shada#get_binstrings(getline(1, '$')),expand('<afile>'), 'b') == 0 |  let &l:modified = (expand('<afile>') is# bufname(+expand('<abuf>'))? 0: stridx(&cpoptions, '+') != -1) |endif
line 23:   autocmd FileWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'b')
line 30:   autocmd FileAppendCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'ab')
line 37:   autocmd SourceCmd *.shada,*.shada.tmp.[a-z] :execute 'rshada' fnameescape(expand('<afile>'))
line 39: augroup END
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/shada.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/spellfile.vim"
line 1: " Vim plugin for downloading spell files
line 2: 
line 3: if exists("loaded_spellfile_plugin") || &cp || exists("#SpellFileMissing")
line 4:   finish
line 5: endif
line 6: let loaded_spellfile_plugin = 1
line 7: 
line 8: autocmd SpellFileMissing * call spellfile#LoadFile(expand('<amatch>'))
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/spellfile.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tarPlugin.vim"
line 1: " tarPlugin.vim -- a Vim plugin for browsing tarfiles
line 2: " Original was copyright (c) 2002, Michael C. Toren <mct@toren.net>
line 3: " Modified by Charles E. Campbell
line 4: " Distributed under the GNU General Public License.
line 5: "
line 6: " Updates are available from <http://michael.toren.net/code/>.  If you
line 7: " find this script useful, or have suggestions for improvements, please
line 8: " let me know.
line 9: " Also look there for further comments and documentation.
line 10: "
line 11: " This part only sets the autocommands.  The functions are in autoload/tar.vim.
line 12: " ---------------------------------------------------------------------
line 13: "  Load Once: {{{1
line 14: if &cp || exists("g:loaded_tarPlugin")
line 15:  finish
line 16: endif
line 17: let g:loaded_tarPlugin = "v32"
line 18: let s:keepcpo          = &cpo
line 19: set cpo&vim
line 20: 
line 21: " ---------------------------------------------------------------------
line 22: "  Public Interface: {{{1
line 23: augroup tar
line 24:   au!
line 25:   au BufReadCmd   tarfile::*^Icall tar#Read(expand("<amatch>"), 1)
line 26:   au FileReadCmd  tarfile::*^Icall tar#Read(expand("<amatch>"), 0)
line 27:   au BufWriteCmd  tarfile::*^Icall tar#Write(expand("<amatch>"))
line 28:   au FileWriteCmd tarfile::*^Icall tar#Write(expand("<amatch>"))
line 29: 
line 30:   if has("unix")
line 31:    au BufReadCmd   tarfile::*/*^Icall tar#Read(expand("<amatch>"), 1)
line 32:    au FileReadCmd  tarfile::*/*^Icall tar#Read(expand("<amatch>"), 0)
line 33:    au BufWriteCmd  tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 34:    au FileWriteCmd tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 35:   endif
line 36: 
line 37:   au BufReadCmd   *.tar.gz^I^Icall tar#Browse(expand("<amatch>"))
line 38:   au BufReadCmd   *.tar^I^I^Icall tar#Browse(expand("<amatch>"))
line 39:   au BufReadCmd   *.lrp^I^I^Icall tar#Browse(expand("<amatch>"))
line 40:   au BufReadCmd   *.tar.bz2^I^Icall tar#Browse(expand("<amatch>"))
line 41:   au BufReadCmd   *.tar.Z^I^Icall tar#Browse(expand("<amatch>"))
line 42:   au BufReadCmd   *.tbz^I^I^Icall tar#Browse(expand("<amatch>"))
line 43:   au BufReadCmd   *.tgz^I^I^Icall tar#Browse(expand("<amatch>"))
line 44:   au BufReadCmd   *.tar.lzma^Icall tar#Browse(expand("<amatch>"))
line 45:   au BufReadCmd   *.tar.xz^I^Icall tar#Browse(expand("<amatch>"))
line 46:   au BufReadCmd   *.txz^I^I^Icall tar#Browse(expand("<amatch>"))
line 47:   au BufReadCmd   *.tar.zst^I^Icall tar#Browse(expand("<amatch>"))
line 48:   au BufReadCmd   *.tzs^I^I^Icall tar#Browse(expand("<amatch>"))
line 49: augroup END
line 50: com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)
line 51: 
line 52: " ---------------------------------------------------------------------
line 53: " Restoration And Modelines: {{{1
line 54: " vim: fdm=marker
line 55: let &cpo= s:keepcpo
line 56: unlet s:keepcpo
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tarPlugin.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tohtml.vim"
line 1: " Vim plugin for converting a syntax highlighted file to HTML.
line 2: " Maintainer: Ben Fritz <fritzophrenic@gmail.com>
line 3: " Last Change: 2019 Nov 13
line 4: "
line 5: " The core of the code is in $VIMRUNTIME/autoload/tohtml.vim and
line 6: " $VIMRUNTIME/syntax/2html.vim
line 7: "
line 8: if exists('g:loaded_2html_plugin')
line 9:   finish
line 10: endif
line 11: let g:loaded_2html_plugin = 'vim8.1_v2'
line 12: 
line 13: "
line 14: " Changelog: {{{
line 15: "   8.1_v2  (this version): - Fix Bitbucket issue #19: fix calculation of tab
line 16: "                             stop position to use in expanding a tab, when that
line 17: "                             tab occurs after a syntax match which in turn
line 18: "                             comes after previously expanded tabs.
line 19: "                           - Set eventignore while splitting a window for the
line 20: "                             destination file to ignore FileType events;
line 21: "                             speeds up processing when the destination file
line 22: "                             already exists and HTML highlight takes too long.
line 23: "                           - Fix Bitbucket issue #20: progress bar could not be
line 24: "                             seen when DiffDelete background color matched
line 25: "                             StatusLine background color. Added TOhtmlProgress
line 26: "                             highlight group for manual user override, but
line 27: "                             calculate it to be visible compared to StatusLine
line 28: "                             by default.
line 29: "                           - Fix Bitbucket issue #1: Remove workaround for old
line 30: "                             browsers which don't support 'ch' CSS unit, since
line 31: "                             all modern browsers, including IE>=9, support it.
line 32: "                           - Fix Bitbucket issue #10: support termguicolors
line 33: "                           - Fix Bitbucket issue #21: default to using
line 34: "                             generated content instead of <input> tags for
line 35: "                             uncopyable text, so that text is correctly
line 36: "                             prevented from being copied in chrome. Use
line 37: "                             g:html_use_input_for_pc option to control the
line 38: "                             method used.
line 39: "                           - Switch to HTML5 to allow using vnu as a validator
line 40: "                             in unit test.
line 41: "                           - Fix fallback sizing of <input> tags for browsers
line 42: "                             without "ch" support.
line 43: "                           - Fix cursor on unselectable diff filler text.
line 44: "   8.1_v1  (Vim 8.1.0528): - Fix Bitbucket issue #6: Don't generate empty
line 45: "                             script tag.
line 46: "                           - Fix Bitbucket issue #5: javascript should
line 47: "                             declare variables with "var".
line 48: "                           - Fix Bitbucket issue #13: errors thrown sourcing
line 49: "                             2html.vim directly when plugins not loaded.
line 50: "                           - Fix Bitbucket issue #16: support 'vartabstop'.
line 51: "
line 52: "   7.4 updates: {{{
line 53: "   7.4_v2  (Vim 7.4.0899): Fix error raised when converting a diff containing
line 54: "                           an empty buffer. Jan Stocker: allow g:html_font to
line 55: "                           take a list so it is easier to specfiy fallback
line 56: "                           fonts in the generated CSS.
line 57: "   7.4_v1  (Vim 7.4.0000): Fix modeline mangling for new "Vim:" format, and
line 58: "^I^I^I    also for version-specific modelines like "vim>703:".
line 59: "}}}
line 60: "
line 61: "   7.3 updates: {{{
line 62: "   7.3_v14 (Vim 7.3.1246): Allow suppressing line number anchors using
line 63: "^I^I^I    g:html_line_ids=0. Allow customizing
line 64: "^I^I^I    important IDs (like line IDs and fold IDs) using
line 65: "^I^I^I    g:html_id_expr evaluated when the buffer conversion
line 66: "^I^I^I    is started.
line 67: "   7.3_v13 (Vim 7.3.1088): Keep foldmethod at manual in the generated file and
line 68: "^I^I^I    insert modeline to set it to manual.
line 69: "^I^I^I    Fix bug: diff mode with 2 unsaved buffers creates a
line 70: "^I^I^I    duplicate of one buffer instead of including both.
line 71: "^I^I^I    Add anchors to each line so you can put '#L123'
line 72: "^I^I^I    or '#123' at the end of the URL to jump to line 123
line 73: "^I^I^I    (idea by Andy Spencer). Add javascript to open folds
line 74: "^I^I^I    to show the anchor being jumped to if it is hidden.
line 75: "^I^I^I    Fix XML validation error: &nsbp; not part of XML.
line 76: "^I^I^I    Allow TOhtml to chain together with other commands
line 77: "^I^I^I    using |.
line 78: "   7.3_v12 (Vim 7.3.0616): Fix modeline mangling to also work for when multiple
line 79: "^I^I^I    highlight groups make up the start-of-modeline text.
line 80: "^I^I^I    Improve render time of page with uncopyable regions
line 81: "^I^I^I    by not using one-input-per-char. Change name of
line 82: "^I^I^I    uncopyable option from html_unselectable to
line 83: "^I^I^I    html_prevent_copy. Added html_no_invalid option and
line 84: "^I^I^I    default to inserting invalid markup for uncopyable
line 85: "^I^I^I    regions to prevent MS Word from pasting undeletable
line 86: "^I^I^I    <input> elements. Fix 'cpo' handling (Thilo Six).
line 87: "^I^I 7.3_v12b1: Add html_unselectable option. Rework logic to
line 88: "^I^I^I    eliminate post-processing substitute commands in
line 89: "^I^I^I    favor of doing the work up front. Remove unnecessary
line 90: "^I^I^I    special treatment of 'LineNr' highlight group. Minor
line 91: "^I^I^I    speed improvements. Fix modeline mangling in
line 92: "^I^I^I    generated output so it works for text in the first
line 93: "^I^I^I    column. Fix missing line number and fold column in
line 94: "^I^I^I    diff filler lines. Fix that some fonts have a 1px
line 95: "^I^I^I    gap (using a dirty hack, improvements welcome). Add
line 96: "^I^I^I    "colorscheme" meta tag. Does NOT include support for
line 97: "^I^I^I    the new default foldtext added in v11, as the patch
line 98: "^I^I^I    adding it has not yet been included in Vim.
line 99: "   7.3_v11 ( unreleased ): Support new default foldtext from patch by Christian
line 100: "^I^I^I    Brabandt in
line 101: "^I^I^I    http://groups.google.com/d/topic/vim_dev/B6FSGfq9VoI/discussion.
line 102: "^I^I^I    This patch has not yet been included in Vim, thus
line 103: "^I^I^I    these changes are removed in the next version.
line 104: "   7.3_v10 (Vim 7.3.0227): Fix error E684 when converting a range wholly inside
line 105: "^I^I^I    multiple nested folds with dynamic folding on.
line 106: "^I^I^I    Also fix problem with foldtext in this situation.
line 107: "   7.3_v9  (Vim 7.3.0170): Add html_pre_wrap option active with html_use_css
line 108: "^I^I^I    and without html_no_pre, default value same as
line 109: "^I^I^I    'wrap' option, (Andy Spencer). Don't use
line 110: "^I^I^I    'fileencoding' for converted document encoding if
line 111: "^I^I^I    'buftype' indicates a special buffer which isn't
line 112: "^I^I^I    written.
line 113: "   7.3_v8  (Vim 7.3.0100): Add html_expand_tabs option to allow leaving tab
line 114: "^I^I^I    characters in generated output (Andy Spencer).
line 115: "^I^I^I    Escape text that looks like a modeline so Vim
line 116: "^I^I^I    doesn't use anything in the converted HTML as a
line 117: "^I^I^I    modeline. Bugfixes: Fix folding when a fold starts
line 118: "^I^I^I    before the conversion range. Remove fold column when
line 119: "^I^I^I    there are no folds.
line 120: "   7.3_v7  (Vim 7-3-0063): see betas released on vim_dev below:
line 121: "^I^I  7.3_v7b3: Fixed bug, convert Unicode to UTF-8 all the way.
line 122: "^I^I  7.3_v7b2: Remove automatic detection of encodings that are not
line 123: "^I^I^I    supported by all major browsers according to
line 124: "^I^I^I    http://wiki.whatwg.org/wiki/Web_Encodings and
line 125: "^I^I^I    convert to UTF-8 for all Unicode encodings. Make
line 126: "^I^I^I    HTML encoding to Vim encoding detection be
line 127: "^I^I^I    case-insensitive for built-in pairs.
line 128: "^I^I  7.3_v7b1: Remove use of setwinvar() function which cannot be
line 129: "^I^I^I    called in restricted mode (Andy Spencer). Use
line 130: "^I^I^I    'fencoding' instead of 'encoding' to determine by
line 131: "^I^I^I    charset, and make sure the 'fenc' of the generated
line 132: "^I^I^I    file matches its indicated charset. Add charsets for
line 133: "^I^I^I    all of Vim's natively supported encodings.
line 134: "   7.3_v6  (Vim 7.3.0000): Really fix bug with 'nowrapscan', 'magic' and other
line 135: "^I^I^I    user settings interfering with diff mode generation,
line 136: "^I^I^I    trailing whitespace (e.g. line number column) when
line 137: "^I^I^I    using html_no_pre, and bugs when using
line 138: "^I^I^I    html_hover_unfold.
line 139: "   7.3_v5  ( unreleased ): Fix bug with 'nowrapscan' and also with out-of-sync
line 140: "^I^I^I    folds in diff mode when first line was folded.
line 141: "   7.3_v4  (Vim 7.3.0000): Bugfixes, especially for xhtml markup, and diff mode
line 142: "   7.3_v3  (Vim 7.3.0000): Refactor option handling and make html_use_css
line 143: "^I^I^I    default to true when not set to anything. Use strict
line 144: "^I^I^I    doctypes where possible. Rename use_xhtml option to
line 145: "^I^I^I    html_use_xhtml for consistency. Use .xhtml extension
line 146: "^I^I^I    when using this option. Add meta tag for settings.
line 147: "   7.3_v2  (Vim 7.3.0000): Fix syntax highlighting in diff mode to use both the
line 148: "^I^I^I    diff colors and the normal syntax colors
line 149: "   7.3_v1  (Vim 7.3.0000): Add conceal support and meta tags in output
line 150: "}}}
line 151: "}}}
line 152: 
line 153: " TODO: {{{
line 154: "   * Check the issue tracker:
line 155: "     https://bitbucket.org/fritzophrenic/vim-tohtml/issues?status=new&status=open
line 156: "   * Options for generating the CSS in external style sheets. New :TOcss
line 157: "     command to convert the current color scheme into a (mostly) generic CSS
line 158: "     stylesheet which can be re-used. Alternate stylesheet support? Good start
line 159: "     by Erik Falor
line 160: "     ( https://groups.google.com/d/topic/vim_use/7XTmC4D22dU/discussion ).
line 161: "   * Add optional argument to :TOhtml command to specify mode (gui, cterm,
line 162: "     term) to use for the styling. Suggestion by "nacitar".
line 163: "   * Add way to override or specify which RGB colors map to the color numbers
line 164: "     in cterm. Get better defaults than just guessing? Suggestion by "nacitar".
line 165: "   * Disable filetype detection until after all processing is done.
line 166: "   * Add option for not generating the hyperlink on stuff that looks like a
line 167: "     URL? Or just color the link to fit with the colorscheme (and only special
line 168: "     when hovering)?
line 169: "   * Bug: Opera does not allow printing more than one page if uncopyable
line 170: "     regions is turned on. Possible solution: Add normal text line numbers with
line 171: "     display:none, set to display:inline for print style sheets, and hide
line 172: "     <input> elements for print, to allow Opera printing multiple pages (and
line 173: "     other uncopyable areas?). May need to make the new text invisible to IE
line 174: "     with conditional comments to prevent copying it, IE for some reason likes
line 175: "     to copy hidden text. Other browsers too?
line 176: "   * Bug: still a 1px gap throughout the fold column when html_prevent_copy is
line 177: "     "fn" in some browsers. Specifically, in Chromium on Ubuntu (but not Chrome
line 178: "     on Windows). Perhaps it is font related?
line 179: "   * Bug: still some gaps in the fold column when html_prevent_copy contains
line 180: "     'd' and showing the whole diff (observed in multiple browsers). Only gaps
line 181: "     on diff lines though.
line 182: "   * Undercurl support via CSS3, with fallback to dotted or something:
line 183: "^Ihttps://groups.google.com/d/topic/vim_use/BzXA6He1pHg/discussion
line 184: "   * Redo updates for modified default foldtext (v11) when/if the patch is
line 185: "     accepted to modify it.
line 186: "   * Test case +diff_one_file-dynamic_folds+expand_tabs-hover_unfold
line 187: "^I^I+ignore_conceal-ignore_folding+no_foldcolumn+no_pre+no_progress
line 188: "^I^I+number_lines-pre_wrap-use_css+use_xhtml+whole_filler.xhtml
line 189: "     does not show the whole diff filler as it is supposed to?
line 190: "   * Bug: when 'isprint' is wrong for the current encoding, will generate
line 191: "     invalid content. Can/should anything be done about this? Maybe a separate
line 192: "     plugin to correct 'isprint' based on encoding?
line 193: "   * Check to see if the windows-125\d encodings actually work in Unix without
line 194: "     the 8bit- prefix. Add prefix to autoload dictionaries for Unix if not.
line 195: "   * Font auto-detection similar to
line 196: "     http://www.vim.org/scripts/script.php?script_id=2384 but for a variety of
line 197: "     platforms.
line 198: "   * Pull in code from http://www.vim.org/scripts/script.php?script_id=3113 :
line 199: "^I- listchars support
line 200: "^I- full-line background highlight
line 201: "^I- other?
line 202: "   * Make it so deleted lines in a diff don't create side-scrolling (get it
line 203: "     free with full-line background highlight above).
line 204: "   * Restore open/closed folds and cursor position after processing each file
line 205: "     with option not to restore for speed increase.
line 206: "   * Add extra meta info (generation time, etc.)?
line 207: "   * Tidy up so we can use strict doctype in even more situations
line 208: "   * Implementation detail: add threshold for writing the lines to the html
line 209: "     buffer before we're done (5000 or so lines should do it)
line 210: "   * TODO comments for code cleanup scattered throughout
line 211: "}}}
line 212: 
line 213: " Define the :TOhtml command when:
line 214: " - 'compatible' is not set
line 215: " - this plugin or user override was not already loaded
line 216: " - user commands are available. {{{
line 217: if !&cp && !exists(":TOhtml") && has("user_commands")
line 218:   command -range=% -bar TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)
line 219: endif "}}}
line 220: 
line 221: " Make sure any patches will probably use consistent indent
line 222: "   vim: ts=8 sw=2 sts=2 noet fdm=marker
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tohtml.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tutor.vim"
line 1: if exists('g:loaded_tutor_mode_plugin') || &compatible
line 2:     finish
line 3: endif
line 4: let g:loaded_tutor_mode_plugin = 1
line 5: 
line 6: command! -nargs=? -complete=custom,tutor#TutorCmdComplete Tutor call tutor#TutorCmd(<q-args>)
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/tutor.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/zipPlugin.vim"
line 1: " zipPlugin.vim: Handles browsing zipfiles
line 2: "            PLUGIN PORTION
line 3: " Date:^I^I^IJan 07, 2020
line 4: " Maintainer:^ICharles E Campbell <NcampObell@SdrPchip.AorgM-NOSPAM>
line 5: " License:^I^IVim License  (see vim's :help license)
line 6: " Copyright:    Copyright (C) 2005-2016 Charles E. Campbell {{{1
line 7: "               Permission is hereby granted to use and distribute this code,
line 8: "               with or without modifications, provided that this copyright
line 9: "               notice is copied with it. Like anything else that's free,
line 10: "               zipPlugin.vim is provided *as is* and comes with no warranty
line 11: "               of any kind, either expressed or implied. By using this
line 12: "               plugin, you agree that in no event will the copyright
line 13: "               holder be liable for any damages resulting from the use
line 14: "               of this software.
line 15: "
line 16: " (James 4:8 WEB) Draw near to God, and he will draw near to you.
line 17: " Cleanse your hands, you sinners; and purify your hearts, you double-minded.
line 18: " ---------------------------------------------------------------------
line 19: " Load Once: {{{1
line 20: if &cp || exists("g:loaded_zipPlugin")
line 21:  finish
line 22: endif
line 23: let g:loaded_zipPlugin = "v32"
line 24: let s:keepcpo          = &cpo
line 25: set cpo&vim
line 26: 
line 27: " ---------------------------------------------------------------------
line 28: " Options: {{{1
line 29: if !exists("g:zipPlugin_ext")
line 30:  let g:zipPlugin_ext='*.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip'
line 31: endif
line 32: 
line 33: " ---------------------------------------------------------------------
line 34: " Public Interface: {{{1
line 35: augroup zip
line 36:  au!
line 37:  au BufReadCmd   zipfile:*^Icall zip#Read(expand("<amatch>"), 1)
line 38:  au FileReadCmd  zipfile:*^Icall zip#Read(expand("<amatch>"), 0)
line 39:  au BufWriteCmd  zipfile:*^Icall zip#Write(expand("<amatch>"))
line 40:  au FileWriteCmd zipfile:*^Icall zip#Write(expand("<amatch>"))
line 41: 
line 42:  if has("unix")
line 43:   au BufReadCmd   zipfile:*/*^Icall zip#Read(expand("<amatch>"), 1)
line 44:   au FileReadCmd  zipfile:*/*^Icall zip#Read(expand("<amatch>"), 0)
line 45:   au BufWriteCmd  zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 46:   au FileWriteCmd zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 47:  endif
line 48: 
line 49:  exe "au BufReadCmd ".g:zipPlugin_ext.' call zip#Browse(expand("<amatch>"))'
line 49: au BufReadCmd *.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip call zip#Browse(expand("<amatch>"))
line 50: augroup END
line 51: 
line 52: " ---------------------------------------------------------------------
line 53: "  Restoration And Modelines: {{{1
line 54: "  vim: fdm=marker
line 55: let &cpo= s:keepcpo
line 56: unlet s:keepcpo
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/zipPlugin.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/plugin/**/*.vim"
Searching for "plugin/**/*.lua" in "/home/thomaseckert/.config/nvim,/home/thomaseckert/.config/nvim/plugged/nvim-treesitter,/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig,/home/thomaseckert/.config/nvim/plugged/mason.nvim,/home/thomaseckert/.config/nvim/plugged/lualine.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons,/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim,/home/thomaseckert/.config/nvim/plugged/plenary.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua,/home/thomaseckert/.config/nvim/plugged/nvim-autopairs,/home/thomaseckert/.config/nvim/plugged/vim-abolish,/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua,/home/thomaseckert/.config/nvim/plugged/fd,/home/thomaseckert/.config/nvim/plugged/telescope.nvim,/home/thomaseckert/.config/nvim/plugged/hologram.nvim,/home/thomaseckert/.config/nvim/plugged/guihua.lua,/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim,/home/thomaseckert/.config/nvim/plugged/nvim-cmp,/home/thomaseckert/.config/nvim/plugged/cmp-nvim
Searching for "/home/thomaseckert/.config/nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin/nvim-treesitter.lua"
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdate lua require'nvim-treesitter.install'.commands.TSUpdate['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstall lua require'nvim-treesitter.install'.commands.TSInstall['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdateSync lua require'nvim-treesitter.install'.commands.TSUpdateSync['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#installed_parsers TSUninstall lua require'nvim-treesitter.install'.commands.TSUninstall['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallFromGrammar lua require'nvim-treesitter.install'.commands.TSInstallFromGrammar['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallSync lua require'nvim-treesitter.install'.commands.TSInstallSync['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=0 TSInstallInfo lua require'nvim-treesitter.info'.commands.TSInstallInfo['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=? -complete=custom,nvim_treesitter#available_modules TSModuleInfo lua require'nvim-treesitter.info'.commands.TSModuleInfo['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufEnable lua require'nvim-treesitter.configs'.commands.TSBufEnable['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufDisable lua require'nvim-treesitter.configs'.commands.TSBufDisable['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufToggle lua require'nvim-treesitter.configs'.commands.TSBufToggle['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSEnable lua require'nvim-treesitter.configs'.commands.TSEnable['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSDisable lua require'nvim-treesitter.configs'.commands.TSDisable['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSToggle lua require'nvim-treesitter.configs'.commands.TSToggle['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=0 TSConfigInfo lua require'nvim-treesitter.configs'.commands.TSConfigInfo['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQuery lua require'nvim-treesitter.configs'.commands.TSEditQuery['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQueryUserAfter lua require'nvim-treesitter.configs'.commands.TSEditQueryUserAfter['run<bang>'](<f-args>)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/lua/nvim-treesitter)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-treesitter/plugin/nvim-treesitter.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin/telescope.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/plugged/telescope.nvim/plugin/telescope.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin/cmp.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: doautocmd <nomodeline> User CmpReady
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-cmp/plugin/cmp.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin/nvim-rooter.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/plugin/nvim-rooter.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/plugin/**/*.lua"
Searching for "/etc/xdg/nvim/plugin/**/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/plugin/**/*.lua"
Searching for "/usr/local/share/nvim/site/plugin/**/*.lua"
Searching for "/usr/share/nvim/site/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/plugin/**/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/plugin/**/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/plugin/**/*.lua"
Searching for "pack/*/start/*" in "/home/thomaseckert/.config/nvim,/etc/xdg/nvim,/home/thomaseckert/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/thomaseckert/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/thomaseckert/.config/nvim/after"
Searching for "/home/thomaseckert/.config/nvim/pack/*/start/*"
Searching for "/etc/xdg/nvim/pack/*/start/*"
Searching for "/home/thomaseckert/.local/share/nvim/site/pack/*/start/*"
Searching for "/usr/local/share/nvim/site/pack/*/start/*"
Searching for "/usr/share/nvim/site/pack/*/start/*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/*/start/*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/pack/*/start/*"
Searching for "/usr/share/nvim/site/after/pack/*/start/*"
Searching for "/usr/local/share/nvim/site/after/pack/*/start/*"
Searching for "/home/thomaseckert/.local/share/nvim/site/after/pack/*/start/*"
Searching for "/etc/xdg/nvim/after/pack/*/start/*"
Searching for "/home/thomaseckert/.config/nvim/after/pack/*/start/*"
not found in 'packpath': "pack/*/start/*"
Searching for "start/*" in "/home/thomaseckert/.config/nvim,/etc/xdg/nvim,/home/thomaseckert/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime,/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/thomaseckert/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/thomaseckert/.config/nvim/after"
Searching for "/home/thomaseckert/.config/nvim/start/*"
Searching for "/etc/xdg/nvim/start/*"
Searching for "/home/thomaseckert/.local/share/nvim/site/start/*"
Searching for "/usr/local/share/nvim/site/start/*"
Searching for "/usr/share/nvim/site/start/*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/start/*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/lib/nvim/start/*"
Searching for "/usr/share/nvim/site/after/start/*"
Searching for "/usr/local/share/nvim/site/after/start/*"
Searching for "/home/thomaseckert/.local/share/nvim/site/after/start/*"
Searching for "/etc/xdg/nvim/after/start/*"
Searching for "/home/thomaseckert/.config/nvim/after/start/*"
not found in 'packpath': "start/*"
Searching for "plugin/**/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/**/*.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/tabular/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim"
line 1: " Copyright (c) 2016, Matthew J. Wozniski
line 2: " All rights reserved.
line 3: "
line 4: " Redistribution and use in source and binary forms, with or without
line 5: " modification, are permitted provided that the following conditions are met:
line 6: "     * Redistributions of source code must retain the above copyright notice,
line 7: "       this list of conditions and the following disclaimer.
line 8: "     * Redistributions in binary form must reproduce the above copyright
line 9: "       notice, this list of conditions and the following disclaimer in the
line 10: "       documentation and/or other materials provided with the distribution.
line 11: "     * The names of the contributors may not be used to endorse or promote
line 12: "       products derived from this software without specific prior written
line 13: "       permission.
line 14: "
line 15: " THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY EXPRESS
line 16: " OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
line 17: " OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
line 18: " NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT,
line 19: " INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
line 20: " LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
line 21: " OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
line 22: " LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
line 23: " NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
line 24: " EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
line 25: 
line 26: if !exists(':Tabularize') || get(g:, 'no_default_tabular_maps', 0)
line 27:   finish " Tabular.vim wasn't loaded or the default maps are unwanted
line 28: endif
line 29: 
line 30: let s:save_cpo = &cpo
line 31: set cpo&vim
line 32: 
line 33: AddTabularPattern!  assignment      /[|&+*/%<>=!~-]\@<!\([<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=/l1r1
line 33: call AddTabularPattern("assignment      /[|&+*/%<>=!~-]\\@<!\\([<>!=]=\\|=\\~\\)\\@![|&+*/%<>=!~-]*=/l1r1", !0)
calling function AddTabularPattern('assignment      /[|&+*/%<>=!~-]\@<!\([<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=/l1r1', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('assignment      /[|&+*/%<>=!~-]\@<!\([<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=/l1r1')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{}, 'assignment      /[|&+*/%<>=!~-]\...<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=/l1r1']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/[|&+*/%<>=!~-]\@<!\([<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=/l1r1')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
Searching for "autoload/tabular.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/tabular.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/tabular.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/tabular/autoload)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 5: sourcing "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/tabular.vim"
line 1: " Tabular:     Align columnar data using regex-designated column boundaries
line 2: " Maintainer:  Matthew Wozniski (godlygeek@gmail.com)
line 3: " Date:        Thu, 03 May 2012 20:49:32 -0400
line 4: " Version:     1.0
line 5: "
line 6: " Long Description:
line 7: " Sometimes, it's useful to line up text.  Naturally, it's nicer to have the
line 8: " computer do this for you, since aligning things by hand quickly becomes
line 9: " unpleasant.  While there are other plugins for aligning text, the ones I've
line 10: " tried are either impossibly difficult to understand and use, or too simplistic
line 11: " to handle complicated tasks.  This plugin aims to make the easy things easy
line 12: " and the hard things possible, without providing an unnecessarily obtuse
line 13: " interface.  It's still a work in progress, and criticisms are welcome.
line 14: "
line 15: " License:
line 16: " Copyright (c) 2012, Matthew J. Wozniski
line 17: " All rights reserved.
line 18: "
line 19: " Redistribution and use in source and binary forms, with or without
line 20: " modification, are permitted provided that the following conditions are met:
line 21: "     * Redistributions of source code must retain the above copyright notice,
line 22: "       this list of conditions and the following disclaimer.
line 23: "     * Redistributions in binary form must reproduce the above copyright
line 24: "       notice, this list of conditions and the following disclaimer in the
line 25: "       documentation and/or other materials provided with the distribution.
line 26: "     * The names of the contributors may not be used to endorse or promote
line 27: "       products derived from this software without specific prior written
line 28: "       permission.
line 29: "
line 30: " THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY EXPRESS
line 31: " OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
line 32: " OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
line 33: " NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT,
line 34: " INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
line 35: " LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
line 36: " OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
line 37: " LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
line 38: " NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
line 39: " EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
line 40: 
line 41: " Stupid vimscript crap                                                   {{{1
line 42: let s:savecpo = &cpo
line 43: set cpo&vim
line 44: 
line 45: " Private Functions                                                       {{{1
line 46: 
line 47: " Return the number of bytes in a string after expanding tabs to spaces.  {{{2
line 48: " This expansion is done based on the current value of 'tabstop'
line 49: if exists('*strdisplaywidth')
line 50:   " Needs vim 7.3
line 51:   let s:Strlen = function("strdisplaywidth")
line 52: else
line 53:   function! s:Strlen(string)
line 72: endif
line 73: 
line 74: " Align a string within a field                                           {{{2
line 75: " These functions do not trim leading and trailing spaces.
line 76: 
line 77: " Right align 'string' in a field of size 'fieldwidth'
line 78: function! s:Right(string, fieldwidth)
line 82: 
line 83: " Left align 'string' in a field of size 'fieldwidth'
line 84: function! s:Left(string, fieldwidth)
line 88: 
line 89: " Center align 'string' in a field of size 'fieldwidth'
line 90: function! s:Center(string, fieldwidth)
line 96: 
line 97: " Remove spaces around a string                                           {{{2
line 98: 
line 99: " Remove all trailing spaces from a string.
line 100: function! s:StripTrailingSpaces(string)
line 103: 
line 104: " Remove all leading spaces from a string.
line 105: function! s:StripLeadingSpaces(string)
line 108: 
line 109: " Split a string into fields and delimiters                               {{{2
line 110: " Like split(), but include the delimiters as elements
line 111: " All odd numbered elements are delimiters
line 112: " All even numbered elements are non-delimiters (including zero)
line 113: function! s:SplitDelim(string, delim)
line 151: 
line 152: " Replace lines from `start' to `start + len - 1' with the given strings. {{{2
line 153: " If more lines are needed to show all strings, they will be added.
line 154: " If there are too few strings to fill all lines, lines will be removed.
line 155: function! s:SetLines(start, len, strings)
line 176: 
line 177: " Runs the given commandstring argument as an expression.                 {{{2
line 178: " The commandstring expression is expected to reference the a:lines argument.
line 179: " If the commandstring expression returns a list the items of that list will
line 180: " replace the items in a:lines, otherwise the expression is assumed to have
line 181: " modified a:lines itself.
line 182: function! s:FilterString(lines, commandstring)
line 190: 
line 191: " Public API                                                              {{{1
line 192: 
line 193: if !exists("g:tabular_default_format")
line 194:   let g:tabular_default_format = "l1"
line 195: endif
line 196: 
line 197: let s:formatelempat = '\%([lrc]\d\+\)'
line 198: 
line 199: function! tabular#ElementFormatPattern()
line 202: 
line 203: " Given a list of strings and a delimiter, split each string on every
line 204: " occurrence of the delimiter pattern, format each element according to either
line 205: " the provided format (optional) or the default format, and join them back
line 206: " together with enough space padding to guarantee that the nth delimiter of
line 207: " each string is aligned.
line 208: function! tabular#TabularizeStrings(strings, delim, ...)
line 289: 
line 290: " Apply 0 or more filters, in sequence, to selected text in the buffer    {{{2
line 291: " The lines to be filtered are determined as follows:
line 292: "   If the function is called with a range containing multiple lines, then
line 293: "     those lines will be used as the range.
line 294: "   If the function is called with no range or with a range of 1 line, then
line 295: "     if GTabularize mode is being used,
line 296: "       the range will not be adjusted
line 297: "     if "includepat" is not specified,
line 298: "       that 1 line will be filtered,
line 299: "     if "includepat" is specified and that line does not match it,
line 300: "       no lines will be filtered
line 301: "     if "includepat" is specified and that line does match it,
line 302: "       all contiguous lines above and below the specified line matching the
line 303: "       pattern will be filtered.
line 304: "
line 305: " The remaining arguments must each be a filter to apply to the text.
line 306: " Each filter must either be a String evaluating to a function to be called.
line 307: function! tabular#PipeRange(includepat, ...) range
line 311: 
line 312: " Extended version of tabular#PipeRange, which
line 313: " 1) Takes the list of filters as an explicit list rather than as varargs
line 314: " 2) Supports passing a dictionary of options to control the routine.
line 315: "    Currently, the only supported option is 'mode', which determines whether
line 316: "    to behave as :Tabularize or as :GTabularize
line 317: " This allows me to add new features here without breaking API compatibility
line 318: " in the future.
line 319: function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range
line 354: 
line 355: " Part of the public interface so interested pipelines can query this and
line 356: " adjust their behavior appropriately.
line 357: function! tabular#DoGTabularize()
line 360: 
line 361: function! s:SplitDelimTest(string, delim, expected)
line 371: 
line 372: function! tabular#SplitDelimUnitTest()
line 404: 
line 405: " Stupid vimscript crap, part 2                                           {{{1
line 406: let &cpo = s:savecpo
line 407: unlet s:savecpo
line 408: 
line 409: " vim:set sw=2 sts=2 fdm=marker:
finished sourcing /home/thomaseckert/.config/nvim/plugged/tabular/autoload/tabular.vim
continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning ['[|&+*/%<>=!~-]\@<!\([<>!=]=\|=\~\)\@![|&+*/%<>=!~-]*=', 'l1r1']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 34: AddTabularPattern!  two_spaces      /  /l0
line 34: call AddTabularPattern("two_spaces      /  /l0", !0)
calling function AddTabularPattern('two_spaces      /  /l0', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('two_spaces      /  /l0')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>...'l1r1'')']}}, 'two_spaces      /  /l0']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/  /l0')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning ['  ', 'l0']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 35: 
line 36: AddTabularPipeline! multiple_spaces /  / map(a:lines, "substitute(v:val, '   *', '  ', 'g')") | tabular#TabularizeStrings(a:lines, '  ', 'l0')
line 36: call AddTabularPipeline("multiple_spaces /  / map(a:lines, \"substitute(v:val, '   *', '  ', 'g')\") | tabular#TabularizeStrings(a:lines, '  ', 'l0')", !0)
calling function AddTabularPipeline('multiple_spaces /  / map(a:lines, "su...larizeStrings(a:lines, ''  '', ''l0'')', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap('multiple_spaces /  / map(a:lines, "su...larizeStrings(a:lines, ''  '', ''l0'')')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>...arizeStrings(a:lines, ''  '', ''l0'')']

continuing in function AddTabularPipeline

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let commands = matchstr(pattern, '^/.\{-}\\\@<!\%(\\\\\)\{-}/\zs.*')
line 8:     let pattern = matchstr(pattern, '/\zs.\{-}\\\@<!\%(\\\\\)\{-}\ze/')
line 9: 
line 10:     if empty(name) || empty(pattern)
line 11:       throw "Invalid arguments!"
line 12:     endif
line 13: 
line 14:     if !a:force && has_key(commandmap, name)
line 15:       throw string(name) . " is already defined, use ! to overwrite."
line 16:     endif
line 17: 
line 18:     let commandlist = s:SplitCommands(commands)
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands(' map(a:lines, "substitute(v:val, ''  ...larizeStrings(a:lines, ''  '', ''l0'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands(' tabular#TabularizeStrings(a:lines, ''  '', ''l0'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands returning [' tabular#TabularizeStrings(a:lines, ''  '', ''l0'')']

continuing in function AddTabularPipeline[18]..<SNR>84_SplitCommands

line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands returning [' map(a:lines, "substitute(v:val, '' ...arizeStrings(a:lines, ''  '', ''l0'')']

continuing in function AddTabularPipeline

line 19: 
line 20:     if empty(commandlist)
line 21:       throw "Must provide a list of functions!"
line 22:     endif
line 23: 
line 24:     let commandmap[name] = { 'pattern' : pattern, 'commands' : commandlist }
line 25:   catch
line 26:     echohl ErrorMsg
line 27:     echomsg "AddTabularPipeline: " . v:exception
line 28:     echohl None
line 29:   endtry
function AddTabularPipeline returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 37: AddTabularPipeline! spaces          / /  map(a:lines, "substitute(v:val, '  *' , ' ' , 'g')") | tabular#TabularizeStrings(a:lines, ' ' , 'l0')
line 37: call AddTabularPipeline("spaces          / /  map(a:lines, \"substitute(v:val, '  *' , ' ' , 'g')\") | tabular#TabularizeStrings(a:lines, ' ' , 'l0')", !0)
calling function AddTabularPipeline('spaces          / /  map(a:lines, "su...larizeStrings(a:lines, '' '' , ''l0'')', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap('spaces          / /  map(a:lines, "su...larizeStrings(a:lines, '' '' , ''l0'')')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>...arizeStrings(a:lines, '' '' , ''l0'')']

continuing in function AddTabularPipeline

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let commands = matchstr(pattern, '^/.\{-}\\\@<!\%(\\\\\)\{-}/\zs.*')
line 8:     let pattern = matchstr(pattern, '/\zs.\{-}\\\@<!\%(\\\\\)\{-}\ze/')
line 9: 
line 10:     if empty(name) || empty(pattern)
line 11:       throw "Invalid arguments!"
line 12:     endif
line 13: 
line 14:     if !a:force && has_key(commandmap, name)
line 15:       throw string(name) . " is already defined, use ! to overwrite."
line 16:     endif
line 17: 
line 18:     let commandlist = s:SplitCommands(commands)
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands('  map(a:lines, "substitute(v:val, '' ...larizeStrings(a:lines, '' '' , ''l0'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands(' tabular#TabularizeStrings(a:lines, '' '' , ''l0'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands returning [' tabular#TabularizeStrings(a:lines, '' '' , ''l0'')']

continuing in function AddTabularPipeline[18]..<SNR>84_SplitCommands

line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands returning ['  map(a:lines, "substitute(v:val, ''...arizeStrings(a:lines, '' '' , ''l0'')']

continuing in function AddTabularPipeline

line 19: 
line 20:     if empty(commandlist)
line 21:       throw "Must provide a list of functions!"
line 22:     endif
line 23: 
line 24:     let commandmap[name] = { 'pattern' : pattern, 'commands' : commandlist }
line 25:   catch
line 26:     echohl ErrorMsg
line 27:     echomsg "AddTabularPipeline: " . v:exception
line 28:     echohl None
line 29:   endtry
function AddTabularPipeline returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 38: 
line 39: AddTabularPipeline! argument_list   /(.*)/ map(a:lines, 'substitute(v:val, ''\s*\([(,)]\)\s*'', ''\1'', ''g'')') | tabular#TabularizeStrings(a:lines, '[(,)]', 'l0') | map(a:lines, 'substitute(v:val, ''\(\s*\),'', '',\1 '', "g")') | map(a:lines, 'substitute(v:val, ''\s*)'', ")", "g")')
line 39: call AddTabularPipeline("argument_list   /(.*)/ map(a:lines, 'substitute(v:val, ''\\s*\\([(,)]\\)\\s*'', ''\\1'', ''g'')') | tabular#TabularizeStrings(a:lines, '[(,)]', 'l0') | map(a:lines, 'substitute(v:val, ''\\(\\s*\\),'', '',\\1 '', \"g\")') | map(a:lines, 'substitute(v:val, ''\\s*)'', \")\", \"g\")')", !0)
calling function AddTabularPipeline('argument_list   /(.*)/ map(a:lines, '...tute(v:val, ''''\s*)'''', ")", "g")'')', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap('argument_list   /(.*)/ map(a:lines, '...tute(v:val, ''''\s*)'''', ")", "g")'')')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>...ute(v:val, ''''\s*)'''', ")", "g")'')']

continuing in function AddTabularPipeline

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let commands = matchstr(pattern, '^/.\{-}\\\@<!\%(\\\\\)\{-}/\zs.*')
line 8:     let pattern = matchstr(pattern, '/\zs.\{-}\\\@<!\%(\\\\\)\{-}\ze/')
line 9: 
line 10:     if empty(name) || empty(pattern)
line 11:       throw "Invalid arguments!"
line 12:     endif
line 13: 
line 14:     if !a:force && has_key(commandmap, name)
line 15:       throw string(name) . " is already defined, use ! to overwrite."
line 16:     endif
line 17: 
line 18:     let commandlist = s:SplitCommands(commands)
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands(' map(a:lines, ''substitute(v:val, '''...tute(v:val, ''''\s*)'''', ")", "g")'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands(' tabular#TabularizeStrings(a:lines, '...tute(v:val, ''''\s*)'''', ")", "g")'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands(' map(a:lines, ''substitute(v:val, '''...tute(v:val, ''''\s*)'''', ")", "g")'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands(' map(a:lines, ''substitute(v:val, ''''\s*)'''', ")", "g")'')')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands returning [' map(a:lines, ''substitute(v:val, ''''\s*)'''', ")", "g")'')']

continuing in function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands

line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands returning [' map(a:lines, ''substitute(v:val, ''...ute(v:val, ''''\s*)'''', ")", "g")'')']

continuing in function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands

line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands[35]..<SNR>84_SplitCommands returning [' tabular#TabularizeStrings(a:lines, ...ute(v:val, ''''\s*)'''', ")", "g")'')']

continuing in function AddTabularPipeline[18]..<SNR>84_SplitCommands

line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands returning [' map(a:lines, ''substitute(v:val, ''...ute(v:val, ''''\s*)'''', ")", "g")'')']

continuing in function AddTabularPipeline

line 19: 
line 20:     if empty(commandlist)
line 21:       throw "Must provide a list of functions!"
line 22:     endif
line 23: 
line 24:     let commandmap[name] = { 'pattern' : pattern, 'commands' : commandlist }
line 25:   catch
line 26:     echohl ErrorMsg
line 27:     echomsg "AddTabularPipeline: " . v:exception
line 28:     echohl None
line 29:   endtry
function AddTabularPipeline returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 43: 
line 44: function! SplitCDeclarations(lines)
line 62: 
line 63: AddTabularPipeline! split_declarations /,.*;/ SplitCDeclarations(a:lines)
line 63: call AddTabularPipeline("split_declarations /,.*;/ SplitCDeclarations(a:lines)", !0)
calling function AddTabularPipeline('split_declarations /,.*;/ SplitCDeclarations(a:lines)', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap('split_declarations /,.*;/ SplitCDeclarations(a:lines)')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPipeline[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>...ns /,.*;/ SplitCDeclarations(a:lines)']

continuing in function AddTabularPipeline

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let commands = matchstr(pattern, '^/.\{-}\\\@<!\%(\\\\\)\{-}/\zs.*')
line 8:     let pattern = matchstr(pattern, '/\zs.\{-}\\\@<!\%(\\\\\)\{-}\ze/')
line 9: 
line 10:     if empty(name) || empty(pattern)
line 11:       throw "Invalid arguments!"
line 12:     endif
line 13: 
line 14:     if !a:force && has_key(commandmap, name)
line 15:       throw string(name) . " is already defined, use ! to overwrite."
line 16:     endif
line 17: 
line 18:     let commandlist = s:SplitCommands(commands)
calling function AddTabularPipeline[18]..<SNR>84_SplitCommands(' SplitCDeclarations(a:lines)')

line 1:   if a:string =~ '^\s*$'
line 2:     return []
line 3:   endif
line 4: 
line 5:   let end = match(a:string, "[\"'|]")
line 6: 
line 7:   " Loop until we find a delimiting | or end-of-string
line 8:   while end != -1 && (a:string[end] != '|' || a:string[end+1] == '|')
line 9:     if a:string[end] == "'"
line 10:       let end = match(a:string, "'", end+1) + 1
line 11:       if end == 0
line 12:         throw "No matching end single quote"
line 13:       endif
line 14:     elseif a:string[end] == '"'
line 15:       " Find a " preceded by an even number of \ (or 0)
line 16:       let pattern = '\%(\\\@<!\%(\\\\\)*\)\@<="'
line 17:       let end = matchend(a:string, pattern, end+1) + 1
line 18:       if end == 0
line 19:         throw "No matching end double quote"
line 20:       endif
line 21:     else " Found ||
line 22:       let end += 2
line 23:     endif
line 24: 
line 25:     let end = match(a:string, "[\"'|]", end)
line 26:   endwhile
line 27: 
line 28:   if end == 0 || a:string[0 : end - (end > 0)] =~ '^\s*$'
line 29:     throw "Empty element"
line 30:   endif
line 31: 
line 32:   if end == -1
line 33:     let rv = [ a:string ]
line 34:   else
line 35:     let rv = [ a:string[0 : end-1] ] + s:SplitCommands(a:string[end+1 : -1])
line 36:   endif
line 37: 
line 38:   return rv
function AddTabularPipeline[18]..<SNR>84_SplitCommands returning [' SplitCDeclarations(a:lines)']

continuing in function AddTabularPipeline

line 19: 
line 20:     if empty(commandlist)
line 21:       throw "Must provide a list of functions!"
line 22:     endif
line 23: 
line 24:     let commandmap[name] = { 'pattern' : pattern, 'commands' : commandlist }
line 25:   catch
line 26:     echohl ErrorMsg
line 27:     echomsg "AddTabularPipeline: " . v:exception
line 28:     echohl None
line 29:   endtry
function AddTabularPipeline returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 64: 
line 65: AddTabularPattern! ternary_operator /^.\{-}\zs?\|:/l1
line 65: call AddTabularPattern("ternary_operator /^.\\{-}\\zs?\\|:/l1", !0)
calling function AddTabularPattern('ternary_operator /^.\{-}\zs?\|:/l1', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('ternary_operator /^.\{-}\zs?\|:/l1')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{'assignment': {'pattern': '[|&+*/%<>..., 'ternary_operator /^.\{-}\zs?\|:/l1']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/^.\{-}\zs?\|:/l1')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning ['^.\{-}\zs?\|:', 'l1']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 66: 
line 67: AddTabularPattern! cpp_io /<<\|>>/l1
line 67: call AddTabularPattern("cpp_io /<<\\|>>/l1", !0)
calling function AddTabularPattern('cpp_io /<<\|>>/l1', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('cpp_io /<<\|>>/l1')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{'ternary_operator': {'pattern': '^.\...ions(a:lines)']}}, 'cpp_io /<<\|>>/l1']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/<<\|>>/l1')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning ['<<\|>>', 'l1']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 68: 
line 69: AddTabularPattern! pascal_assign /:=/l1
line 69: call AddTabularPattern("pascal_assign /:=/l1", !0)
calling function AddTabularPattern('pascal_assign /:=/l1', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('pascal_assign /:=/l1')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{'ternary_operator': {'pattern': '^.\...s(a:lines)']}}, 'pascal_assign /:=/l1']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/:=/l1')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning [':=', 'l1']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 70: 
line 71: AddTabularPattern! trailing_c_comments /\/\*\|\*\/\|\/\//l1
line 71: call AddTabularPattern("trailing_c_comments /\\/\\*\\|\\*\\/\\|\\/\\//l1", !0)
calling function AddTabularPattern('trailing_c_comments /\/\*\|\*\/\|\/\//l1', 1)

line 1:   try
line 2:     let [ commandmap, rest ] = s:ChooseCommandMap(a:command)
calling function AddTabularPattern[2]..<SNR>84_ChooseCommandMap('trailing_c_comments /\/\*\|\*\/\|\/\//l1')

line 1:   let map = s:TabularCommands
line 2:   let cmd = a:commandline
line 3: 
line 4:   if cmd =~# '^<buffer>\s\+'
line 5:     if !exists('b:TabularCommands')
line 6:       let b:TabularCommands = {}
line 7:     endif
line 8:     let map = b:TabularCommands
line 9:     let cmd = substitute(cmd, '^<buffer>\s\+', '', '')
line 10:   endif
line 11: 
line 12:   return [ map, cmd ]
function AddTabularPattern[2]..<SNR>84_ChooseCommandMap returning [{'ternary_operator': {'pattern': '^.\...iling_c_comments /\/\*\|\*\/\|\/\//l1']

continuing in function AddTabularPattern

line 3: 
line 4:     let name = matchstr(rest, '.\{-}\ze\s*/')
line 5:     let pattern = substitute(rest, '.\{-}\s*\ze/', '', '')
line 6: 
line 7:     let [ pattern, format ] = s:ParsePattern(pattern)
calling function AddTabularPattern[7]..<SNR>84_ParsePattern('/\/\*\|\*\/\|\/\//l1')

line 1:   if a:string[0] != '/'
line 2:     return ['','']
line 3:   endif
line 4: 
line 5:   let pat = '\\\@<!\%(\\\\\)\{-}\zs/' . tabular#ElementFormatPattern() . '*$'
calling function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern()

line 1:   return s:formatelempat
function AddTabularPattern[7]..<SNR>84_ParsePattern[5]..tabular#ElementFormatPattern returning '\%([lrc]\d\+\)'

continuing in function AddTabularPattern[7]..<SNR>84_ParsePattern

line 6:   let format = matchstr(a:string[1:-1], pat)
line 7:   if !empty(format)
line 8:     let format = format[1 : -1]
line 9:     let pattern = a:string[1 : -len(format) - 2]
line 10:   else
line 11:     let pattern = a:string[1 : -1]
line 12:   endif
line 13: 
line 14:   return [pattern, format]
function AddTabularPattern[7]..<SNR>84_ParsePattern returning ['\/\*\|\*\/\|\/\/', 'l1']

continuing in function AddTabularPattern

line 8: 
line 9:     if empty(name) || empty(pattern)
line 10:       throw "Invalid arguments!"
line 11:     endif
line 12: 
line 13:     if !a:force && has_key(commandmap, name)
line 14:       throw string(name) . " is already defined, use ! to overwrite."
line 15:     endif
line 16: 
line 17:     let command = "tabular#TabularizeStrings(a:lines, " . string(pattern)
line 18: 
line 19:     if !empty(format)
line 20:       let command .=  ", " . string(format)
line 21:     endif
line 22: 
line 23:     let command .= ")"
line 24: 
line 25:     let commandmap[name] = { 'pattern' : pattern, 'commands' : [ command ] }
line 26:   catch
line 27:     echohl ErrorMsg
line 28:     echomsg "AddTabularPattern: " . v:exception
line 29:     echohl None
line 30:   endtry
function AddTabularPattern returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim

line 72: 
line 73: let &cpo = s:save_cpo
line 74: unlet s:save_cpo
finished sourcing /home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/TabularMaps.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/plugin/**/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/plugin/**/*.vim"
Searching for "plugin/**/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua"
Executing:     augroup cmp_nvim_lsp
Executing:       autocmd!
Executing:       autocmd InsertEnter * lua require'cmp_nvim_lsp'._on_insert_enter()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:     augroup END
Executing:   
finished sourcing /home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/plugin/cmp_buffer.lua"
finished sourcing /home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/plugin/cmp_buffer.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-path/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/plugin/cmp_path.lua"
finished sourcing /home/thomaseckert/.config/nvim/plugged/cmp-path/after/plugin/cmp_path.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/plugin/cmp_cmdline.lua"
finished sourcing /home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/plugin/cmp_cmdline.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin/**/*.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin/cmp_luasnip.lua"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
finished sourcing /home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/plugin/cmp_luasnip.lua
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/plugin/**/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/plugin/**/*.lua"
Reading ShaDa file "/home/thomaseckert/.local/share/nvim/shada/main.shada" info marks oldfiles
Executing BufWinEnter Autocommands for "*"
autocommand if &ft == "" && expand("<afile>:e") == "" | call s:Observe() | endif

Executing: if &ft == "" && expand("<afile>:e") == "" | call s:Observe() | endif
Executing:  call s:Observe() | endif
calling function <SNR>20_Observe()

line 1:   augroup polyglot-observer
line 2:     au!
line 3:     au CursorHold,CursorHoldI <buffer> if (&ft == "" || &ft == "conf") | call s:PolyglotObserve(s:detect_func) | endif
line 4:   augroup END
function <SNR>20_Observe returning #0

continuing in BufWinEnter Autocommands for "*"

Executing:  endif
Executing BufWinEnter Autocommands for "*"
autocommand lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
Executing BufEnter Autocommands for "*"
autocommand call s:detect_indent()

Executing: call s:detect_indent()
calling function <SNR>20_detect_indent()

line 1:     if &buftype ==# 'help'
line 2:       return
line 3:     endif
line 4: 
line 5:     " Do not autodetect indent if language or user sets it
line 6:     if &l:shiftwidth != s:default_shiftwidth
line 7:       return
line 8:     endif
line 9: 
line 10:     let b:sleuth_culprit = expand("<afile>:p")
line 11:     if s:guess(getline(1, 128))
calling function <SNR>20_detect_indent[11]..<SNR>20_guess([''])

line 1:     let options = {}
line 2:     let ccomment = 0
line 3:     let podcomment = 0
line 4:     let triplequote = 0
line 5:     let backtick = 0
line 6:     let xmlcomment = 0
line 7:     let heredoc = ''
line 8:     let minindent = 10
line 9:     let spaces_minus_tabs = 0
line 10:     let lineno = 0
line 11:     let stack = [0]
line 12:     let indents = { '2': 0, '3': 0, '4': 0, '6': 0, '8': 0 }
line 13: 
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 108: 
line 109:     if spaces_minus_tabs < 0
line 110:       setlocal noexpandtab
line 111:       let &l:shiftwidth=&tabstop
line 112:       return 1
line 113:     endif
line 114: 
line 115:     let shiftwidth = s:get_shiftwidth(indents)
calling function <SNR>20_detect_indent[11]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth({'2': 0, '3': 0, '4': 0, '6': 0, '8': 0})

line 1:     let shiftwidth = 0
line 2:     let max_count = 0
line 3:     let final_counts = {}
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 19:     return shiftwidth
function <SNR>20_detect_indent[11]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth returning #0

continuing in function <SNR>20_detect_indent[11]..<SNR>20_guess

line 116: 
line 117:     if shiftwidth > 0
line 118:       setlocal expandtab
line 119:       let &l:shiftwidth=shiftwidth
line 120:       try
line 121:         " Sunchronize tabstop with shiftwidth
line 122:         let &l:softtabstop = -1
line 123:       catch /^Vim\%((\a\+)\)\=:E487/
line 124:         " -1 was not supported before Vim 7.4
line 125:         let &l:softtabstop = a:num_spaces
line 126:       endtry
line 127:       return 1
line 128:     endif
line 129: 
line 130:     return 0
function <SNR>20_detect_indent[11]..<SNR>20_guess returning #0

continuing in function <SNR>20_detect_indent

line 12:       return
line 13:     endif
line 14:     if s:guess(getline(1, 1024))
calling function <SNR>20_detect_indent[14]..<SNR>20_guess([''])

line 1:     let options = {}
line 2:     let ccomment = 0
line 3:     let podcomment = 0
line 4:     let triplequote = 0
line 5:     let backtick = 0
line 6:     let xmlcomment = 0
line 7:     let heredoc = ''
line 8:     let minindent = 10
line 9:     let spaces_minus_tabs = 0
line 10:     let lineno = 0
line 11:     let stack = [0]
line 12:     let indents = { '2': 0, '3': 0, '4': 0, '6': 0, '8': 0 }
line 13: 
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 108: 
line 109:     if spaces_minus_tabs < 0
line 110:       setlocal noexpandtab
line 111:       let &l:shiftwidth=&tabstop
line 112:       return 1
line 113:     endif
line 114: 
line 115:     let shiftwidth = s:get_shiftwidth(indents)
calling function <SNR>20_detect_indent[14]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth({'2': 0, '3': 0, '4': 0, '6': 0, '8': 0})

line 1:     let shiftwidth = 0
line 2:     let max_count = 0
line 3:     let final_counts = {}
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 19:     return shiftwidth
function <SNR>20_detect_indent[14]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth returning #0

continuing in function <SNR>20_detect_indent[14]..<SNR>20_guess

line 116: 
line 117:     if shiftwidth > 0
line 118:       setlocal expandtab
line 119:       let &l:shiftwidth=shiftwidth
line 120:       try
line 121:         " Sunchronize tabstop with shiftwidth
line 122:         let &l:softtabstop = -1
line 123:       catch /^Vim\%((\a\+)\)\=:E487/
line 124:         " -1 was not supported before Vim 7.4
line 125:         let &l:softtabstop = a:num_spaces
line 126:       endtry
line 127:       return 1
line 128:     endif
line 129: 
line 130:     return 0
function <SNR>20_detect_indent[14]..<SNR>20_guess returning #0

continuing in function <SNR>20_detect_indent

line 15:       return
line 16:     endif
line 17:     let pattern = polyglot#sleuth#GlobForFiletype(&filetype)
Searching for "autoload/polyglot/sleuth.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/polyglot/sleuth.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/sleuth.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/sleuth.vim"
line 1: " Restore 'cpoptions'
line 2: let s:cpo_save = &cpo
line 3: set cpo&vim
line 4: 
line 5: " DO NOT EDIT CODE BELOW, IT IS GENERATED WITH MAKEFILE
line 6: 
line 7: let s:globs = { '8th': '*.8th', 'Jenkinsfile': '*.jenkinsfile,*.Jenkinsfile,Jenkinsfile,Jenkinsfile*', 'a2ps': 'a2psrc,.a2psrc', 'a65': '*.a65', 'aap': '*.aap', 'abap': '*.abap', 'abaqus': '*.inp', 'abc': '*.abc', 'abel': '*.abl', 'acedb': '*.wrm', 'ada': '*.adb,*.ads,*.ada,*.adc,*.gpr,*.ada_m', 'ahdl': '*.tdf', 'aidl': '*.aidl', 'alsaconf': '.asoundrc', 'aml': '*.aml', 'ampl': '*.run', 'ant': 'build.xml', 'apache': '.htaccess,access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*', 'apachestyle': 'proftpd.conf*', 'apiblueprint': '*.apib', 'applescript': '*.applescript,*.scpt', 'aptconf': 'apt.conf', 'arch': '.arch-inventory,=tagging-method', 'arduino': '*.pde,*.ino', 'art': '*.art', 'asciidoc': '*.asciidoc,*.adoc,*.asc', 'asl': '*.asl,*.dsl', 'asn': '*.asn,*.asn1', 'aspperl': '*.asp', 'aspvbs': '*.asa,*.asp', 'asterisk': '', 'asteriskvm': '', 'atlas': '*.atl,*.as', 'autohotkey': '*.ahk,*.ahkl', 'autoit': '*.au3', 'automake': '[mM]akefile.am,GNUmakefile.am', 'ave': '*.ave', 'awk': '*.awk,*.gawk
line 638: 
line 639: 
line 640: " DO NOT EDIT CODE ABOVE, IT IS GENERATED WITH MAKEFILE
line 641: 
line 642: func! polyglot#sleuth#GlobForFiletype(type)
line 645: 
line 646: " Restore 'cpoptions'
line 647: let &cpo = s:cpo_save
line 648: unlet s:cpo_save
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/polyglot/sleuth.vim
continuing in function <SNR>20_detect_indent
calling function <SNR>20_detect_indent[17]..polyglot#sleuth#GlobForFiletype('')

line 1:   return get(s:globs, a:type, '')
function <SNR>20_detect_indent[17]..polyglot#sleuth#GlobForFiletype returning ''

continuing in function <SNR>20_detect_indent

line 18:     if len(pattern) == 0
line 19:       return
function <SNR>20_detect_indent returning #0

continuing in BufEnter Autocommands for "*"

Executing BufEnter Autocommands for "*"
autocommand <lua: 4>

Executing: 
autocommand <lua: 8>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch.git_branch'.find_git_dir()

Executing: lua require'lualine.components.branch.git_branch'.find_git_dir()
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <lua: 57>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand sil call s:LocalBrowse(expand("<amatch>"))

Executing: sil call s:LocalBrowse(expand("<amatch>"))
calling function <SNR>103_LocalBrowse('/home/thomaseckert/repos/dotfiles/utilities/normalize-lines')

line 1:   " Unfortunate interaction -- only DechoMsg debugging calls can be safely used here.
line 2:   " Otherwise, the BufEnter event gets triggered when attempts to write to
line 3:   " the DBG buffer are made.
line 4: 
line 5:   if !exists("s:vimentered")
line 6:    " If s:vimentered doesn't exist, then the VimEnter event hasn't fired.  It will,
line 7:    " and so s:VimEnter() will then be calling this routine, but this time with s:vimentered defined.
line 8: "   call Dfunc("s:LocalBrowse(dirname<".a:dirname.">)  (s:vimentered doesn't exist)")
line 9: "   call Dret("s:LocalBrowse")
line 10:    return
function <SNR>103_LocalBrowse returning #0

continuing in BufEnter Autocommands for "*"

Executing VimEnter Autocommands for "*"
autocommand call PolyglotVerify()

Executing: call PolyglotVerify()
calling function PolyglotVerify()

line 1:   if exists("g:polyglot_disabled_not_set")
line 2:     if exists("g:polyglot_disabled")
line 3:       echohl WarningMsg
line 4:       echo "vim-polyglot: g:polyglot_disabled should be defined before loading vim-polyglot"
line 5:       echohl None
line 6:     endif
line 7: 
line 8:     unlet g:polyglot_disabled_not_set
line 9:   endif
function PolyglotVerify returning #0

continuing in VimEnter Autocommands for "*"

autocommand silent! autocmd! FileExplorer *

Executing: silent! autocmd! FileExplorer *
autocommand <lua: 61>

Executing: 
Searching for "autoload/provider/clipboard.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/autoload/provider/clipboard.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/autoload/provider/clipboard.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/clipboard.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/clipboard.vim"
line 1: " The clipboard provider uses shell commands to communicate with the clipboard.
line 2: " The provider function will only be registered if a supported command is
line 3: " available.
line 4: 
line 5: if exists('g:loaded_clipboard_provider')
line 6:   finish
line 7: endif
line 8: " Default to 1.  provider#clipboard#Executable() may set 2.
line 9: " To force a reload:
line 10: "   :unlet g:loaded_clipboard_provider
line 11: "   :runtime autoload/provider/clipboard.vim
line 12: let g:loaded_clipboard_provider = 1
line 13: 
line 14: let s:copy = {}
line 15: let s:paste = {}
line 16: let s:clipboard = {}
line 17: 
line 18: " When caching is enabled, store the jobid of the xclip/xsel process keeping
line 19: " ownership of the selection, so we know how long the cache is valid.
line 20: let s:selection = { 'owner': 0, 'data': [], 'stderr_buffered': v:true }
line 21: 
line 22: function! s:selection.on_exit(jobid, data, event) abort
line 34: 
line 35: let s:selections = { '*': s:selection, '+': copy(s:selection) }
line 36: 
line 37: function! s:try_cmd(cmd, ...) abort
line 50: 
line 51: " Returns TRUE if `cmd` exits with success, else FALSE.
line 52: function! s:cmd_ok(cmd) abort
line 56: 
line 57: function! s:split_cmd(cmd) abort
line 60: 
line 61: let s:cache_enabled = 1
line 62: let s:err = ''
line 63: 
line 64: function! provider#clipboard#Error() abort
line 67: 
line 68: function! provider#clipboard#Executable() abort
line 152: 
line 153: function! s:clipboard.get(reg) abort
line 170: 
line 171: function! s:clipboard.set(lines, regtype, reg) abort
line 229: 
line 230: function! provider#clipboard#Call(method, args) abort
line 241: 
line 242: " eval_has_provider() decides based on this variable.
line 243: let g:loaded_clipboard_provider = empty(provider#clipboard#Executable()) ? 1 : 2
calling function provider#clipboard#Executable()

line 1:   if exists('g:clipboard')
line 2:     if type({}) isnot# type(g:clipboard) || type({}) isnot# type(get(g:clipboard, 'copy', v:null)) || type({}) isnot# type(get(g:clipboard, 'paste', v:null))
line 5:       let s:err = 'clipboard: invalid g:clipboard'
line 6:       return ''
line 7:     endif
line 8: 
line 9:     let s:copy = {}
line 10:     let s:copy['+'] = s:split_cmd(get(g:clipboard.copy, '+', v:null))
line 11:     let s:copy['*'] = s:split_cmd(get(g:clipboard.copy, '*', v:null))
line 12: 
line 13:     let s:paste = {}
line 14:     let s:paste['+'] = s:split_cmd(get(g:clipboard.paste, '+', v:null))
line 15:     let s:paste['*'] = s:split_cmd(get(g:clipboard.paste, '*', v:null))
line 16: 
line 17:     let s:cache_enabled = get(g:clipboard, 'cache_enabled', 0)
line 18:     return get(g:clipboard, 'name', 'g:clipboard')
line 19:   elseif has('mac')
line 20:     let s:copy['+'] = ['pbcopy']
line 21:     let s:paste['+'] = ['pbpaste']
line 22:     let s:copy['*'] = s:copy['+']
line 23:     let s:paste['*'] = s:paste['+']
line 24:     let s:cache_enabled = 0
line 25:     return 'pbcopy'
line 26:   elseif !empty($WAYLAND_DISPLAY) && executable('wl-copy') && executable('wl-paste')
line 27:     let s:copy['+'] = ['wl-copy', '--foreground', '--type', 'text/plain']
line 28:     let s:paste['+'] = ['wl-paste', '--no-newline']
line 29:     let s:copy['*'] = ['wl-copy', '--foreground', '--primary', '--type', 'text/plain']
line 30:     let s:paste['*'] = ['wl-paste', '--no-newline', '--primary']
line 31:     return 'wl-copy'
line 32:   elseif !empty($DISPLAY) && executable('xclip')
line 33:     let s:copy['+'] = ['xclip', '-quiet', '-i', '-selection', 'clipboard']
line 34:     let s:paste['+'] = ['xclip', '-o', '-selection', 'clipboard']
line 35:     let s:copy['*'] = ['xclip', '-quiet', '-i', '-selection', 'primary']
line 36:     let s:paste['*'] = ['xclip', '-o', '-selection', 'primary']
line 37:     return 'xclip'
line 38:   elseif !empty($DISPLAY) && executable('xsel') && s:cmd_ok('xsel -o -b')
calling function provider#clipboard#Executable[38]..<SNR>125_cmd_ok('xsel -o -b')

line 1:   call system(a:cmd)
Executing command: "'/usr/bin/zsh' '-c' 'xsel -o -b'"


line 2:   return v:shell_error == 0
function provider#clipboard#Executable[38]..<SNR>125_cmd_ok returning #1

continuing in function provider#clipboard#Executable

line 39:     let s:copy['+'] = ['xsel', '--nodetach', '-i', '-b']
line 40:     let s:paste['+'] = ['xsel', '-o', '-b']
line 41:     let s:copy['*'] = ['xsel', '--nodetach', '-i', '-p']
line 42:     let s:paste['*'] = ['xsel', '-o', '-p']
line 43:     return 'xsel'
function provider#clipboard#Executable returning 'xsel'

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/clipboard.vim

finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/autoload/provider/clipboard.vim
Searching for "autoload/nvim_treesitter.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/nvim_treesitter.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/nvim_treesitter.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
sourcing "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/nvim_treesitter.vim"
line 1: function! nvim_treesitter#statusline(...) abort
line 4: 
line 5: function! nvim_treesitter#foldexpr() abort
line 8: 
line 9: function! nvim_treesitter#installable_parsers(arglead, cmdline, cursorpos) abort
line 12: 
line 13: function! nvim_treesitter#installed_parsers(arglead, cmdline, cursorpos) abort
line 16: 
line 17: function! nvim_treesitter#available_modules(arglead, cmdline, cursorpos) abort
line 20: 
line 21: function! nvim_treesitter#available_query_groups(arglead, cmdline, cursorpos) abort
line 24: 
line 25: function! nvim_treesitter#indent() abort
finished sourcing /home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/nvim_treesitter.vim
calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'


--- Terminal info --- {{{
&term: xterm-256color
Description: xterm with 256 colors
Aliases: xterm-256color
Boolean capabilities:
  auto_left_margin          bw         = false
  auto_right_margin         am         = true
  no_esc_ctlc               xsb        = false
  ceol_standout_glitch      xhp        = false
  eat_newline_glitch        xenl       = true
  erase_overstrike          eo         = false
  generic_type              gn         = false
  hard_copy                 hc         = false
  has_meta_key              km         = true
  has_status_line           hs         = false
  insert_null_glitch        in         = false
  memory_above              da         = false
  memory_below              db         = false
  move_insert_mode          mir        = true
  move_standout_mode        msgr       = true
  over_strike               os         = false
  status_line_esc_ok        eslok      = false
  dest_tabs_magic_smso      xt         = false
  tilde_glitch              hz         = false
  transparent_underline     ul         = false
  xon_xoff                  xon        = false
  needs_xon_xoff            nxon       = false
  prtr_silent               mc5i       = true
  hard_cursor               chts       = false
  non_rev_rmcup             nrrmc      = false
  no_pad_char               npc        = true
  non_dest_scroll_region    ndscr      = false
  can_change                ccc        = true
  back_color_erase          bce        = true
  hue_lightness_saturation  hls        = false
  col_addr_glitch           xhpa       = false
  cr_cancels_micro_mode     crxm       = false
  has_print_wheel           daisy      = false
  row_addr_glitch           xvpa       = false
  semi_auto_right_margin    sam        = false
  cpi_changes_res           cpix       = false
  lpi_changes_res           lpix       = false
  backspaces_with_bs        OTbs       = true
  crt_no_scrolling          OTns       = false
  no_correctly_working_cr   OTnc       = false
  gnu_has_meta_key          OTMT       = false
  linefeed_is_newline       OTNL       = false
  has_hardware_tabs         OTpt       = false
  return_does_clr_eol       OTxr       = false
Numeric capabilities:
  columns                   cols       = 80
  init_tabs                 it         = 8
  lines                     lines      = 24
  lines_of_memory           lm         = -1
  magic_cookie_glitch       xmc        = -1
  padding_baud_rate         pb         = -1
  virtual_terminal          vt         = -1
  width_status_line         wsl        = -1
  num_labels                nlab       = -1
  label_height              lh         = -1
  label_width               lw         = -1
  max_attributes            ma         = -1
  maximum_windows           wnum       = -1
  max_colors                colors     = 256
  max_pairs                 pairs      = 65536
  no_color_video            ncv        = -1
  buffer_capacity           bufsz      = -1
  dot_vert_spacing          spinv      = -1
  dot_horz_spacing          spinh      = -1
  max_micro_address         maddr      = -1
  max_micro_jump            mjump      = -1
  micro_col_size            mcs        = -1
  micro_line_size           mls        = -1
  number_of_pins            npins      = -1
  output_res_char           orc        = -1
  output_res_line           orl        = -1
  output_res_horz_inch      orhi       = -1
  output_res_vert_inch      orvi       = -1
  print_rate                cps        = -1
  wide_char_size            widcs      = -1
  buttons                   btns       = -1
  bit_image_entwining       bitwin     = -1
  bit_image_type            bitype     = -1
  magic_cookie_glitch_ul    OTug       = -1
  carriage_return_delay     OTdC       = -1
  new_line_delay            OTdN       = -1
  backspace_delay           OTdB       = -1
  horizontal_tab_delay      OTdT       = -1
  number_of_function_keys   OTkn       = -1
String capabilities:
  back_tab                  cbt        = <Esc>[Z
  bell                      bel        = <C-G>
  carriage_return           cr         = <CR>
  change_scroll_region      csr        = <Esc>[%i%p1%d;%p2%dr
  clear_all_tabs            tbc        = <Esc>[3g
  clear_screen              clear      = <Esc>[H<Esc>[2J
  clr_eol                   el         = <Esc>[K
  clr_eos                   ed         = <Esc>[J
  column_address            hpa        = <Esc>[%i%p1%dG
  cursor_address            cup        = <Esc>[%i%p1%d;%p2%dH
  cursor_down               cud1       = <NL>
  cursor_home               home       = <Esc>[H
  cursor_invisible          civis      = <Esc>[?25l
  cursor_left               cub1       = <C-H>
  cursor_normal             cnorm      = <Esc>[?25h
  cursor_right              cuf1       = <Esc>[C
  cursor_up                 cuu1       = <Esc>[A
  cursor_visible            cvvis      = <Esc>[?12;25h
  delete_character          dch1       = <Esc>[P
  delete_line               dl1        = <Esc>[M
  enter_alt_charset_mode    smacs      = <Esc>(0
  enter_blink_mode          blink      = <Esc>[5m
  enter_bold_mode           bold       = <Esc>[1m
  enter_ca_mode             smcup      = <Esc>[?1049h<Esc>[22;0;0t
  enter_dim_mode            dim        = <Esc>[2m
  enter_insert_mode         smir       = <Esc>[4h
  enter_secure_mode         invis      = <Esc>[8m
  enter_reverse_mode        rev        = <Esc>[7m
  enter_standout_mode       smso       = <Esc>[7m
  enter_underline_mode      smul       = <Esc>[4m
  erase_chars               ech        = <Esc>[%p1%dX
  exit_alt_charset_mode     rmacs      = <Esc>(B
  exit_attribute_mode       sgr0       = <Esc>(B<Esc>[m
  exit_ca_mode              rmcup      = <Esc>[?1049l<Esc>[23;0;0t
  exit_insert_mode          rmir       = <Esc>[4l
  exit_standout_mode        rmso       = <Esc>[27m
  exit_underline_mode       rmul       = <Esc>[24m
  flash_screen              flash      = <Esc>[?5h$<100/><Esc>[?5l
  from_status_line          fsl        = <C-G>
  init_2string              is2        = <Esc>[!p<Esc>[?3;4l<Esc>[4l<Esc>>
  insert_line               il1        = <Esc>[L
  key_backspace             kbs        = <^?>
  key_dc                    kdch1      = <Esc>[3~
  key_down                  kcud1      = <Esc>OB
  key_f1                    kf1        = <Esc>OP
  key_f10                   kf10       = <Esc>[21~
  key_f2                    kf2        = <Esc>OQ
  key_f3                    kf3        = <Esc>OR
  key_f4                    kf4        = <Esc>OS
  key_f5                    kf5        = <Esc>[15~
  key_f6                    kf6        = <Esc>[17~
  key_f7                    kf7        = <Esc>[18~
  key_f8                    kf8        = <Esc>[19~
  key_f9                    kf9        = <Esc>[20~
  key_home                  khome      = <Esc>OH
  key_ic                    kich1      = <Esc>[2~
  key_left                  kcub1      = <Esc>OD
  key_npage                 knp        = <Esc>[6~
  key_ppage                 kpp        = <Esc>[5~
  key_right                 kcuf1      = <Esc>OC
  key_sf                    kind       = <Esc>[1;2B
  key_sr                    kri        = <Esc>[1;2A
  key_up                    kcuu1      = <Esc>OA
  keypad_local              rmkx       = <Esc>[?1l<Esc>>
  keypad_xmit               smkx       = <Esc>[?1h<Esc>=
  meta_off                  rmm        = <Esc>[?1034l
  meta_on                   smm        = <Esc>[?1034h
  parm_dch                  dch        = <Esc>[%p1%dP
  parm_delete_line          dl         = <Esc>[%p1%dM
  parm_down_cursor          cud        = <Esc>[%p1%dB
  parm_ich                  ich        = <Esc>[%p1%d@
  parm_index                indn       = <Esc>[%p1%dS
  parm_insert_line          il         = <Esc>[%p1%dL
  parm_left_cursor          cub        = <Esc>[%p1%dD
  parm_right_cursor         cuf        = <Esc>[%p1%dC
  parm_rindex               rin        = <Esc>[%p1%dT
  parm_up_cursor            cuu        = <Esc>[%p1%dA
  print_screen              mc0        = <Esc>[i
  prtr_off                  mc4        = <Esc>[4i
  prtr_on                   mc5        = <Esc>[5i
  reset_1string             rs1        = <Esc>c<Esc>]104<C-G>
  reset_2string             rs2        = <Esc>[!p<Esc>[?3;4l<Esc>[4l<Esc>>
  restore_cursor            rc         = <Esc>8
  row_address               vpa        = <Esc>[%i%p1%dd
  save_cursor               sc         = <Esc>7
  scroll_forward            ind        = <NL>
  scroll_reverse            ri         = <Esc>M
  set_attributes            sgr        = %?%p9%t<Esc>(0%e<Esc>(B%;<Esc>[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m
  set_tab                   hts        = <Esc>H
  tab                       ht         = <Tab>
  to_status_line            tsl        = <Esc>]0;
  key_b2                    kb2        = <Esc>OE
  acs_chars                 acsc       = ``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
  key_btab                  kcbt       = <Esc>[Z
  enter_am_mode             smam       = <Esc>[?7h
  exit_am_mode              rmam       = <Esc>[?7l
  key_end                   kend       = <Esc>OF
  key_enter                 kent       = <Esc>OM
  key_sdc                   kDC        = <Esc>[3;2~
  key_send                  kEND       = <Esc>[1;2F
  key_shome                 kHOM       = <Esc>[1;2H
  key_sic                   kIC        = <Esc>[2;2~
  key_sleft                 kLFT       = <Esc>[1;2D
  key_snext                 kNXT       = <Esc>[6;2~
  key_sprevious             kPRV       = <Esc>[5;2~
  key_sright                kRIT       = <Esc>[1;2C
  key_f11                   kf11       = <Esc>[23~
  key_f12                   kf12       = <Esc>[24~
  key_f13                   kf13       = <Esc>[1;2P
  key_f14                   kf14       = <Esc>[1;2Q
  key_f15                   kf15       = <Esc>[1;2R
  key_f16                   kf16       = <Esc>[1;2S
  key_f17                   kf17       = <Esc>[15;2~
  key_f18                   kf18       = <Esc>[17;2~
  key_f19                   kf19       = <Esc>[18;2~
  key_f20                   kf20       = <Esc>[19;2~
  key_f21                   kf21       = <Esc>[20;2~
  key_f22                   kf22       = <Esc>[21;2~
  key_f23                   kf23       = <Esc>[23;2~
  key_f24                   kf24       = <Esc>[24;2~
  key_f25                   kf25       = <Esc>[1;5P
  key_f26                   kf26       = <Esc>[1;5Q
  key_f27                   kf27       = <Esc>[1;5R
  key_f28                   kf28       = <Esc>[1;5S
  key_f29                   kf29       = <Esc>[15;5~
  key_f30                   kf30       = <Esc>[17;5~
  key_f31                   kf31       = <Esc>[18;5~
  key_f32                   kf32       = <Esc>[19;5~
  key_f33                   kf33       = <Esc>[20;5~
  key_f34                   kf34       = <Esc>[21;5~
  key_f35                   kf35       = <Esc>[23;5~
  key_f36                   kf36       = <Esc>[24;5~
  key_f37                   kf37       = <Esc>[1;6P
  key_f38                   kf38       = <Esc>[1;6Q
  key_f39                   kf39       = <Esc>[1;6R
  key_f40                   kf40       = <Esc>[1;6S
  key_f41                   kf41       = <Esc>[15;6~
  key_f42                   kf42       = <Esc>[17;6~
  key_f43                   kf43       = <Esc>[18;6~
  key_f44                   kf44       = <Esc>[19;6~
  key_f45                   kf45       = <Esc>[20;6~
  key_f46                   kf46       = <Esc>[21;6~
  key_f47                   kf47       = <Esc>[23;6~
  key_f48                   kf48       = <Esc>[24;6~
  key_f49                   kf49       = <Esc>[1;3P
  key_f50                   kf50       = <Esc>[1;3Q
  key_f51                   kf51       = <Esc>[1;3R
  key_f52                   kf52       = <Esc>[1;3S
  key_f53                   kf53       = <Esc>[15;3~
  key_f54                   kf54       = <Esc>[17;3~
  key_f55                   kf55       = <Esc>[18;3~
  key_f56                   kf56       = <Esc>[19;3~
  key_f57                   kf57       = <Esc>[20;3~
  key_f58                   kf58       = <Esc>[21;3~
  key_f59                   kf59       = <Esc>[23;3~
  key_f60                   kf60       = <Esc>[24;3~
  key_f61                   kf61       = <Esc>[1;4P
  key_f62                   kf62       = <Esc>[1;4Q
  key_f63                   kf63       = <Esc>[1;4R
  clr_bol                   el1        = <Esc>[1K
  user6                     u6         = <Esc>[%i%d;%dR
  user7                     u7         = <Esc>[6n
  user8                     u8         = <Esc>[?%[;0123456789]c
  user9                     u9         = <Esc>[c
  orig_pair                 op         = <Esc>[39;49m
  orig_colors               oc         = <Esc>]104<C-G>
  initialize_color          initc      = <Esc>]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X<Esc>\
  enter_italics_mode        sitm       = <Esc>[3m
  exit_italics_mode         ritm       = <Esc>[23m
  key_mouse                 kmous      = <Esc>[M
  set_a_foreground          setaf      = <Esc>[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  set_a_background          setab      = <Esc>[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  set_tb_margin             smgtb      = <Esc>[%i%p1%d;%p2%dr
  memory_lock               meml       = <Esc>l
  memory_unlock             memu       = <Esc>m
Extended boolean capabilities:
  AX                        = true
  XT                        = true
Extended string capabilities:
  Cr                        = <Esc>]112<C-G>
  Cs                        = <Esc>]12;%p1%s<C-G>
  E3                        = <Esc>[3J
  Ms                        = <Esc>]52;%p1%s;%p2%s<C-G>
  Se                        = <Esc>[2 q
  Ss                        = <Esc>[%p1%d q
  kDC3                      = <Esc>[3;3~
  kDC4                      = <Esc>[3;4~
  kDC5                      = <Esc>[3;5~
  kDC6                      = <Esc>[3;6~
  kDC7                      = <Esc>[3;7~
  kDN                       = <Esc>[1;2B
  kDN3                      = <Esc>[1;3B
  kDN4                      = <Esc>[1;4B
  kDN5                      = <Esc>[1;5B
  kDN6                      = <Esc>[1;6B
  kDN7                      = <Esc>[1;7B
  kEND3                     = <Esc>[1;3F
  kEND4                     = <Esc>[1;4F
  kEND5                     = <Esc>[1;5F
  kEND6                     = <Esc>[1;6F
  kEND7                     = <Esc>[1;7F
  kHOM3                     = <Esc>[1;3H
  kHOM4                     = <Esc>[1;4H
  kHOM5                     = <Esc>[1;5H
  kHOM6                     = <Esc>[1;6H
  kHOM7                     = <Esc>[1;7H
  kIC3                      = <Esc>[2;3~
  kIC4                      = <Esc>[2;4~
  kIC5                      = <Esc>[2;5~
  kIC6                      = <Esc>[2;6~
  kIC7                      = <Esc>[2;7~
  kLFT3                     = <Esc>[1;3D
  kLFT4                     = <Esc>[1;4D
  kLFT5                     = <Esc>[1;5D
  kLFT6                     = <Esc>[1;6D
  kLFT7                     = <Esc>[1;7D
  kNXT3                     = <Esc>[6;3~
  kNXT4                     = <Esc>[6;4~
  kNXT5                     = <Esc>[6;5~
  kNXT6                     = <Esc>[6;6~
  kNXT7                     = <Esc>[6;7~
  kPRV3                     = <Esc>[5;3~
  kPRV4                     = <Esc>[5;4~
  kPRV5                     = <Esc>[5;5~
  kPRV6                     = <Esc>[5;6~
  kPRV7                     = <Esc>[5;7~
  kRIT3                     = <Esc>[1;3C
  kRIT4                     = <Esc>[1;4C
  kRIT5                     = <Esc>[1;5C
  kRIT6                     = <Esc>[1;6C
  kRIT7                     = <Esc>[1;7C
  kUP                       = <Esc>[1;2A
  kUP3                      = <Esc>[1;3A
  kUP4                      = <Esc>[1;4A
  kUP5                      = <Esc>[1;5A
  kUP6                      = <Esc>[1;6A
  kUP7                      = <Esc>[1;7A
  rmxx                      = <Esc>[29m
  smxx                      = <Esc>[9m
  ext.get_bg                = <Esc>]11;?<C-G>
  ext.get_extkeys           = <Esc>[?u<Esc>[c
  ext.resize_screen         = <Esc>[8;%p1%d;%p2%dt
  ext.reset_scroll_region   = <Esc>[r
  setrgbf                   = <Esc>[38;2;%p1%d;%p2%d;%p3%dm
  setrgbb                   = <Esc>[48;2;%p1%d;%p2%d;%p3%dm
  ext.set_cursor_color      = <Esc>]12;#%p1%06x<C-G>
  ext.reset_cursor_color    = <Esc>]112<C-G>
  ext.save_title            = <Esc>[22;0t
  ext.restore_title         = <Esc>[23;0t
  ext.enable_lr_margin      = <Esc>[?69h
  ext.disable_lr_margin     = <Esc>[?69l
  ext.enable_bpaste         = <Esc>[?2004h
  ext.disable_bpaste        = <Esc>[?2004l
  ext.enable_focus          = <Esc>[?1004h
  ext.disable_focus         = <Esc>[?1004l
  ext.enable_mouse          = <Esc>[?1002h<Esc>[?1006h
  ext.disable_mouse         = <Esc>[?1002l<Esc>[?1006l
  ext.enable_extended_keys  = <Esc>[>4;2m
  ext.disable_extended_keys = <Esc>[>4;0m
}}}

Executing: noautocmd cd /home/thomaseckert/repos/dotfiles/utilities/normalize-lines
                                                                                   [global] /home/thomaseckert/repos/dotfiles/utilities/normalize-lines
Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/thomaseckert/repos/dotfiles/utilities/normalize-lines' rev-parse --show-toplevel'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C /home/thomaseckert/repos/dotfiles config --type=bool status.showUntrackedFiles'"


Executing: highlight! lualine_transitional_lualine_a_normal_to_lualine_b_normal guifg=#818596 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_transitional_lualine_b_normal_to_lualine_c_normal guifg=#2e313f guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing BufFilePost Autocommands for "*"
autocommand unlet! b:git_dir

Executing: unlet! b:git_dir
Executing BufFilePost Autocommands for "*"
autocommand call s:UseConfigFiles()

Executing: call s:UseConfigFiles()
calling function <SNR>85_UseConfigFiles()

line 1:     let b:editorconfig_tried = 1
line 2:     let l:buffer_name = expand('%:p')
line 3:     " ignore buffers without a name
line 4:     if empty(l:buffer_name)
line 5:         return
line 6:     endif
line 7: 
line 8:     if exists("b:EditorConfig_disable") && b:EditorConfig_disable
line 9:         if g:EditorConfig_verbose
line 10:             echo 'Skipping EditorConfig for buffer "' . l:buffer_name . '"'
line 11:         endif
line 12:         return
line 13:     endif
line 14: 
line 15:     " Check if any .editorconfig does exist
line 16:     let l:conf_files = s:GetFilenames(expand('%:p:h'), '.editorconfig')
calling function <SNR>85_UseConfigFiles[16]..<SNR>85_GetFilenames('/home/thomaseckert/repos/dotfiles/utilities/normalize-lines', '.editorconfig')

line 1: " Yield full filepath for filename in each directory in and above path
line 2: 
line 3:     let l:path_list = []
line 4:     let l:path = a:path
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 13:     return l:path_list
function <SNR>85_UseConfigFiles[16]..<SNR>85_GetFilenames returning ['/home/thomaseckert/repos/dotfiles/ut...home/.editorconfig', '//.editorconfig']

continuing in function <SNR>85_UseConfigFiles

line 17:     let l:conf_found = 0
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 24:     if !l:conf_found
line 25:         return
function <SNR>85_UseConfigFiles returning #0

continuing in BufFilePost Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling function <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 17: runtime! ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim
Searching for "ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree/*.vim"
not found in runtime path: "ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 19: runtime! ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua
Searching for "ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/NvimTree/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/NvimTree/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/NvimTree/*.lua"
not found in runtime path: "ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
line 20:       endfor
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 20:       endfor
line 21:     endif
function <SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling function <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/NvimTree.vim
Searching for "indent/NvimTree.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/NvimTree.vim"
not found in runtime path: "indent/NvimTree.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/NvimTree.lua
Searching for "indent/NvimTree.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/NvimTree.lua"
not found in runtime path: "indent/NvimTree.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
function <SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing: exe "set syntax=" . expand("<amatch>")
Executing: set syntax=NvimTree
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling function <SNR>6_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 25: runtime! syntax/NvimTree.vim syntax/NvimTree/*.vim
Searching for "syntax/NvimTree.vim syntax/NvimTree/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/NvimTree/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/NvimTree/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/NvimTree.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/NvimTree/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/NvimTree.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/NvimTree/*.vim"
not found in runtime path: "syntax/NvimTree.vim syntax/NvimTree/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 26: runtime! syntax/NvimTree.lua syntax/NvimTree/*.lua
Searching for "syntax/NvimTree.lua syntax/NvimTree/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/NvimTree/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/NvimTree/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/NvimTree.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/NvimTree/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/NvimTree.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/NvimTree/*.lua"
not found in runtime path: "syntax/NvimTree.lua syntax/NvimTree/*.lua"
line 27:       endif
line 28:     endfor
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
function <SNR>6_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing Syntax Autocommands for "*"
autocommand call s:setup_styledEmmetAbbreviation()

Executing: call s:setup_styledEmmetAbbreviation()
calling function <SNR>95_setup_styledEmmetAbbreviation()

line 1:   if index(['javascript', 'javascriptreact', 'typescript', 'typescriptreact'], &filetype) != -1
line 2:     syntax match styledEmmetAbbreviation "[a-z0-9#+!%]\+" containedin=styledDefinition contained
line 3:   endif
function <SNR>95_setup_styledEmmetAbbreviation returning #0

continuing in Syntax Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand lua vim.defer_fn(require('lsp-zero').suggest_server, 5)

Executing: lua vim.defer_fn(require('lsp-zero').suggest_server, 5)
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing FileType Autocommands for "*"
autocommand call s:register()

Executing: call s:register()
calling function <SNR>90_register()

line 1:   if !(&modifiable && expand('<amatch>') ==# 'go')
line 2:     return
function <SNR>90_register returning #0

continuing in FileType Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing BufDelete Autocommands for "*"
autocommand lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing: lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: buffer 1
Executing: wincmd H
Executing: :wincmd =
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/lua/gitsigns)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"


Executing: lua require'nvim-tree.actions.dispatch'.dispatch('edit')
Executing: set ei=BufEnter
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: set ei=""
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: vertical split /home/thomaseckert/repos/dotfiles/utilities/normalize-lines/README.md
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling function <SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/actions/node)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Reading ShaDa file "/home/thomaseckert/.local/share/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*.md"
autocommand setfiletype markdown

Executing: setfiletype markdown
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling function <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 17: runtime! ftplugin/markdown.vim ftplugin/markdown_*.vim ftplugin/markdown/*.vim
Searching for "ftplugin/markdown.vim ftplugin/markdown_*.vim ftplugin/markdown/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim"
line 1: let b:prettier_ft_default_args = { 'parser': 'markdown', }
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim"
line 1: if exists("g:loaded_MarkdownTocPlugin")
line 2:     finish
line 3: elseif v:version < 704
line 4:     finish
line 5: endif
line 6: 
line 7: let g:loaded_MarkdownTocPlugin = 1
line 8: 
line 9: if !exists("g:vmt_auto_update_on_save")
line 10:     let g:vmt_auto_update_on_save = 1
line 11: endif
line 12: 
line 13: if !exists("g:vmt_dont_insert_fence")
line 14:     let g:vmt_dont_insert_fence = 0
line 15: endif
line 16: 
line 17: if !exists("g:vmt_fence_text")
line 18:     let g:vmt_fence_text = 'vim-markdown-toc'
line 19: endif
line 20: 
line 21: if !exists("g:vmt_fence_closing_text")
line 22:     let g:vmt_fence_closing_text = g:vmt_fence_text
line 23: endif
line 24: 
line 25: if !exists("g:vmt_fence_hidden_markdown_style")
line 26:     let g:vmt_fence_hidden_markdown_style = ''
line 27: endif
line 28: 
line 29: if !exists("g:vmt_list_item_char")
line 30:     let g:vmt_list_item_char = '*'
line 31: endif
line 32: 
line 33: if !exists("g:vmt_list_indent_text")
line 34:     let g:vmt_list_indent_text = ''
line 35: endif
line 36: 
line 37: if !exists("g:vmt_cycle_list_item_markers")
line 38:     let g:vmt_cycle_list_item_markers = 0
line 39: endif
line 40: 
line 41: if !exists("g:vmt_include_headings_before")
line 42:     let g:vmt_include_headings_before = 0
line 43: endif
line 44: 
line 45: if !exists("g:vmt_link")
line 46:     let g:vmt_link = 1
line 47: endif
line 48: 
line 49: if !exists("g:vmt_min_level")
line 50:     let g:vmt_min_level = 1
line 51: endif
line 52: 
line 53: if !exists("g:vmt_max_level")
line 54:     let g:vmt_max_level = 6
line 55: endif
line 56: 
line 57: let g:GFMHeadingIds = {}
line 58: 
line 59: let s:supportMarkdownStyles = ['GFM', 'Redcarpet', 'GitLab', 'Marked']
line 60: 
line 61: let s:GFM_STYLE_INDEX = 0
line 62: let s:REDCARPET_STYLE_INDEX = 1
line 63: let s:GITLAB_STYLE_INDEX = 2
line 64: let s:MARKED_STYLE_INDEX = 3
line 65: 
line 66: function! s:HeadingLineRegex()
line 69: 
line 70: function! s:GetSections(beginRegex, endRegex)
line 95: 
line 96: function! s:GetCodeSections()
line 105: 
line 106: function! s:IsLineInCodeSections(codeSections, lineNum)
line 117: 
line 118: function! s:GetHeadingLines()
line 153: 
line 154: function! s:GetHeadingLevel(headingLine)
line 157: 
line 158: function! s:GetHeadingLinkGFM(headingName)
line 191: 
line 192: " suppport for GitLab, fork of GetHeadingLinkGFM
line 193: " it's dirty to copy & paste code but more clear for maintain
line 194: function! s:GetHeadingLinkGitLab(headingName)
line 219: 
line 220: function! s:GetHeadingLinkRedcarpet(headingName)
line 234: 
line 235: function! s:GetHeadingLinkMarked(headingName)
line 242: 
line 243: function! s:GetHeadingName(headingLine)
line 252: 
line 253: function! s:GetHeadingLink(headingName, markdownStyle)
line 264: 
line 265: function! GetHeadingLinkTest(headingLine, markdownStyle)
line 269: 
line 270: function! s:GenToc(markdownStyle)
line 273: 
line 274: function! s:GenTocInner(markdownStyle, isModeline)
line 336: 
line 337: function! s:GetIndentText()
line 347: 
line 348: function! s:GetBeginFence(markdownStyle, isModeline)
line 355: 
line 356: function! s:GetEndFence()
line 359: 
line 360: function! s:GetBeginFencePattern(isModeline)
line 367: 
line 368: function! s:GetEndFencePattern()
line 371: 
line 372: function! s:GetMarkdownStyleInModeline()
line 381: 
line 382: function! s:UpdateToc()
line 422: 
line 423: function! s:DeleteExistingToc()
line 481: 
line 482: command! GenTocGFM :call <SID>GenToc(s:supportMarkdownStyles[s:GFM_STYLE_INDEX])
line 483: command! GenTocGitLab :call <SID>GenToc(s:supportMarkdownStyles[s:GITLAB_STYLE_INDEX])
line 484: command! GenTocRedcarpet :call <SID>GenToc(s:supportMarkdownStyles[s:REDCARPET_STYLE_INDEX])
line 485: command! GenTocMarked :call <SID>GenToc(s:supportMarkdownStyles[s:MARKED_STYLE_INDEX])
line 486: command! GenTocModeline :call <SID>GenTocInner(<SID>GetMarkdownStyleInModeline(), 1)
line 487: command! UpdateToc :call <SID>UpdateToc()
line 488: command! RemoveToc :call <SID>DeleteExistingToc()
line 489: 
line 490: if g:vmt_auto_update_on_save == 1
line 491:     autocmd BufWritePre *.{md,mdown,mkd,mkdn,markdown,mdwn} if !&diff | exe ':silent! UpdateToc' | endif
line 492: endif
line 493: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'ftplugin/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim', 'markdown', 'ftplugin/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: "TODO print messages when on visual mode. I only see VISUAL, not the messages.
line 6: 
line 7: " Function interface phylosophy:
line 8: "
line 9: " - functions take arbitrary line numbers as parameters.
line 10: "    Current cursor line is only a suitable default parameter.
line 11: "
line 12: " - only functions that bind directly to user actions:
line 13: "
line 14: "    - print error messages.
line 15: "       All intermediate functions limit themselves return `0` to indicate an error.
line 16: "
line 17: "    - move the cursor. All other functions do not move the cursor.
line 18: "
line 19: " This is how you should view headers for the header mappings:
line 20: "
line 21: "   |BUFFER
line 22: "   |
line 23: "   |Outside any header
line 24: "   |
line 25: " a-+# a
line 26: "   |
line 27: "   |Inside a
line 28: "   |
line 29: " a-+
line 30: " b-+## b
line 31: "   |
line 32: "   |inside b
line 33: "   |
line 34: " b-+
line 35: " c-+### c
line 36: "   |
line 37: "   |Inside c
line 38: "   |
line 39: " c-+
line 40: " d-|# d
line 41: "   |
line 42: "   |Inside d
line 43: "   |
line 44: " d-+
line 45: " e-|e
line 46: "   |====
line 47: "   |
line 48: "   |Inside e
line 49: "   |
line 50: " e-+
line 51: 
line 52: " For each level, contains the regexp that matches at that level only.
line 53: "
line 54: let s:levelRegexpDict = { 1: '\v^(#[^#]@=|.+\n\=+$)', 2: '\v^(##[^#]@=|.+\n-+$)', 3: '\v^###[^#]@=', 4: '\v^####[^#]@=', 5: '\v^#####[^#]@=', 6: '\v^######[^#]@=' }
line 62: 
line 63: " Maches any header level of any type.
line 64: "
line 65: " This could be deduced from `s:levelRegexpDict`, but it is more
line 66: " efficient to have a single regexp for this.
line 67: "
line 68: let s:headersRegexp = '\v^(#|.+\n(\=+|-+)$)'
line 69: 
line 70: " Returns the line number of the first header before `line`, called the
line 71: " current header.
line 72: "
line 73: " If there is no current header, return `0`.
line 74: "
line 75: " @param a:1 The line to look the header of. Default value: `getpos('.')`.
line 76: "
line 77: function! s:GetHeaderLineNum(...)
line 91: 
line 92: " -  if inside a header goes to it.
line 93: "    Return its line number.
line 94: "
line 95: " -  if on top level outside any headers,
line 96: "    print a warning
line 97: "    Return `0`.
line 98: "
line 99: function! s:MoveToCurHeader()
line 109: 
line 110: " Move cursor to next header of any level.
line 111: "
line 112: " If there are no more headers, print a warning.
line 113: "
line 114: function! s:MoveToNextHeader()
line 120: 
line 121: " Move cursor to previous header (before current) of any level.
line 122: "
line 123: " If it does not exist, print a warning.
line 124: "
line 125: function! s:MoveToPreviousHeader()
line 142: 
line 143: " - if line is inside a header, return the header level (h1 -> 1, h2 -> 2, etc.).
line 144: "
line 145: " - if line is at top level outside any headers, return `0`.
line 146: "
line 147: function! s:GetHeaderLevel(...)
line 160: 
line 161: " Return list of headers and their levels.
line 162: "
line 163: function! s:GetHeaderList()
line 212: 
line 213: " Returns the level of the header at the given line.
line 214: "
line 215: " If there is no header at the given line, returns `0`.
line 216: "
line 217: function! s:GetLevelOfHeaderAtLine(linenum)
line 226: 
line 227: " Move cursor to parent header of the current header.
line 228: "
line 229: " If it does not exit, print a warning and do nothing.
line 230: "
line 231: function! s:MoveToParentHeader()
line 240: 
line 241: " Return the line number of the parent header of line `line`.
line 242: "
line 243: " If it has no parent, return `0`.
line 244: "
line 245: function! s:GetParentHeaderLineNumber(...)
line 258: 
line 259: " Return the line number of the previous header of given level.
line 260: " in relation to line `a:1`. If not given, `a:1 = getline()`
line 261: "
line 262: " `a:1` line is included, and this may return the current header.
line 263: "
line 264: " If none return 0.
line 265: "
line 266: function! s:GetNextHeaderLineNumberAtLevel(level, ...)
line 281: 
line 282: " Return the line number of the previous header of given level.
line 283: " in relation to line `a:1`. If not given, `a:1 = getline()`
line 284: "
line 285: " `a:1` line is included, and this may return the current header.
line 286: "
line 287: " If none return 0.
line 288: "
line 289: function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)
line 304: 
line 305: " Move cursor to next sibling header.
line 306: "
line 307: " If there is no next siblings, print a warning and don't move.
line 308: "
line 309: function! s:MoveToNextSiblingHeader()
line 329: 
line 330: " Move cursor to previous sibling header.
line 331: "
line 332: " If there is no previous siblings, print a warning and do nothing.
line 333: "
line 334: function! s:MoveToPreviousSiblingHeader()
line 354: 
line 355: function! s:Toc(...)
line 422: 
line 423: function! s:InsertToc(format, ...)
line 493: 
line 494: " Convert Setex headers in range `line1 .. line2` to Atx.
line 495: "
line 496: " Return the number of conversions.
line 497: "
line 498: function! s:SetexToAtx(line1, line2)
line 504: 
line 505: " If `a:1` is 0, decrease the level of all headers in range `line1 .. line2`.
line 506: "
line 507: " Otherwise, increase the level. `a:1` defaults to `0`.
line 508: "
line 509: function! s:HeaderDecrease(line1, line2, ...)
line 536: 
line 537: " Format table under cursor.
line 538: "
line 539: " Depends on Tabularize.
line 540: "
line 541: function! s:TableFormat()
line 560: 
line 561: " Wrapper to do move commands in visual mode.
line 562: "
line 563: function! s:VisMove(f)
line 567: 
line 568: " Map in both normal and visual modes.
line 569: "
line 570: function! s:MapNormVis(rhs,lhs)
line 574: 
line 575: " Parameters:
line 576: "
line 577: " - step +1 for right, -1 for left
line 578: "
line 579: " TODO: multiple lines.
line 580: "
line 581: function! s:FindCornerOfSyntax(lnum, col, step)
line 589: 
line 590: " Return the next position of the given syntax name,
line 591: " inclusive on the given position.
line 592: "
line 593: " TODO: multiple lines
line 594: "
line 595: function! s:FindNextSyntax(lnum, col, name)
line 603: 
line 604: function! s:FindCornersOfSyntax(lnum, col)
line 607: 
line 608: function! s:FindRightOfSyntax(lnum, col)
line 611: 
line 612: function! s:FindLeftOfSyntax(lnum, col)
line 615: 
line 616: " Returns:
line 617: "
line 618: " - a string with the the URL for the link under the cursor
line 619: " - an empty string if the cursor is not on a link
line 620: "
line 621: " TODO
line 622: "
line 623: " - multiline support
line 624: " - give an error if the separator does is not on a link
line 625: "
line 626: function! s:Markdown_GetUrlForPosition(lnum, col)
line 655: 
line 656: " Front end for GetUrlForPosition.
line 657: "
line 658: function! s:OpenUrlUnderCursor()
line 666: 
line 667: " We need a definition guard because we invoke 'edit' which will reload this
line 668: " script while this function is running. We must not replace it.
line 669: if !exists('*s:EditUrlUnderCursor')
line 670:     function s:EditUrlUnderCursor()
line 725: endif
line 726: 
line 727: function! s:VersionAwareNetrwBrowseX(url)
line 734: 
line 735: function! s:MapNotHasmapto(lhs, rhs)
line 741: 
line 742: call <sid>MapNormVis('<Plug>Markdown_MoveToNextHeader', '<sid>MoveToNextHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToNextHeader', '<sid>MoveToNextHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToNextHeader :call <sid>MoveToNextHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToNextHeader <esc>:call <sid>VisMove('<sid>MoveToNextHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 743: call <sid>MapNormVis('<Plug>Markdown_MoveToPreviousHeader', '<sid>MoveToPreviousHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToPreviousHeader', '<sid>MoveToPreviousHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToPreviousHeader :call <sid>MoveToPreviousHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToPreviousHeader <esc>:call <sid>VisMove('<sid>MoveToPreviousHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 744: call <sid>MapNormVis('<Plug>Markdown_MoveToNextSiblingHeader', '<sid>MoveToNextSiblingHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToNextSiblingHeader', '<sid>MoveToNextSiblingHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToNextSiblingHeader :call <sid>MoveToNextSiblingHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToNextSiblingHeader <esc>:call <sid>VisMove('<sid>MoveToNextSiblingHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 745: call <sid>MapNormVis('<Plug>Markdown_MoveToPreviousSiblingHeader', '<sid>MoveToPreviousSiblingHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToPreviousSiblingHeader', '<sid>MoveToPreviousSiblingHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToPreviousSiblingHeader :call <sid>MoveToPreviousSiblingHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToPreviousSiblingHeader <esc>:call <sid>VisMove('<sid>MoveToPreviousSiblingHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 746: call <sid>MapNormVis('<Plug>Markdown_MoveToParentHeader', '<sid>MoveToParentHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToParentHeader', '<sid>MoveToParentHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToParentHeader :call <sid>MoveToParentHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToParentHeader <esc>:call <sid>VisMove('<sid>MoveToParentHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 747: call <sid>MapNormVis('<Plug>Markdown_MoveToCurHeader', '<sid>MoveToCurHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToCurHeader', '<sid>MoveToCurHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToCurHeader :call <sid>MoveToCurHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToCurHeader <esc>:call <sid>VisMove('<sid>MoveToCurHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 748: nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>
line 749: nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>
line 750: 
line 751: if !get(g:, 'vim_markdown_no_default_key_mappings', 0)
line 752:     call <sid>MapNotHasmapto(']]', 'Markdown_MoveToNextHeader')
calling function <SNR>133_MapNotHasmapto(']]', 'Markdown_MoveToNextHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>]] <Plug>Markdown_MoveToNextHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>]] <Plug>Markdown_MoveToNextHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 753:     call <sid>MapNotHasmapto('[[', 'Markdown_MoveToPreviousHeader')
calling function <SNR>133_MapNotHasmapto('[[', 'Markdown_MoveToPreviousHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>[[ <Plug>Markdown_MoveToPreviousHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>[[ <Plug>Markdown_MoveToPreviousHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 754:     call <sid>MapNotHasmapto('][', 'Markdown_MoveToNextSiblingHeader')
calling function <SNR>133_MapNotHasmapto('][', 'Markdown_MoveToNextSiblingHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>][ <Plug>Markdown_MoveToNextSiblingHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>][ <Plug>Markdown_MoveToNextSiblingHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 755:     call <sid>MapNotHasmapto('[]', 'Markdown_MoveToPreviousSiblingHeader')
calling function <SNR>133_MapNotHasmapto('[]', 'Markdown_MoveToPreviousSiblingHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>[] <Plug>Markdown_MoveToPreviousSiblingHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>[] <Plug>Markdown_MoveToPreviousSiblingHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 756:     call <sid>MapNotHasmapto(']u', 'Markdown_MoveToParentHeader')
calling function <SNR>133_MapNotHasmapto(']u', 'Markdown_MoveToParentHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>]u <Plug>Markdown_MoveToParentHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>]u <Plug>Markdown_MoveToParentHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 757:     call <sid>MapNotHasmapto(']h', 'Markdown_MoveToCurHeader')
calling function <SNR>133_MapNotHasmapto(']h', 'Markdown_MoveToCurHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>]h <Plug>Markdown_MoveToCurHeader
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>]h <Plug>Markdown_MoveToCurHeader
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 758:     call <sid>MapNotHasmapto('gx', 'Markdown_OpenUrlUnderCursor')
calling function <SNR>133_MapNotHasmapto('gx', 'Markdown_OpenUrlUnderCursor')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>gx <Plug>Markdown_OpenUrlUnderCursor
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>gx <Plug>Markdown_OpenUrlUnderCursor
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 759:     call <sid>MapNotHasmapto('ge', 'Markdown_EditUrlUnderCursor')
calling function <SNR>133_MapNotHasmapto('ge', 'Markdown_EditUrlUnderCursor')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 2: nmap <buffer>ge <Plug>Markdown_EditUrlUnderCursor
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3: vmap <buffer>ge <Plug>Markdown_EditUrlUnderCursor
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 760: endif
line 761: 
line 762: command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)
line 763: command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)
line 764: command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)
line 765: command! -buffer TableFormat call s:TableFormat()
line 766: command! -buffer Toc call s:Toc()
line 767: command! -buffer Toch call s:Toc('horizontal')
line 768: command! -buffer Tocv call s:Toc('vertical')
line 769: command! -buffer Toct call s:Toc('tab')
line 770: command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)
line 771: command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)
line 772: 
line 773: " Heavily based on vim-notes - http://peterodding.com/code/vim/notes/
line 774: if exists('g:vim_markdown_fenced_languages')
line 775:     let s:filetype_dict = {}
line 776:     for s:filetype in g:vim_markdown_fenced_languages
line 777:         let key = matchstr(s:filetype, '[^=]*')
line 778:         let val = matchstr(s:filetype, '[^=]*$')
line 779:         let s:filetype_dict[key] = val
line 780:     endfor
line 781: else
line 782:     let s:filetype_dict = { 'c++': 'cpp', 'viml': 'vim', 'bash': 'sh', 'ini': 'dosini' }
line 788: endif
line 789: 
line 790: function! s:MarkdownHighlightSources(force)
line 836: 
line 837: function! s:SyntaxInclude(filetype)
line 860: 
line 861: 
line 862: function! s:MarkdownRefreshSyntax(force)
line 867: 
line 868: function! s:MarkdownClearSyntaxVariables()
line 873: 
line 874: augroup Mkd
line 875:     " These autocmd calling s:MarkdownRefreshSyntax need to be kept in sync with
line 876:     " the autocmds calling s:MarkdownSetupFolding in after/ftplugin/markdown.vim.
line 877:     autocmd! * <buffer>
line 878:     autocmd BufWinEnter <buffer> call s:MarkdownRefreshSyntax(1)
line 879:     autocmd BufUnload <buffer> call s:MarkdownClearSyntaxVariables()
line 880:     autocmd BufWritePost <buffer> call s:MarkdownRefreshSyntax(0)
line 881:     autocmd InsertEnter,InsertLeave <buffer> call s:MarkdownRefreshSyntax(0)
line 882:     autocmd CursorHold,CursorHoldI <buffer> call s:MarkdownRefreshSyntax(0)
line 883: augroup END
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim"
line 1: " Vim filetype plugin
line 2: " Language:^I^IMarkdown
line 3: " Maintainer:^I^ITim Pope <vimNOSPAM@tpope.org>
line 4: " Last Change:^I^I2019 Dec 05
line 5: 
line 6: if exists("b:did_ftplugin")
line 7:   finish
line 8: endif
line 9: 
line 10: runtime! ftplugin/html.vim ftplugin/html_*.vim ftplugin/html/*.vim
Searching for "ftplugin/html.vim ftplugin/html_*.vim ftplugin/html/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim"
line 1: " markdown/php files run this as well
line 2: " https://stackoverflow.com/questions/22839269/why-does-vim-default-markdown-ftplugin-source-html-ftplugins-is-there-any-ways
line 3: if expand('%:e') ==# 'html'
line 4:   let b:prettier_ft_default_args = { 'parser': 'html', }
line 7: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim"
line 1: " Vim plugin for showing matching html tags.
line 2: " Maintainer:  Greg Sexton <gregsexton@gmail.com>
line 3: " Credits: Bram Moolenar and the 'matchparen' plugin from which this draws heavily.
line 4: 
line 5: if exists("b:did_ftplugin")
line 6:     finish
line 7: endif
line 8: 
line 9: augroup matchhtmlparen
line 10:     autocmd! CursorMoved,CursorMovedI,WinEnter <buffer> call s:Highlight_Matching_Pair()
line 11: augroup END
line 12: 
line 13: fu! s:Highlight_Matching_Pair()
line 37: 
line 38: fu! s:GetCurrentCursorTag()
line 61: 
line 62: fu! s:SearchForMatchingTag(tagname, forwards)
line 86: 
line 87: fu! s:HighlightTagAtPosition(position)
line 99: 
line 100: " vim: set ts=8 sts=4 sw=4 expandtab :
finished sourcing /home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim"
line 1: " Maintainer:  ^Iothree <othree@gmail.com>
line 2: " URL:^I^I      http://github.com/othree/html5.vim
line 3: " Last Change:  2014-05-02
line 4: " License:      MIT
line 5: " Changes:      Add - to keyword
line 6: 
line 7: " setlocal iskeyword+=-
line 8: 
line 9: setlocal commentstring=<!--%s-->
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'ftplugin/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim', 'html5', 'ftplugin/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Maintainer:  ^Iothree <othree@gmail.com>
line 6: " URL:^I^I      http://github.com/othree/html5.vim
line 7: " Last Change:  2014-05-02
line 8: " License:      MIT
line 9: " Changes:      Add - to keyword
line 10: 
line 11: " setlocal iskeyword+=-
line 12: 
line 13: setlocal commentstring=<!--%s-->
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim"
line 1: " Vim filetype plugin file
line 2: " Language:^Ihtml
line 3: "
line 4: " This runtime file is looking for a new maintainer.
line 5: "
line 6: " Former maintainer:^IDan Sharp
line 7: " Last Changed: 20 Jan 2009
line 8: 
line 9: if exists("b:did_ftplugin") | finish | endif
line 9:  finish | endif
line 9:  endif
line 10: let b:did_ftplugin = 1
line 11: 
line 12: " Make sure the continuation lines below do not cause problems in
line 13: " compatibility mode.
line 14: let s:save_cpo = &cpo
line 15: set cpo-=C
line 16: 
line 17: setlocal matchpairs+=<:>
line 18: setlocal commentstring=<!--%s-->
line 19: setlocal comments=s:<!--,m:\ \ \ \ ,e:-->
line 20: 
line 21: if exists("g:ft_html_autocomment") && (g:ft_html_autocomment == 1)
line 22:     setlocal formatoptions-=t formatoptions+=croql
line 23: endif
line 24: 
line 25: if exists('&omnifunc')
line 26:   setlocal omnifunc=htmlcomplete#CompleteTags
line 27:   call htmlcomplete#DetectOmniFlavor()
Searching for "autoload/htmlcomplete.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/autoload/htmlcomplete.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/htmlcomplete.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 27: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/htmlcomplete.vim"
line 1: " Vim completion script
line 2: " Language:     HTML and XHTML
line 3: " Maintainer:   Mikolaj Machowski ( mikmach AT wp DOT pl )
line 4: " Last Change:  2006 Oct 19
line 5: " Modified:     othree <othree@gmail.com>
line 6: " Changes:      Add HTML5, WAI-ARIA support
line 7: " Last Change:  2016 Oct 11
line 8: 
line 9: if !exists('g:aria_attributes_complete')
line 10:   let g:aria_attributes_complete = 1
line 11: endif
line 12: 
line 13: " Distinguish between HTML versions.
line 14: " To use with other HTML versions add another "elseif" condition to match
line 15: " proper DOCTYPE.
line 16: function! htmlcomplete#DetectOmniFlavor()
line 54: 
line 55: function! htmlcomplete#CompleteTags(findstart, base)
line 782: 
line 783: function! htmlcomplete#LoadAria() " {{{
line 795: " }}}
line 796: function! htmlcomplete#LoadData() " {{{
line 814: " }}}
line 815: function! htmlcomplete#CheckDoctype() " {{{
line 840: " }}}
line 841: " vim:set foldmethod=marker:
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/autoload/htmlcomplete.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim
calling function htmlcomplete#DetectOmniFlavor()

line 1:   if &filetype == 'xhtml'
line 2:     let b:html_omni_flavor = 'xhtml10s'
line 3:   else
line 4:     let b:html_omni_flavor = 'html5'
line 5:   endif
line 6:   let i = 1
line 7:   let line = ""
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 15:   if line =~ '<!DOCTYPE.*\<DTD '  " doctype line found above
line 16:     if line =~ ' HTML 3\.2'
line 17:       let b:html_omni_flavor = 'html32'
line 18:     elseif line =~ ' XHTML 1\.1'
line 19:       let b:html_omni_flavor = 'xhtml11'
line 20:     else    " two-step detection with strict/frameset/transitional
line 21:       if line =~ ' XHTML 1\.0'
line 22:         let b:html_omni_flavor = 'xhtml10'
line 23:       elseif line =~ ' HTML 4\.01'
line 24:         let b:html_omni_flavor = 'html401'
line 25:       elseif line =~ ' HTML 4.0\>'
line 26:         let b:html_omni_flavor = 'html40'
line 27:       endif
line 28:       if line =~ '\<Transitional\>'
line 29:         let b:html_omni_flavor .= 't'
line 30:       elseif line =~ '\<Frameset\>'
line 31:         let b:html_omni_flavor .= 'f'
line 32:       else
line 33:         let b:html_omni_flavor .= 's'
line 34:       endif
line 35:     endif
line 36:   endif
function htmlcomplete#DetectOmniFlavor returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim

line 28: endif
line 29: 
line 30: " HTML:  thanks to Johannes Zellner and Benji Fisher.
line 31: if exists("loaded_matchit")
line 32:     let b:match_ignorecase = 1
line 33:     let b:match_words = '<:>,' . '<\@<=[ou]l\>[^>]*\%(>\|$\):<\@<=li\>:<\@<=/[ou]l>,' . '<\@<=dl\>[^>]*\%(>\|$\):<\@<=d[td]\>:<\@<=/dl>,' . '<\@<=\([^/][^ \t>]*\)[^>]*\%(>\|$\):<\@<=/\1>'
line 37: endif
line 38: 
line 39: " Change the :browse e filter to primarily show HTML-related files.
line 40: if has("gui_win32")
line 41:     let  b:browsefilter="HTML Files (*.html,*.htm)\t*.htm;*.html\n" .^I"JavaScript Files (*.js)\t*.js\n" .^I"Cascading StyleSheets (*.css)\t*.css\n" .^I"All Files (*.*)\t*.*\n"
line 45: endif
line 46: 
line 47: " Undo the stuff we changed.
line 48: let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .^I" | unlet! b:match_ignorecase b:match_skip b:match_words b:browsefilter"
line 50: 
line 51: " Restore the saved compatibility options.
line 52: let &cpo = s:save_cpo
line 53: unlet s:save_cpo
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html/*.vim"
line 11: 
line 12: setlocal comments=fb:*,fb:-,fb:+,n:> commentstring=<!--%s-->
line 13: setlocal formatoptions+=tcqln formatoptions-=r formatoptions-=o
line 14: setlocal formatlistpat=^\\s*\\d\\+\\.\\s\\+\\\|^[-*+]\\s\\+\\\|^\\[^\\ze[^\\]]\\+\\]:
line 15: 
line 16: if exists('b:undo_ftplugin')
line 17:   let b:undo_ftplugin .= "|setl cms< com< fo< flp<"
line 18: else
line 19:   let b:undo_ftplugin = "setl cms< com< fo< flp<"
line 20: endif
line 21: 
line 22: function! s:NotCodeBlock(lnum) abort
line 25: 
line 26: function! MarkdownFold() abort
line 44: 
line 45: function! s:HashIndent(lnum) abort
line 58: 
line 59: function! MarkdownFoldText() abort
line 66: 
line 67: if has("folding") && exists("g:markdown_folding")
line 68:   setlocal foldexpr=MarkdownFold()
line 69:   setlocal foldmethod=expr
line 70:   setlocal foldtext=MarkdownFoldText()
line 71:   let b:undo_ftplugin .= " foldexpr< foldmethod< foldtext<"
line 72: endif
line 73: 
line 74: " vim:set sw=2:
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown/*.vim"
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 19: runtime! ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua
Searching for "ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown/*.lua"
not found in runtime path: "ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua"
line 20:       endfor
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 20:       endfor
line 21:     endif
function <SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling function <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/markdown.vim
Searching for "indent/markdown.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 14: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'indent/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim', 'markdown', 'indent/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: if exists('b:did_indent') | finish | endif
line 5:  finish | endif
line 5:  endif
line 6: let b:did_indent = 1
line 7: 
line 8: setlocal indentexpr=GetMarkdownIndent()
line 9: setlocal nolisp
line 10: setlocal autoindent
line 11: 
line 12: " Automatically continue blockquote on line break
line 13: setlocal formatoptions+=r
line 14: setlocal comments=b:>
line 15: if get(g:, 'vim_markdown_auto_insert_bullets', 1)
line 16:     " Do not automatically insert bullets when auto-wrapping with text-width
line 17:     setlocal formatoptions-=c
line 18:     " Accept various markers as bullets
line 19:     setlocal comments+=b:*,b:+,b:-
line 20: endif
line 21: 
line 22: " Only define the function once
line 23: if exists('*GetMarkdownIndent') | finish | endif
line 23:  finish | endif
line 23:  endif
line 24: 
line 25: function! s:IsMkdCode(lnum)
line 29: 
line 30: function! s:IsLiStart(line)
line 34: 
line 35: function! s:IsHeaderLine(line)
line 38: 
line 39: function! s:IsBlankLine(line)
line 42: 
line 43: function! s:PrevNonBlank(lnum)
line 50: 
line 51: function GetMarkdownIndent()
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim
continuing in function <SNR>2_LoadIndent
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/markdown.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/markdown.lua
Searching for "indent/markdown.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/markdown.lua"
not found in runtime path: "indent/markdown.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
function <SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing: exe "set syntax=" . expand("<amatch>")
Executing: set syntax=markdown
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling function <SNR>6_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 25: runtime! syntax/markdown.vim syntax/markdown/*.vim
Searching for "syntax/markdown.vim syntax/markdown/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'syntax/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim', 'markdown', 'syntax/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:^IMarkdown
line 7: " Maintainer:^IBen Williams <benw@plasticboy.com>
line 8: " URL:^I^Ihttp://plasticboy.com/markdown-vim-mode/
line 9: " Remark:^IUses HTML syntax file
line 10: " TODO: ^IHandle stuff contained within stuff (e.g. headings within blockquotes)
line 11: 
line 12: 
line 13: " Read the HTML syntax to start with
line 14: if v:version < 600
line 15:   so <sfile>:p:h/html.vim
calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
Searching for "parser/markdown.*" in runtime path
Searching for "/home/thomaseckert/.config/nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/parser/markdown.*"
Searching for "/home/thomaseckert/.local/share/nvim/site/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/parser/markdown.*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/parser/markdown.*"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/parser/markdown.*"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/parser/markdown.*"
not found in runtime path: "parser/markdown.*"
function nvim_treesitter#foldexpr returning '0'

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim

calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim

calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim

line 16: else
line 17:   runtime! syntax/html.vim
Searching for "syntax/html.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:     HTML (version 5.1)
line 3: "               SVG (SVG 1.1 Second Edition)
line 4: "               MathML (MathML 3.0 Second Edition)
line 5: " Last Change:  2017 Mar 07
line 6: " License:      Public domain
line 7: "               (but let me know if you like :) )
line 8: "
line 9: " Note: This file just add new tags from HTML 5
line 10: "       and don't replace default html.vim syntax file
line 11: "
line 12: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 13: " Changes:      update to Draft 2016 Jan 13
line 14: "               add microdata Attributes
line 15: " Maintainer:   Rodrigo Machado <rcmachado@gmail.com>
line 16: " URL:          http://rm.blog.br/vim/syntax/html.vim
line 17: " Modified:     htdebeer <H.T.de.Beer@gmail.com>
line 18: " Changes:      add common SVG elements and attributes for inline SVG
line 19: 
line 20: " Patch 7.4.1142
line 21: if has("patch-7.4-1142")
line 22:   if has("win32")
line 23:     syn iskeyword @,48-57,_,128-167,224-235,-
line 24:   else
line 25:     syn iskeyword @,48-57,_,192-255,-
line 26:   endif
line 27: endif
line 28: 
line 29: " HTML 5 tags
line 30: syn keyword htmlTagName contained article aside audio canvas command
line 31: syn keyword htmlTagName contained datalist details dialog embed figcaption figure footer
line 32: syn keyword htmlTagName contained header hgroup keygen main mark meter menu menuitem nav output
line 33: syn keyword htmlTagName contained progress ruby rt rp rb rtc section source summary time track video data
line 34: syn keyword htmlTagName contained template content shadow slot
line 35: syn keyword htmlTagName contained wbr bdi
line 36: syn keyword htmlTagName contained picture
line 37: 
line 38: " SVG tags
line 39: " http://www.w3.org/TR/SVG/
line 40: " as found in http://www.w3.org/TR/SVG/eltindex.html
line 41: syn keyword htmlTagName contained svg 
line 42: syn keyword htmlTagName contained altGlyph altGlyphDef altGlyphItem 
line 43: syn keyword htmlTagName contained animate animateColor animateMotion animateTransform 
line 44: syn keyword htmlTagName contained circle ellipse rect line polyline polygon image path
line 45: syn keyword htmlTagName contained clipPath color-profile cursor 
line 46: syn keyword htmlTagName contained defs desc g symbol view use switch foreignObject
line 47: syn keyword htmlTagName contained filter feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence 
line 48: syn keyword htmlTagName contained font font-face font-face-format font-face-name font-face-src font-face-uri 
line 49: syn keyword htmlTagName contained glyph glyphRef hkern 
line 50: syn keyword htmlTagName contained linearGradient marker mask pattern radialGradient set stop
line 51: syn keyword htmlTagName contained missing-glyph mpath 
line 52: syn keyword htmlTagName contained text textPath tref tspan vkern
line 53: syn keyword htmlTagName contained metadata title
line 54: 
line 55: " MathML tags
line 56: " https://www.w3.org/TR/MathML3/appendixi.html#index.elem
line 57: syn keyword htmlTagName contained abs and annotation annotation-xml apply approx arccos arccosh arccot arccoth
line 58: syn keyword htmlTagName contained arccsc arccsch arcsec arcsech arcsin arcsinh arctan arctanh arg bind
line 59: syn keyword htmlTagName contained bvar card cartesianproduct cbytes ceiling cerror ci cn codomain complexes
line 60: syn keyword htmlTagName contained compose condition conjugate cos cosh cot coth cs csc csch
line 61: syn keyword htmlTagName contained csymbol curl declare degree determinant diff divergence divide domain domainofapplication
line 62: syn keyword htmlTagName contained emptyset eq equivalent eulergamma exists exp exponentiale factorial factorof false
line 63: syn keyword htmlTagName contained floor fn forall gcd geq grad gt ident image imaginary
line 64: syn keyword htmlTagName contained imaginaryi implies in infinity int integers intersect interval inverse lambda
line 65: syn keyword htmlTagName contained laplacian lcm leq limit list ln log logbase lowlimit lt
line 66: syn keyword htmlTagName contained maction maligngroup malignmark math matrix matrixrow max mean median menclose
line 67: syn keyword htmlTagName contained merror mfenced mfrac mglyph mi mi" min minus mlabeledtr mlongdiv
line 68: syn keyword htmlTagName contained mmultiscripts mn mo mode moment momentabout mover mpadded mphantom mprescripts
line 69: syn keyword htmlTagName contained mroot mrow ms mscarries mscarry msgroup msline mspace msqrt msrow
line 70: syn keyword htmlTagName contained mstack mstyle msub msubsup msup mtable mtd mtext mtr munder
line 71: syn keyword htmlTagName contained munderover naturalnumbers neq none not notanumber notin notprsubset notsubset or
line 72: syn keyword htmlTagName contained otherwise outerproduct partialdiff pi piece piecewise plus power primes product
line 73: syn keyword htmlTagName contained prsubset quotient rationals real reals reln rem root scalarproduct sdev
line 74: syn keyword htmlTagName contained sec sech selector semantics sep set setdiff share sin sinh
line 75: syn keyword htmlTagName contained span subset sum tan tanh tendsto times transpose true union
line 76: syn keyword htmlTagName contained uplimit variance vector vectorproduct xor
line 77: 
line 78: " Custom Element
line 79: syn match htmlTagName contained "\<[a-z][-.0-9_a-z]*-[-.0-9_a-z]*\>"
line 80: syn match htmlTagName contained "[.0-9_a-z]\@<=-[-.0-9_a-z]*\>"
line 81: 
line 82: " HTML 5 arguments
line 83: " Core Attributes
line 84: syn keyword htmlArg contained accesskey class contenteditable contextmenu dir 
line 85: syn keyword htmlArg contained draggable hidden id is lang spellcheck style tabindex title translate
line 86: " Event-handler Attributes
line 87: syn keyword htmlArg contained onabort onblur oncanplay oncanplaythrough onchange
line 88: syn keyword htmlArg contained onclick oncontextmenu ondblclick ondrag ondragend ondragenter ondragleave ondragover 
line 89: syn keyword htmlArg contained ondragstart ondrop ondurationchange onemptied onended onerror onfocus onformchange 
line 90: syn keyword htmlArg contained onforminput oninput oninvalid onkeydown onkeypress onkeyup onload onloadeddata 
line 91: syn keyword htmlArg contained onloadedmetadata onloadstart onmousedown onmousemove onmouseout onmouseover onmouseup
line 92: syn keyword htmlArg contained onmousewheel onpause onplay onplaying onprogress onratechange onreadystatechange 
line 93: syn keyword htmlArg contained onscroll onseeked onseeking onselect onshow onstalled onsubmit onsuspend ontimeupdate 
line 94: syn keyword htmlArg contained onvolumechange onwaiting
line 95: " XML Attributes
line 96: syn keyword htmlArg contained xml:lang xml:space xml:base xmlns
line 97: " new features
line 98: " <body>
line 99: syn keyword htmlArg contained onafterprint onbeforeprint onbeforeunload onblur onerror onfocus onhashchange onload 
line 100: syn keyword htmlArg contained onmessage onoffline ononline onpopstate onredo onresize onstorage onundo onunload
line 101: " <video>, <audio>, <source>, <track>
line 102: syn keyword htmlArg contained autoplay preload controls loop poster media kind charset srclang track playsinline
line 103: " <form>, <input>, <button>
line 104: syn keyword htmlArg contained form autocomplete autofocus list min max step
line 105: syn keyword htmlArg contained formaction autofocus formenctype formmethod formtarget formnovalidate
line 106: syn keyword htmlArg contained required placeholder pattern
line 107: " <command>, <details>, <time>
line 108: syn keyword htmlArg contained label icon open datetime-local pubdate
line 109: " <script>
line 110: syn keyword htmlArg contained async
line 111: " <content>
line 112: syn keyword htmlArg contained select
line 113: " <iframe>
line 114: syn keyword htmlArg contained seamless srcdoc sandbox allowfullscreen allowusermedia allowpaymentrequest allowpresentation
line 115: " <picture>
line 116: syn keyword htmlArg contained srcset sizes
line 117: " <a>
line 118: syn keyword htmlArg contained download media
line 119: " <script>, <style>
line 120: syn keyword htmlArg contained nonce
line 121: " <area>, <a>, <img>, <iframe>, <link>
line 122: syn keyword htmlArg contained referrerpolicy
line 123: " https://w3c.github.io/webappsec-subresource-integrity/#the-integrity-attribute
line 124: syn keyword htmlArg contained integrity crossorigin
line 125: " <link>
line 126: syn keyword htmlArg contained prefetch 
line 127: " syn keyword htmlArg contained preload
line 128: " <img>
line 129: syn keyword htmlArg contained decoding
line 130: " https://w3c.github.io/selection-api/#extensions-to-globaleventhandlers
line 131: syn keyword htmlArg contained onselectstart onselectionchange
line 132: " https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading
line 133: syn keyword htmlArg contained loading
line 134: 
line 135: " Custom Data Attributes
line 136: " http://w3c.github.io/html/single-page.html#embedding-custom-non-visible-data-with-the-data-attributes
line 137: syn match   htmlArg "\<data[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 138: 
line 139: " Vendor Extension Attributes
line 140: " http://w3c.github.io/html/single-page.html#conformance-requirements-extensibility
line 141: syn match   htmlArg "\<x[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 142: 
line 143: " Microdata
line 144: " http://dev.w3.org/html5/md/
line 145: syn keyword htmlArg contained itemid itemscope itemtype itemprop itemref
line 146: 
line 147: " SVG
line 148: " http://www.w3.org/TR/SVG/
line 149: " Some common attributes from http://www.w3.org/TR/SVG/attindex.html
line 150: syn keyword htmlArg contained accent-height accumulate additive alphabetic amplitude arabic-form ascent attributeName attributeType azimuth 
line 151: syn keyword htmlArg contained baseFrequency baseProfile bbox begin bias by 
line 152: syn keyword htmlArg contained calcMode cap-height class clipPathUnits contentScriptType contentStyleType cx cy 
line 153: syn keyword htmlArg contained d descent diffuseConstant divisor dur dx dy 
line 154: syn keyword htmlArg contained edgeMode elevation end exponent externalResourcesRequired 
line 155: syn keyword htmlArg contained fill filterRes filterUnits font-family font-size font-stretch font-style font-variant font-weight format format from fx fy 
line 156: syn keyword htmlArg contained g1 g2 glyph-name glyphRef gradientTransform gradientUnits 
line 157: syn keyword htmlArg contained hanging height horiz-adv-x horiz-origin-x horiz-origin-y 
line 158: syn keyword htmlArg contained id ideographic in in2 intercept 
line 159: syn keyword htmlArg contained k k1 k2 k3 k4 kernelMatrix kernelUnitLength keyPoints keySplines keyTimes 
line 160: syn keyword htmlArg contained lang lengthAdjust limitingConeAngle local 
line 161: syn keyword htmlArg contained markerHeight markerUnits markerWidth maskContentUnits maskUnits mathematical max media method min mode name 
line 162: syn keyword htmlArg contained numOctaves 
line 163: syn keyword htmlArg contained offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom operator order orient orientation origin overline-position overline-thickness 
line 164: syn keyword htmlArg contained panose-1 path pathLength patternContentUnits patternTransform patternUnits points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits 
line 165: syn keyword htmlArg contained r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry 
line 166: syn keyword htmlArg contained scale seed slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles strikethrough-position strikethrough-thickness string surfaceScale systemLanguage 
line 167: syn keyword htmlArg contained tableValues target targetX targetY textLength title to transform type
line 168: syn keyword htmlArg contained u1 u2 underline-position underline-thickness unicode unicode-range units-per-em 
line 169: syn keyword htmlArg contained v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget 
line 170: syn keyword htmlArg contained width widths 
line 171: syn keyword htmlArg contained x x-height x1 x2 xChannelSelector xlink:actuate xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space 
line 172: syn keyword htmlArg contained y y1 y2 yChannelSelector 
line 173: syn keyword htmlArg contained z zoomAndPan 
line 174: syn keyword htmlArg contained alignment-baseline baseline-shift clip-path clip-rule clip color-interpolation-filters color-interpolation color-profile color-rendering color cursor direction display dominant-baseline enable-background fill-opacity fill-rule fill filter flood-color flood-opacity font-family font-size-adjust font-size font-stretch font-style font-variant font-weight glyph-orientation-horizontal glyph-orientation-vertical image-rendering kerning letter-spacing lighting-color marker-end marker-mid marker-start mask opacity overflow pointer-events shape-rendering stop-color stop-opacity stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width stroke text-anchor text-decoration text-rendering unicode-bidi visibility word-spacing writing-mode
line 175: 
line 176: " MathML attributes
line 177: " https://www.w3.org/TR/MathML3/chapter2.html#interf.toplevel.atts
line 178: syn keyword htmlArg contained accent accentunder actiontype align alignmentscope altimg altimg-height altimg-valign altimg-width alttext
line 179: syn keyword htmlArg contained annotation-xml background base baseline bevelled cd cdgroup charalign charspacing close
line 180: syn keyword htmlArg contained closure color columnalign columnalignment columnlines columnspacing columnspan columnwidth crossout decimalpoint
line 181: syn keyword htmlArg contained definitionURL denomalign depth display displaystyle edge encoding equalcolumns equalrows fence
line 182: syn keyword htmlArg contained fontfamily fontsize fontstyle fontweight form frame framespacing groupalign height indentalign
line 183: syn keyword htmlArg contained indentalignfirst indentalignlast indentshift indentshiftfirst indentshiftlast indenttarget index infixlinebreakstyle integer largeop
line 184: syn keyword htmlArg contained leftoverhang length linebreak linebreakmultchar linebreakstyle lineleading linethickness location longdivstyle lquote
line 185: syn keyword htmlArg contained lspace ltr macros math mathbackground mathcolor mathsize mathvariant maxsize maxwidth
line 186: syn keyword htmlArg contained mediummathspace menclose minlabelspacing minsize mode movablelimits msgroup mslinethickness name nargs
line 187: syn keyword htmlArg contained newline notation numalign number occurrence open order other overflow position
line 188: syn keyword htmlArg contained rightoverhang role rowalign rowlines rowspacing rowspan rquote rspace schemaLocation scope
line 189: syn keyword htmlArg contained scriptlevel scriptminsize scriptsize scriptsizemultiplier selection separator separators shift side stackalign
line 190: syn keyword htmlArg contained stretchy subscriptshift superscriptshift symmetric thickmathspace thinmathspace type valign verythickmathspace verythinmathspace
line 191: syn keyword htmlArg contained veryverythickmathspace veryverythinmathspace voffset width xref
line 192: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/html.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'syntax/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim', 'html5', 'syntax/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     HTML (version 5.1)
line 7: "               SVG (SVG 1.1 Second Edition)
line 8: "               MathML (MathML 3.0 Second Edition)
line 9: " Last Change:  2017 Mar 07
line 10: " License:      Public domain
line 11: "               (but let me know if you like :) )
line 12: "
line 13: " Note: This file just add new tags from HTML 5
line 14: "       and don't replace default html.vim syntax file
line 15: "
line 16: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 17: " Changes:      update to Draft 2016 Jan 13
line 18: "               add microdata Attributes
line 19: " Maintainer:   Rodrigo Machado <rcmachado@gmail.com>
line 20: " URL:          http://rm.blog.br/vim/syntax/html.vim
line 21: " Modified:     htdebeer <H.T.de.Beer@gmail.com>
line 22: " Changes:      add common SVG elements and attributes for inline SVG
line 23: 
line 24: " Patch 7.4.1142
line 25: if has("patch-7.4-1142")
line 26:   if has("win32")
line 27:     syn iskeyword @,48-57,_,128-167,224-235,-
line 28:   else
line 29:     syn iskeyword @,48-57,_,192-255,-
line 30:   endif
line 31: endif
line 32: 
line 33: " HTML 5 tags
line 34: syn keyword htmlTagName contained article aside audio canvas command
line 35: syn keyword htmlTagName contained datalist details dialog embed figcaption figure footer
line 36: syn keyword htmlTagName contained header hgroup keygen main mark meter menu menuitem nav output
line 37: syn keyword htmlTagName contained progress ruby rt rp rb rtc section source summary time track video data
line 38: syn keyword htmlTagName contained template content shadow slot
line 39: syn keyword htmlTagName contained wbr bdi
line 40: syn keyword htmlTagName contained picture
line 41: 
line 42: " SVG tags
line 43: " http://www.w3.org/TR/SVG/
line 44: " as found in http://www.w3.org/TR/SVG/eltindex.html
line 45: syn keyword htmlTagName contained svg 
line 46: syn keyword htmlTagName contained altGlyph altGlyphDef altGlyphItem 
line 47: syn keyword htmlTagName contained animate animateColor animateMotion animateTransform 
line 48: syn keyword htmlTagName contained circle ellipse rect line polyline polygon image path
line 49: syn keyword htmlTagName contained clipPath color-profile cursor 
line 50: syn keyword htmlTagName contained defs desc g symbol view use switch foreignObject
line 51: syn keyword htmlTagName contained filter feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence 
line 52: syn keyword htmlTagName contained font font-face font-face-format font-face-name font-face-src font-face-uri 
line 53: syn keyword htmlTagName contained glyph glyphRef hkern 
line 54: syn keyword htmlTagName contained linearGradient marker mask pattern radialGradient set stop
line 55: syn keyword htmlTagName contained missing-glyph mpath 
line 56: syn keyword htmlTagName contained text textPath tref tspan vkern
line 57: syn keyword htmlTagName contained metadata title
line 58: 
line 59: " MathML tags
line 60: " https://www.w3.org/TR/MathML3/appendixi.html#index.elem
line 61: syn keyword htmlTagName contained abs and annotation annotation-xml apply approx arccos arccosh arccot arccoth
line 62: syn keyword htmlTagName contained arccsc arccsch arcsec arcsech arcsin arcsinh arctan arctanh arg bind
line 63: syn keyword htmlTagName contained bvar card cartesianproduct cbytes ceiling cerror ci cn codomain complexes
line 64: syn keyword htmlTagName contained compose condition conjugate cos cosh cot coth cs csc csch
line 65: syn keyword htmlTagName contained csymbol curl declare degree determinant diff divergence divide domain domainofapplication
line 66: syn keyword htmlTagName contained emptyset eq equivalent eulergamma exists exp exponentiale factorial factorof false
line 67: syn keyword htmlTagName contained floor fn forall gcd geq grad gt ident image imaginary
line 68: syn keyword htmlTagName contained imaginaryi implies in infinity int integers intersect interval inverse lambda
line 69: syn keyword htmlTagName contained laplacian lcm leq limit list ln log logbase lowlimit lt
line 70: syn keyword htmlTagName contained maction maligngroup malignmark math matrix matrixrow max mean median menclose
line 71: syn keyword htmlTagName contained merror mfenced mfrac mglyph mi mi" min minus mlabeledtr mlongdiv
line 72: syn keyword htmlTagName contained mmultiscripts mn mo mode moment momentabout mover mpadded mphantom mprescripts
line 73: syn keyword htmlTagName contained mroot mrow ms mscarries mscarry msgroup msline mspace msqrt msrow
line 74: syn keyword htmlTagName contained mstack mstyle msub msubsup msup mtable mtd mtext mtr munder
line 75: syn keyword htmlTagName contained munderover naturalnumbers neq none not notanumber notin notprsubset notsubset or
line 76: syn keyword htmlTagName contained otherwise outerproduct partialdiff pi piece piecewise plus power primes product
line 77: syn keyword htmlTagName contained prsubset quotient rationals real reals reln rem root scalarproduct sdev
line 78: syn keyword htmlTagName contained sec sech selector semantics sep set setdiff share sin sinh
line 79: syn keyword htmlTagName contained span subset sum tan tanh tendsto times transpose true union
line 80: syn keyword htmlTagName contained uplimit variance vector vectorproduct xor
line 81: 
line 82: " Custom Element
line 83: syn match htmlTagName contained "\<[a-z][-.0-9_a-z]*-[-.0-9_a-z]*\>"
line 84: syn match htmlTagName contained "[.0-9_a-z]\@<=-[-.0-9_a-z]*\>"
line 85: 
line 86: " HTML 5 arguments
line 87: " Core Attributes
line 88: syn keyword htmlArg contained accesskey class contenteditable contextmenu dir 
line 89: syn keyword htmlArg contained draggable hidden id is lang spellcheck style tabindex title translate
line 90: " Event-handler Attributes
line 91: syn keyword htmlArg contained onabort onblur oncanplay oncanplaythrough onchange
line 92: syn keyword htmlArg contained onclick oncontextmenu ondblclick ondrag ondragend ondragenter ondragleave ondragover 
line 93: syn keyword htmlArg contained ondragstart ondrop ondurationchange onemptied onended onerror onfocus onformchange 
line 94: syn keyword htmlArg contained onforminput oninput oninvalid onkeydown onkeypress onkeyup onload onloadeddata 
line 95: syn keyword htmlArg contained onloadedmetadata onloadstart onmousedown onmousemove onmouseout onmouseover onmouseup
line 96: syn keyword htmlArg contained onmousewheel onpause onplay onplaying onprogress onratechange onreadystatechange 
line 97: syn keyword htmlArg contained onscroll onseeked onseeking onselect onshow onstalled onsubmit onsuspend ontimeupdate 
line 98: syn keyword htmlArg contained onvolumechange onwaiting
line 99: " XML Attributes
line 100: syn keyword htmlArg contained xml:lang xml:space xml:base xmlns
line 101: " new features
line 102: " <body>
line 103: syn keyword htmlArg contained onafterprint onbeforeprint onbeforeunload onblur onerror onfocus onhashchange onload 
line 104: syn keyword htmlArg contained onmessage onoffline ononline onpopstate onredo onresize onstorage onundo onunload
line 105: " <video>, <audio>, <source>, <track>
line 106: syn keyword htmlArg contained autoplay preload controls loop poster media kind charset srclang track playsinline
line 107: " <form>, <input>, <button>
line 108: syn keyword htmlArg contained form autocomplete autofocus list min max step
line 109: syn keyword htmlArg contained formaction autofocus formenctype formmethod formtarget formnovalidate
line 110: syn keyword htmlArg contained required placeholder pattern
line 111: " <command>, <details>, <time>
line 112: syn keyword htmlArg contained label icon open datetime-local pubdate
line 113: " <script>
line 114: syn keyword htmlArg contained async
line 115: " <content>
line 116: syn keyword htmlArg contained select
line 117: " <iframe>
line 118: syn keyword htmlArg contained seamless srcdoc sandbox allowfullscreen allowusermedia allowpaymentrequest allowpresentation
line 119: " <picture>
line 120: syn keyword htmlArg contained srcset sizes
line 121: " <a>
line 122: syn keyword htmlArg contained download media
line 123: " <script>, <style>
line 124: syn keyword htmlArg contained nonce
line 125: " <area>, <a>, <img>, <iframe>, <link>
line 126: syn keyword htmlArg contained referrerpolicy
line 127: " https://w3c.github.io/webappsec-subresource-integrity/#the-integrity-attribute
line 128: syn keyword htmlArg contained integrity crossorigin
line 129: " <link>
line 130: syn keyword htmlArg contained prefetch 
line 131: " syn keyword htmlArg contained preload
line 132: " <img>
line 133: syn keyword htmlArg contained decoding
line 134: " https://w3c.github.io/selection-api/#extensions-to-globaleventhandlers
line 135: syn keyword htmlArg contained onselectstart onselectionchange
line 136: " https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading
line 137: syn keyword htmlArg contained loading
line 138: 
line 139: " Custom Data Attributes
line 140: " http://w3c.github.io/html/single-page.html#embedding-custom-non-visible-data-with-the-data-attributes
line 141: syn match   htmlArg "\<data[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 142: 
line 143: " Vendor Extension Attributes
line 144: " http://w3c.github.io/html/single-page.html#conformance-requirements-extensibility
line 145: syn match   htmlArg "\<x[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 146: 
line 147: " Microdata
line 148: " http://dev.w3.org/html5/md/
line 149: syn keyword htmlArg contained itemid itemscope itemtype itemprop itemref
line 150: 
line 151: " SVG
line 152: " http://www.w3.org/TR/SVG/
line 153: " Some common attributes from http://www.w3.org/TR/SVG/attindex.html
line 154: syn keyword htmlArg contained accent-height accumulate additive alphabetic amplitude arabic-form ascent attributeName attributeType azimuth 
line 155: syn keyword htmlArg contained baseFrequency baseProfile bbox begin bias by 
line 156: syn keyword htmlArg contained calcMode cap-height class clipPathUnits contentScriptType contentStyleType cx cy 
line 157: syn keyword htmlArg contained d descent diffuseConstant divisor dur dx dy 
line 158: syn keyword htmlArg contained edgeMode elevation end exponent externalResourcesRequired 
line 159: syn keyword htmlArg contained fill filterRes filterUnits font-family font-size font-stretch font-style font-variant font-weight format format from fx fy 
line 160: syn keyword htmlArg contained g1 g2 glyph-name glyphRef gradientTransform gradientUnits 
line 161: syn keyword htmlArg contained hanging height horiz-adv-x horiz-origin-x horiz-origin-y 
line 162: syn keyword htmlArg contained id ideographic in in2 intercept 
line 163: syn keyword htmlArg contained k k1 k2 k3 k4 kernelMatrix kernelUnitLength keyPoints keySplines keyTimes 
line 164: syn keyword htmlArg contained lang lengthAdjust limitingConeAngle local 
line 165: syn keyword htmlArg contained markerHeight markerUnits markerWidth maskContentUnits maskUnits mathematical max media method min mode name 
line 166: syn keyword htmlArg contained numOctaves 
line 167: syn keyword htmlArg contained offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom operator order orient orientation origin overline-position overline-thickness 
line 168: syn keyword htmlArg contained panose-1 path pathLength patternContentUnits patternTransform patternUnits points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits 
line 169: syn keyword htmlArg contained r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry 
line 170: syn keyword htmlArg contained scale seed slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles strikethrough-position strikethrough-thickness string surfaceScale systemLanguage 
line 171: syn keyword htmlArg contained tableValues target targetX targetY textLength title to transform type
line 172: syn keyword htmlArg contained u1 u2 underline-position underline-thickness unicode unicode-range units-per-em 
line 173: syn keyword htmlArg contained v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget 
line 174: syn keyword htmlArg contained width widths 
line 175: syn keyword htmlArg contained x x-height x1 x2 xChannelSelector xlink:actuate xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space 
line 176: syn keyword htmlArg contained y y1 y2 yChannelSelector 
line 177: syn keyword htmlArg contained z zoomAndPan 
line 178: syn keyword htmlArg contained alignment-baseline baseline-shift clip-path clip-rule clip color-interpolation-filters color-interpolation color-profile color-rendering color cursor direction display dominant-baseline enable-background fill-opacity fill-rule fill filter flood-color flood-opacity font-family font-size-adjust font-size font-stretch font-style font-variant font-weight glyph-orientation-horizontal glyph-orientation-vertical image-rendering kerning letter-spacing lighting-color marker-end marker-mid marker-start mask opacity overflow pointer-events shape-rendering stop-color stop-opacity stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width stroke text-anchor text-decoration text-rendering unicode-bidi visibility word-spacing writing-mode
line 179: 
line 180: " MathML attributes
line 181: " https://www.w3.org/TR/MathML3/chapter2.html#interf.toplevel.atts
line 182: syn keyword htmlArg contained accent accentunder actiontype align alignmentscope altimg altimg-height altimg-valign altimg-width alttext
line 183: syn keyword htmlArg contained annotation-xml background base baseline bevelled cd cdgroup charalign charspacing close
line 184: syn keyword htmlArg contained closure color columnalign columnalignment columnlines columnspacing columnspan columnwidth crossout decimalpoint
line 185: syn keyword htmlArg contained definitionURL denomalign depth display displaystyle edge encoding equalcolumns equalrows fence
line 186: syn keyword htmlArg contained fontfamily fontsize fontstyle fontweight form frame framespacing groupalign height indentalign
line 187: syn keyword htmlArg contained indentalignfirst indentalignlast indentshift indentshiftfirst indentshiftlast indenttarget index infixlinebreakstyle integer largeop
line 188: syn keyword htmlArg contained leftoverhang length linebreak linebreakmultchar linebreakstyle lineleading linethickness location longdivstyle lquote
line 189: syn keyword htmlArg contained lspace ltr macros math mathbackground mathcolor mathsize mathvariant maxsize maxwidth
line 190: syn keyword htmlArg contained mediummathspace menclose minlabelspacing minsize mode movablelimits msgroup mslinethickness name nargs
line 191: syn keyword htmlArg contained newline notation numalign number occurrence open order other overflow position
line 192: syn keyword htmlArg contained rightoverhang role rowalign rowlines rowspacing rowspan rquote rspace schemaLocation scope
line 193: syn keyword htmlArg contained scriptlevel scriptminsize scriptsize scriptsizemultiplier selection separator separators shift side stackalign
line 194: syn keyword htmlArg contained stretchy subscriptshift superscriptshift symmetric thickmathspace thinmathspace type valign verythickmathspace verythinmathspace
line 195: syn keyword htmlArg contained veryverythickmathspace veryverythinmathspace voffset width xref
line 196: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:             HTML
line 3: " Previous Maintainer:  Jorge Maldonado Ventura <jorgesumle@freakspot.net>
line 4: " Previous Maintainer:  Claudio Fleiner <claudio@fleiner.com>
line 5: " Repository:           https://notabug.org/jorgesumle/vim-html-syntax
line 6: " Last Change:          2021 Mar 02
line 7: "^I^I^IIncluded patch #7900 to fix comments
line 8: "^I^I^IIncluded patch #7916 to fix a few more things
line 9: "
line 10: 
line 11: " Please check :help html.vim for some comments and a description of the options
line 12: 
line 13: " quit when a syntax file was already loaded
line 14: if !exists("main_syntax")
line 15:   if exists("b:current_syntax")
line 16:     finish
line 17:   endif
line 18:   let main_syntax = 'html'
line 19: endif
line 20: 
line 21: let s:cpo_save = &cpo
line 22: set cpo&vim
line 23: 
line 24: syntax spell toplevel
line 25: 
line 26: syn case ignore
line 27: 
line 28: " mark illegal characters
line 29: syn match htmlError "[<>&]"
line 30: 
line 31: 
line 32: " tags
line 33: syn region  htmlString   contained start=+"+ end=+"+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
line 34: syn region  htmlString   contained start=+'+ end=+'+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
line 35: syn match   htmlValue    contained "=[\t ]*[^'" \t>][^ \t>]*"hs=s+1   contains=javaScriptExpression,@htmlPreproc
line 36: syn region  htmlEndTag             start=+</+      end=+>+ contains=htmlTagN,htmlTagError
line 37: syn region  htmlTag                start=+<[^/]+   end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent,htmlCssDefinition,@htmlPreproc,@htmlArgCluster
line 38: syn match   htmlTagN     contained +<\s*[-a-zA-Z0-9]\++hs=s+1 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
line 39: syn match   htmlTagN     contained +</\s*[-a-zA-Z0-9]\++hs=s+2 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
line 40: syn match   htmlTagError contained "[^>]<"ms=s+1
line 41: 
line 42: 
line 43: " tag names
line 44: syn keyword htmlTagName contained address applet area a base basefont
line 45: syn keyword htmlTagName contained big blockquote br caption center
line 46: syn keyword htmlTagName contained cite code dd dfn dir div dl dt font
line 47: syn keyword htmlTagName contained form hr html img
line 48: syn keyword htmlTagName contained input isindex kbd li link map menu
line 49: syn keyword htmlTagName contained meta ol option param pre p samp span
line 50: syn keyword htmlTagName contained select small sub sup
line 51: syn keyword htmlTagName contained table td textarea th tr tt ul var xmp
line 52: syn match htmlTagName contained "\<\(b\|i\|u\|h[1-6]\|em\|strong\|head\|body\|title\)\>"
line 53: 
line 54: " new html 4.0 tags
line 55: syn keyword htmlTagName contained abbr acronym bdo button col label
line 56: syn keyword htmlTagName contained colgroup fieldset iframe ins legend
line 57: syn keyword htmlTagName contained object optgroup q s tbody tfoot thead
line 58: 
line 59: " new html 5 tags
line 60: syn keyword htmlTagName contained article aside audio bdi canvas data
line 61: syn keyword htmlTagName contained datalist details dialog embed figcaption
line 62: syn keyword htmlTagName contained figure footer header hgroup keygen main
line 63: syn keyword htmlTagName contained mark menuitem meter nav output picture
line 64: syn keyword htmlTagName contained progress rb rp rt rtc ruby section
line 65: syn keyword htmlTagName contained slot source summary template time track
line 66: syn keyword htmlTagName contained video wbr
line 67: 
line 68: " legal arg names
line 69: syn keyword htmlArg contained action
line 70: syn keyword htmlArg contained align alink alt archive background bgcolor
line 71: syn keyword htmlArg contained border bordercolor cellpadding
line 72: syn keyword htmlArg contained cellspacing checked class clear code codebase color
line 73: syn keyword htmlArg contained cols colspan content coords enctype face
line 74: syn keyword htmlArg contained gutter height hspace id
line 75: syn keyword htmlArg contained link lowsrc marginheight
line 76: syn keyword htmlArg contained marginwidth maxlength method name prompt
line 77: syn keyword htmlArg contained rel rev rows rowspan scrolling selected shape
line 78: syn keyword htmlArg contained size src start target text type url
line 79: syn keyword htmlArg contained usemap ismap valign value vlink vspace width wrap
line 80: syn match   htmlArg contained "\<\(http-equiv\|href\|title\)="me=e-1
line 81: 
line 82: " aria attributes
line 83: exe 'syn match htmlArg contained "\<aria-\%(' . join([ 'activedescendant', 'atomic', 'autocomplete', 'busy', 'checked', 'colcount', 'colindex', 'colspan', 'controls', 'current', 'describedby', 'details', 'disabled', 'dropeffect', 'errormessage', 'expanded', 'flowto', 'grabbed', 'haspopup', 'hidden', 'invalid', 'keyshortcuts', 'label', 'labelledby', 'level', 'live', 'modal', 'multiline', 'multiselectable', 'orientation', 'owns', 'placeholder', 'posinset', 'pressed', 'readonly', 'relevant', 'required', 'roledescription', 'rowcount', 'rowindex', 'rowspan', 'selected', 'setsize', 'sort', 'valuemax', 'valuemin', 'valuenow', 'valuetext' ], '\|') . '\)\>"'
line 83: syn match htmlArg contained "\<aria-\%(activedescendant\|atomic\|autocomplete\|busy\|checked\|colcount\|colindex\|colspan\|controls\|current\|describedby\|details\|disabled\|dropeffect\|errormessage\|expanded\|flowto\|grabbed\|haspopup\|hidden\|invalid\|keyshortcuts\|label\|labelledby\|level\|live\|modal\|multiline\|multiselectable\|orientation\|owns\|placeholder\|posinset\|pressed\|readonly\|relevant\|required\|roledescription\|rowcount\|rowindex\|rowspan\|selected\|setsize\|sort\|valuemax\|valuemin\|valuenow\|valuetext\)\>"
line 93: syn keyword htmlArg contained role
line 94: 
line 95: " Netscape extensions
line 96: syn keyword htmlTagName contained frame noframes frameset nobr blink
line 97: syn keyword htmlTagName contained layer ilayer nolayer spacer
line 98: syn keyword htmlArg     contained frameborder noresize pagex pagey above below
line 99: syn keyword htmlArg     contained left top visibility clip id noshade
line 100: syn match   htmlArg     contained "\<z-index\>"
line 101: 
line 102: " Microsoft extensions
line 103: syn keyword htmlTagName contained marquee
line 104: 
line 105: " html 4.0 arg names
line 106: syn match   htmlArg contained "\<\(accept-charset\|label\)\>"
line 107: syn keyword htmlArg contained abbr accept accesskey axis char charoff charset
line 108: syn keyword htmlArg contained cite classid codetype compact data datetime
line 109: syn keyword htmlArg contained declare defer dir disabled for frame
line 110: syn keyword htmlArg contained headers hreflang lang language longdesc
line 111: syn keyword htmlArg contained multiple nohref nowrap object profile readonly
line 112: syn keyword htmlArg contained rules scheme scope span standby style
line 113: syn keyword htmlArg contained summary tabindex valuetype version
line 114: 
line 115: " html 5 arg names
line 116: syn keyword htmlArg contained allowfullscreen async autocomplete autofocus
line 117: syn keyword htmlArg contained autoplay challenge contenteditable contextmenu
line 118: syn keyword htmlArg contained controls crossorigin default dirname download
line 119: syn keyword htmlArg contained draggable dropzone form formaction formenctype
line 120: syn keyword htmlArg contained formmethod formnovalidate formtarget hidden
line 121: syn keyword htmlArg contained high icon inputmode keytype kind list loop low
line 122: syn keyword htmlArg contained max min minlength muted nonce novalidate open
line 123: syn keyword htmlArg contained optimum pattern placeholder poster preload
line 124: syn keyword htmlArg contained radiogroup required reversed sandbox spellcheck
line 125: syn keyword htmlArg contained sizes srcset srcdoc srclang step title translate
line 126: syn keyword htmlArg contained typemustmatch
line 127: 
line 128: " special characters
line 129: syn match htmlSpecialChar "&#\=[0-9A-Za-z]\{1,8};"
line 130: 
line 131: " Comments (the real ones or the old netscape ones)
line 132: if exists("html_wrong_comments")
line 133:   syn region htmlComment        start=+<!--+    end=+--\s*>+    contains=@Spell
line 134: else
line 135:   " The HTML 5.2 syntax 8.2.4.41: bogus comment is parser error; browser skips until next &gt
line 136:   syn region htmlComment        start=+<!+      end=+>+         contains=htmlCommentError keepend
line 137:   " Idem 8.2.4.42,51: Comment starts with <!-- and ends with -->
line 138:   " Idem 8.2.4.43,44: Except <!--> and <!---> are parser errors
line 139:   " Idem 8.2.4.52: dash-dash-bang (--!>) is error ignored by parser, also closes comment
line 140:   syn region htmlComment matchgroup=htmlComment start=+<!--\%(-\?>\)\@!+        end=+--!\?>+    contains=htmlCommentNested,@htmlPreProc,@Spell keepend
line 141:   " Idem 8.2.4.49: nested comment is parser error, except <!--> is all right
line 142:   syn match htmlCommentNested contained "<!-->\@!"
line 143:   syn match htmlCommentError  contained "[^><!]"
line 144: endif
line 145: syn region htmlComment  start=+<!DOCTYPE+       end=+>+ keepend
line 146: 
line 147: " server-parsed commands
line 148: syn region htmlPreProc start=+<!--#+ end=+-->+ contains=htmlPreStmt,htmlPreError,htmlPreAttr
line 149: syn match htmlPreStmt contained "<!--#\(config\|echo\|exec\|fsize\|flastmod\|include\|printenv\|set\|if\|elif\|else\|endif\|geoguide\)\>"
line 150: syn match htmlPreError contained "<!--#\S*"ms=s+4
line 151: syn match htmlPreAttr contained "\w\+=[^"]\S\+" contains=htmlPreProcAttrError,htmlPreProcAttrName
line 152: syn region htmlPreAttr contained start=+\w\+="+ skip=+\\\\\|\\"+ end=+"+ contains=htmlPreProcAttrName keepend
line 153: syn match htmlPreProcAttrError contained "\w\+="he=e-1
line 154: syn match htmlPreProcAttrName contained "\(expr\|errmsg\|sizefmt\|timefmt\|var\|cgi\|cmd\|file\|virtual\|value\)="he=e-1
line 155: 
line 156: if !exists("html_no_rendering")
line 157:   " rendering
line 158:   syn cluster htmlTop contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,javaScript,@htmlPreproc
line 159: 
line 160:   syn region htmlStrike start="<del\>" end="</del\_s*>"me=s-1 contains=@htmlTop
line 161:   syn region htmlStrike start="<strike\>" end="</strike\_s*>"me=s-1 contains=@htmlTop
line 162: 
line 163:   syn region htmlBold start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
line 164:   syn region htmlBold start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
line 165:   syn region htmlBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
line 166:   syn region htmlBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
line 167:   syn region htmlBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
line 168:   syn region htmlBoldUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
line 169:   syn region htmlBoldUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 170:   syn region htmlBoldItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
line 171: 
line 172:   syn region htmlUnderline start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBold,htmlUnderlineItalic
line 173:   syn region htmlUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
line 174:   syn region htmlUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
line 175:   syn region htmlUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
line 176:   syn region htmlUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
line 177:   syn region htmlUnderlineItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
line 178:   syn region htmlUnderlineItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
line 179:   syn region htmlUnderlineBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
line 180:   syn region htmlUnderlineBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 181: 
line 182:   syn region htmlItalic start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlItalicBold,htmlItalicUnderline
line 183:   syn region htmlItalic start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 184:   syn region htmlItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
line 185:   syn region htmlItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
line 186:   syn region htmlItalicBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop
line 187:   syn region htmlItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlItalicUnderlineBold
line 188:   syn region htmlItalicUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
line 189:   syn region htmlItalicUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
line 190: 
line 191:   syn match htmlLeadingSpace "^\s\+" contained
line 192:   syn region htmlLink start="<a\>\_[^>]*\<href\>" end="</a\_s*>"me=s-1 contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLeadingSpace,javaScript,@htmlPreproc
line 193:   syn region htmlH1 start="<h1\>" end="</h1\_s*>"me=s-1 contains=@htmlTop
line 194:   syn region htmlH2 start="<h2\>" end="</h2\_s*>"me=s-1 contains=@htmlTop
line 195:   syn region htmlH3 start="<h3\>" end="</h3\_s*>"me=s-1 contains=@htmlTop
line 196:   syn region htmlH4 start="<h4\>" end="</h4\_s*>"me=s-1 contains=@htmlTop
line 197:   syn region htmlH5 start="<h5\>" end="</h5\_s*>"me=s-1 contains=@htmlTop
line 198:   syn region htmlH6 start="<h6\>" end="</h6\_s*>"me=s-1 contains=@htmlTop
line 199:   syn region htmlHead start="<head\>" end="</head\_s*>"me=s-1 end="<body\>"me=s-1 end="<h[1-6]\>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,htmlTitle,javaScript,cssStyle,@htmlPreproc
line 200:   syn region htmlTitle start="<title\>" end="</title\_s*>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,javaScript,@htmlPreproc
line 201: endif
line 202: 
line 203: syn keyword htmlTagName         contained noscript
line 204: syn keyword htmlSpecialTagName  contained script style
line 205: if main_syntax != 'java' || exists("java_javascript")
line 206:   " JAVA SCRIPT
line 207:   syn include @htmlJavaScript syntax/javascript.vim
Searching for "syntax/javascript.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/javascript.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'javascript', 'syntax/javascript.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim', 'javascript', 'syntax/javascript.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     JavaScript
line 7: " Maintainer:   vim-javascript community
line 8: " URL:          https://github.com/pangloss/vim-javascript
line 9: 
line 10: if !exists("main_syntax")
line 11:   if version < 600
line 12:     syntax clear
line 13:   elseif exists("b:current_syntax")
line 14:     finish
line 15:   endif
line 16:   let main_syntax = 'javascript'
line 17: endif
line 18: 
line 19: " Dollar sign is permitted anywhere in an identifier
line 20: if (v:version > 704 || v:version == 704 && has('patch1142')) && main_syntax == 'javascript'
line 21:   syntax iskeyword @,48-57,_,192-255,$
line 22: else
line 23:   setlocal iskeyword+=$
line 24: endif
line 25: 
line 26: syntax sync fromstart
line 27: " TODO: Figure out what type of casing I need
line 28: " syntax case ignore
line 29: syntax case match
line 30: 
line 31: syntax match   jsNoise          /[:,;]/
line 32: syntax match   jsDot            /\./ skipwhite skipempty nextgroup=jsObjectProp,jsFuncCall,jsPrototype,jsTaggedTemplate
line 33: syntax match   jsObjectProp     contained /\<\K\k*/
line 34: syntax match   jsFuncCall       /\<\K\k*\ze\s*(/
line 35: syntax match   jsParensError    /[)}\]]/
line 36: 
line 37: " Program Keywords
line 38: syntax keyword jsStorageClass   const var let skipwhite skipempty nextgroup=jsDestructuringBlock,jsDestructuringArray,jsVariableDef
line 39: syntax match   jsVariableDef    contained /\<\K\k*/ skipwhite skipempty nextgroup=jsFlowDefinition
line 40: syntax keyword jsOperatorKeyword delete instanceof typeof void new in of skipwhite skipempty nextgroup=@jsExpression
line 41: syntax match   jsOperator       "[-!|&+<>=%/*~^]" skipwhite skipempty nextgroup=@jsExpression
line 42: syntax match   jsOperator       /::/ skipwhite skipempty nextgroup=@jsExpression
line 43: syntax keyword jsBooleanTrue    true
line 44: syntax keyword jsBooleanFalse   false
line 45: 
line 46: " Modules
line 47: syntax keyword jsImport                       import skipwhite skipempty nextgroup=jsModuleAsterisk,jsModuleKeyword,jsModuleGroup,jsFlowImportType
line 48: syntax keyword jsExport                       export skipwhite skipempty nextgroup=@jsAll,jsModuleGroup,jsExportDefault,jsModuleAsterisk,jsModuleKeyword,jsFlowTypeStatement
line 49: syntax match   jsModuleKeyword      contained /\<\K\k*/ skipwhite skipempty nextgroup=jsModuleAs,jsFrom,jsModuleComma
line 50: syntax keyword jsExportDefault      contained default skipwhite skipempty nextgroup=@jsExpression
line 51: syntax keyword jsExportDefaultGroup contained default skipwhite skipempty nextgroup=jsModuleAs,jsFrom,jsModuleComma
line 52: syntax match   jsModuleAsterisk     contained /\*/ skipwhite skipempty nextgroup=jsModuleKeyword,jsModuleAs,jsFrom
line 53: syntax keyword jsModuleAs           contained as skipwhite skipempty nextgroup=jsModuleKeyword,jsExportDefaultGroup
line 54: syntax keyword jsFrom               contained from skipwhite skipempty nextgroup=jsString
line 55: syntax match   jsModuleComma        contained /,/ skipwhite skipempty nextgroup=jsModuleKeyword,jsModuleAsterisk,jsModuleGroup,jsFlowTypeKeyword
line 56: 
line 57: " Strings, Templates, Numbers
line 58: syntax region  jsString           start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1+ end=+$+  contains=jsSpecial extend
line 59: syntax region  jsTemplateString   start=+`+  skip=+\\`+  end=+`+     contains=jsTemplateExpression,jsSpecial extend
line 60: syntax match   jsTaggedTemplate   /\<\K\k*\ze`/ nextgroup=jsTemplateString
line 61: syntax match   jsNumber           /\c\<\%(\d\+\%(e[+-]\=\d\+\)\=\|0b[01]\+\|0o\o\+\|0x\%(\x\|_\)\+\)n\=\>/
line 62: syntax keyword jsNumber           Infinity
line 63: syntax match   jsFloat            /\c\<\%(\d\+\.\d\+\|\d\+\.\|\.\d\+\)\%(e[+-]\=\d\+\)\=\>/
line 64: 
line 65: " Regular Expressions
line 66: syntax match   jsSpecial            contained "\v\\%(x\x\x|u%(\x{4}|\{\x{4,5}})|c\u|.)"
line 67: syntax region  jsTemplateExpression contained matchgroup=jsTemplateBraces start=+${+ end=+}+ contains=@jsExpression keepend
line 68: syntax region  jsRegexpCharClass    contained start=+\[+ skip=+\\.+ end=+\]+ contains=jsSpecial extend
line 69: syntax match   jsRegexpBoundary     contained "\v\c[$^]|\\b"
line 70: syntax match   jsRegexpBackRef      contained "\v\\[1-9]\d*"
line 71: syntax match   jsRegexpQuantifier   contained "\v[^\\]%([?*+]|\{\d+%(,\d*)?})\??"lc=1
line 72: syntax match   jsRegexpOr           contained "|"
line 73: syntax match   jsRegexpMod          contained "\v\(\?[:=!>]"lc=1
line 74: syntax region  jsRegexpGroup        contained start="[^\\]("lc=1 skip="\\.\|\[\(\\.\|[^]]\+\)\]" end=")" contains=jsRegexpCharClass,@jsRegexpSpecial keepend
line 75: syntax region  jsRegexpString   start=+\%(\%(\<return\|\<typeof\|\_[^)\]'"[:blank:][:alnum:]_$]\)\s*\)\@<=/\ze[^*/]+ skip=+\\.\|\[[^]]\{1,}\]+ end=+/[gimyus]\{,6}+ contains=jsRegexpCharClass,jsRegexpGroup,@jsRegexpSpecial oneline keepend extend
line 76: syntax cluster jsRegexpSpecial    contains=jsSpecial,jsRegexpBoundary,jsRegexpBackRef,jsRegexpQuantifier,jsRegexpOr,jsRegexpMod
line 77: 
line 78: " Objects
line 79: syntax match   jsObjectShorthandProp contained /\<\k*\ze\s*/ skipwhite skipempty nextgroup=jsObjectSeparator
line 80: syntax match   jsObjectKey         contained /\<\k*\ze\s*:/ contains=jsFunctionKey skipwhite skipempty nextgroup=jsObjectValue
line 81: syntax region  jsObjectKeyString   contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial skipwhite skipempty nextgroup=jsObjectValue
line 82: syntax region  jsObjectKeyComputed contained matchgroup=jsBrackets start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsObjectValue,jsFuncArgs extend
line 83: syntax match   jsObjectSeparator   contained /,/
line 84: syntax region  jsObjectValue       contained matchgroup=jsObjectColon start=/:/ end=/[,}]\@=/ contains=@jsExpression extend
line 85: syntax match   jsObjectFuncName    contained /\<\K\k*\ze\_s*(/ skipwhite skipempty nextgroup=jsFuncArgs
line 86: syntax match   jsFunctionKey       contained /\<\K\k*\ze\s*:\s*function\>/
line 87: syntax match   jsObjectMethodType  contained /\<[gs]et\ze\s\+\K\k*/ skipwhite skipempty nextgroup=jsObjectFuncName
line 88: syntax region  jsObjectStringKey   contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial extend skipwhite skipempty nextgroup=jsFuncArgs,jsObjectValue
line 89: 
line 90: exe 'syntax keyword jsNull      null             '.(exists('g:javascript_conceal_null')      ? 'conceal cchar='.g:javascript_conceal_null       : '')
line 90: syntax keyword jsNull      null             
line 91: exe 'syntax keyword jsReturn    return contained '.(exists('g:javascript_conceal_return')    ? 'conceal cchar='.g:javascript_conceal_return     : '').' skipwhite nextgroup=@jsExpression'
line 91: syntax keyword jsReturn    return contained  skipwhite nextgroup=@jsExpression
line 92: exe 'syntax keyword jsUndefined undefined        '.(exists('g:javascript_conceal_undefined') ? 'conceal cchar='.g:javascript_conceal_undefined  : '')
line 92: syntax keyword jsUndefined undefined        
line 93: exe 'syntax keyword jsNan       NaN              '.(exists('g:javascript_conceal_NaN')       ? 'conceal cchar='.g:javascript_conceal_NaN        : '')
line 93: syntax keyword jsNan       NaN              
line 94: exe 'syntax keyword jsPrototype prototype        '.(exists('g:javascript_conceal_prototype') ? 'conceal cchar='.g:javascript_conceal_prototype  : '')
line 94: syntax keyword jsPrototype prototype        
line 95: exe 'syntax keyword jsThis      this             '.(exists('g:javascript_conceal_this')      ? 'conceal cchar='.g:javascript_conceal_this       : '')
line 95: syntax keyword jsThis      this             
line 96: exe 'syntax keyword jsSuper     super  contained '.(exists('g:javascript_conceal_super')     ? 'conceal cchar='.g:javascript_conceal_super      : '')
line 96: syntax keyword jsSuper     super  contained 
line 97: 
line 98: " Statement Keywords
line 99: syntax match   jsBlockLabel              /\<\K\k*\s*::\@!/    contains=jsNoise skipwhite skipempty nextgroup=jsBlock
line 100: syntax match   jsBlockLabelKey contained /\<\K\k*\ze\s*\_[;]/
line 101: syntax keyword jsStatement     contained with yield debugger
line 102: syntax keyword jsStatement     contained break continue skipwhite skipempty nextgroup=jsBlockLabelKey
line 103: syntax keyword jsConditional            if              skipwhite skipempty nextgroup=jsParenIfElse
line 104: syntax keyword jsConditional            else            skipwhite skipempty nextgroup=jsCommentIfElse,jsIfElseBlock
line 105: syntax keyword jsConditional            switch          skipwhite skipempty nextgroup=jsParenSwitch
line 106: syntax keyword jsRepeat                 while for       skipwhite skipempty nextgroup=jsParenRepeat,jsForAwait
line 107: syntax keyword jsDo                     do              skipwhite skipempty nextgroup=jsRepeatBlock
line 108: syntax region  jsSwitchCase   contained matchgroup=jsLabel start=/\<\%(case\|default\)\>/ end=/:\@=/ contains=@jsExpression,jsLabel skipwhite skipempty nextgroup=jsSwitchColon keepend
line 109: syntax keyword jsTry                    try             skipwhite skipempty nextgroup=jsTryCatchBlock
line 110: syntax keyword jsFinally      contained finally         skipwhite skipempty nextgroup=jsFinallyBlock
line 111: syntax keyword jsCatch        contained catch           skipwhite skipempty nextgroup=jsParenCatch,jsTryCatchBlock
line 112: syntax keyword jsException              throw
line 113: syntax keyword jsAsyncKeyword           async await
line 114: syntax match   jsSwitchColon   contained /::\@!/        skipwhite skipempty nextgroup=jsSwitchBlock
line 115: 
line 116: " Keywords
line 117: syntax keyword jsGlobalObjects     ArrayBuffer Array BigInt BigInt64Array BigUint64Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray Boolean Buffer Collator DataView Date DateTimeFormat Function Intl Iterator JSON Map Set WeakMap WeakRef WeakSet Math Number NumberFormat Object ParallelArray Promise Proxy Reflect RegExp String Symbol Uint8ClampedArray WebAssembly console document fetch window
line 118: syntax keyword jsGlobalNodeObjects  module exports global process __dirname __filename
line 119: syntax match   jsGlobalNodeObjects  /\<require\>/ containedin=jsFuncCall
line 120: syntax keyword jsExceptions         Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError
line 121: syntax keyword jsBuiltins           decodeURI decodeURIComponent encodeURI encodeURIComponent eval isFinite isNaN parseFloat parseInt uneval
line 122: " DISCUSS: How imporant is this, really? Perhaps it should be linked to an error because I assume the keywords are reserved?
line 123: syntax keyword jsFutureKeys         abstract enum int short boolean interface byte long char final native synchronized float package throws goto private transient implements protected volatile double public
line 124: 
line 125: " DISCUSS: Should we really be matching stuff like this?
line 126: " DOM2 Objects
line 127: syntax keyword jsGlobalObjects  DOMImplementation DocumentFragment Document Node NodeList NamedNodeMap CharacterData Attr Element Text Comment CDATASection DocumentType Notation Entity EntityReference ProcessingInstruction
line 128: syntax keyword jsExceptions     DOMException
line 129: 
line 130: " DISCUSS: Should we really be matching stuff like this?
line 131: " DOM2 CONSTANT
line 132: syntax keyword jsDomErrNo       INDEX_SIZE_ERR DOMSTRING_SIZE_ERR HIERARCHY_REQUEST_ERR WRONG_DOCUMENT_ERR INVALID_CHARACTER_ERR NO_DATA_ALLOWED_ERR NO_MODIFICATION_ALLOWED_ERR NOT_FOUND_ERR NOT_SUPPORTED_ERR INUSE_ATTRIBUTE_ERR INVALID_STATE_ERR SYNTAX_ERR INVALID_MODIFICATION_ERR NAMESPACE_ERR INVALID_ACCESS_ERR
line 133: syntax keyword jsDomNodeConsts  ELEMENT_NODE ATTRIBUTE_NODE TEXT_NODE CDATA_SECTION_NODE ENTITY_REFERENCE_NODE ENTITY_NODE PROCESSING_INSTRUCTION_NODE COMMENT_NODE DOCUMENT_NODE DOCUMENT_TYPE_NODE DOCUMENT_FRAGMENT_NODE NOTATION_NODE
line 134: 
line 135: " DISCUSS: Should we really be special matching on these props?
line 136: " HTML events and internal variables
line 137: syntax keyword jsHtmlEvents     onblur onclick oncontextmenu ondblclick onfocus onkeydown onkeypress onkeyup onmousedown onmousemove onmouseout onmouseover onmouseup onresize
line 138: 
line 139: " Code blocks
line 140: syntax region  jsBracket                      matchgroup=jsBrackets            start=/\[/ end=/\]/ contains=@jsExpression,jsSpreadExpression extend fold
line 141: syntax region  jsParen                        matchgroup=jsParens              start=/(/  end=/)/  contains=@jsExpression extend fold nextgroup=jsFlowDefinition
line 142: syntax region  jsParenDecorator     contained matchgroup=jsParensDecorator     start=/(/  end=/)/  contains=@jsAll extend fold
line 143: syntax region  jsParenIfElse        contained matchgroup=jsParensIfElse        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsCommentIfElse,jsIfElseBlock,jsReturn extend fold
line 144: syntax region  jsParenRepeat        contained matchgroup=jsParensRepeat        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsCommentRepeat,jsRepeatBlock,jsReturn extend fold
line 145: syntax region  jsParenSwitch        contained matchgroup=jsParensSwitch        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsSwitchBlock extend fold
line 146: syntax region  jsParenCatch         contained matchgroup=jsParensCatch         start=/(/  end=/)/  skipwhite skipempty nextgroup=jsTryCatchBlock extend fold
line 147: syntax region  jsFuncArgs           contained matchgroup=jsFuncParens          start=/(/  end=/)/  contains=jsFuncArgCommas,jsComment,jsFuncArgExpression,jsDestructuringBlock,jsDestructuringArray,jsRestExpression,jsFlowArgumentDef skipwhite skipempty nextgroup=jsCommentFunction,jsFuncBlock,jsFlowReturn extend fold
line 148: syntax region  jsClassBlock         contained matchgroup=jsClassBraces         start=/{/  end=/}/  contains=jsClassFuncName,jsClassMethodType,jsArrowFunction,jsArrowFuncArgs,jsComment,jsGenerator,jsDecorator,jsClassProperty,jsClassPropertyComputed,jsClassStringKey,jsAsyncKeyword,jsNoise extend fold
line 149: syntax region  jsFuncBlock          contained matchgroup=jsFuncBraces          start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 150: syntax region  jsIfElseBlock        contained matchgroup=jsIfElseBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 151: syntax region  jsTryCatchBlock      contained matchgroup=jsTryCatchBraces      start=/{/  end=/}/  contains=@jsAll,jsBlock skipwhite skipempty nextgroup=jsCatch,jsFinally extend fold
line 152: syntax region  jsFinallyBlock       contained matchgroup=jsFinallyBraces       start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 153: syntax region  jsSwitchBlock        contained matchgroup=jsSwitchBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock,jsSwitchCase extend fold
line 154: syntax region  jsRepeatBlock        contained matchgroup=jsRepeatBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 155: syntax region  jsDestructuringBlock contained matchgroup=jsDestructuringBraces start=/{/  end=/}/  contains=jsDestructuringProperty,jsDestructuringAssignment,jsDestructuringNoise,jsDestructuringPropertyComputed,jsSpreadExpression,jsComment nextgroup=jsFlowDefinition extend fold
line 156: syntax region  jsDestructuringArray contained matchgroup=jsDestructuringBraces start=/\[/ end=/\]/ contains=jsDestructuringPropertyValue,jsDestructuringNoise,jsDestructuringProperty,jsSpreadExpression,jsDestructuringBlock,jsDestructuringArray,jsComment nextgroup=jsFlowDefinition extend fold
line 157: syntax region  jsObject             contained matchgroup=jsObjectBraces        start=/{/  end=/}/  contains=jsObjectKey,jsObjectKeyString,jsObjectKeyComputed,jsObjectShorthandProp,jsObjectSeparator,jsObjectFuncName,jsObjectMethodType,jsGenerator,jsComment,jsObjectStringKey,jsSpreadExpression,jsDecorator,jsAsyncKeyword,jsTemplateString extend fold
line 158: syntax region  jsBlock                        matchgroup=jsBraces              start=/{/  end=/}/  contains=@jsAll,jsSpreadExpression extend fold
line 159: syntax region  jsModuleGroup        contained matchgroup=jsModuleBraces        start=/{/ end=/}/   contains=jsModuleKeyword,jsModuleComma,jsModuleAs,jsComment,jsFlowTypeKeyword skipwhite skipempty nextgroup=jsFrom fold
line 160: syntax region  jsSpreadExpression   contained matchgroup=jsSpreadOperator      start=/\.\.\./ end=/[,}\]]\@=/ contains=@jsExpression
line 161: syntax region  jsRestExpression     contained matchgroup=jsRestOperator        start=/\.\.\./ end=/[,)]\@=/
line 162: syntax region  jsTernaryIf                    matchgroup=jsTernaryIfOperator   start=/?:\@!/  end=/\%(:\|}\@=\)/  contains=@jsExpression extend skipwhite skipempty nextgroup=@jsExpression
line 163: " These must occur here or they will be override by jsTernaryIf
line 164: syntax match   jsOperator           /?\.\ze\_D/
line 165: syntax match   jsOperator           /??/ skipwhite skipempty nextgroup=@jsExpression
line 166: 
line 167: syntax match   jsGenerator            contained /\*/ skipwhite skipempty nextgroup=jsFuncName,jsFuncArgs,jsFlowFunctionGroup
line 168: syntax match   jsFuncName             contained /\<\K\k*/ skipwhite skipempty nextgroup=jsFuncArgs,jsFlowFunctionGroup
line 169: syntax region  jsFuncArgExpression    contained matchgroup=jsFuncArgOperator start=/=/ end=/[,)]\@=/ contains=@jsExpression extend
line 170: syntax match   jsFuncArgCommas        contained ','
line 171: syntax keyword jsArguments            contained arguments
line 172: syntax keyword jsForAwait             contained await skipwhite skipempty nextgroup=jsParenRepeat
line 173: 
line 174: " Matches a single keyword argument with no parens
line 175: syntax match   jsArrowFuncArgs  /\<\K\k*\ze\s*=>/ skipwhite contains=jsFuncArgs skipwhite skipempty nextgroup=jsArrowFunction extend
line 176: " Matches a series of arguments surrounded in parens
line 177: syntax match   jsArrowFuncArgs  /([^()]*)\ze\s*=>/ contains=jsFuncArgs skipempty skipwhite nextgroup=jsArrowFunction extend
line 178: 
line 179: exe 'syntax match jsFunction /\<function\>/      skipwhite skipempty nextgroup=jsGenerator,jsFuncName,jsFuncArgs,jsFlowFunctionGroup skipwhite '.(exists('g:javascript_conceal_function') ? 'conceal cchar='.g:javascript_conceal_function : '')
line 179: syntax match jsFunction /\<function\>/      skipwhite skipempty nextgroup=jsGenerator,jsFuncName,jsFuncArgs,jsFlowFunctionGroup skipwhite 
line 180: exe 'syntax match jsArrowFunction /=>/           skipwhite skipempty nextgroup=jsFuncBlock,jsCommentFunction '.(exists('g:javascript_conceal_arrow_function') ? 'conceal cchar='.g:javascript_conceal_arrow_function : '')
line 180: syntax match jsArrowFunction /=>/           skipwhite skipempty nextgroup=jsFuncBlock,jsCommentFunction 
line 181: exe 'syntax match jsArrowFunction /()\ze\s*=>/   skipwhite skipempty nextgroup=jsArrowFunction '.(exists('g:javascript_conceal_noarg_arrow_function') ? 'conceal cchar='.g:javascript_conceal_noarg_arrow_function : '')
line 181: syntax match jsArrowFunction /()\ze\s*=>/   skipwhite skipempty nextgroup=jsArrowFunction 
line 182: exe 'syntax match jsArrowFunction /_\ze\s*=>/    skipwhite skipempty nextgroup=jsArrowFunction '.(exists('g:javascript_conceal_underscore_arrow_function') ? 'conceal cchar='.g:javascript_conceal_underscore_arrow_function : '')
line 182: syntax match jsArrowFunction /_\ze\s*=>/    skipwhite skipempty nextgroup=jsArrowFunction 
line 183: 
line 184: " Classes
line 185: syntax keyword jsClassKeyword           contained class
line 186: syntax keyword jsExtendsKeyword         contained extends skipwhite skipempty nextgroup=@jsExpression
line 187: syntax match   jsClassNoise             contained /\./
line 188: syntax match   jsClassFuncName          contained /\<\K\k*\ze\s*[(<]/ skipwhite skipempty nextgroup=jsFuncArgs,jsFlowClassFunctionGroup
line 189: syntax match   jsClassMethodType        contained /\<\%([gs]et\|static\)\ze\s\+\K\k*/ skipwhite skipempty nextgroup=jsAsyncKeyword,jsClassFuncName,jsClassProperty
line 190: syntax region  jsClassDefinition                  start=/\<class\>/ end=/\(\<extends\>\s\+\)\@<!{\@=/ contains=jsClassKeyword,jsExtendsKeyword,jsClassNoise,@jsExpression,jsFlowClassGroup skipwhite skipempty nextgroup=jsCommentClass,jsClassBlock,jsFlowClassGroup
line 191: syntax match   jsClassProperty          contained /\<\K\k*\ze\s*[=;]/ skipwhite skipempty nextgroup=jsClassValue,jsFlowClassDef
line 192: syntax region  jsClassValue             contained start=/=/ end=/\_[;}]\@=/ contains=@jsExpression
line 193: syntax region  jsClassPropertyComputed  contained matchgroup=jsBrackets start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsFuncArgs,jsClassValue extend
line 194: syntax region  jsClassStringKey         contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial extend skipwhite skipempty nextgroup=jsFuncArgs
line 195: 
line 196: " Destructuring
line 197: syntax match   jsDestructuringPropertyValue     contained /\k\+/
line 198: syntax match   jsDestructuringProperty          contained /\k\+\ze\s*=/ skipwhite skipempty nextgroup=jsDestructuringValue
line 199: syntax match   jsDestructuringAssignment        contained /\k\+\ze\s*:/ skipwhite skipempty nextgroup=jsDestructuringValueAssignment
line 200: syntax region  jsDestructuringValue             contained start=/=/ end=/[,}\]]\@=/ contains=@jsExpression extend
line 201: syntax region  jsDestructuringValueAssignment   contained start=/:/ end=/[,}=]\@=/ contains=jsDestructuringPropertyValue,jsDestructuringBlock,jsNoise,jsDestructuringNoise skipwhite skipempty nextgroup=jsDestructuringValue extend
line 202: syntax match   jsDestructuringNoise             contained /[,[\]]/
line 203: syntax region  jsDestructuringPropertyComputed  contained matchgroup=jsDestructuringBraces start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsDestructuringValue,jsDestructuringValueAssignment,jsDestructuringNoise extend fold
line 204: 
line 205: " Comments
line 206: syntax keyword jsCommentTodo    contained TODO FIXME XXX TBD NOTE
line 207: syntax region  jsComment        start=+//+ end=/$/ contains=jsCommentTodo,@Spell extend keepend
line 208: syntax region  jsComment        start=+/\*+  end=+\*/+ contains=jsCommentTodo,@Spell fold extend keepend
line 209: syntax region  jsEnvComment     start=/\%^#!/ end=/$/ display
line 210: 
line 211: " Specialized Comments - These are special comment regexes that are used in
line 212: " odd places that maintain the proper nextgroup functionality. It sucks we
line 213: " can't make jsComment a skippable type of group for nextgroup
line 214: syntax region  jsCommentFunction    contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsFuncBlock,jsFlowReturn extend keepend
line 215: syntax region  jsCommentFunction    contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsFuncBlock,jsFlowReturn fold extend keepend
line 216: syntax region  jsCommentClass       contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsClassBlock,jsFlowClassGroup extend keepend
line 217: syntax region  jsCommentClass       contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsClassBlock,jsFlowClassGroup fold extend keepend
line 218: syntax region  jsCommentIfElse      contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsIfElseBlock extend keepend
line 219: syntax region  jsCommentIfElse      contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsIfElseBlock fold extend keepend
line 220: syntax region  jsCommentRepeat      contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsRepeatBlock extend keepend
line 221: syntax region  jsCommentRepeat      contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsRepeatBlock fold extend keepend
line 222: 
line 223: " Decorators
line 224: syntax match   jsDecorator                    /^\s*@/ nextgroup=jsDecoratorFunction
line 225: syntax match   jsDecoratorFunction  contained /\h[a-zA-Z0-9_.]*/ nextgroup=jsParenDecorator
line 226: 
line 227: if exists("javascript_plugin_jsdoc")
line 228:   runtime extras/jsdoc.vim
Searching for "extras/jsdoc.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 228: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'javascript', 'extras/jsdoc.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim', 'javascript', 'extras/jsdoc.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim

line 2:   finish
line 3: endif
line 4: 
line 5: "" syntax coloring for javadoc comments (HTML)
line 6: syntax region jsComment    matchgroup=jsComment start="/\*\s*"  end="\*/" contains=jsDocTags,jsCommentTodo,jsCvsTag,@jsHtml,@Spell fold
line 7: 
line 8: " tags containing a param
line 9: syntax match  jsDocTags         contained "@\(alias\|api\|augments\|borrows\|class\|constructs\|default\|defaultvalue\|emits\|exception\|exports\|extends\|fires\|kind\|link\|listens\|member\|member[oO]f\|mixes\|module\|name\|namespace\|requires\|template\|throws\|var\|variation\|version\)\>" skipwhite nextgroup=jsDocParam
line 10: " tags containing type and param
line 11: syntax match  jsDocTags         contained "@\(arg\|argument\|cfg\|param\|property\|prop\|typedef\)\>" skipwhite nextgroup=jsDocType
line 12: " tags containing type but no param
line 13: syntax match  jsDocTags         contained "@\(callback\|define\|enum\|external\|implements\|this\|type\|return\|returns\|yields\)\>" skipwhite nextgroup=jsDocTypeNoParam
line 14: " tags containing references
line 15: syntax match  jsDocTags         contained "@\(lends\|see\|tutorial\)\>" skipwhite nextgroup=jsDocSeeTag
line 16: " other tags (no extra syntax)
line 17: syntax match  jsDocTags         contained "@\(abstract\|access\|accessor\|async\|author\|classdesc\|constant\|const\|constructor\|copyright\|deprecated\|desc\|description\|dict\|event\|example\|file\|file[oO]verview\|final\|function\|global\|ignore\|inherit[dD]oc\|inner\|instance\|interface\|license\|localdoc\|method\|mixin\|nosideeffects\|override\|overview\|preserve\|private\|protected\|public\|readonly\|since\|static\|struct\|todo\|summary\|undocumented\|virtual\)\>"
line 18: 
line 19: syntax region jsDocType         contained matchgroup=jsDocTypeBrackets start="{" end="}" contains=jsDocTypeRecord oneline skipwhite nextgroup=jsDocParam
line 20: syntax match  jsDocType         contained "\%(#\|\"\|\w\|\.\|:\|\/\)\+" skipwhite nextgroup=jsDocParam
line 21: syntax region jsDocTypeRecord   contained start=/{/ end=/}/ contains=jsDocTypeRecord extend
line 22: syntax region jsDocTypeRecord   contained start=/\[/ end=/\]/ contains=jsDocTypeRecord extend
line 23: syntax region jsDocTypeNoParam  contained start="{" end="}" oneline
line 24: syntax match  jsDocTypeNoParam  contained "\%(#\|\"\|\w\|\.\|:\|\/\)\+"
line 25: syntax match  jsDocParam        contained "\%(#\|\$\|-\|'\|\"\|{.\{-}}\|\w\|\.\|:\|\/\|\[.\{-}]\|=\)\+"
line 26: syntax region jsDocSeeTag       contained matchgroup=jsDocSeeTag start="{" end="}" contains=jsDocTags
line 27: 
line 28: if version >= 508 || !exists("did_javascript_syn_inits")
line 29:   if version < 508
line 30:     let did_javascript_syn_inits = 1
line 31:     command -nargs=+ HiLink hi link <args>
line 32:   else
line 33:     command -nargs=+ HiLink hi def link <args>
line 34:   endif
line 35:   HiLink jsDocTags              Special
line 35: hi def link jsDocTags              Special
line 36:   HiLink jsDocSeeTag            Function
line 36: hi def link jsDocSeeTag            Function
line 37:   HiLink jsDocType              Type
line 37: hi def link jsDocType              Type
line 38:   HiLink jsDocTypeBrackets      jsDocType
line 38: hi def link jsDocTypeBrackets      jsDocType
line 39:   HiLink jsDocTypeRecord        jsDocType
line 39: hi def link jsDocTypeRecord        jsDocType
line 40:   HiLink jsDocTypeNoParam       Type
line 40: hi def link jsDocTypeNoParam       Type
line 41:   HiLink jsDocParam             Label
line 41: hi def link jsDocParam             Label
line 42:   delcommand HiLink
line 43: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim
line 229:   " NGDoc requires JSDoc
line 230:   if exists("javascript_plugin_ngdoc")
line 231:     runtime extras/ngdoc.vim
line 232:   endif
line 233: endif
line 234: 
line 235: if exists("javascript_plugin_flow")
line 236:   runtime extras/flow.vim
line 237: endif
line 238: 
line 239: syntax cluster jsExpression  contains=jsBracket,jsParen,jsObject,jsTernaryIf,jsTaggedTemplate,jsTemplateString,jsString,jsRegexpString,jsNumber,jsFloat,jsOperator,jsOperatorKeyword,jsBooleanTrue,jsBooleanFalse,jsNull,jsFunction,jsArrowFunction,jsGlobalObjects,jsExceptions,jsFutureKeys,jsDomErrNo,jsDomNodeConsts,jsHtmlEvents,jsFuncCall,jsUndefined,jsNan,jsPrototype,jsBuiltins,jsNoise,jsClassDefinition,jsArrowFunction,jsArrowFuncArgs,jsParensError,jsComment,jsArguments,jsThis,jsSuper,jsDo,jsForAwait,jsAsyncKeyword,jsStatement,jsDot
line 240: syntax cluster jsAll         contains=@jsExpression,jsStorageClass,jsConditional,jsRepeat,jsReturn,jsException,jsTry,jsNoise,jsBlockLabel
line 241: 
line 242: " Define the default highlighting.
line 243: " For version 5.7 and earlier: only when not done already
line 244: " For version 5.8 and later: only when an item doesn't have highlighting yet
line 245: if version >= 508 || !exists("did_javascript_syn_inits")
line 246:   if version < 508
line 247:     let did_javascript_syn_inits = 1
line 248:     command -nargs=+ HiLink hi link <args>
line 249:   else
line 250:     command -nargs=+ HiLink hi def link <args>
line 251:   endif
line 252:   HiLink jsComment              Comment
line 252: hi def link jsComment              Comment
line 253:   HiLink jsEnvComment           PreProc
line 253: hi def link jsEnvComment           PreProc
line 254:   HiLink jsParensIfElse         jsParens
line 254: hi def link jsParensIfElse         jsParens
line 255:   HiLink jsParensRepeat         jsParens
line 255: hi def link jsParensRepeat         jsParens
line 256:   HiLink jsParensSwitch         jsParens
line 256: hi def link jsParensSwitch         jsParens
line 257:   HiLink jsParensCatch          jsParens
line 257: hi def link jsParensCatch          jsParens
line 258:   HiLink jsCommentTodo          Todo
line 258: hi def link jsCommentTodo          Todo
line 259:   HiLink jsString               String
line 259: hi def link jsString               String
line 260:   HiLink jsObjectKeyString      String
line 260: hi def link jsObjectKeyString      String
line 261:   HiLink jsTemplateString       String
line 261: hi def link jsTemplateString       String
line 262:   HiLink jsObjectStringKey      String
line 262: hi def link jsObjectStringKey      String
line 263:   HiLink jsClassStringKey       String
line 263: hi def link jsClassStringKey       String
line 264:   HiLink jsTaggedTemplate       StorageClass
line 264: hi def link jsTaggedTemplate       StorageClass
line 265:   HiLink jsTernaryIfOperator    Operator
line 265: hi def link jsTernaryIfOperator    Operator
line 266:   HiLink jsRegexpString         String
line 266: hi def link jsRegexpString         String
line 267:   HiLink jsRegexpBoundary       SpecialChar
line 267: hi def link jsRegexpBoundary       SpecialChar
line 268:   HiLink jsRegexpQuantifier     SpecialChar
line 268: hi def link jsRegexpQuantifier     SpecialChar
line 269:   HiLink jsRegexpOr             Conditional
line 269: hi def link jsRegexpOr             Conditional
line 270:   HiLink jsRegexpMod            SpecialChar
line 270: hi def link jsRegexpMod            SpecialChar
line 271:   HiLink jsRegexpBackRef        SpecialChar
line 271: hi def link jsRegexpBackRef        SpecialChar
line 272:   HiLink jsRegexpGroup          jsRegexpString
line 272: hi def link jsRegexpGroup          jsRegexpString
line 273:   HiLink jsRegexpCharClass      Character
line 273: hi def link jsRegexpCharClass      Character
line 274:   HiLink jsCharacter            Character
line 274: hi def link jsCharacter            Character
line 275:   HiLink jsPrototype            Special
line 275: hi def link jsPrototype            Special
line 276:   HiLink jsConditional          Conditional
line 276: hi def link jsConditional          Conditional
line 277:   HiLink jsBranch               Conditional
line 277: hi def link jsBranch               Conditional
line 278:   HiLink jsLabel                Label
line 278: hi def link jsLabel                Label
line 279:   HiLink jsReturn               Statement
line 279: hi def link jsReturn               Statement
line 280:   HiLink jsRepeat               Repeat
line 280: hi def link jsRepeat               Repeat
line 281:   HiLink jsDo                   Repeat
line 281: hi def link jsDo                   Repeat
line 282:   HiLink jsStatement            Statement
line 282: hi def link jsStatement            Statement
line 283:   HiLink jsException            Exception
line 283: hi def link jsException            Exception
line 284:   HiLink jsTry                  Exception
line 284: hi def link jsTry                  Exception
line 285:   HiLink jsFinally              Exception
line 285: hi def link jsFinally              Exception
line 286:   HiLink jsCatch                Exception
line 286: hi def link jsCatch                Exception
line 287:   HiLink jsAsyncKeyword         Keyword
line 287: hi def link jsAsyncKeyword         Keyword
line 288:   HiLink jsForAwait             Keyword
line 288: hi def link jsForAwait             Keyword
line 289:   HiLink jsArrowFunction        Type
line 289: hi def link jsArrowFunction        Type
line 290:   HiLink jsFunction             Type
line 290: hi def link jsFunction             Type
line 291:   HiLink jsGenerator            jsFunction
line 291: hi def link jsGenerator            jsFunction
line 292:   HiLink jsArrowFuncArgs        jsFuncArgs
line 292: hi def link jsArrowFuncArgs        jsFuncArgs
line 293:   HiLink jsFuncName             Function
line 293: hi def link jsFuncName             Function
line 294:   HiLink jsFuncCall             Function
line 294: hi def link jsFuncCall             Function
line 295:   HiLink jsClassFuncName        jsFuncName
line 295: hi def link jsClassFuncName        jsFuncName
line 296:   HiLink jsObjectFuncName       Function
line 296: hi def link jsObjectFuncName       Function
line 297:   HiLink jsArguments            Special
line 297: hi def link jsArguments            Special
line 298:   HiLink jsError                Error
line 298: hi def link jsError                Error
line 299:   HiLink jsParensError          Error
line 299: hi def link jsParensError          Error
line 300:   HiLink jsOperatorKeyword      jsOperator
line 300: hi def link jsOperatorKeyword      jsOperator
line 301:   HiLink jsOperator             Operator
line 301: hi def link jsOperator             Operator
line 302:   HiLink jsOf                   Operator
line 302: hi def link jsOf                   Operator
line 303:   HiLink jsStorageClass         StorageClass
line 303: hi def link jsStorageClass         StorageClass
line 304:   HiLink jsClassKeyword         Keyword
line 304: hi def link jsClassKeyword         Keyword
line 305:   HiLink jsExtendsKeyword       Keyword
line 305: hi def link jsExtendsKeyword       Keyword
line 306:   HiLink jsThis                 Special
line 306: hi def link jsThis                 Special
line 307:   HiLink jsSuper                Constant
line 307: hi def link jsSuper                Constant
line 308:   HiLink jsNan                  Number
line 308: hi def link jsNan                  Number
line 309:   HiLink jsNull                 Type
line 309: hi def link jsNull                 Type
line 310:   HiLink jsUndefined            Type
line 310: hi def link jsUndefined            Type
line 311:   HiLink jsNumber               Number
line 311: hi def link jsNumber               Number
line 312:   HiLink jsFloat                Float
line 312: hi def link jsFloat                Float
line 313:   HiLink jsBooleanTrue          Boolean
line 313: hi def link jsBooleanTrue          Boolean
line 314:   HiLink jsBooleanFalse         Boolean
line 314: hi def link jsBooleanFalse         Boolean
line 315:   HiLink jsObjectColon          jsNoise
line 315: hi def link jsObjectColon          jsNoise
line 316:   HiLink jsNoise                Noise
line 316: hi def link jsNoise                Noise
line 317:   HiLink jsDot                  Noise
line 317: hi def link jsDot                  Noise
line 318:   HiLink jsBrackets             Noise
line 318: hi def link jsBrackets             Noise
line 319:   HiLink jsParens               Noise
line 319: hi def link jsParens               Noise
line 320:   HiLink jsBraces               Noise
line 320: hi def link jsBraces               Noise
line 321:   HiLink jsFuncBraces           Noise
line 321: hi def link jsFuncBraces           Noise
line 322:   HiLink jsFuncParens           Noise
line 322: hi def link jsFuncParens           Noise
line 323:   HiLink jsClassBraces          Noise
line 323: hi def link jsClassBraces          Noise
line 324:   HiLink jsClassNoise           Noise
line 324: hi def link jsClassNoise           Noise
line 325:   HiLink jsIfElseBraces         Noise
line 325: hi def link jsIfElseBraces         Noise
line 326:   HiLink jsTryCatchBraces       Noise
line 326: hi def link jsTryCatchBraces       Noise
line 327:   HiLink jsModuleBraces         Noise
line 327: hi def link jsModuleBraces         Noise
line 328:   HiLink jsObjectBraces         Noise
line 328: hi def link jsObjectBraces         Noise
line 329:   HiLink jsObjectSeparator      Noise
line 329: hi def link jsObjectSeparator      Noise
line 330:   HiLink jsFinallyBraces        Noise
line 330: hi def link jsFinallyBraces        Noise
line 331:   HiLink jsRepeatBraces         Noise
line 331: hi def link jsRepeatBraces         Noise
line 332:   HiLink jsSwitchBraces         Noise
line 332: hi def link jsSwitchBraces         Noise
line 333:   HiLink jsSpecial              Special
line 333: hi def link jsSpecial              Special
line 334:   HiLink jsTemplateBraces       Noise
line 334: hi def link jsTemplateBraces       Noise
line 335:   HiLink jsGlobalObjects        Constant
line 335: hi def link jsGlobalObjects        Constant
line 336:   HiLink jsGlobalNodeObjects    Constant
line 336: hi def link jsGlobalNodeObjects    Constant
line 337:   HiLink jsExceptions           Constant
line 337: hi def link jsExceptions           Constant
line 338:   HiLink jsBuiltins             Constant
line 338: hi def link jsBuiltins             Constant
line 339:   HiLink jsImport               Include
line 339: hi def link jsImport               Include
line 340:   HiLink jsExport               Include
line 340: hi def link jsExport               Include
line 341:   HiLink jsExportDefault        StorageClass
line 341: hi def link jsExportDefault        StorageClass
line 342:   HiLink jsExportDefaultGroup   jsExportDefault
line 342: hi def link jsExportDefaultGroup   jsExportDefault
line 343:   HiLink jsModuleAs             Include
line 343: hi def link jsModuleAs             Include
line 344:   HiLink jsModuleComma          jsNoise
line 344: hi def link jsModuleComma          jsNoise
line 345:   HiLink jsModuleAsterisk       Noise
line 345: hi def link jsModuleAsterisk       Noise
line 346:   HiLink jsFrom                 Include
line 346: hi def link jsFrom                 Include
line 347:   HiLink jsDecorator            Special
line 347: hi def link jsDecorator            Special
line 348:   HiLink jsDecoratorFunction    Function
line 348: hi def link jsDecoratorFunction    Function
line 349:   HiLink jsParensDecorator      jsParens
line 349: hi def link jsParensDecorator      jsParens
line 350:   HiLink jsFuncArgOperator      jsFuncArgs
line 350: hi def link jsFuncArgOperator      jsFuncArgs
line 351:   HiLink jsClassProperty        jsObjectKey
line 351: hi def link jsClassProperty        jsObjectKey
line 352:   HiLink jsObjectShorthandProp  jsObjectKey
line 352: hi def link jsObjectShorthandProp  jsObjectKey
line 353:   HiLink jsSpreadOperator       Operator
line 353: hi def link jsSpreadOperator       Operator
line 354:   HiLink jsRestOperator         Operator
line 354: hi def link jsRestOperator         Operator
line 355:   HiLink jsRestExpression       jsFuncArgs
line 355: hi def link jsRestExpression       jsFuncArgs
line 356:   HiLink jsSwitchColon          Noise
line 356: hi def link jsSwitchColon          Noise
line 357:   HiLink jsClassMethodType      Type
line 357: hi def link jsClassMethodType      Type
line 358:   HiLink jsObjectMethodType     Type
line 358: hi def link jsObjectMethodType     Type
line 359:   HiLink jsClassDefinition      jsFuncName
line 359: hi def link jsClassDefinition      jsFuncName
line 360:   HiLink jsBlockLabel           Identifier
line 360: hi def link jsBlockLabel           Identifier
line 361:   HiLink jsBlockLabelKey        jsBlockLabel
line 361: hi def link jsBlockLabelKey        jsBlockLabel
line 362: 
line 363:   HiLink jsDestructuringBraces     Noise
line 363: hi def link jsDestructuringBraces     Noise
line 364:   HiLink jsDestructuringProperty   jsFuncArgs
line 364: hi def link jsDestructuringProperty   jsFuncArgs
line 365:   HiLink jsDestructuringAssignment jsObjectKey
line 365: hi def link jsDestructuringAssignment jsObjectKey
line 366:   HiLink jsDestructuringNoise      Noise
line 366: hi def link jsDestructuringNoise      Noise
line 367: 
line 368:   HiLink jsCommentFunction      jsComment
line 368: hi def link jsCommentFunction      jsComment
line 369:   HiLink jsCommentClass         jsComment
line 369: hi def link jsCommentClass         jsComment
line 370:   HiLink jsCommentIfElse        jsComment
line 370: hi def link jsCommentIfElse        jsComment
line 371:   HiLink jsCommentRepeat        jsComment
line 371: hi def link jsCommentRepeat        jsComment
line 372: 
line 373:   HiLink jsDomErrNo             Constant
line 373: hi def link jsDomErrNo             Constant
line 374:   HiLink jsDomNodeConsts        Constant
line 374: hi def link jsDomNodeConsts        Constant
line 375:   HiLink jsDomElemAttrs         Label
line 375: hi def link jsDomElemAttrs         Label
line 376:   HiLink jsDomElemFuncs         PreProc
line 376: hi def link jsDomElemFuncs         PreProc
line 377: 
line 378:   HiLink jsHtmlEvents           Special
line 378: hi def link jsHtmlEvents           Special
line 379:   HiLink jsHtmlElemAttrs        Label
line 379: hi def link jsHtmlElemAttrs        Label
line 380:   HiLink jsHtmlElemFuncs        PreProc
line 380: hi def link jsHtmlElemFuncs        PreProc
line 381: 
line 382:   HiLink jsCssStyles            Label
line 382: hi def link jsCssStyles            Label
line 383: 
line 384:   delcommand HiLink
line 385: endif
line 386: 
line 387: " Define the htmlJavaScript for HTML syntax html.vim
line 388: syntax cluster  htmlJavaScript       contains=@jsAll,jsImport,jsExport
line 389: syntax cluster  javaScriptExpression contains=@jsAll
line 390: 
line 391: " Vim's default html.vim highlights all javascript as 'Special'
line 392: hi! def link javaScript              NONE
line 393: 
line 394: let b:current_syntax = "javascript"
line 395: if main_syntax == 'javascript'
line 396:   unlet main_syntax
line 397: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim"
line 1: " Vim syntax file
line 2: " Language:^IJavaScript
line 3: " Maintainer:^IClaudio Fleiner <claudio@fleiner.com>
line 4: " Updaters:^IScott Shattuck (ss) <ss@technicalpursuit.com>
line 5: " URL:^I^Ihttp://www.fleiner.com/vim/syntax/javascript.vim
line 6: " Changes:^I(ss) added keywords, reserved words, and other identifiers
line 7: "^I^I(ss) repaired several quoting and grouping glitches
line 8: "^I^I(ss) fixed regex parsing issue with multiple qualifiers [gi]
line 9: "^I^I(ss) additional factoring of keywords, globals, and members
line 10: " Last Change:^I2021 Mar 30
line 11: " ^I^I2013 Jun 12: adjusted javaScriptRegexpString (Kevin Locke)
line 12: " ^I^I2018 Apr 14: adjusted javaScriptRegexpString (LongJohnCoder)
line 13: 
line 14: " tuning parameters:
line 15: " unlet javaScript_fold
line 16: 
line 17: if !exists("main_syntax")
line 18:   " quit when a syntax file was already loaded
line 19:   if exists("b:current_syntax")
line 20:     finish
line 21:   endif
line 22:   let main_syntax = 'javascript'
line 23: elseif exists("b:current_syntax") && b:current_syntax == "javascript"
line 24:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/javascript.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugg...m-polyglot/after/syntax/javascript.vim', 'jsx', 'after/syntax/javascript.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim

line 2:   finish
line 3: endif
line 4: 
line 5: if get(g:, 'vim_jsx_pretty_disable_js', 0)
line 6:   finish
line 7: endif
line 8: 
line 9: source <sfile>:h/jsx.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 9: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/jsx.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim', 'jsx', 'after/syntax/jsx.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim

line 2:   finish
line 3: endif
line 4: 
line 5: """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
line 6: " Vim syntax file
line 7: "
line 8: " Language: javascript.jsx
line 9: " Maintainer: MaxMellon <maxmellon1994@gmail.com>
line 10: "
line 11: """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
line 12: 
line 13: let s:jsx_cpo = &cpo
line 14: set cpo&vim
line 15: 
line 16: syntax case match
line 17: 
line 18: if exists('b:current_syntax')
line 19:   let s:current_syntax = b:current_syntax
line 20:   unlet b:current_syntax
line 21: endif
line 22: 
line 23: if exists('s:current_syntax')
line 24:   let b:current_syntax = s:current_syntax
line 25: endif
line 26: 
line 27: if hlexists("jsDebugger") || hlexists("jsNoise")    " yuezk/vim-js or pangloss/vim-javascript
line 28:   syntax cluster jsExpression add=jsxRegion
line 29: elseif hlexists("javascriptOpSymbols")    " othree/yajs.vim
line 30:   " refine the javascript line comment
line 31:   syntax region javascriptLineComment start=+//+ end=/$/ contains=@Spell,javascriptCommentTodo extend keepend
line 32:   syntax cluster javascriptValue add=jsxRegion
line 33:   syntax cluster javascriptNoReserved add=jsxElement,jsxTag
line 34: else    " build-in javascript syntax
line 35:   " refine the javascript line comment
line 36:   syntax region javaScriptLineComment start=+//+ end=/$/ contains=@Spell,javascriptCommentTodo extend keepend
line 37: 
line 38:   " refine the template string syntax
line 39:   syntax region javaScriptEmbed matchgroup=javaScriptEmbedBraces start=+\${+ end=+}+ contained contains=@javaScriptEmbededExpr
line 40: 
line 41:   " add a javaScriptBlock group for build-in syntax
line 42:   syntax region javaScriptBlock matchgroup=javaScriptBraces start="{" end="}" contained extend contains=javaScriptBlock,@javaScriptEmbededExpr,javaScript.* fold
line 50: 
line 51:   syntax cluster javaScriptEmbededExpr add=jsxRegion,javaScript.*
line 52: endif
line 53: 
line 54: runtime syntax/jsx_pretty.vim
Searching for "syntax/jsx_pretty.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/jsx_pretty.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/jsx_pretty.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 54: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/jsx_pretty.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugg...m-polyglot/after/syntax/jsx_pretty.vim', 'jsx', 'after/syntax/jsx_pretty.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim

line 2:   finish
line 3: endif
line 4: 
line 5: let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)
line 6: 
line 7: " detect jsx region
line 8: syntax region jsxRegion start=+\%(\%(\_[([,?:=+\-*/>{}]\|<\s\+\|&&\|||\|=>\|\<return\|\<default\|\<await\|\<yield\)\_s*\)\@<=<\_s*\%(>\|\z(\%(script\|\s*\<T\>\)\@!\<[_$A-Za-z][-:._$A-Za-z0-9]*\>\)\%(\_s*\%([-+*)\]}&|?,]\|/\%([/*]\|\_s*>\)\@!\)\)\@!\)+ end=++ contains=jsxElement
line 12: 
line 13: " <tag id="sample">
line 14: " ~~~~~~~~~~~~~~~~~
line 15: " and self close tag
line 16: " <tag id="sample"   />
line 17: " ~~~~~~~~~~~~~~~~~~~
line 18: syntax region jsxTag start=+<+ matchgroup=jsxOpenPunct end=+>+ matchgroup=NONE end=+\%(/\_s*>\)\@=+ contained contains=jsxOpenTag,jsxAttrib,jsxExpressionBlock,jsxSpreadOperator,jsComment,@javascriptComments,javaScriptLineComment,javaScriptComment,typescriptLineComment,typescriptComment keepend extend skipwhite skipempty nextgroup=jsxCloseString
line 31: 
line 32: " <tag></tag>
line 33: " ~~~~~~~~~~~
line 34: " and fragment
line 35: " <></>
line 36: " ~~~~~
line 37: " and self close tag
line 38: " <tag />
line 39: " ~~~~~~~
line 40: syntax region jsxElement start=+<\_s*\%(>\|\${\|\z(\<[-:._$A-Za-z0-9]\+\>\)\)+ end=+/\_s*>+ end=+<\_s*/\_s*\z1\_s*>+ contains=jsxElement,jsxTag,jsxExpressionBlock,jsxComment,jsxCloseTag,@Spell keepend extend contained fold
line 49: 
line 50: " <tag key={this.props.key}>
line 51: " ~~~~
line 52: " and fragment start tag
line 53: " <>
line 54: " ~~
line 55: exe 'syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<+ end=+>+ matchgroup=NONE end=+\>+ contained contains=jsxTagName nextgroup=jsxAttrib skipwhite skipempty ' .(s:highlight_close_tag ? 'transparent' : '')
line 55: syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<+ end=+>+ matchgroup=NONE end=+\>+ contained contains=jsxTagName nextgroup=jsxAttrib skipwhite skipempty 
line 67: 
line 68: 
line 69: " <tag key={this.props.key}>
line 70: "          ~~~~~~~~~~~~~~~~
line 71: syntax region jsxExpressionBlock matchgroup=jsxBraces start=+{+ end=+}+ contained extend contains=@jsExpression,jsSpreadExpression,@javascriptExpression,javascriptSpreadOp,@javaScriptEmbededExpr,@typescriptExpression,typescriptObjectSpread,jsComment,@javascriptComments,javaScriptLineComment,javaScriptComment,typescriptLineComment,typescriptComment
line 78: 
line 79: " <foo.bar>
line 80: "     ~
line 81: syntax match jsxDot +\.+ contained
line 82: 
line 83: " <foo:bar>
line 84: "     ~
line 85: syntax match jsxNamespace +:+ contained
line 86: 
line 87: " <tag id="sample">
line 88: "        ~
line 89: syntax match jsxEqual +=+ contained skipwhite skipempty nextgroup=jsxString,jsxExpressionBlock,jsxRegion
line 90: 
line 91: " <tag />
line 92: "      ~~
line 93: syntax match jsxCloseString +/\_s*>+ contained
line 94: 
line 95: " </tag>
line 96: " ~~~~~~
line 97: " and fragment close tag
line 98: " </>
line 99: " ~~~
line 100: syntax region jsxCloseTag matchgroup=jsxClosePunct start=+<\_s*/+ end=+>+ contained contains=jsxTagName
line 106: 
line 107: " <tag key={this.props.key}>
line 108: "      ~~~
line 109: syntax match jsxAttrib +\<[_$A-Za-z][-:_$A-Za-z0-9]*\>+ contained nextgroup=jsxEqual skipwhite skipempty contains=jsxAttribKeyword,jsxNamespace
line 116: 
line 117: " <MyComponent ...>
line 118: "  ~~~~~~~~~~~
line 119: " NOT
line 120: " <someCamel ...>
line 121: "      ~~~~~
line 122: exe 'syntax match jsxComponentName +\<[_$]\?[A-Z][-_$A-Za-z0-9]*\>+ contained ' .(s:highlight_close_tag ? 'transparent' : '')
line 122: syntax match jsxComponentName +\<[_$]\?[A-Z][-_$A-Za-z0-9]*\>+ contained 
line 126: 
line 127: " <tag key={this.props.key}>
line 128: "  ~~~
line 129: exe 'syntax match jsxTagName +\<[-:._$A-Za-z0-9]\+\>+ contained contains=jsxComponentName,jsxDot,jsxNamespace nextgroup=jsxAttrib skipempty skipwhite ' .(s:highlight_close_tag ? 'transparent' : '')
line 129: syntax match jsxTagName +\<[-:._$A-Za-z0-9]\+\>+ contained contains=jsxComponentName,jsxDot,jsxNamespace nextgroup=jsxAttrib skipempty skipwhite 
line 137: 
line 138: " <tag id="sample">
line 139: "         ~~~~~~~~
line 140: " and
line 141: " <tag id='sample'>
line 142: "         ~~~~~~~~
line 143: syntax region jsxString start=+\z(["']\)+  skip=+\\\\\|\\\z1\|\\\n+  end=+\z1+ extend contained contains=@Spell
line 144: 
line 145: let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])
line 146: let s:enable_tagged_jsx = !empty(s:tags)
line 147: 
line 148: " add support to JSX inside the tagged template string
line 149: " https://github.com/developit/htm
line 150: if s:enable_tagged_jsx
line 151:   exe 'syntax match jsxRegion +\%(' . join(s:tags, '\|') . '\)\%(\_s*`\)\@=+ contains=jsTemplateStringTag,jsTaggedTemplate,javascriptTagRef skipwhite skipempty nextgroup=jsxTaggedRegion'
line 151: syntax match jsxRegion +\%(html\|jsx\)\%(\_s*`\)\@=+ contains=jsTemplateStringTag,jsTaggedTemplate,javascriptTagRef skipwhite skipempty nextgroup=jsxTaggedRegion
line 152: 
line 153:   syntax region jsxTaggedRegion matchgroup=jsxBackticks start=+`+ end=+`+ extend contained contains=jsxElement,jsxExpressionBlock transparent
line 161: 
line 162:   syntax region jsxExpressionBlock matchgroup=jsxBraces start=+\${+ end=+}+ extend contained contains=@jsExpression,jsSpreadExpression,@javascriptExpression,javascriptSpreadOp,@javaScriptEmbededExpr,@typescriptExpression,typescriptObjectSpread
line 169: 
line 170:   syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<\%(\${\)\@=+ matchgroup=NONE end=+}\@1<=+ contained contains=jsxExpressionBlock skipwhite skipempty nextgroup=jsxAttrib,jsxSpreadOperator
line 180: 
line 181:   syntax keyword jsxAttribKeyword class contained
line 182: 
line 183:   syntax match jsxSpreadOperator +\.\.\.+ contained nextgroup=jsxExpressionBlock skipwhite
line 184: 
line 185:   syntax match jsxCloseTag +<//>+ contained
line 186: 
line 187:   syntax match jsxComment +<!--\_.\{-}-->+
line 188: endif
line 189: 
line 190: " Highlight the tag name
line 191: highlight def link jsxTag Function
line 192: highlight def link jsxTagName Identifier
line 193: highlight def link jsxComponentName Function
line 194: 
line 195: highlight def link jsxAttrib Type
line 196: highlight def link jsxAttribKeyword jsxAttrib
line 197: highlight def link jsxString String
line 198: highlight def link jsxComment Comment
line 199: 
line 200: highlight def link jsxDot Operator
line 201: highlight def link jsxNamespace Operator
line 202: highlight def link jsxEqual Operator
line 203: highlight def link jsxSpreadOperator Operator
line 204: highlight def link jsxBraces Special
line 205: 
line 206: if s:highlight_close_tag
line 207:   highlight def link jsxCloseString Identifier
line 208:   highlight def link jsxOpenPunct jsxTag
line 209: else
line 210:   " Highlight the jsxCloseString (i.e. />), jsxPunct (i.e. <,>) and jsxCloseTag (i.e. <//>)
line 211:   highlight def link jsxCloseString Comment
line 212:   highlight def link jsxOpenPunct jsxPunct
line 213: endif
line 214: 
line 215: highlight def link jsxPunct jsxCloseString
line 216: highlight def link jsxClosePunct jsxPunct
line 217: highlight def link jsxCloseTag jsxCloseString
line 218: 
line 219: let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)
line 220: 
line 221: if s:vim_jsx_pretty_colorful_config == 1
line 222:   highlight def link jsObjectKey Label
line 223:   highlight def link jsArrowFuncArgs Type
line 224:   highlight def link jsFuncArgs Type
line 225: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim
line 55: 
line 56: let b:current_syntax = 'javascript.jsx'
line 57: 
line 58: let &cpo = s:jsx_cpo
line 59: unlet s:jsx_cpo
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/javascript.vim"
line 208:   unlet b:current_syntax
line 209:   syn region  javaScript start=+<script\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlJavaScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
line 210:   syn region  htmlScriptTag     contained start=+<script+ end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent
line 211:   hi def link htmlScriptTag htmlTag
line 212: 
line 213:   " html events (i.e. arguments that include javascript commands)
line 214:   if exists("html_extended_events")
line 215:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ contains=htmlEventSQ
line 216:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ contains=htmlEventDQ
line 217:   else
line 218:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ keepend contains=htmlEventSQ
line 219:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ keepend contains=htmlEventDQ
line 220:   endif
line 221:   syn region htmlEventSQ        contained start=+'+ms=s+1 end=+'+me=s-1 contains=@htmlJavaScript
line 222:   syn region htmlEventDQ        contained start=+"+ms=s+1 end=+"+me=s-1 contains=@htmlJavaScript
line 223:   hi def link htmlEventSQ htmlEvent
line 224:   hi def link htmlEventDQ htmlEvent
line 225: 
line 226:   " a javascript expression is used as an arg value
line 227:   syn region  javaScriptExpression contained start=+&{+ keepend end=+};+ contains=@htmlJavaScript,@htmlPreproc
line 228: endif
line 229: 
line 230: if main_syntax != 'java' || exists("java_vb")
line 231:   " VB SCRIPT
line 232:   syn include @htmlVbScript syntax/vb.vim
Searching for "syntax/vb.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/vb.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 232: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'visual-basic', 'syntax/vb.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim', 'visual-basic', 'syntax/vb.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     Visual Basic
line 7: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 8: " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
line 9: " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
line 10: "       (tried multiple times to contact, but email bounced)
line 11: " Last Change:
line 12: "   2021 Nov 26  Incorporated additions from Doug Kearns
line 13: "   2005 May 25  Synched with work by Thomas Barthel
line 14: "   2004 May 30  Added a few keywords
line 15: 
line 16: " This was thrown together after seeing numerous requests on the
line 17: " VIM and VIM-DEV mailing lists.  It is by no means complete.
line 18: " Send comments, suggestions and requests to the maintainer.
line 19: 
line 20: " quit when a syntax file was already loaded
line 21: if exists("b:current_syntax")
line 22:         finish
line 23: endif
line 24: 
line 25: " VB is case insensitive
line 26: syn case ignore
line 27: 
line 28: syn keyword vbConditional If Then ElseIf Else Select Case
line 29: 
line 30: syn keyword vbOperator AddressOf And ByRef ByVal Eqv Imp In
line 31: syn keyword vbOperator Is Like Mod Not Or To Xor
line 32: 
line 33: syn match vbOperator "[()+.,\-/*=&]"
line 34: syn match vbOperator "[<>]=\="
line 35: syn match vbOperator "<>"
line 36: syn match vbOperator "\s\+_$"
line 37: 
line 38: syn keyword vbBoolean  True False
line 39: syn keyword vbConst Null Nothing
line 40: 
line 41: syn keyword vbRepeat Do For ForEach Loop Next
line 42: syn keyword vbRepeat Step To Until Wend While
line 43: 
line 44: syn keyword vbEvents AccessKeyPress Activate ActiveRowChanged
line 45: syn keyword vbEvents AfterAddFile AfterChangeFileName AfterCloseFile
line 46: syn keyword vbEvents AfterColEdit AfterColUpdate AfterDelete
line 47: syn keyword vbEvents AfterInsert AfterLabelEdit AfterRemoveFile
line 48: syn keyword vbEvents AfterUpdate AfterWriteFile AmbientChanged
line 49: syn keyword vbEvents ApplyChanges Associate AsyncProgress
line 50: syn keyword vbEvents AsyncReadComplete AsyncReadProgress AxisActivated
line 51: syn keyword vbEvents AxisLabelActivated AxisLabelSelected
line 52: syn keyword vbEvents AxisLabelUpdated AxisSelected AxisTitleActivated
line 53: syn keyword vbEvents AxisTitleSelected AxisTitleUpdated AxisUpdated
line 54: syn keyword vbEvents BeforeClick BeforeColEdit BeforeColUpdate
line 55: syn keyword vbEvents BeforeConnect BeforeDelete BeforeInsert
line 56: syn keyword vbEvents BeforeLabelEdit BeforeLoadFile BeforeUpdate
line 57: syn keyword vbEvents BeginRequest BeginTrans ButtonClick
line 58: syn keyword vbEvents ButtonCompleted ButtonDropDown ButtonGotFocus
line 59: syn keyword vbEvents ButtonLostFocus CallbackKeyDown Change Changed
line 60: syn keyword vbEvents ChartActivated ChartSelected ChartUpdated Click
line 61: syn keyword vbEvents Close CloseQuery CloseUp ColEdit ColResize
line 62: syn keyword vbEvents Collapse ColumnClick CommitTrans Compare
line 63: syn keyword vbEvents ConfigChageCancelled ConfigChanged
line 64: syn keyword vbEvents ConfigChangedCancelled Connect ConnectionRequest
line 65: syn keyword vbEvents CurrentRecordChanged DECommandAdded
line 66: syn keyword vbEvents DECommandPropertyChanged DECommandRemoved
line 67: syn keyword vbEvents DEConnectionAdded DEConnectionPropertyChanged
line 68: syn keyword vbEvents DEConnectionRemoved DataArrival DataChanged
line 69: syn keyword vbEvents DataUpdated DateClicked DblClick Deactivate
line 70: syn keyword vbEvents DevModeChange DeviceArrival DeviceOtherEvent
line 71: syn keyword vbEvents DeviceQueryRemove DeviceQueryRemoveFailed
line 72: syn keyword vbEvents DeviceRemoveComplete DeviceRemovePending
line 73: syn keyword vbEvents Disconnect DisplayChanged Dissociate
line 74: syn keyword vbEvents DoGetNewFileName Done DonePainting DownClick
line 75: syn keyword vbEvents DragDrop DragOver DropDown EditProperty EditQuery
line 76: syn keyword vbEvents EndRequest EnterCell EnterFocus ExitFocus Expand
line 77: syn keyword vbEvents FontChanged FootnoteActivated FootnoteSelected
line 78: syn keyword vbEvents FootnoteUpdated Format FormatSize GotFocus
line 79: syn keyword vbEvents HeadClick HeightChanged Hide InfoMessage
line 80: syn keyword vbEvents IniProperties InitProperties Initialize
line 81: syn keyword vbEvents ItemActivated ItemAdded ItemCheck ItemClick
line 82: syn keyword vbEvents ItemReloaded ItemRemoved ItemRenamed
line 83: syn keyword vbEvents ItemSeletected KeyDown KeyPress KeyUp LeaveCell
line 84: syn keyword vbEvents LegendActivated LegendSelected LegendUpdated
line 85: syn keyword vbEvents LinkClose LinkError LinkExecute LinkNotify
line 86: syn keyword vbEvents LinkOpen Load LostFocus MouseDown MouseMove
line 87: syn keyword vbEvents MouseUp NodeCheck NodeClick OLECompleteDrag
line 88: syn keyword vbEvents OLEDragDrop OLEDragOver OLEGiveFeedback OLESetData
line 89: syn keyword vbEvents OLEStartDrag ObjectEvent ObjectMove OnAddNew
line 90: syn keyword vbEvents OnComm Paint PanelClick PanelDblClick PathChange
line 91: syn keyword vbEvents PatternChange PlotActivated PlotSelected
line 92: syn keyword vbEvents PlotUpdated PointActivated PointLabelActivated
line 93: syn keyword vbEvents PointLabelSelected PointLabelUpdated PointSelected
line 94: syn keyword vbEvents PointUpdated PowerQuerySuspend PowerResume
line 95: syn keyword vbEvents PowerStatusChanged PowerSuspend ProcessTag
line 96: syn keyword vbEvents ProcessingTimeout QueryChangeConfig QueryClose
line 97: syn keyword vbEvents QueryComplete QueryCompleted QueryTimeout
line 98: syn keyword vbEvents QueryUnload ReadProperties RepeatedControlLoaded
line 99: syn keyword vbEvents RepeatedControlUnloaded Reposition
line 100: syn keyword vbEvents RequestChangeFileName RequestWriteFile Resize
line 101: syn keyword vbEvents ResultsChanged RetainedProject RollbackTrans
line 102: syn keyword vbEvents RowColChange RowCurrencyChange RowResize
line 103: syn keyword vbEvents RowStatusChanged Scroll SelChange SelectionChanged
line 104: syn keyword vbEvents SendComplete SendProgress SeriesActivated
line 105: syn keyword vbEvents SeriesSelected SeriesUpdated SettingChanged Show
line 106: syn keyword vbEvents SplitChange Start StateChanged StatusUpdate
line 107: syn keyword vbEvents SysColorsChanged Terminate TimeChanged Timer
line 108: syn keyword vbEvents TitleActivated TitleSelected TitleUpdated
line 109: syn keyword vbEvents UnboundAddData UnboundDeleteRow
line 110: syn keyword vbEvents UnboundGetRelativeBookmark UnboundReadData
line 111: syn keyword vbEvents UnboundWriteData Unformat Unload UpClick Updated
line 112: syn keyword vbEvents UserEvent Validate ValidationError
line 113: syn keyword vbEvents VisibleRecordChanged WillAssociate WillChangeData
line 114: syn keyword vbEvents WillDissociate WillExecute WillUpdateRows
line 115: syn keyword vbEvents WriteProperties
line 116: 
line 117: 
line 118: syn keyword vbFunction Abs Array Asc AscB AscW Atn Avg BOF CBool CByte
line 119: syn keyword vbFunction CCur CDate CDbl CInt CLng CSng CStr CVDate CVErr
line 120: syn keyword vbFunction CVar CallByName Cdec Choose Chr ChrB ChrW Command
line 121: syn keyword vbFunction Cos Count CreateObject CurDir DDB Date DateAdd
line 122: syn keyword vbFunction DateDiff DatePart DateSerial DateValue Day Dir
line 123: syn keyword vbFunction DoEvents EOF Environ Error Exp FV FileAttr
line 124: syn keyword vbFunction FileDateTime FileLen FilterFix Fix Format
line 125: syn keyword vbFunction FormatCurrency FormatDateTime FormatNumber
line 126: syn keyword vbFunction FormatPercent FreeFile GetAllStrings GetAttr
line 127: syn keyword vbFunction GetAutoServerSettings GetObject GetSetting Hex
line 128: syn keyword vbFunction Hour IIf IMEStatus IPmt InStr Input InputB
line 129: syn keyword vbFunction InputBox InstrB Int IsArray IsDate IsEmpty IsError
line 130: syn keyword vbFunction IsMissing IsNull IsNumeric IsObject Join LBound
line 131: syn keyword vbFunction LCase LOF LTrim Left LeftB Len LenB LoadPicture
line 132: syn keyword vbFunction LoadResData LoadResPicture LoadResString Loc Log
line 133: syn keyword vbFunction MIRR Max Mid MidB Min Minute Month MonthName
line 134: syn keyword vbFunction MsgBox NPV NPer Now Oct PPmt PV Partition Pmt
line 135: syn keyword vbFunction QBColor RGB RTrim Rate Replace Right RightB Rnd
line 136: syn keyword vbFunction Round SLN SYD Second Seek Sgn Shell Sin Space Spc
line 137: syn keyword vbFunction Split Sqr StDev StDevP Str StrComp StrConv
line 138: syn keyword vbFunction StrReverse String Sum Switch Tab Tan Time
line 139: syn keyword vbFunction TimeSerial TimeValue Timer Trim TypeName UBound
line 140: syn keyword vbFunction UCase Val Var VarP VarType Weekday WeekdayName
line 141: syn keyword vbFunction Year
line 142: 
line 143: syn keyword vbMethods AboutBox Accept Activate Add AddCustom AddFile
line 144: syn keyword vbMethods AddFromFile AddFromGuid AddFromString
line 145: syn keyword vbMethods AddFromTemplate AddItem AddNew AddToAddInToolbar
line 146: syn keyword vbMethods AddToolboxProgID Append AppendAppendChunk
line 147: syn keyword vbMethods AppendChunk Arrange Assert AsyncRead BatchUpdate
line 148: syn keyword vbMethods BeginQueryEdit BeginTrans Bind BuildPath
line 149: syn keyword vbMethods CanPropertyChange Cancel CancelAsyncRead
line 150: syn keyword vbMethods CancelBatch CancelUpdate CaptureImage CellText
line 151: syn keyword vbMethods CellValue Circle Clear ClearFields ClearSel
line 152: syn keyword vbMethods ClearSelCols ClearStructure Clone Close Cls
line 153: syn keyword vbMethods ColContaining CollapseAll ColumnSize CommitTrans
line 154: syn keyword vbMethods CompactDatabase Compose Connect Copy CopyFile
line 155: syn keyword vbMethods CopyFolder CopyQueryDef Count CreateDatabase
line 156: syn keyword vbMethods CreateDragImage CreateEmbed CreateField
line 157: syn keyword vbMethods CreateFolder CreateGroup CreateIndex CreateLink
line 158: syn keyword vbMethods CreatePreparedStatement CreatePropery CreateQuery
line 159: syn keyword vbMethods CreateQueryDef CreateRelation CreateTableDef
line 160: syn keyword vbMethods CreateTextFile CreateToolWindow CreateUser
line 161: syn keyword vbMethods CreateWorkspace Customize Cut Delete
line 162: syn keyword vbMethods DeleteColumnLabels DeleteColumns DeleteFile
line 163: syn keyword vbMethods DeleteFolder DeleteLines DeleteRowLabels
line 164: syn keyword vbMethods DeleteRows DeselectAll DesignerWindow DoVerb Drag
line 165: syn keyword vbMethods Draw DriveExists Edit EditCopy EditPaste EndDoc
line 166: syn keyword vbMethods EnsureVisible EstablishConnection Execute Exists
line 167: syn keyword vbMethods Expand Export ExportReport ExtractIcon Fetch
line 168: syn keyword vbMethods FetchVerbs FileExists Files FillCache Find
line 169: syn keyword vbMethods FindFirst FindItem FindLast FindNext FindPrevious
line 170: syn keyword vbMethods FolderExists Forward GetAbsolutePathName
line 171: syn keyword vbMethods GetBaseName GetBookmark GetChunk GetClipString
line 172: syn keyword vbMethods GetData GetDrive GetDriveName GetFile GetFileName
line 173: syn keyword vbMethods GetFirstVisible GetFolder GetFormat GetHeader
line 174: syn keyword vbMethods GetLineFromChar GetNumTicks GetParentFolderName
line 175: syn keyword vbMethods GetRows GetSelectedPart GetSelection
line 176: syn keyword vbMethods GetSpecialFolder GetTempName GetText
line 177: syn keyword vbMethods GetVisibleCount GoBack GoForward Hide HitTest
line 178: syn keyword vbMethods HoldFields Idle Import InitializeLabels Insert
line 179: syn keyword vbMethods InsertColumnLabels InsertColumns InsertFile
line 180: syn keyword vbMethods InsertLines InsertObjDlg InsertRowLabels
line 181: syn keyword vbMethods InsertRows Item Keys KillDoc Layout Line Lines
line 182: syn keyword vbMethods LinkExecute LinkPoke LinkRequest LinkSend Listen
line 183: syn keyword vbMethods LoadFile LoadResData LoadResPicture LoadResString
line 184: syn keyword vbMethods LogEvent MakeCompileFile MakeCompiledFile
line 185: syn keyword vbMethods MakeReplica MoreResults Move MoveData MoveFile
line 186: syn keyword vbMethods MoveFirst MoveFolder MoveLast MoveNext
line 187: syn keyword vbMethods MovePrevious NavigateTo NewPage NewPassword
line 188: syn keyword vbMethods NextRecordset OLEDrag OnAddinsUpdate OnConnection
line 189: syn keyword vbMethods OnDisconnection OnStartupComplete Open
line 190: syn keyword vbMethods OpenAsTextStream OpenConnection OpenDatabase
line 191: syn keyword vbMethods OpenQueryDef OpenRecordset OpenResultset OpenURL
line 192: syn keyword vbMethods Overlay PSet PaintPicture PastSpecialDlg Paste
line 193: syn keyword vbMethods PeekData Play Point PopulatePartial PopupMenu
line 194: syn keyword vbMethods Print PrintForm PrintReport PropertyChanged Quit
line 195: syn keyword vbMethods Raise RandomDataFill RandomFillColumns
line 196: syn keyword vbMethods RandomFillRows ReFill Read ReadAll ReadFromFile
line 197: syn keyword vbMethods ReadLine ReadProperty Rebind Refresh RefreshLink
line 198: syn keyword vbMethods RegisterDatabase ReleaseInstance Reload Remove
line 199: syn keyword vbMethods RemoveAddInFromToolbar RemoveAll RemoveItem Render
line 200: syn keyword vbMethods RepairDatabase ReplaceLine Reply ReplyAll Requery
line 201: syn keyword vbMethods ResetCustom ResetCustomLabel ResolveName
line 202: syn keyword vbMethods RestoreToolbar Resync Rollback RollbackTrans
line 203: syn keyword vbMethods RowBookmark RowContaining RowTop Save SaveAs
line 204: syn keyword vbMethods SaveFile SaveToFile SaveToOle1File SaveToolbar
line 205: syn keyword vbMethods Scale ScaleX ScaleY Scroll SelPrint SelectAll
line 206: syn keyword vbMethods SelectPart Send SendData Set SetAutoServerSettings
line 207: syn keyword vbMethods SetData SetFocus SetOption SetSelection SetSize
line 208: syn keyword vbMethods SetText SetViewport Show ShowColor ShowFont
line 209: syn keyword vbMethods ShowHelp ShowOpen ShowPrinter ShowSave
line 210: syn keyword vbMethods ShowWhatsThis SignOff SignOn Size Skip SkipLine
line 211: syn keyword vbMethods Span Split SplitContaining StartLabelEdit
line 212: syn keyword vbMethods StartLogging Stop Synchronize Tag TextHeight
line 213: syn keyword vbMethods TextWidth ToDefaults Trace TwipsToChartPart
line 214: syn keyword vbMethods TypeByChartType URLFor Update UpdateControls
line 215: syn keyword vbMethods UpdateRecord UpdateRow Upto ValidateControls Value
line 216: syn keyword vbMethods WhatsThisMode Write WriteBlankLines WriteLine
line 217: syn keyword vbMethods WriteProperty WriteTemplate ZOrder
line 218: syn keyword vbMethods rdoCreateEnvironment rdoRegisterDataSource
line 219: 
line 220: syn keyword vbStatement Alias AppActivate As Base Beep Begin Call ChDir
line 221: syn keyword vbStatement ChDrive Close Const Date Declare DefBool DefByte
line 222: syn keyword vbStatement DefCur DefDate DefDbl DefDec DefInt DefLng DefObj
line 223: syn keyword vbStatement DefSng DefStr DefVar Deftype DeleteSetting Dim Do
line 224: syn keyword vbStatement Each ElseIf End Enum Erase Error Event Exit
line 225: syn keyword vbStatement Explicit FileCopy For ForEach Function Get GoSub
line 226: syn keyword vbStatement GoTo Gosub Implements Kill LSet Let Lib LineInput
line 227: syn keyword vbStatement Load Lock Loop Mid MkDir Name Next On OnError Open
line 228: syn keyword vbStatement Option Preserve Private Property Public Put RSet
line 229: syn keyword vbStatement RaiseEvent Randomize ReDim Redim Reset Resume
line 230: syn keyword vbStatement Return RmDir SavePicture SaveSetting Seek SendKeys
line 231: syn keyword vbStatement Sendkeys Set SetAttr Static Step Stop Sub Time
line 232: syn keyword vbStatement Type Unload Unlock Until Wend While Width With
line 233: syn keyword vbStatement Write
line 234: 
line 235: syn keyword vbKeyword As Binary ByRef ByVal Date Empty Error Friend Get
line 236: syn keyword vbKeyword Input Is Len Lock Me Mid New Nothing Null On
line 237: syn keyword vbKeyword Option Optional ParamArray Print Private Property
line 238: syn keyword vbKeyword Public PublicNotCreateable OnNewProcessSingleUse
line 239: syn keyword vbKeyword InSameProcessMultiUse GlobalMultiUse Resume Seek
line 240: syn keyword vbKeyword Set Static Step String Time WithEvents
line 241: 
line 242: syn keyword vbTodo contained    TODO
line 243: 
line 244: "Datatypes
line 245: syn keyword vbTypes Boolean Byte Currency Date Decimal Double Empty
line 246: syn keyword vbTypes Integer Long Object Single String Variant
line 247: 
line 248: "VB defined values
line 249: syn keyword vbDefine dbBigInt dbBinary dbBoolean dbByte dbChar
line 250: syn keyword vbDefine dbCurrency dbDate dbDecimal dbDouble dbFloat
line 251: syn keyword vbDefine dbGUID dbInteger dbLong dbLongBinary dbMemo
line 252: syn keyword vbDefine dbNumeric dbSingle dbText dbTime dbTimeStamp
line 253: syn keyword vbDefine dbVarBinary
line 254: 
line 255: "VB defined values
line 256: syn keyword vbDefine vb3DDKShadow vb3DFace vb3DHighlight vb3DLight
line 257: syn keyword vbDefine vb3DShadow vbAbort vbAbortRetryIgnore
line 258: syn keyword vbDefine vbActiveBorder vbActiveTitleBar vbAlias
line 259: syn keyword vbDefine vbApplicationModal vbApplicationWorkspace
line 260: syn keyword vbDefine vbAppTaskManager vbAppWindows vbArchive vbArray
line 261: syn keyword vbDefine vbBack vbBinaryCompare vbBlack vbBlue vbBoolean
line 262: syn keyword vbDefine vbButtonFace vbButtonShadow vbButtonText vbByte
line 263: syn keyword vbDefine vbCalGreg vbCalHijri vbCancel vbCr vbCritical
line 264: syn keyword vbDefine vbCrLf vbCurrency vbCyan vbDatabaseCompare
line 265: syn keyword vbDefine vbDataObject vbDate vbDecimal vbDefaultButton1
line 266: syn keyword vbDefine vbDefaultButton2 vbDefaultButton3 vbDefaultButton4
line 267: syn keyword vbDefine vbDesktop vbDirectory vbDouble vbEmpty vbError
line 268: syn keyword vbDefine vbExclamation vbFirstFourDays vbFirstFullWeek
line 269: syn keyword vbDefine vbFirstJan1 vbFormCode vbFormControlMenu
line 270: syn keyword vbDefine vbFormFeed vbFormMDIForm vbFriday vbFromUnicode
line 271: syn keyword vbDefine vbGrayText vbGreen vbHidden vbHide vbHighlight
line 272: syn keyword vbDefine vbHighlightText vbHiragana vbIgnore vbIMEAlphaDbl
line 273: syn keyword vbDefine vbIMEAlphaSng vbIMEDisable vbIMEHiragana
line 274: syn keyword vbDefine vbIMEKatakanaDbl vbIMEKatakanaSng vbIMEModeAlpha
line 275: syn keyword vbDefine vbIMEModeAlphaFull vbIMEModeDisable
line 276: syn keyword vbDefine vbIMEModeHangul vbIMEModeHangulFull
line 277: syn keyword vbDefine vbIMEModeHiragana vbIMEModeKatakana
line 278: syn keyword vbDefine vbIMEModeKatakanaHalf vbIMEModeNoControl
line 279: syn keyword vbDefine vbIMEModeOff vbIMEModeOn vbIMENoOp vbIMEOff
line 280: syn keyword vbDefine vbIMEOn vbInactiveBorder vbInactiveCaptionText
line 281: syn keyword vbDefine vbInactiveTitleBar vbInfoBackground vbInformation
line 282: syn keyword vbDefine vbInfoText vbInteger vbKatakana vbKey0 vbKey1
line 283: syn keyword vbDefine vbKey2 vbKey3 vbKey4 vbKey5 vbKey6 vbKey7 vbKey8
line 284: syn keyword vbDefine vbKey9 vbKeyA vbKeyAdd vbKeyB vbKeyBack vbKeyC
line 285: syn keyword vbDefine vbKeyCancel vbKeyCapital vbKeyClear vbKeyControl
line 286: syn keyword vbDefine vbKeyD vbKeyDecimal vbKeyDelete vbKeyDivide
line 287: syn keyword vbDefine vbKeyDown vbKeyE vbKeyEnd vbKeyEscape vbKeyExecute
line 288: syn keyword vbDefine vbKeyF vbKeyF1 vbKeyF10 vbKeyF11 vbKeyF12 vbKeyF13
line 289: syn keyword vbDefine vbKeyF14 vbKeyF15 vbKeyF16 vbKeyF2 vbKeyF3 vbKeyF4
line 290: syn keyword vbDefine vbKeyF5 vbKeyF6 vbKeyF7 vbKeyF8 vbKeyF9 vbKeyG
line 291: syn keyword vbDefine vbKeyH vbKeyHelp vbKeyHome vbKeyI vbKeyInsert
line 292: syn keyword vbDefine vbKeyJ vbKeyK vbKeyL vbKeyLButton vbKeyLeft vbKeyM
line 293: syn keyword vbDefine vbKeyMButton vbKeyMenu vbKeyMultiply vbKeyN
line 294: syn keyword vbDefine vbKeyNumlock vbKeyNumpad0 vbKeyNumpad1
line 295: syn keyword vbDefine vbKeyNumpad2 vbKeyNumpad3 vbKeyNumpad4
line 296: syn keyword vbDefine vbKeyNumpad5 vbKeyNumpad6 vbKeyNumpad7
line 297: syn keyword vbDefine vbKeyNumpad8 vbKeyNumpad9 vbKeyO vbKeyP
line 298: syn keyword vbDefine vbKeyPageDown vbKeyPageUp vbKeyPause vbKeyPrint
line 299: syn keyword vbDefine vbKeyQ vbKeyR vbKeyRButton vbKeyReturn vbKeyRight
line 300: syn keyword vbDefine vbKeyS vbKeySelect vbKeySeparator vbKeyShift
line 301: syn keyword vbDefine vbKeySnapshot vbKeySpace vbKeySubtract vbKeyT
line 302: syn keyword vbDefine vbKeyTab vbKeyU vbKeyUp vbKeyV vbKeyW vbKeyX
line 303: syn keyword vbDefine vbKeyY vbKeyZ vbLf vbLong vbLowerCase vbMagenta
line 304: syn keyword vbDefine vbMaximizedFocus vbMenuBar vbMenuText
line 305: syn keyword vbDefine vbMinimizedFocus vbMinimizedNoFocus vbMonday
line 306: syn keyword vbDefine vbMsgBox vbMsgBoxHelpButton vbMsgBoxRight
line 307: syn keyword vbDefine vbMsgBoxRtlReading vbMsgBoxSetForeground
line 308: syn keyword vbDefine vbMsgBoxText vbNarrow vbNewLine vbNo vbNormal
line 309: syn keyword vbDefine vbNormalFocus vbNormalNoFocus vbNull vbNullChar
line 310: syn keyword vbDefine vbNullString vbObject vbObjectError vbOK
line 311: syn keyword vbDefine vbOKCancel vbOKOnly vbProperCase vbQuestion
line 312: syn keyword vbDefine vbReadOnly vbRed vbRetry vbRetryCancel vbSaturday
line 313: syn keyword vbDefine vbScrollBars vbSingle vbString vbSunday vbSystem
line 314: syn keyword vbDefine vbSystemModal vbTab vbTextCompare vbThursday
line 315: syn keyword vbDefine vbTitleBarText vbTuesday vbUnicode vbUpperCase
line 316: syn keyword vbDefine vbUseSystem vbUseSystemDayOfWeek vbVariant
line 317: syn keyword vbDefine vbVerticalTab vbVolume vbWednesday vbWhite vbWide
line 318: syn keyword vbDefine vbWindowBackground vbWindowFrame vbWindowText
line 319: syn keyword vbDefine vbYellow vbYes vbYesNo vbYesNoCancel
line 320: 
line 321: "Numbers
line 322: "integer number, or floating point number without a dot.
line 323: syn match vbNumber "\<\d\+\>"
line 324: "floating point number, with dot
line 325: syn match vbNumber "\<\d\+\.\d*\>"
line 326: "floating point number, starting with a dot
line 327: syn match vbNumber "\.\d\+\>"
line 328: "syn match  vbNumber            "{[[:xdigit:]-]\+}\|&[hH][[:xdigit:]]\+&"
line 329: "syn match  vbNumber            ":[[:xdigit:]]\+"
line 330: "syn match  vbNumber            "[-+]\=\<\d\+\>"
line 331: syn match  vbFloat              "[-+]\=\<\d\+[eE][\-+]\=\d\+"
line 332: syn match  vbFloat              "[-+]\=\<\d\+\.\d*\([eE][\-+]\=\d\+\)\="
line 333: syn match  vbFloat              "[-+]\=\<\.\d\+\([eE][\-+]\=\d\+\)\="
line 334: 
line 335: " String and Character constants
line 336: syn region  vbString^I^Istart=+"+  end=+"\|$+
line 337: syn region  vbComment^I^Istart="\(^\|\s\)REM\s" end="$" contains=vbTodo
line 338: syn region  vbComment^I^Istart="\(^\|\s\)\'"   end="$" contains=vbTodo
line 339: syn match   vbLineLabel^I^I"^\h\w\+:"
line 340: syn match   vbLineNumber^I"^\d\+\(:\|\s\|$\)"
line 341: syn match   vbTypeSpecifier  "\<\a\w*[@\$%&!#]"ms=s+1
line 342: syn match   vbTypeSpecifier  "#[a-zA-Z0-9]"me=e-1
line 343: " Conditional Compilation
line 344: syn match  vbPreProc "^#const\>"
line 345: syn region vbPreProc matchgroup=PreProc start="^#if\>"     end="\<then\>" transparent contains=TOP
line 346: syn region vbPreProc matchgroup=PreProc start="^#elseif\>" end="\<then\>" transparent contains=TOP
line 347: syn match  vbPreProc "^#else\>"
line 348: syn match  vbPreProc "^#end\s*if\>"
line 349: 
line 350: " Define the default highlighting.
line 351: " Only when an item doesn't have highlighting yet
line 352: 
line 353: hi def link vbBoolean           Boolean
line 354: hi def link vbLineNumber        Comment
line 355: hi def link vbLineLabel         Comment
line 356: hi def link vbComment           Comment
line 357: hi def link vbConditional       Conditional
line 358: hi def link vbConst             Constant
line 359: hi def link vbDefine            Constant
line 360: hi def link vbError             Error
line 361: hi def link vbFunction          Identifier
line 362: hi def link vbIdentifier        Identifier
line 363: hi def link vbNumber            Number
line 364: hi def link vbFloat             Float
line 365: hi def link vbMethods           PreProc
line 366: hi def link vbOperator          Operator
line 367: hi def link vbRepeat            Repeat
line 368: hi def link vbString            String
line 369: hi def link vbStatement         Statement
line 370: hi def link vbKeyword           Statement
line 371: hi def link vbEvents            Special
line 372: hi def link vbTodo              Todo
line 373: hi def link vbTypes             Type
line 374: hi def link vbTypeSpecifier     Type
line 375: hi def link vbPreProc           PreProc
line 376: 
line 377: let b:current_syntax = "vb"
line 378: 
line 379: " vim: ts=8
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 232: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim"
line 1: " Vim syntax file
line 2: " Language:     Visual Basic
line 3: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 4: " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
line 5: " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
line 6: "       (tried multiple times to contact, but email bounced)
line 7: " Last Change:
line 8: "   2021 Nov 26  Incorporated additions from Doug Kearns
line 9: "   2005 May 25  Synched with work by Thomas Barthel
line 10: "   2004 May 30  Added a few keywords
line 11: 
line 12: " This was thrown together after seeing numerous requests on the
line 13: " VIM and VIM-DEV mailing lists.  It is by no means complete.
line 14: " Send comments, suggestions and requests to the maintainer.
line 15: 
line 16: " quit when a syntax file was already loaded
line 17: if exists("b:current_syntax")
line 18:         finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/vb.vim"
line 233:   unlet b:current_syntax
line 234:   syn region  javaScript start=+<script \_[^>]*language *=\_[^>]*vbscript\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlVbScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
line 235: endif
line 236: 
line 237: syn cluster htmlJavaScript      add=@htmlPreproc
line 238: 
line 239: if main_syntax != 'java' || exists("java_css")
line 240:   " embedded style sheets
line 241:   syn keyword htmlArg           contained media
line 242:   syn include @htmlCss syntax/css.vim
Searching for "syntax/css.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/css.vim/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:     Cascading Style Sheets
line 3: " Previous Contributor List:
line 4: "               Claudio Fleiner <claudio@fleiner.com> (Maintainer)
line 5: "               Yeti            (Add full CSS2, HTML4 support)
line 6: "               Nikolai Weibull (Add CSS2 support)
line 7: " URL:          https://github.com/JulesWang/css.vim
line 8: " Maintainer:   Jules Wang      <w.jq0722@gmail.com>
line 9: " Last Change:  2019 Jul. 29
line 10: 
line 11: " quit when a syntax file was already loaded
line 12: if !exists("main_syntax")
line 13:   if exists("b:current_syntax")
line 14:     finish
line 15:   endif
line 16:   let main_syntax = 'css'
line 17: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 18:   finish
line 19: endif
line 20: 
line 21: let s:cpo_save = &cpo
line 22: set cpo&vim
line 23: 
line 24: syn case ignore
line 25: 
line 26: " HTML4 tags
line 27: syn keyword cssTagName abbr address area a b base
line 28: syn keyword cssTagName bdo blockquote body br button
line 29: syn keyword cssTagName caption cite code col colgroup dd del
line 30: syn keyword cssTagName dfn div dl dt em fieldset form
line 31: syn keyword cssTagName h1 h2 h3 h4 h5 h6 head hr html img i
line 32: syn keyword cssTagName iframe input ins isindex kbd label legend li
line 33: syn keyword cssTagName link map menu meta noscript ol optgroup
line 34: syn keyword cssTagName option p param pre q s samp script small
line 35: syn keyword cssTagName span strong sub sup tbody td
line 36: syn keyword cssTagName textarea tfoot th thead title tr ul u var
line 37: syn keyword cssTagName object svg
line 38: syn match   cssTagName /\<select\>\|\<style\>\|\<table\>/
line 39: 
line 40: " 34 HTML5 tags
line 41: syn keyword cssTagName article aside audio bdi canvas command data
line 42: syn keyword cssTagName datalist details dialog embed figcaption figure footer
line 43: syn keyword cssTagName header hgroup keygen main mark menuitem meter nav
line 44: syn keyword cssTagName output progress rt rp ruby section
line 45: syn keyword cssTagName source summary time track video wbr
line 46: 
line 47: " Tags not supported in HTML5
line 48: " acronym applet basefont big center dir
line 49: " font frame frameset noframes strike tt
line 50: 
line 51: syn match cssTagName "\*"
line 52: 
line 53: " selectors
line 54: syn match cssSelectorOp "[,>+~]"
line 55: syn match cssSelectorOp2 "[~|^$*]\?=" contained
line 56: syn region cssAttributeSelector matchgroup=cssSelectorOp start="\[" end="]" contains=cssUnicodeEscape,cssSelectorOp2,cssStringQ,cssStringQQ
line 57: 
line 58: " .class and #id
line 59: syn match cssClassName "\.-\=[A-Za-z_][A-Za-z0-9_-]*" contains=cssClassNameDot
line 60: syn match cssClassNameDot contained '\.'
line 61: 
line 62: try
line 63: syn match cssIdentifier "#[A-Za-z<c0>-<ff>_@][A-Za-z<c0>-<ff>0-9_@-]*"
line 64: catch /^.*/
line 65: syn match cssIdentifier "#[A-Za-z_@][A-Za-z0-9_@-]*"
line 66: endtry
line 67: 
line 68: " digits
line 69: syn match cssValueInteger contained "[-+]\=\d\+" contains=cssUnitDecorators
line 70: syn match cssValueNumber contained "[-+]\=\d\+\(\.\d*\)\=" contains=cssUnitDecorators
line 71: syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=\(mm\|cm\|in\|pt\|pc\|em\|ex\|px\|rem\|dpi\|dppx\|dpcm\|fr\|vw\|vh\|vmin\|vmax\|ch\)\>" contains=cssUnitDecorators
line 72: syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=%" contains=cssUnitDecorators
line 73: syn match cssValueAngle contained "[-+]\=\d\+\(\.\d*\)\=\(deg\|grad\|rad\)\>" contains=cssUnitDecorators
line 74: syn match cssValueTime contained "+\=\d\+\(\.\d*\)\=\(ms\|s\)\>" contains=cssUnitDecorators
line 75: syn match cssValueFrequency contained "+\=\d\+\(\.\d*\)\=\(Hz\|kHz\)\>" contains=cssUnitDecorators
line 76: 
line 77: " The 16 basic color names
line 78: syn keyword cssColor contained aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal yellow
line 79: 
line 80: " 130 more color names
line 81: syn keyword cssColor contained aliceblue antiquewhite aquamarine azure
line 82: syn keyword cssColor contained beige bisque blanchedalmond blueviolet brown burlywood
line 83: syn keyword cssColor contained cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan
line 84: syn match cssColor contained /\<dark\(blue\|cyan\|goldenrod\|gray\|green\|grey\|khaki\)\>/
line 85: syn match cssColor contained /\<dark\(magenta\|olivegreen\|orange\|orchid\|red\|salmon\|seagreen\)\>/
line 86: syn match cssColor contained /\<darkslate\(blue\|gray\|grey\)\>/
line 87: syn match cssColor contained /\<dark\(turquoise\|violet\)\>/
line 88: syn keyword cssColor contained deeppink deepskyblue dimgray dimgrey dodgerblue firebrick
line 89: syn keyword cssColor contained floralwhite forestgreen gainsboro ghostwhite gold
line 90: syn keyword cssColor contained goldenrod greenyellow grey honeydew hotpink
line 91: syn keyword cssColor contained indianred indigo ivory khaki lavender lavenderblush lawngreen
line 92: syn keyword cssColor contained lemonchiffon limegreen linen magenta
line 93: syn match cssColor contained /\<light\(blue\|coral\|cyan\|goldenrodyellow\|gray\|green\)\>/
line 94: syn match cssColor contained /\<light\(grey\|pink\|salmon\|seagreen\|skyblue\|yellow\)\>/
line 95: syn match cssColor contained /\<light\(slategray\|slategrey\|steelblue\)\>/
line 96: syn match cssColor contained /\<medium\(aquamarine\|blue\|orchid\|purple\|seagreen\)\>/
line 97: syn match cssColor contained /\<medium\(slateblue\|springgreen\|turquoise\|violetred\)\>/
line 98: syn keyword cssColor contained midnightblue mintcream mistyrose moccasin navajowhite
line 99: syn keyword cssColor contained oldlace olivedrab orange orangered orchid
line 100: syn match cssColor contained /\<pale\(goldenrod\|green\|turquoise\|violetred\)\>/
line 101: syn keyword cssColor contained papayawhip peachpuff peru pink plum powderblue
line 102: syn keyword cssColor contained rosybrown royalblue rebeccapurple saddlebrown salmon
line 103: syn keyword cssColor contained sandybrown seagreen seashell sienna skyblue slateblue
line 104: syn keyword cssColor contained slategray slategrey snow springgreen steelblue tan
line 105: syn keyword cssColor contained thistle tomato turquoise violet wheat
line 106: syn keyword cssColor contained whitesmoke yellowgreen
line 107: 
line 108: " FIXME: These are actually case-insensitive too, but (a) specs recommend using
line 109: " mixed-case (b) it's hard to highlight the word `Background' correctly in
line 110: " all situations
line 111: syn case match
line 112: syn keyword cssColor contained ActiveBorder ActiveCaption AppWorkspace ButtonFace ButtonHighlight ButtonShadow ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder InactiveCaption InactiveCaptionText InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText Background
line 113: syn case ignore
line 114: 
line 115: syn match cssImportant contained "!\s*important\>"
line 116: syn match cssCustomProp contained "--[a-zA-Z0-9-_]*"
line 117: 
line 118: syn match cssColor contained "\<transparent\>"
line 119: syn match cssColor contained "\<currentColor\>"
line 120: syn match cssColor contained "\<white\>"
line 121: syn match cssColor contained "#\x\{3,4\}\>" contains=cssUnitDecorators
line 122: syn match cssColor contained "#\x\{6\}\>" contains=cssUnitDecorators
line 123: syn match cssColor contained "#\x\{8\}\>" contains=cssUnitDecorators
line 124: 
line 125: syn region cssURL contained matchgroup=cssFunctionName start="\<\(uri\|url\|local\|format\)\s*(" end=")" contains=cssStringQ,cssStringQQ oneline
line 126: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(var\|calc\)\s*(" end=")" contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
line 127: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgb\|clip\|attr\|counter\|rect\|cubic-bezier\|steps\)\s*(" end=")" oneline  contains=cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma
line 128: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgba\|hsl\|hsla\|color-stop\|from\|to\)\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma,cssFunction
line 129: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(linear-\|radial-\)\=\gradient\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunction,cssGradientAttr,cssFunctionComma
line 130: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(matrix\(3d\)\=\|scale\(3d\|X\|Y\|Z\)\=\|translate\(3d\|X\|Y\|Z\)\=\|skew\(X\|Y\)\=\|rotate\(3d\|X\|Y\|Z\)\=\|perspective\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
line 131: syn keyword cssGradientAttr contained top bottom left right cover center middle ellipse at
line 132: syn match cssFunctionComma contained ","
line 133: 
line 134: " Common Prop and Attr
line 135: syn keyword cssCommonAttr contained auto none inherit all default normal
line 136: syn keyword cssCommonAttr contained top bottom center stretch hidden visible
line 137: syn match cssCommonAttr contained "\<\(max-\|min-\|fit-\)content\>"
line 138: "------------------------------------------------
line 139: " CSS Animations
line 140: " http://www.w3.org/TR/css3-animations/
line 141: syn match cssAnimationProp contained "\<animation\(-\(delay\|direction\|duration\|fill-mode\|name\|play-state\|timing-function\|iteration-count\)\)\=\>"
line 142: 
line 143: " animation-direction attributes
line 144: syn keyword cssAnimationAttr contained alternate reverse
line 145: syn match cssAnimationAttr contained "\<alternate-reverse\>"
line 146: 
line 147: " animation-fill-mode attributes
line 148: syn keyword cssAnimationAttr contained forwards backwards both
line 149: 
line 150: " animation-play-state attributes
line 151: syn keyword cssAnimationAttr contained running paused
line 152: 
line 153: " animation-iteration-count attributes
line 154: syn keyword cssAnimationAttr contained infinite
line 155: "------------------------------------------------
line 156: "  CSS Backgrounds and Borders Module Level 3
line 157: "  http://www.w3.org/TR/css3-background/
line 158: syn match cssBackgroundProp contained "\<background\(-\(attachment\|clip\|color\|image\|origin\|position\|repeat\|size\)\)\=\>"
line 159: " background-attachment attributes
line 160: syn keyword cssBackgroundAttr contained scroll fixed local
line 161: 
line 162: " background-position attributes
line 163: syn keyword cssBackgroundAttr contained left center right top bottom
line 164: 
line 165: " background-repeat attributes
line 166: syn match cssBackgroundAttr contained "\<no-repeat\>"
line 167: syn match cssBackgroundAttr contained "\<repeat\(-[xy]\)\=\>"
line 168: 
line 169: " background-size attributes
line 170: syn keyword cssBackgroundAttr contained cover contain
line 171: 
line 172: syn match cssBorderProp contained "\<border\(-\(top\|right\|bottom\|left\)\)\=\(-\(width\|color\|style\)\)\=\>"
line 173: syn match cssBorderProp contained "\<border\(-\(top\|bottom\)-\(left\|right\)\)\=-radius\>"
line 174: syn match cssBorderProp contained "\<border-image\(-\(outset\|repeat\|slice\|source\|width\)\)\=\>"
line 175: syn match cssBorderProp contained "\<box-decoration-break\>"
line 176: syn match cssBorderProp contained "\<box-shadow\>"
line 177: 
line 178: " border-image attributes
line 179: syn keyword cssBorderAttr contained stretch round fill
line 180: 
line 181: " border-style attributes
line 182: syn keyword cssBorderAttr contained dotted dashed solid double groove ridge inset outset
line 183: 
line 184: " border-width attributes
line 185: syn keyword cssBorderAttr contained thin thick medium
line 186: 
line 187: " box-decoration-break attributes
line 188: syn keyword cssBorderAttr contained clone slice
line 189: "------------------------------------------------
line 190: 
line 191: syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
line 192: syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
line 193: syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
line 194: syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
line 195: syn keyword cssBoxAttr contained visible hidden scroll auto
line 196: syn match cssBoxAttr contained "\<no-\(display\|content\)\>"
line 197: 
line 198: syn keyword cssCascadeProp contained all
line 199: syn keyword cssCascadeAttr contained initial unset revert
line 200: 
line 201: syn keyword cssColorProp contained opacity
line 202: syn match cssColorProp contained "\<color-profile\>"
line 203: syn match cssColorProp contained "\<rendering-intent\>"
line 204: 
line 205: 
line 206: syn match cssDimensionProp contained "\<\(min\|max\)-\(width\|height\)\>"
line 207: syn keyword cssDimensionProp contained height
line 208: syn keyword cssDimensionProp contained width
line 209: 
line 210: " CSS Flexible Box Layout Module Level 1
line 211: " http://www.w3.org/TR/css3-flexbox/
line 212: " CSS Box Alignment Module Level 3
line 213: " http://www.w3.org/TR/css-align-3/
line 214: syn match cssFlexibleBoxProp contained "\<flex\(-\(direction\|wrap\|flow\|grow\|shrink\|basis\)\)\=\>"
line 215: syn match cssFlexibleBoxProp contained "\<\(align\|justify\)\(-\(items\|self\|content\)\)\=\>"
line 216: syn keyword cssFlexibleBoxProp contained order
line 217: 
line 218: syn match cssFlexibleBoxAttr contained "\<\(row\|column\|wrap\)\(-reverse\)\=\>"
line 219: syn keyword cssFlexibleBoxAttr contained nowrap stretch baseline center
line 220: syn match cssFlexibleBoxAttr contained "\<flex\(-\(start\|end\)\)\=\>"
line 221: syn match cssFlexibleBoxAttr contained "\<space\(-\(between\|around\)\)\=\>"
line 222: 
line 223: " CSS Fonts Module Level 3
line 224: " http://www.w3.org/TR/css-fonts-3/
line 225: syn match cssFontProp contained "\<font\(-\(family\|\|feature-settings\|kerning\|language-override\|size\(-adjust\)\=\|stretch\|style\|synthesis\|variant\(-\(alternates\|caps\|east-asian\|ligatures\|numeric\|position\)\)\=\|weight\)\)\=\>"
line 226: 
line 227: " font attributes
line 228: syn keyword cssFontAttr contained icon menu caption
line 229: syn match cssFontAttr contained "\<message-box\>"
line 230: syn match cssFontAttr contained "\<status-bar\>"
line 231: syn keyword cssFontAttr contained larger smaller
line 232: syn match cssFontAttr contained "\<\(x\{1,2\}-\)\=\(large\|small\)\>"
line 233: syn match cssFontAttr contained "\<small-\(caps\|caption\)\>"
line 234: " font-family attributes
line 235: syn match cssFontAttr contained "\<\(sans-\)\=serif\>"
line 236: syn keyword cssFontAttr contained Antiqua Arial Black Book Charcoal Comic Courier Dingbats Gadget Geneva Georgia Grande Helvetica Impact Linotype Lucida MS Monaco Neue New Palatino Roboto Roman Symbol Tahoma Times Trebuchet Verdana Webdings Wingdings York Zapf
line 237: syn keyword cssFontAttr contained cursive fantasy monospace
line 238: " font-feature-settings attributes
line 239: syn keyword cssFontAttr contained on off
line 240: " font-stretch attributes
line 241: syn match cssFontAttr contained "\<\(\(ultra\|extra\|semi\)-\)\=\(condensed\|expanded\)\>"
line 242: " font-style attributes
line 243: syn keyword cssFontAttr contained italic oblique
line 244: " font-synthesis attributes
line 245: syn keyword cssFontAttr contained weight style
line 246: " font-weight attributes
line 247: syn keyword cssFontAttr contained bold bolder lighter
line 248: " TODO: font-variant-* attributes
line 249: "------------------------------------------------
line 250: 
line 251: " Webkit specific property/attributes
line 252: syn match cssFontProp contained "\<font-smooth\>"
line 253: syn match cssFontAttr contained "\<\(subpixel-\)\=\antialiased\>"
line 254: 
line 255: 
line 256: " CSS Multi-column Layout Module
line 257: " http://www.w3.org/TR/css3-multicol/
line 258: syn match cssMultiColumnProp contained "\<break-\(after\|before\|inside\)\>"
line 259: syn match cssMultiColumnProp contained "\<column-\(count\|fill\|gap\|rule\(-\(color\|style\|width\)\)\=\|span\|width\)\>"
line 260: syn keyword cssMultiColumnProp contained columns
line 261: syn keyword cssMultiColumnAttr contained balance medium
line 262: syn keyword cssMultiColumnAttr contained always left right page column
line 263: syn match cssMultiColumnAttr contained "\<avoid\(-\(page\|column\)\)\=\>"
line 264: 
line 265: " http://www.w3.org/TR/css3-break/#page-break
line 266: syn match cssMultiColumnProp contained "\<page\(-break-\(before\|after\|inside\)\)\=\>"
line 267: 
line 268: " http://www.w3.org/TR/SVG11/interact.html
line 269: syn match cssInteractProp contained "\<pointer-events\>"
line 270: syn match cssInteractAttr contained "\<\(visible\)\=\(Painted\|Fill\|Stroke\)\=\>"
line 271: 
line 272: " TODO find following items in w3c docs.
line 273: syn keyword cssGeneratedContentProp contained quotes crop
line 274: syn match cssGeneratedContentProp contained "\<counter-\(reset\|increment\)\>"
line 275: syn match cssGeneratedContentProp contained "\<move-to\>"
line 276: syn match cssGeneratedContentProp contained "\<page-policy\>"
line 277: syn match cssGeneratedContentAttr contained "\<\(no-\)\=\(open\|close\)-quote\>"
line 278: 
line 279: " https://www.w3.org/TR/css-grid-1/
line 280: syn match cssGridProp contained "\<grid\>"
line 281: syn match cssGridProp contained "\<grid-template\(-\(columns\|rows\|areas\)\)\=\>"
line 282: syn match cssGridProp contained "\<grid-\(column\|row\)\(-\(start\|end\|gap\)\)\=\>"
line 283: syn match cssGridProp contained "\<grid-\(area\|gap\)\>"
line 284: syn match cssGridProp contained "\<grid-auto-\(flow\|rows\|columns\)\>"
line 285: 
line 286: syn match cssHyerlinkProp contained "\<target\(-\(name\|new\|position\)\)\=\>"
line 287: 
line 288: syn match cssListProp contained "\<list-style\(-\(type\|position\|image\)\)\=\>"
line 289: syn match cssListAttr contained "\<\(lower\|upper\)-\(roman\|alpha\|greek\|latin\)\>"
line 290: syn match cssListAttr contained "\<\(hiragana\|katakana\)\(-iroha\)\=\>"
line 291: syn match cssListAttr contained "\<\(decimal\(-leading-zero\)\=\|cjk-ideographic\)\>"
line 292: syn keyword cssListAttr contained disc circle square hebrew armenian georgian
line 293: syn keyword cssListAttr contained inside outside
line 294: 
line 295: syn keyword cssPositioningProp contained bottom clear clip display float left
line 296: syn keyword cssPositioningProp contained position right top visibility
line 297: syn match cssPositioningProp contained "\<z-index\>"
line 298: syn keyword cssPositioningAttr contained block compact grid
line 299: syn match cssPositioningAttr contained "\<table\(-\(row-group\|\(header\|footer\)-group\|row\|column\(-group\)\=\|cell\|caption\)\)\=\>"
line 300: syn keyword cssPositioningAttr contained left right both
line 301: syn match cssPositioningAttr contained "\<list-item\>"
line 302: syn match cssPositioningAttr contained "\<inline\(-\(block\|box\|table\|grid\|flex\)\)\=\>"
line 303: syn match cssPositioningAttr contained "\<flow\(-root\)\=\>"
line 304: syn keyword cssPositioningAttr contained static relative absolute fixed subgrid
line 305: 
line 306: syn keyword cssPrintAttr contained landscape portrait crop cross always
line 307: 
line 308: syn match cssTableProp contained "\<\(caption-side\|table-layout\|border-collapse\|border-spacing\|empty-cells\)\>"
line 309: syn keyword cssTableAttr contained fixed collapse separate show hide once always
line 310: 
line 311: 
line 312: syn keyword cssTextProp contained color direction hyphens
line 313: syn match cssTextProp "\<\(\(word\|letter\)-spacing\|text\(-\(decoration\|transform\|align\|index\|shadow\)\)\=\|vertical-align\|unicode-bidi\|line-height\)\>"
line 314: syn match cssTextProp contained "\<text-\(justify\|outline\|warp\|align-last\|size-adjust\|rendering\|stroke\|indent\)\>"
line 315: syn match cssTextProp contained "\<\(word\|line\)-break\|\(overflow\|word\)-wrap\>"
line 316: syn match cssTextProp contained "\<white-space\>"
line 317: syn match cssTextProp contained "\<hanging-punctuation\>"
line 318: syn match cssTextProp contained "\<tab-size\>"
line 319: syn match cssTextProp contained "\<punctuation-trim\>"
line 320: syn match cssTextAttr contained "\<line-through\>"
line 321: syn match cssTextAttr contained "\<\(text-\)\=\(top\|bottom\)\>"
line 322: syn keyword cssTextAttr contained ltr rtl embed nowrap
line 323: syn keyword cssTextAttr contained underline overline blink sub super middle
line 324: syn keyword cssTextAttr contained capitalize uppercase lowercase
line 325: syn keyword cssTextAttr contained justify baseline sub super
line 326: syn keyword cssTextAttr contained optimizeLegibility optimizeSpeed geometricPrecision
line 327: syn match cssTextAttr contained "\<pre\(-\(line\|wrap\)\)\=\>"
line 328: syn match cssTextAttr contained "\<\(allow\|force\)-end\>"
line 329: syn keyword cssTextAttr contained start end adjacent
line 330: syn match cssTextAttr contained "\<inter-\(word\|ideographic\|cluster\)\>"
line 331: syn keyword cssTextAttr contained distribute kashida first last
line 332: syn keyword cssTextAttr contained clip ellipsis unrestricted suppress
line 333: syn match cssTextAttr contained "\<break-all\>"
line 334: syn match cssTextAttr contained "\<break-word\>"
line 335: syn keyword cssTextAttr contained manual
line 336: syn match cssTextAttr contained "\<bidi-override\>"
line 337: 
line 338: syn match cssTransformProp contained "\<transform\(-\(origin\|style\)\)\=\>"
line 339: syn match cssTransformProp contained "\<perspective\(-origin\)\=\>"
line 340: syn match cssTransformProp contained "\<backface-visibility\>"
line 341: 
line 342: " CSS Transitions
line 343: " http://www.w3.org/TR/css3-transitions/
line 344: syn match cssTransitionProp contained "\<transition\(-\(delay\|duration\|property\|timing-function\)\)\=\>"
line 345: 
line 346: " transition-time-function attributes
line 347: syn match cssTransitionAttr contained "\<linear\(-gradient\)\@!\>"
line 348: syn match cssTransitionAttr contained "\<ease\(-\(in-out\|out\|in\)\)\=\>"
line 349: syn match cssTransitionAttr contained "\<step\(-start\|-end\)\=\>"
line 350: "------------------------------------------------
line 351: " CSS Basic User Interface Module Level 3 (CSS3 UI)
line 352: " http://www.w3.org/TR/css3-ui/
line 353: syn match cssUIProp contained "\<box-sizing\>"
line 354: syn match cssUIAttr contained "\<\(content\|padding\|border\)\(-box\)\=\>"
line 355: 
line 356: syn keyword cssUIProp contained cursor
line 357: syn match cssUIAttr contained "\<\(\([ns]\=[ew]\=\)\|col\|row\|nesw\|nwse\)-resize\>"
line 358: syn keyword cssUIAttr contained crosshair help move pointer alias copy
line 359: syn keyword cssUIAttr contained progress wait text cell move
line 360: syn match cssUIAttr contained "\<context-menu\>"
line 361: syn match cssUIAttr contained "\<no-drop\>"
line 362: syn match cssUIAttr contained "\<not-allowed\>"
line 363: syn match cssUIAttr contained "\<all-scroll\>"
line 364: syn match cssUIAttr contained "\<\(vertical-\)\=text\>"
line 365: syn match cssUIAttr contained "\<zoom\(-in\|-out\)\=\>"
line 366: 
line 367: syn match cssUIProp contained "\<ime-mode\>"
line 368: syn keyword cssUIAttr contained active inactive disabled
line 369: 
line 370: syn match cssUIProp contained "\<nav-\(down\|index\|left\|right\|up\)\=\>"
line 371: syn match cssUIProp contained "\<outline\(-\(width\|style\|color\|offset\)\)\=\>"
line 372: syn keyword cssUIAttr contained invert
line 373: 
line 374: syn keyword cssUIProp contained icon resize
line 375: syn keyword cssUIAttr contained both horizontal vertical
line 376: 
line 377: syn match cssUIProp contained "\<text-overflow\>"
line 378: syn keyword cssUIAttr contained clip ellipsis
line 379: 
line 380: syn match cssUIProp contained "\<image-rendering\>"
line 381: syn keyword cssUIAttr contained pixellated
line 382: syn match cssUIAttr contained "\<crisp-edges\>"
line 383: 
line 384: "------------------------------------------------
line 385: " Webkit/iOS specific attributes
line 386: syn match cssUIAttr contained '\<preserve-3d\>'
line 387: " IE specific attributes
line 388: syn match cssIEUIAttr contained '\<bicubic\>'
line 389: 
line 390: " Webkit/iOS specific properties
line 391: syn match cssUIProp contained '\<tap-highlight-color\|user-select\|touch-callout\>'
line 392: " IE specific properties
line 393: syn match cssIEUIProp contained '\<interpolation-mode\|zoom\|filter\>'
line 394: 
line 395: " Webkit/Firebox specific properties/attributes
line 396: syn keyword cssUIProp contained appearance
line 397: syn keyword cssUIAttr contained window button field icon document menu
line 398: 
line 399: 
line 400: syn match cssAuralProp contained "\<\(pause\|cue\)\(-\(before\|after\)\)\=\>"
line 401: syn match cssAuralProp contained "\<\(play-during\|speech-rate\|voice-family\|pitch\(-range\)\=\|speak\(-\(punctuation\|numeral\|header\)\)\=\)\>"
line 402: syn keyword cssAuralProp contained volume during azimuth elevation stress richness
line 403: syn match cssAuralAttr contained "\<\(x-\)\=\(soft\|loud\)\>"
line 404: syn keyword cssAuralAttr contained silent
line 405: syn match cssAuralAttr contained "\<spell-out\>"
line 406: syn keyword cssAuralAttr contained non mix
line 407: syn match cssAuralAttr contained "\<\(left\|right\)-side\>"
line 408: syn match cssAuralAttr contained "\<\(far\|center\)-\(left\|center\|right\)\>"
line 409: syn keyword cssAuralAttr contained leftwards rightwards behind
line 410: syn keyword cssAuralAttr contained below level above lower higher
line 411: syn match cssAuralAttr contained "\<\(x-\)\=\(slow\|fast\|low\|high\)\>"
line 412: syn keyword cssAuralAttr contained faster slower
line 413: syn keyword cssAuralAttr contained male female child code digits continuous
line 414: 
line 415: " mobile text
line 416: syn match cssMobileTextProp contained "\<text-size-adjust\>"
line 417: 
line 418: syn keyword cssMediaProp contained width height orientation scan
line 419: syn match cssMediaProp contained /\(\(max\|min\)-\)\=\(\(device\)-\)\=aspect-ratio/
line 420: syn match cssMediaProp contained /\(\(max\|min\)-\)\=device-pixel-ratio/
line 421: syn match cssMediaProp contained /\(\(max\|min\)-\)\=device-\(height\|width\)/
line 422: syn match cssMediaProp contained /\(\(max\|min\)-\)\=\(height\|width\|resolution\|monochrome\|color\(-index\)\=\)/
line 423: syn keyword cssMediaAttr contained portrait landscape progressive interlace
line 424: syn match cssKeyFrameProp contained /\(\d\+\(\.\d\+\)\?%\|\(\<from\|to\>\)\)/ nextgroup=cssDefinition
line 425: syn match cssPageMarginProp /@\(\(top\|left\|right\|bottom\)-\(left\|center\|right\|middle\|bottom\)\)\(-corner\)\=/ contained nextgroup=cssDefinition
line 426: syn keyword cssPageProp contained content size
line 427: syn keyword cssPageProp contained orphans widows
line 428: syn keyword cssFontDescriptorProp contained src
line 429: syn match cssFontDescriptorProp contained "\<unicode-range\>"
line 430: " unicode-range attributes
line 431: syn match cssFontDescriptorAttr contained "U+[0-9A-Fa-f?]\+"
line 432: syn match cssFontDescriptorAttr contained "U+\x\+-\x\+"
line 433: 
line 434: syn match cssBraces contained "[{}]"
line 435: syn match cssError contained "{@<>"
line 436: syn region cssDefinition transparent matchgroup=cssBraces start='{' end='}' contains=cssTagName,cssAttributeSelector,cssClassName,cssIdentifier,cssAtRule,cssAttrRegion,css.*Prop,cssComment,cssValue.*,cssColor,cssURL,cssImportant,cssCustomProp,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssVendor,cssDefinition,cssHacks,cssNoise fold
line 437: syn match cssBraceError "}"
line 438: syn match cssAttrComma ","
line 439: 
line 440: " Pseudo class
line 441: " http://www.w3.org/TR/css3-selectors/
line 442: syn match cssPseudoClass ":[A-Za-z0-9_-]*" contains=cssNoise,cssPseudoClassId,cssUnicodeEscape,cssVendor,cssPseudoClassFn
line 443: syn keyword cssPseudoClassId contained link visited active hover before after left right
line 444: syn keyword cssPseudoClassId contained root empty target enable disabled checked invalid
line 445: syn match cssPseudoClassId contained "\<first-\(line\|letter\)\>"
line 446: syn match cssPseudoClassId contained "\<\(first\|last\|only\)-\(of-type\|child\)\>"
line 447: syn region cssPseudoClassFn contained matchgroup=cssFunctionName start="\<\(not\|lang\|\(nth\|nth-last\)-\(of-type\|child\)\)(" end=")" contains=cssStringQ,cssStringQQ
line 448: " ------------------------------------
line 449: " Vendor specific properties
line 450: syn match cssPseudoClassId contained  "\<selection\>"
line 451: syn match cssPseudoClassId contained  "\<focus\(-inner\)\=\>"
line 452: syn match cssPseudoClassId contained  "\<\(input-\)\=placeholder\>"
line 453: 
line 454: " Misc highlight groups
line 455: syntax match cssUnitDecorators /\(#\|-\|+\|%\|mm\|cm\|in\|pt\|pc\|em\|ex\|px\|ch\|rem\|vh\|vw\|vmin\|vmax\|dpi\|dppx\|dpcm\|Hz\|kHz\|s\|ms\|deg\|grad\|rad\)/ contained
line 456: syntax match cssNoise contained /\(:\|;\|\/\)/
line 457: 
line 458: " Comment
line 459: syn region cssComment start="/\*" end="\*/" contains=@Spell fold
line 460: 
line 461: syn match cssUnicodeEscape "\\\x\{1,6}\s\?"
line 462: syn match cssSpecialCharQQ +\\\\\|\\"+ contained
line 463: syn match cssSpecialCharQ +\\\\\|\\'+ contained
line 464: syn region cssStringQQ start=+"+ skip=+\\\\\|\\"+ end=+"+ contains=cssUnicodeEscape,cssSpecialCharQQ
line 465: syn region cssStringQ start=+'+ skip=+\\\\\|\\'+ end=+'+ contains=cssUnicodeEscape,cssSpecialCharQ
line 466: 
line 467: " Vendor Prefix
line 468: syn match cssVendor contained "-\(webkit\|moz\|o\|ms\)-"
line 469: 
line 470: " Various CSS Hack characters
line 471: " In earlier versions of IE (6 and 7), one can prefix property names
line 472: " with a _ or * to isolate those definitions to particular versions of IE
line 473: " This is purely decorative and therefore we assign to the same highlight
line 474: " group to cssVendor, for more information:
line 475: " http://www.paulirish.com/2009/browser-specific-css-hacks/
line 476: syn match cssHacks contained /\(_\|*\)/
line 477: 
line 478: " Attr Enhance
line 479: " Some keywords are both Prop and Attr, so we have to handle them
line 480: " cssPseudoClassId is hidden by cssAttrRegion, so we add it here. see #69
line 481: syn region cssAttrRegion start=/:/ end=/\ze\(;\|)\|}\|{\)/ contained contains=cssPseudoClassId,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
line 482: 
line 483: " Hack for transition
line 484: " 'transition' has Props after ':'.
line 485: syn region cssAttrRegion start=/transition\s*:/ end=/\ze\(;\|)\|}\)/ contained contains=css.*Prop,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
line 486: 
line 487: syn match cssAtKeyword /@\(font-face\|media\|keyframes\|import\|charset\|namespace\|page\|supports\)/
line 488: 
line 489: syn keyword cssAtRuleLogical only not and contained
line 490: 
line 491: " @media
line 492: " Reference: http://www.w3.org/TR/css3-mediaqueries/
line 493: syn region cssAtRule start=/@media\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssVendor,cssMediaType,cssComment,cssCustomProp,cssFunctionName nextgroup=cssDefinition
line 494: syn keyword cssMediaType contained screen print aural braille embossed handheld projection tty tv speech all contained
line 495: 
line 496: " @page
line 497: " http://www.w3.org/TR/css3-page/
line 498: syn region cssAtRule start=/@page\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssPagePseudo,cssComment nextgroup=cssDefinition
line 499: syn match cssPagePseudo /:\(left\|right\|first\|blank\)/ contained skipwhite skipnl
line 500: " @keyframe
line 501: " http://www.w3.org/TR/css3-animations/#keyframes
line 502: syn region cssAtRule start=/@\(-[a-z]\+-\)\=keyframes\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssVendor,cssComment nextgroup=cssDefinition
line 503: 
line 504: syn region cssAtRule start=/@import\>/    end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword,cssURL,cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssMediaType
line 505: syn region cssAtRule start=/@charset\>/   end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
line 506: syn region cssAtRule start=/@namespace\>/ end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
line 507: 
line 508: " @supports
line 509: " https://www.w3.org/TR/css3-conditional/#at-supports
line 510: syn region cssAtRule start=/@supports\>/ end=/\ze{/ skipwhite skipnl contains=cssAtRuleLogical,cssAttrRegion,css.*Prop,cssValue.*,cssVendor,cssAtKeyword,cssComment nextgroup=cssDefinition
line 511: 
line 512: 
line 513: if main_syntax == "css"
line 514:   syn sync minlines=10
line 515: endif
line 516: 
line 517: " Define the default highlighting.
line 518: " Only when an item doesn't have highlighting yet
line 519: 
line 520: hi def link cssComment Comment
line 521: hi def link cssVendor Comment
line 522: hi def link cssHacks Comment
line 523: hi def link cssTagName Statement
line 524: hi def link cssDeprecated Error
line 525: hi def link cssSelectorOp Special
line 526: hi def link cssSelectorOp2 Special
line 527: hi def link cssAttrComma Special
line 528: 
line 529: hi def link cssAnimationProp cssProp
line 530: hi def link cssBackgroundProp cssProp
line 531: hi def link cssBorderProp cssProp
line 532: hi def link cssBoxProp cssProp
line 533: hi def link cssCascadeProp cssProp
line 534: hi def link cssColorProp cssProp
line 535: hi def link cssContentForPagedMediaProp cssProp
line 536: hi def link cssDimensionProp cssProp
line 537: hi def link cssFlexibleBoxProp cssProp
line 538: hi def link cssFontProp cssProp
line 539: hi def link cssGeneratedContentProp cssProp
line 540: hi def link cssGridProp cssProp
line 541: hi def link cssHyerlinkProp cssProp
line 542: hi def link cssInteractProp cssProp
line 543: hi def link cssLineboxProp cssProp
line 544: hi def link cssListProp cssProp
line 545: hi def link cssMarqueeProp cssProp
line 546: hi def link cssMultiColumnProp cssProp
line 547: hi def link cssPagedMediaProp cssProp
line 548: hi def link cssPositioningProp cssProp
line 549: hi def link cssPrintProp cssProp
line 550: hi def link cssRubyProp cssProp
line 551: hi def link cssSpeechProp cssProp
line 552: hi def link cssTableProp cssProp
line 553: hi def link cssTextProp cssProp
line 554: hi def link cssTransformProp cssProp
line 555: hi def link cssTransitionProp cssProp
line 556: hi def link cssUIProp cssProp
line 557: hi def link cssIEUIProp cssProp
line 558: hi def link cssAuralProp cssProp
line 559: hi def link cssRenderProp cssProp
line 560: hi def link cssMobileTextProp cssProp
line 561: 
line 562: hi def link cssAnimationAttr cssAttr
line 563: hi def link cssBackgroundAttr cssAttr
line 564: hi def link cssBorderAttr cssAttr
line 565: hi def link cssBoxAttr cssAttr
line 566: hi def link cssContentForPagedMediaAttr cssAttr
line 567: hi def link cssDimensionAttr cssAttr
line 568: hi def link cssFlexibleBoxAttr cssAttr
line 569: hi def link cssFontAttr cssAttr
line 570: hi def link cssGeneratedContentAttr cssAttr
line 571: hi def link cssGridAttr cssAttr
line 572: hi def link cssHyerlinkAttr cssAttr
line 573: hi def link cssInteractAttr cssAttr
line 574: hi def link cssLineboxAttr cssAttr
line 575: hi def link cssListAttr cssAttr
line 576: hi def link cssMarginAttr cssAttr
line 577: hi def link cssMarqueeAttr cssAttr
line 578: hi def link cssMultiColumnAttr cssAttr
line 579: hi def link cssPaddingAttr cssAttr
line 580: hi def link cssPagedMediaAttr cssAttr
line 581: hi def link cssPositioningAttr cssAttr
line 582: hi def link cssGradientAttr cssAttr
line 583: hi def link cssPrintAttr cssAttr
line 584: hi def link cssRubyAttr cssAttr
line 585: hi def link cssSpeechAttr cssAttr
line 586: hi def link cssTableAttr cssAttr
line 587: hi def link cssTextAttr cssAttr
line 588: hi def link cssTransformAttr cssAttr
line 589: hi def link cssTransitionAttr cssAttr
line 590: hi def link cssUIAttr cssAttr
line 591: hi def link cssIEUIAttr cssAttr
line 592: hi def link cssAuralAttr cssAttr
line 593: hi def link cssRenderAttr cssAttr
line 594: hi def link cssCascadeAttr cssAttr
line 595: hi def link cssCommonAttr cssAttr
line 596: 
line 597: hi def link cssPseudoClassId PreProc
line 598: hi def link cssPseudoClassLang Constant
line 599: hi def link cssValueLength Number
line 600: hi def link cssValueInteger Number
line 601: hi def link cssValueNumber Number
line 602: hi def link cssValueAngle Number
line 603: hi def link cssValueTime Number
line 604: hi def link cssValueFrequency Number
line 605: hi def link cssFunction Constant
line 606: hi def link cssURL String
line 607: hi def link cssFunctionName Function
line 608: hi def link cssFunctionComma Function
line 609: hi def link cssColor Constant
line 610: hi def link cssIdentifier Function
line 611: hi def link cssAtRule Include
line 612: hi def link cssAtKeyword PreProc
line 613: hi def link cssImportant Special
line 614: hi def link cssCustomProp Special
line 615: hi def link cssBraces Function
line 616: hi def link cssBraceError Error
line 617: hi def link cssError Error
line 618: hi def link cssUnicodeEscape Special
line 619: hi def link cssStringQQ String
line 620: hi def link cssStringQ String
line 621: hi def link cssAttributeSelector String
line 622: hi def link cssMediaType Special
line 623: hi def link cssMediaComma Normal
line 624: hi def link cssAtRuleLogical Statement
line 625: hi def link cssMediaProp cssProp
line 626: hi def link cssMediaAttr cssAttr
line 627: hi def link cssPagePseudo PreProc
line 628: hi def link cssPageMarginProp cssAtKeyword
line 629: hi def link cssPageProp cssProp
line 630: hi def link cssKeyFrameProp Constant
line 631: hi def link cssFontDescriptor Special
line 632: hi def link cssFontDescriptorProp cssProp
line 633: hi def link cssFontDescriptorAttr cssAttr
line 634: hi def link cssUnicodeRange Constant
line 635: hi def link cssClassName Function
line 636: hi def link cssClassNameDot Function
line 637: hi def link cssProp StorageClass
line 638: hi def link cssAttr Constant
line 639: hi def link cssUnitDecorators Number
line 640: hi def link cssNoise Noise
line 641: 
line 642: let b:current_syntax = "css"
line 643: 
line 644: if main_syntax == 'css'
line 645:   unlet main_syntax
line 646: endif
line 647: 
line 648: let &cpo = s:cpo_save
line 649: unlet s:cpo_save
line 650: " vim: ts=8
line 651: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/css.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'css', 'syntax/css.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim', 'css', 'syntax/css.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     Cascading Style Sheets
line 7: " Previous Contributor List:
line 8: "               Jules Wang      <w.jq0722@gmail.com>
line 9: "               Claudio Fleiner <claudio@fleiner.com>
line 10: "               Yeti            (Add full CSS2, HTML4 support)
line 11: "               Nikolai Weibull (Add CSS2 support)
line 12: " URL:          https://github.com/vim-language-dept/css-syntax.vim
line 13: " Maintainer:   Jay Sitter <jay@jaysitter.com>
line 14: " Last Change:  2021 Oct 20
line 15: 
line 16: " quit when a syntax file was already loaded
line 17: if !exists("main_syntax")
line 18:   if exists("b:current_syntax")
line 19:     finish
line 20:   endif
line 21:   let main_syntax = 'css'
line 22: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 23:   finish
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:     Cascading Style Sheets
line 3: " Previous Contributor List:
line 4: "               Jules Wang      <w.jq0722@gmail.com>
line 5: "               Claudio Fleiner <claudio@fleiner.com>
line 6: "               Yeti            (Add full CSS2, HTML4 support)
line 7: "               Nikolai Weibull (Add CSS2 support)
line 8: " URL:          https://github.com/vim-language-dept/css-syntax.vim
line 9: " Maintainer:   Jay Sitter <jay@jaysitter.com>
line 10: " Last Change:  2021 Oct 20
line 11: 
line 12: " quit when a syntax file was already loaded
line 13: if !exists("main_syntax")
line 14:   if exists("b:current_syntax")
line 15:     finish
line 16:   endif
line 17:   let main_syntax = 'css'
line 18: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 19:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:    SCSS (Sassy CSS)
line 3: " Author:      Daniel Hofstetter (daniel.hofstetter@42dh.com)
line 4: " URL:         https://github.com/cakebaker/scss-syntax.vim
line 5: " Last Change: 2015-04-22
line 6: " Inspired by the syntax files for sass and css. Thanks to the authors of
line 7: " those files!
line 8: 
line 9: syn case ignore
line 10: 
line 11: " XXX fix for #20, can be removed once the patch is in vim's css.vim
line 12: syn match cssSpecialCharQQ +\\\\\|\\"+ contained
line 13: syn match cssSpecialCharQ +\\\\\|\\'+ contained
line 14: 
line 15: " XXX fix for #37
line 16: if v:version < 704
line 17:   " replace the definition of cssBoxProp with the one from Vim 7.4 to prevent
line 18:   " highlighting issues
line 19:   syn clear cssBoxProp
line 20:   syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
line 21:   syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
line 22:   syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
line 23:   syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
line 24: endif
line 25: 
line 26: " override @font-face blocks to allow scss elements inside
line 27: syn region cssFontDescriptorBlock contained transparent matchgroup=cssBraces start="{" end="}" contains=cssError,cssUnicodeEscape,cssFontProp,cssFontAttr,cssCommonAttr,cssStringQ,cssStringQQ,cssFontDescriptorProp,cssValue.*,cssFontDescriptorFunction,cssUnicodeRange,cssFontDescriptorAttr,@comment,scssDefinition,scssFunction,scssVariable,@scssControl,scssDebug,scssError,scssWarn
line 28: 
line 29: syn region scssDefinition matchgroup=cssBraces start='{' end='}' contains=cssString.*,cssInclude,cssFontDescriptor,scssAtRootStatement,@comment,scssDefinition,scssProperty,scssSelector,scssVariable,scssImport,scssExtend,scssInclude,scssInterpolation,scssFunction,@scssControl,scssWarn,scssError,scssDebug,scssReturn containedin=cssMediaBlock fold
line 30: 
line 31: syn match scssSelector _^\zs\([^:@]\|:[^ ]\|['"].*['"]\)\+{\@=_ contained contains=@scssSelectors
line 32: syn match scssSelector "^\s*\zs\([^:@{]\|:[^ ]\|['"].*['"]\)\+\_$" contained contains=@scssSelectors
line 33: " fix for #54 to recognize a multiline selector containing a string interpolation
line 34: syn match scssSelector "^\zs\([^:@]\|:[^ ]\)\+#{.*}[^;{]\+\_$" contained contains=@scssSelectors
line 35: syn cluster scssSelectors contains=@comment,cssSelectorOp,cssTagName,cssPseudoClass,cssAttributeSelector,scssSelectorChar,scssAmpersand,scssInterpolation
line 36: 
line 37: syn match scssProperty "\([[:alnum:]-]\)\+\s*\(:\)\@=" contained contains=css.*Prop,cssVendor containedin=cssMediaBlock nextgroup=scssAttribute,scssAttributeWithNestedDefinition
line 38: syn match scssAttribute ":[^;]*\ze\(;\|}\)" contained contains=css.*Attr,cssValue.*,cssColor,cssFunction,cssString.*,cssURL,scssFunction,scssInterpolation,scssVariable
line 39: 
line 40: syn match scssAttributeWithNestedDefinition ": [^#]*{\@=" nextgroup=scssNestedDefinition contained contains=css.*Attr,cssValue.*,scssVariable
line 41: syn region scssNestedDefinition matchgroup=cssBraces start="{" end="}" contained contains=@comment,scssProperty,scssNestedProperty
line 42: 
line 43: " CSS properties from https://developer.mozilla.org/en-US/docs/Web/CSS/Reference
line 44: " align
line 45: syn keyword scssNestedProperty contained content items self nextgroup=scssAttribute
line 46: " animation
line 47: syn keyword scssNestedProperty contained delay direction duration fill-mode iteration-count name play-state timing-function nextgroup=scssAttribute
line 48: " background
line 49: syn keyword scssNestedProperty contained attachment clip color image origin position repeat size nextgroup=scssAttribute
line 50: " border
line 51: syn keyword scssNestedProperty contained bottom bottom-color bottom-left-radius bottom-right-radius bottom-style bottom-width nextgroup=scssAttribute
line 52: syn keyword scssNestedProperty contained collapse color nextgroup=scssAttribute
line 53: syn keyword scssNestedProperty contained image image-outset image-repeat image-slice image-source image-width nextgroup=scssAttribute
line 54: syn keyword scssNestedProperty contained left left-color left-style left-width nextgroup=scssAttribute
line 55: syn keyword scssNestedProperty contained radius nextgroup=scssAttribute
line 56: syn keyword scssNestedProperty contained right right-color right-style right-width nextgroup=scssAttribute
line 57: syn keyword scssNestedProperty contained spacing style nextgroup=scssAttribute
line 58: syn keyword scssNestedProperty contained top top-color top-left-radius top-right-radius top-style top-width nextgroup=scssAttribute
line 59: syn keyword scssNestedProperty contained width nextgroup=scssAttribute
line 60: " box
line 61: syn keyword scssNestedProperty contained decoration-break shadow sizing nextgroup=scssAttribute
line 62: " break
line 63: syn keyword scssNestedProperty contained after before inside nextgroup=scssAttribute
line 64: " column
line 65: syn keyword scssNestedProperty contained count fill gap rule rule-color rule-style rule-width span width nextgroup=scssAttribute
line 66: " counter
line 67: syn keyword scssNestedProperty contained increment reset nextgroup=scssAttribute
line 68: " flex
line 69: syn keyword scssNestedProperty contained basis direction flow grow shrink wrap nextgroup=scssAttribute
line 70: " font
line 71: syn keyword scssNestedProperty contained family feature-settings kerning language-override size size-adjust stretch style synthesis nextgroup=scssAttribute
line 72: syn keyword scssNestedProperty contained variant variant-alternates variant-caps variant-east-asian variant-ligatures variant-numeric variant-position nextgroup=scssAttribute
line 73: syn keyword scssNestedProperty contained weight nextgroup=scssAttribute
line 74: " image
line 75: syn keyword scssNestedProperty contained rendering resolution orientation nextgroup=scssAttribute
line 76: " list
line 77: syn keyword scssNestedProperty contained style style-image style-position style-type nextgroup=scssAttribute
line 78: " margin/padding
line 79: syn keyword scssNestedProperty contained bottom left right top nextgroup=scssAttribute
line 80: " max/min
line 81: syn keyword scssNestedProperty contained height width nextgroup=scssAttribute
line 82: " nav
line 83: syn keyword scssNestedProperty contained down index left right up nextgroup=scssAttribute
line 84: " object
line 85: syn keyword scssNestedProperty contained fit position nextgroup=scssAttribute
line 86: " outline
line 87: syn keyword scssNestedProperty contained color offset style width nextgroup=scssAttribute
line 88: " overflow
line 89: syn keyword scssNestedProperty contained wrap x y nextgroup=scssAttribute
line 90: " page
line 91: syn keyword scssNestedProperty contained break-after break-before break-inside nextgroup=scssAttribute
line 92: " text
line 93: syn keyword scssNestedProperty contained align align-last combine-horizontal nextgroup=scssAttribute
line 94: syn keyword scssNestedProperty contained decoration decoration-color decoration-line decoration-style nextgroup=scssAttribute
line 95: syn keyword scssNestedProperty contained indent orientation overflow rendering shadow transform underline-position nextgroup=scssAttribute
line 96: " transform
line 97: syn keyword scssNestedProperty contained origin style nextgroup=scssAttribute
line 98: " transition
line 99: syn keyword scssNestedProperty contained delay duration property timing-function nextgroup=scssAttribute
line 100: " unicode
line 101: syn keyword scssNestedProperty contained bidi range nextgroup=scssAttribute
line 102: " word
line 103: syn keyword scssNestedProperty contained break spacing wrap nextgroup=scssAttribute
line 104: 
line 105: syn region scssInterpolation matchgroup=scssInterpolationDelimiter start="#{" end="}" contains=cssValue.*,cssColor,cssString.*,scssFunction,scssVariable containedin=cssComment,cssInclude,cssPseudoClassFn,cssPseudoClassLang,cssString.*,cssURL,scssFunction
line 106: 
line 107: " ignores the url() function so it can be handled by css.vim
line 108: syn region scssFunction contained matchgroup=scssFunctionName start="\<\(url(\)\@!\([[:alnum:]-_]\)\+\s*(" skip=+([^)]*)+ end=")" keepend extend containedin=cssInclude,cssMediaType
line 109: syn match scssParameterList ".*" contained containedin=cssFunction,scssFunction contains=css.*Attr,cssColor,cssString.*,cssValue.*,scssBoolean,scssFunction,scssInterpolation,scssMap,scssNull,scssVariable
line 110: 
line 111: syn match scssVariable "$[[:alnum:]_-]\+" containedin=cssFunction,scssFunction,cssInclude,cssMediaBlock,cssMediaType nextgroup=scssVariableAssignment skipwhite
line 112: syn match scssVariableAssignment ":" contained nextgroup=scssVariableValue skipwhite
line 113: syn region scssVariableValue start="" end="\ze[;)]" contained contains=css.*Attr,cssValue.*,cssColor,cssFunction,cssString.*,cssURL,scssBoolean,scssDefault,scssFunction,scssInterpolation,scssNull,scssVariable,scssMap,scssGlobal,scssAmpersand,@comment
line 114: syn match scssGlobal "!global" contained
line 115: 
line 116: syn keyword scssNull null contained
line 117: syn keyword scssBoolean true false contained
line 118: syn keyword scssBooleanOp and or not contained
line 119: 
line 120: syn match scssMixin "^@define-mixin" nextgroup=scssMixinName skipwhite
line 121: syn match scssMixinName "[[:alnum:]_-]\+" contained nextgroup=scssDefinition,scssMixinParams
line 122: syn region scssMixinParams contained contains=css.*Attr,cssColor,cssValue.*,cssString.*,cssUrl,cssBoxProp,cssDimensionProp,@comment,scssBoolean,scssNull,scssVariable,scssFunction start="(" end=")" extend
line 123: syn match scssInclude "@mixin" nextgroup=scssMixinName skipwhite containedin=cssMediaBlock
line 124: syn match scssContent "@mixin-content" contained containedin=scssDefinition
line 125: 
line 126: syn match scssFunctionDefinition "^@function" nextgroup=scssFunctionNameWithWhitespace skipwhite
line 127: syn match scssFunctionNameWithWhitespace "[[:alnum:]_-]\+\s*" contained contains=scssFunctionName nextgroup=scssFunctionParams
line 128: syn match scssFunctionName "[[:alnum:]_-]\+" contained
line 129: syn region scssFunctionParams contained start="(" end=")" nextgroup=scssFunctionBody contains=scssVariable skipwhite
line 130: syn region scssFunctionBody contained matchgroup=cssBraces start="{" end="}" contains=cssString.*,cssValue.*,@scssControl,scssBooleanOp,scssComment,scssVariable,scssReturn,scssFunction,scssDebug,scssError,scssWarn,scssDefinition,scssInterpolation fold
line 131: syn match scssReturn "@return" contained
line 132: syn match scssExtend "@extend" nextgroup=scssExtendedSelector skipwhite containedin=cssMediaBlock
line 133: syn match scssExtendedSelector "[^;]\+" contained contains=cssTagName,cssPseudoClass,scssOptional,scssSelectorChar skipwhite
line 134: syn match scssOptional "!optional" contained
line 135: syn match scssImport "@import" nextgroup=scssImportList
line 136: syn match scssImportList "[^;]\+" contained contains=cssString.*,cssMediaType,cssURL
line 137: 
line 138: syn match scssSelectorChar "\(#\|\.\|%\)\([[:alnum:]_-]\|#{.*}\)\@=" nextgroup=scssSelectorName containedin=cssMediaBlock,cssPseudoClassFn
line 139: syn match scssSelectorName "\([[:alnum:]_-]\|#{[^}]*}\)\+" contained contains=scssInterpolation
line 140: 
line 141: syn match scssAmpersand "&" nextgroup=cssPseudoClass,scssSelectorName containedin=cssMediaBlock
line 142: 
line 143: syn match scssDebug "@debug" nextgroup=scssOutput
line 144: syn match scssWarn "@warn" nextgroup=scssOutput
line 145: syn match scssError "@error" nextgroup=scssOutput
line 146: syn match scssOutput "[^;]\+" contained contains=cssValue.*,cssString.*,scssFunction,scssVariable
line 147: syn match scssDefault "!default" contained
line 148: 
line 149: syn match scssIf "@\=if" nextgroup=scssCondition
line 150: syn match scssCondition "[^{]\+" contained contains=cssValue.*,cssString.*,scssBoolean,scssBooleanOp,scssFunction,scssNull,scssVariable,scssAmpersand
line 151: syn match scssElse "@else" nextgroup=scssIf
line 152: syn match scssElse "@else\(\s*\({\|$\)\)\@="
line 153: syn match scssWhile "@while" nextgroup=scssCondition
line 154: syn match scssFor "@for\s\+.*from\s\+.*\(to\|through\)\s\+[^{ ]\+" contains=cssValueNumber,scssFunction,scssVariable,scssForKeyword
line 155: syn match scssForKeyword "@for\|from\|to\|through" contained
line 156: syn region scssEach matchgroup=scssEachKeyword start="@each" end="in" contains=scssVariable nextgroup=scssCollection
line 157: syn region scssCollection start=" " end="\ze{" contained contains=scssFunction,scssMap,scssVariable
line 158: syn cluster scssControl contains=scssIf,scssElse,scssWhile,scssFor,scssEach
line 159: 
line 160: syn region scssMap matchgroup=scssMapParens start="[^:alpha:]\=\zs(\ze\(\s*\n.*:\|.\+:\)" end=")" contains=@comment,scssMapKey extend
line 161: syn match scssMapKey "[^: ]\+\ze[:]" contained contains=css.*Attr,cssString.*,scssVariable nextgroup=scssMapValue
line 162: syn match scssMapValue "[^,)]\+\ze[,)]" contained contains=cssColor,css.*Prop,cssString.*,cssValueLength,scssBoolean,scssFunction,scssNull,scssVariable
line 163: 
line 164: syn region scssAtRootStatement start="@at-root" end="\ze{" contains=@scssSelectors,scssAtRoot
line 165: syn match scssAtRoot "@at-root" contained
line 166: syn match scssAtRoot "(\zswith\(out\)\=\ze:" contained
line 167: 
line 168: syn match scssComment "//.*$" contains=@Spell containedin=cssMediaBlock
line 169: syn cluster comment contains=cssComment,scssComment
line 170: syn match scssStickyCommentChar "^\/\*\zs!" contained containedin=cssComment
line 171: syn keyword scssTodo TODO FIXME NOTE OPTIMIZE XXX contained containedin=@comment
line 172: 
line 173: hi def link scssNestedProperty cssProp
line 174: hi def link scssVariable  Identifier
line 175: hi def link scssGlobal    Special
line 176: hi def link scssNull      Constant
line 177: hi def link scssBoolean   Constant
line 178: hi def link scssBooleanOp Operator
line 179: hi def link scssMixin     PreProc
line 180: hi def link scssMixinName Function
line 181: hi def link scssContent   PreProc
line 182: hi def link scssFunctionDefinition  PreProc
line 183: hi def link scssFunctionName Function
line 184: hi def link scssReturn    Statement
line 185: hi def link scssInclude   PreProc
line 186: hi def link scssExtend    PreProc
line 187: hi def link scssOptional  Special
line 188: hi def link scssComment   Comment
line 189: hi def link scssStickyCommentChar Special
line 190: hi def link scssSelectorChar Special
line 191: hi def link scssSelectorName Identifier
line 192: hi def link scssAmpersand Character
line 193: hi def link scssDebug     Debug
line 194: hi def link scssWarn      Debug
line 195: hi def link scssError     Debug
line 196: hi def link scssDefault   Special
line 197: hi def link scssIf        Conditional
line 198: hi def link scssElse      Conditional
line 199: hi def link scssWhile     Repeat
line 200: hi def link scssForKeyword  Repeat
line 201: hi def link scssEachKeyword Repeat
line 202: hi def link scssInterpolationDelimiter Delimiter
line 203: hi def link scssImport    Include
line 204: hi def link scssTodo      Todo
line 205: hi def link scssAtRoot    Keyword
line 206: hi def link scssMapParens Delimiter
finished sourcing /home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/css.vim"
line 243:   unlet b:current_syntax
line 244:   syn region cssStyle start=+<style+ keepend end=+</style>+ contains=@htmlCss,htmlTag,htmlEndTag,htmlCssStyleComment,@htmlPreproc
line 245:   syn match htmlCssStyleComment contained "\(<!--\|-->\)"
line 246:   syn region htmlCssDefinition matchgroup=htmlArg start='style="' keepend matchgroup=htmlString end='"' contains=css.*Attr,css.*Prop,cssComment,cssLength,cssColor,cssURL,cssImportant,cssError,cssString,@htmlPreproc
line 247:   hi def link htmlStyleArg htmlString
line 248: endif
line 249: 
line 250: if main_syntax == "html"
line 251:   " synchronizing (does not always work if a comment includes legal
line 252:   " html tags, but doing it right would mean to always start
line 253:   " at the first line, which is too slow)
line 254:   syn sync match htmlHighlight groupthere NONE "<[/a-zA-Z]"
line 255:   syn sync match htmlHighlight groupthere javaScript "<script"
line 256:   syn sync match htmlHighlightSkip "^.*['\"].*$"
line 257:   syn sync minlines=10
line 258: endif
line 259: 
line 260: " The default highlighting.
line 261: hi def link htmlTag                     Function
line 262: hi def link htmlEndTag                  Identifier
line 263: hi def link htmlArg                     Type
line 264: hi def link htmlTagName                 htmlStatement
line 265: hi def link htmlSpecialTagName          Exception
line 266: hi def link htmlValue                   String
line 267: hi def link htmlSpecialChar             Special
line 268: 
line 269: if !exists("html_no_rendering")
line 270:   hi def link htmlH1                      Title
line 271:   hi def link htmlH2                      htmlH1
line 272:   hi def link htmlH3                      htmlH2
line 273:   hi def link htmlH4                      htmlH3
line 274:   hi def link htmlH5                      htmlH4
line 275:   hi def link htmlH6                      htmlH5
line 276:   hi def link htmlHead                    PreProc
line 277:   hi def link htmlTitle                   Title
line 278:   hi def link htmlBoldItalicUnderline     htmlBoldUnderlineItalic
line 279:   hi def link htmlUnderlineBold           htmlBoldUnderline
line 280:   hi def link htmlUnderlineItalicBold     htmlBoldUnderlineItalic
line 281:   hi def link htmlUnderlineBoldItalic     htmlBoldUnderlineItalic
line 282:   hi def link htmlItalicUnderline         htmlUnderlineItalic
line 283:   hi def link htmlItalicBold              htmlBoldItalic
line 284:   hi def link htmlItalicBoldUnderline     htmlBoldUnderlineItalic
line 285:   hi def link htmlItalicUnderlineBold     htmlBoldUnderlineItalic
line 286:   hi def link htmlLink                    Underlined
line 287:   hi def link htmlLeadingSpace            None
line 288:   if !exists("html_my_rendering")
line 289:     hi def htmlBold                term=bold cterm=bold gui=bold
line 290:     hi def htmlBoldUnderline       term=bold,underline cterm=bold,underline gui=bold,underline
line 291:     hi def htmlBoldItalic          term=bold,italic cterm=bold,italic gui=bold,italic
line 292:     hi def htmlBoldUnderlineItalic term=bold,italic,underline cterm=bold,italic,underline gui=bold,italic,underline
line 293:     hi def htmlUnderline           term=underline cterm=underline gui=underline
line 294:     hi def htmlUnderlineItalic     term=italic,underline cterm=italic,underline gui=italic,underline
line 295:     hi def htmlItalic              term=italic cterm=italic gui=italic
line 296:     if v:version > 800 || v:version == 800 && has("patch1038")
line 297:         hi def htmlStrike              term=strikethrough cterm=strikethrough gui=strikethrough
line 298:     else
line 299:         hi def htmlStrike              term=underline cterm=underline gui=underline
line 300:     endif
line 301:   endif
line 302: endif
line 303: 
line 304: hi def link htmlPreStmt            PreProc
line 305: hi def link htmlPreError           Error
line 306: hi def link htmlPreProc            PreProc
line 307: hi def link htmlPreAttr            String
line 308: hi def link htmlPreProcAttrName    PreProc
line 309: hi def link htmlPreProcAttrError   Error
line 310: hi def link htmlString             String
line 311: hi def link htmlStatement          Statement
line 312: hi def link htmlComment            Comment
line 313: hi def link htmlCommentNested      htmlError
line 314: hi def link htmlCommentError       htmlError
line 315: hi def link htmlTagError           htmlError
line 316: hi def link htmlEvent              javaScript
line 317: hi def link htmlError              Error
line 318: 
line 319: hi def link javaScript             Special
line 320: hi def link javaScriptExpression   javaScript
line 321: hi def link htmlCssStyleComment    Comment
line 322: hi def link htmlCssDefinition      Special
line 323: 
line 324: let b:current_syntax = "html"
line 325: 
line 326: if main_syntax == 'html'
line 327:   unlet main_syntax
line 328: endif
line 329: 
line 330: let &cpo = s:cpo_save
line 331: unlet s:cpo_save
line 332: " vim: ts=8
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'after/syntax/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim', 'html5', 'after/syntax/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     HTML (version 5.1)
line 7: " Last Change:  2017 Feb 15
line 8: " License:      Public domain
line 9: "               (but let me know if you like :) )
line 10: "
line 11: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 12: 
line 13: " Comment
line 14: " https://github.com/w3c/html/issues/694
line 15: syntax region htmlComment start=+<!--+ end=+-->+ contains=@Spell
line 16: syntax region htmlComment start=+<!DOCTYPE+ keepend end=+>+
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:     HTML (version 5.1)
line 3: " Last Change:  2017 Feb 15
line 4: " License:      Public domain
line 5: "               (but let me know if you like :) )
line 6: "
line 7: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 8: 
line 9: " Comment
line 10: " https://github.com/w3c/html/issues/694
line 11: syntax region htmlComment start=+<!--+ end=+-->+ contains=@Spell
line 12: syntax region htmlComment start=+<!DOCTYPE+ keepend end=+>+
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
line 18: 
line 19:   if exists('b:current_syntax')
line 20:     unlet b:current_syntax
line 21:   endif
line 22: endif
line 23: 
line 24: if v:version < 600
line 25:   syntax clear
line 26: elseif exists('b:current_syntax')
line 27:   finish
line 28: endif
line 29: 
line 30: " don't use standard HiLink, it will not work with included syntax files
line 31: if v:version < 508
line 32:   command! -nargs=+ HtmlHiLink hi link <args>
line 33: else
line 34:   command! -nargs=+ HtmlHiLink hi def link <args>
line 35: endif
line 36: 
line 37: syn spell toplevel
line 38: syn case ignore
line 39: syn sync linebreaks=1
line 40: 
line 41: let s:conceal = ''
line 42: let s:concealends = ''
line 43: let s:concealcode = ''
line 44: if has('conceal') && get(g:, 'vim_markdown_conceal', 1)
line 45:   let s:conceal = ' conceal'
line 46:   let s:concealends = ' concealends'
line 47: endif
line 48: if has('conceal') && get(g:, 'vim_markdown_conceal_code_blocks', 1)
line 49:   let s:concealcode = ' concealends'
line 50: endif
line 51: 
line 52: " additions to HTML groups
line 53: if get(g:, 'vim_markdown_emphasis_multiline', 1)
line 54:     let s:oneline = ''
line 55: else
line 56:     let s:oneline = ' oneline'
line 57: endif
line 58: syn region mkdItalic matchgroup=mkdItalic start="\%(\*\|_\)"    end="\%(\*\|_\)"
line 59: syn region mkdBold matchgroup=mkdBold start="\%(\*\*\|__\)"    end="\%(\*\*\|__\)"
line 60: syn region mkdBoldItalic matchgroup=mkdBoldItalic start="\%(\*\*\*\|___\)"    end="\%(\*\*\*\|___\)"
line 61: execute 'syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs\*\ze[^\\\*\t ]\%(\%([^*]\|\\\*\|\n\)*[^\\\*\t ]\)\?\*\_W" end="[^\\\*\t ]\zs\*\ze\_W" keepend contains=@Spell' . s:oneline . s:concealends
line 61: syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs\*\ze[^\\\*\t ]\%(\%([^*]\|\\\*\|\n\)*[^\\\*\t ]\)\?\*\_W" end="[^\\\*\t ]\zs\*\ze\_W" keepend contains=@Spell concealends
line 62: execute 'syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs_\ze[^\\_\t ]" end="[^\\_\t ]\zs_\ze\_W" keepend contains=@Spell' . s:oneline . s:concealends
line 62: syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs_\ze[^\\_\t ]" end="[^\\_\t ]\zs_\ze\_W" keepend contains=@Spell concealends
line 63: execute 'syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs\*\*\ze\S" end="\S\zs\*\*" keepend contains=@Spell' . s:oneline . s:concealends
line 63: syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs\*\*\ze\S" end="\S\zs\*\*" keepend contains=@Spell concealends
line 64: execute 'syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs__\ze\S" end="\S\zs__" keepend contains=@Spell' . s:oneline . s:concealends
line 64: syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs__\ze\S" end="\S\zs__" keepend contains=@Spell concealends
line 65: execute 'syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs\*\*\*\ze\S" end="\S\zs\*\*\*" keepend contains=@Spell' . s:oneline . s:concealends
line 65: syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs\*\*\*\ze\S" end="\S\zs\*\*\*" keepend contains=@Spell concealends
line 66: execute 'syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs___\ze\S" end="\S\zs___" keepend contains=@Spell' . s:oneline . s:concealends
line 66: syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs___\ze\S" end="\S\zs___" keepend contains=@Spell concealends
line 67: 
line 68: " [link](URL) | [link][id] | [link][] | ![image](URL)
line 69: syn region mkdFootnotes matchgroup=mkdDelimiter start="\[^"    end="\]"
line 70: execute 'syn region mkdID matchgroup=mkdDelimiter    start="\["    end="\]" contained oneline' . s:conceal
line 70: syn region mkdID matchgroup=mkdDelimiter    start="\["    end="\]" contained oneline conceal
line 71: execute 'syn region mkdURL matchgroup=mkdDelimiter   start="("     end=")"  contained oneline' . s:conceal
line 71: syn region mkdURL matchgroup=mkdDelimiter   start="("     end=")"  contained oneline conceal
line 72: execute 'syn region mkdLink matchgroup=mkdDelimiter  start="\\\@<!!\?\[\ze[^]\n]*\n\?[^]\n]*\][[(]" end="\]" contains=@mkdNonListItem,@Spell nextgroup=mkdURL,mkdID skipwhite' . s:concealends
line 72: syn region mkdLink matchgroup=mkdDelimiter  start="\\\@<!!\?\[\ze[^]\n]*\n\?[^]\n]*\][[(]" end="\]" contains=@mkdNonListItem,@Spell nextgroup=mkdURL,mkdID skipwhite concealends
line 73: 
line 74: " Autolink without angle brackets.
line 75: " mkd  inline links:      protocol     optional  user:pass@  sub/domain                    .com, .co.uk, etc         optional port   path/querystring/hash fragment
line 76: "                         ------------ _____________________ ----------------------------- _________________________ ----------------- __
line 77: syn match   mkdInlineURL /https\?:\/\/\(\w\+\(:\w\+\)\?@\)\?\([A-Za-z0-9][-_0-9A-Za-z]*\.\)\{1,}\(\w\{2,}\.\?\)\{1,}\(:[0-9]\{1,5}\)\?[^] \t]*/
line 78: 
line 79: " Autolink with parenthesis.
line 80: syn region  mkdInlineURL matchgroup=mkdDelimiter start="(\(https\?:\/\/\(\w\+\(:\w\+\)\?@\)\?\([A-Za-z0-9][-_0-9A-Za-z]*\.\)\{1,}\(\w\{2,}\.\?\)\{1,}\(:[0-9]\{1,5}\)\?[^] \t]*)\)\@=" end=")"
line 81: 
line 82: " Autolink with angle brackets.
line 83: syn region mkdInlineURL matchgroup=mkdDelimiter start="\\\@<!<\ze[a-z][a-z0-9,.-]\{1,22}:\/\/[^> ]*>" end=">"
line 84: 
line 85: " Link definitions: [id]: URL (Optional Title)
line 86: syn region mkdLinkDef matchgroup=mkdDelimiter   start="^ \{,3}\zs\[\^\@!" end="]:" oneline nextgroup=mkdLinkDefTarget skipwhite
line 87: syn region mkdLinkDefTarget start="<\?\zs\S" excludenl end="\ze[>[:space:]\n]"   contained nextgroup=mkdLinkTitle,mkdLinkDef skipwhite skipnl oneline
line 88: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+"+     end=+"+  contained
line 89: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+'+     end=+'+  contained
line 90: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+(+     end=+)+  contained
line 91: 
line 92: "HTML headings
line 93: syn region htmlH1       matchgroup=mkdHeading     start="^\s*#"                   end="$" contains=mkdLink,mkdInlineURL,@Spell
line 94: syn region htmlH2       matchgroup=mkdHeading     start="^\s*##"                  end="$" contains=mkdLink,mkdInlineURL,@Spell
line 95: syn region htmlH3       matchgroup=mkdHeading     start="^\s*###"                 end="$" contains=mkdLink,mkdInlineURL,@Spell
line 96: syn region htmlH4       matchgroup=mkdHeading     start="^\s*####"                end="$" contains=mkdLink,mkdInlineURL,@Spell
line 97: syn region htmlH5       matchgroup=mkdHeading     start="^\s*#####"               end="$" contains=mkdLink,mkdInlineURL,@Spell
line 98: syn region htmlH6       matchgroup=mkdHeading     start="^\s*######"              end="$" contains=mkdLink,mkdInlineURL,@Spell
line 99: syn match  htmlH1       /^.\+\n=\+$/ contains=mkdLink,mkdInlineURL,@Spell
line 100: syn match  htmlH2       /^.\+\n-\+$/ contains=mkdLink,mkdInlineURL,@Spell
line 101: 
line 102: "define Markdown groups
line 103: syn match  mkdLineBreak    /  \+$/
line 104: syn region mkdBlockquote   start=/^\s*>/                   end=/$/ contains=mkdLink,mkdInlineURL,mkdLineBreak,@Spell
line 105: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!`/                     end=/`/'  . s:concealcode
line 105: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!`/                     end=/`/ concealends
line 106: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!``/ skip=/[^`]`[^`]/   end=/``/' . s:concealcode
line 106: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!``/ skip=/[^`]`[^`]/   end=/``/ concealends
line 107: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(`\{3,}\)[^`]*$/                       end=/^\s*\z1`*\s*$/'            . s:concealcode
line 107: syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(`\{3,}\)[^`]*$/                       end=/^\s*\z1`*\s*$/ concealends
line 108: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!\~\~/  end=/\(\([^\\]\|^\)\\\)\@<!\~\~/'               . s:concealcode
line 108: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!\~\~/  end=/\(\([^\\]\|^\)\\\)\@<!\~\~/ concealends
line 109: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(\~\{3,}\)\s*[0-9A-Za-z_+-]*\s*$/      end=/^\s*\z1\~*\s*$/'           . s:concealcode
line 109: syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(\~\{3,}\)\s*[0-9A-Za-z_+-]*\s*$/      end=/^\s*\z1\~*\s*$/ concealends
line 110: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start="<pre\(\|\_s[^>]*\)\\\@<!>"                   end="</pre>"'                   . s:concealcode
line 110: syn region mkdCode matchgroup=mkdCodeDelimiter start="<pre\(\|\_s[^>]*\)\\\@<!>"                   end="</pre>" concealends
line 111: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start="<code\(\|\_s[^>]*\)\\\@<!>"                  end="</code>"'                  . s:concealcode
line 111: syn region mkdCode matchgroup=mkdCodeDelimiter start="<code\(\|\_s[^>]*\)\\\@<!>"                  end="</code>" concealends
line 112: syn region mkdFootnote     start="\[^"                     end="\]"
line 113: syn match  mkdCode         /^\s*\n\(\(\s\{8,}[^ ]\|\t\t\+[^\t]\).*\n\)\+/
line 114: syn match  mkdCode         /\%^\(\(\s\{4,}[^ ]\|\t\+[^\t]\).*\n\)\+/
line 115: syn match  mkdCode         /^\s*\n\(\(\s\{4,}[^ ]\|\t\+[^\t]\).*\n\)\+/ contained
line 116: syn match  mkdListItem     /^\s*\%([-*+]\|\d\+\.\)\ze\s\+/ contained
line 117: syn region mkdListItemLine start="^\s*\%([-*+]\|\d\+\.\)\s\+" end="$" oneline contains=@mkdNonListItem,mkdListItem,@Spell
line 118: syn region mkdNonListItemBlock start="\(\%^\(\s*\([-*+]\|\d\+\.\)\s\+\)\@!\|\n\(\_^\_$\|\s\{4,}[^ ]\|\t+[^\t]\)\@!\)" end="^\(\s*\([-*+]\|\d\+\.\)\s\+\)\@=" contains=@mkdNonListItem,@Spell
line 119: syn match  mkdRule         /^\s*\*\s\{0,1}\*\s\{0,1}\*\(\*\|\s\)*$/
line 120: syn match  mkdRule         /^\s*-\s\{0,1}-\s\{0,1}-\(-\|\s\)*$/
line 121: syn match  mkdRule         /^\s*_\s\{0,1}_\s\{0,1}_\(_\|\s\)*$/
line 122: 
line 123: " YAML frontmatter
line 124: if get(g:, 'vim_markdown_frontmatter', 0)
line 125:   syn include @yamlTop syntax/yaml.vim
line 126:   syn region Comment matchgroup=mkdDelimiter start="\%^---$" end="^\(---\|\.\.\.\)$" contains=@yamlTop keepend
line 127:   unlet! b:current_syntax
line 128: endif
line 129: 
line 130: if get(g:, 'vim_markdown_toml_frontmatter', 0)
line 131:   try
line 132:     syn include @tomlTop syntax/toml.vim
line 133:     syn region Comment matchgroup=mkdDelimiter start="\%^+++$" end="^+++$" transparent contains=@tomlTop keepend
line 134:     unlet! b:current_syntax
line 135:   catch /E484/
line 136:     syn region Comment matchgroup=mkdDelimiter start="\%^+++$" end="^+++$"
line 137:   endtry
line 138: endif
line 139: 
line 140: if get(g:, 'vim_markdown_json_frontmatter', 0)
line 141:   try
line 142:     syn include @jsonTop syntax/json.vim
line 143:     syn region Comment matchgroup=mkdDelimiter start="\%^{$" end="^}$" contains=@jsonTop keepend
line 144:     unlet! b:current_syntax
line 145:   catch /E484/
line 146:     syn region Comment matchgroup=mkdDelimiter start="\%^{$" end="^}$"
line 147:   endtry
line 148: endif
line 149: 
line 150: if get(g:, 'vim_markdown_math', 0)
line 151:   syn include @tex syntax/tex.vim
line 152:   syn region mkdMath start="\\\@<!\$" end="\$" skip="\\\$" contains=@tex keepend
line 153:   syn region mkdMath start="\\\@<!\$\$" end="\$\$" skip="\\\$" contains=@tex keepend
line 154: endif
line 155: 
line 156: " Strike through
line 157: if get(g:, 'vim_markdown_strikethrough', 0)
line 158:     execute 'syn region mkdStrike matchgroup=htmlStrike start="\%(\~\~\)" end="\%(\~\~\)"' . s:concealends
line 159:     HtmlHiLink mkdStrike        htmlStrike
line 160: endif
line 161: 
line 162: syn cluster mkdNonListItem contains=@htmlTop,htmlItalic,htmlBold,htmlBoldItalic,mkdFootnotes,mkdInlineURL,mkdLink,mkdLinkDef,mkdLineBreak,mkdBlockquote,mkdCode,mkdRule,htmlH1,htmlH2,htmlH3,htmlH4,htmlH5,htmlH6,mkdMath,mkdStrike
line 163: 
line 164: "highlighting for Markdown groups
line 165: HtmlHiLink mkdString        String
line 165: hi def link mkdString        String
line 166: HtmlHiLink mkdCode          String
line 166: hi def link mkdCode          String
line 167: HtmlHiLink mkdCodeDelimiter String
line 167: hi def link mkdCodeDelimiter String
line 168: HtmlHiLink mkdCodeStart     String
line 168: hi def link mkdCodeStart     String
line 169: HtmlHiLink mkdCodeEnd       String
line 169: hi def link mkdCodeEnd       String
line 170: HtmlHiLink mkdFootnote      Comment
line 170: hi def link mkdFootnote      Comment
line 171: HtmlHiLink mkdBlockquote    Comment
line 171: hi def link mkdBlockquote    Comment
line 172: HtmlHiLink mkdListItem      Identifier
line 172: hi def link mkdListItem      Identifier
line 173: HtmlHiLink mkdRule          Identifier
line 173: hi def link mkdRule          Identifier
line 174: HtmlHiLink mkdLineBreak     Visual
line 174: hi def link mkdLineBreak     Visual
line 175: HtmlHiLink mkdFootnotes     htmlLink
line 175: hi def link mkdFootnotes     htmlLink
line 176: HtmlHiLink mkdLink          htmlLink
line 176: hi def link mkdLink          htmlLink
line 177: HtmlHiLink mkdURL           htmlString
line 177: hi def link mkdURL           htmlString
line 178: HtmlHiLink mkdInlineURL     htmlLink
line 178: hi def link mkdInlineURL     htmlLink
line 179: HtmlHiLink mkdID            Identifier
line 179: hi def link mkdID            Identifier
line 180: HtmlHiLink mkdLinkDef       mkdID
line 180: hi def link mkdLinkDef       mkdID
line 181: HtmlHiLink mkdLinkDefTarget mkdURL
line 181: hi def link mkdLinkDefTarget mkdURL
line 182: HtmlHiLink mkdLinkTitle     htmlString
line 182: hi def link mkdLinkTitle     htmlString
line 183: HtmlHiLink mkdDelimiter     Delimiter
line 183: hi def link mkdDelimiter     Delimiter
line 184: 
line 185: let b:current_syntax = 'mkd'
line 186: 
line 187: delcommand HtmlHiLink
line 188: " vim: ts=8
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
continuing in function <SNR>6_SynSet
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim"
line 1: " Vim syntax file
line 2: " Language:     Markdown
line 3: " Maintainer:   Tim Pope <vimNOSPAM@tpope.org>
line 4: " Filenames:    *.markdown
line 5: " Last Change:  2020 Jan 14
line 6: 
line 7: if exists("b:current_syntax")
line 8:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim
continuing in function <SNR>6_SynSet
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 26: runtime! syntax/markdown.lua syntax/markdown/*.lua
Searching for "syntax/markdown.lua syntax/markdown/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown/*.lua"
not found in runtime path: "syntax/markdown.lua syntax/markdown/*.lua"
line 27:       endif
line 28:     endfor
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
function <SNR>6_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing Syntax Autocommands for "*"
autocommand call s:setup_styledEmmetAbbreviation()

Executing: call s:setup_styledEmmetAbbreviation()
calling function <SNR>95_setup_styledEmmetAbbreviation()

line 1:   if index(['javascript', 'javascriptreact', 'typescript', 'typescriptreact'], &filetype) != -1
line 2:     syntax match styledEmmetAbbreviation "[a-z0-9#+!%]\+" containedin=styledDefinition contained
line 3:   endif
function <SNR>95_setup_styledEmmetAbbreviation returning #0

continuing in Syntax Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand lua vim.defer_fn(require('lsp-zero').suggest_server, 5)

Executing: lua vim.defer_fn(require('lsp-zero').suggest_server, 5)
Executing FileType Autocommands for "markdown"
autocommand unsilent lua require'lspconfig'["tailwindcss"].manager.try_add()

Executing: unsilent lua require'lspconfig'["tailwindcss"].manager.try_add()
Executing:       augroup lsp_c_1_b_4_did_save
Executing:         au!
Executing:         au BufWritePost <buffer=4> lua vim.lsp._text_document_did_save_handler(0)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/lua/vim)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing:       augroup END
Executing:     
Executing FileType Autocommands for "markdown"
autocommand unsilent lua require'lspconfig'["marksman"].manager.try_add()

Executing: unsilent lua require'lspconfig'["marksman"].manager.try_add()
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
Executing: ^I^I^I^I^Iaugroup luasnip_watch_reload
Executing: ^I^I^I^I^Iautocmd BufWritePost /home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/global.json ++once lua require("luasnip.loaders.from_vscode").reload_file("markdown", "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/global.json")
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip/loaders)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I^I^Iaugroup END
Executing: ^I^I^I^I
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing: ^I^I^I^I^Iaugroup luasnip_watch_reload
Executing: ^I^I^I^I^Iautocmd BufWritePost /home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/markdown.json ++once lua require("luasnip.loaders.from_vscode").reload_file("markdown", "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/./snippets/markdown.json")
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/LuaSnip/lua/luasnip/loaders)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: ^I^I^I^I^Iaugroup END
Executing: ^I^I^I^I
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing: doautocmd <nomodeline> User LuasnipSnippetsAdded
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <lua: 93>

Executing: 
Executing FileType Autocommands for "*"
autocommand call s:register()

Executing: call s:register()
calling function <SNR>90_register()

line 1:   if !(&modifiable && expand('<amatch>') ==# 'go')
line 2:     return
function <SNR>90_register returning #0

continuing in FileType Autocommands for "*"

Executing BufReadPost Autocommands for "*.{md,mdown,mkd,mkdn,markdown,mdwn,mdx}"
autocommand set filetype=markdown

Executing: set filetype=markdown
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling function <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 2: setlocal commentstring< matchpairs< omnifunc< comments< formatoptions< | unlet! b:match_ignorecase b:match_skip b:match_words b:browsefilter|setl cms< com< fo< flp<
line 2:  unlet! b:match_ignorecase b:match_skip b:match_words b:browsefilter|setl cms< com< fo< flp<
line 2: setl cms< com< fo< flp<
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 17: runtime! ftplugin/markdown.vim ftplugin/markdown_*.vim ftplugin/markdown/*.vim
Searching for "ftplugin/markdown.vim ftplugin/markdown_*.vim ftplugin/markdown/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim"
line 1: let b:prettier_ft_default_args = { 'parser': 'markdown', }
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim"
line 1: if exists("g:loaded_MarkdownTocPlugin")
line 2:     finish
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'ftplugin/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim', 'markdown', 'ftplugin/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: "TODO print messages when on visual mode. I only see VISUAL, not the messages.
line 6: 
line 7: " Function interface phylosophy:
line 8: "
line 9: " - functions take arbitrary line numbers as parameters.
line 10: "    Current cursor line is only a suitable default parameter.
line 11: "
line 12: " - only functions that bind directly to user actions:
line 13: "
line 14: "    - print error messages.
line 15: "       All intermediate functions limit themselves return `0` to indicate an error.
line 16: "
line 17: "    - move the cursor. All other functions do not move the cursor.
line 18: "
line 19: " This is how you should view headers for the header mappings:
line 20: "
line 21: "   |BUFFER
line 22: "   |
line 23: "   |Outside any header
line 24: "   |
line 25: " a-+# a
line 26: "   |
line 27: "   |Inside a
line 28: "   |
line 29: " a-+
line 30: " b-+## b
line 31: "   |
line 32: "   |inside b
line 33: "   |
line 34: " b-+
line 35: " c-+### c
line 36: "   |
line 37: "   |Inside c
line 38: "   |
line 39: " c-+
line 40: " d-|# d
line 41: "   |
line 42: "   |Inside d
line 43: "   |
line 44: " d-+
line 45: " e-|e
line 46: "   |====
line 47: "   |
line 48: "   |Inside e
line 49: "   |
line 50: " e-+
line 51: 
line 52: " For each level, contains the regexp that matches at that level only.
line 53: "
line 54: let s:levelRegexpDict = { 1: '\v^(#[^#]@=|.+\n\=+$)', 2: '\v^(##[^#]@=|.+\n-+$)', 3: '\v^###[^#]@=', 4: '\v^####[^#]@=', 5: '\v^#####[^#]@=', 6: '\v^######[^#]@=' }
line 62: 
line 63: " Maches any header level of any type.
line 64: "
line 65: " This could be deduced from `s:levelRegexpDict`, but it is more
line 66: " efficient to have a single regexp for this.
line 67: "
line 68: let s:headersRegexp = '\v^(#|.+\n(\=+|-+)$)'
line 69: 
line 70: " Returns the line number of the first header before `line`, called the
line 71: " current header.
line 72: "
line 73: " If there is no current header, return `0`.
line 74: "
line 75: " @param a:1 The line to look the header of. Default value: `getpos('.')`.
line 76: "
line 77: function! s:GetHeaderLineNum(...)
line 91: 
line 92: " -  if inside a header goes to it.
line 93: "    Return its line number.
line 94: "
line 95: " -  if on top level outside any headers,
line 96: "    print a warning
line 97: "    Return `0`.
line 98: "
line 99: function! s:MoveToCurHeader()
line 109: 
line 110: " Move cursor to next header of any level.
line 111: "
line 112: " If there are no more headers, print a warning.
line 113: "
line 114: function! s:MoveToNextHeader()
line 120: 
line 121: " Move cursor to previous header (before current) of any level.
line 122: "
line 123: " If it does not exist, print a warning.
line 124: "
line 125: function! s:MoveToPreviousHeader()
line 142: 
line 143: " - if line is inside a header, return the header level (h1 -> 1, h2 -> 2, etc.).
line 144: "
line 145: " - if line is at top level outside any headers, return `0`.
line 146: "
line 147: function! s:GetHeaderLevel(...)
line 160: 
line 161: " Return list of headers and their levels.
line 162: "
line 163: function! s:GetHeaderList()
line 212: 
line 213: " Returns the level of the header at the given line.
line 214: "
line 215: " If there is no header at the given line, returns `0`.
line 216: "
line 217: function! s:GetLevelOfHeaderAtLine(linenum)
line 226: 
line 227: " Move cursor to parent header of the current header.
line 228: "
line 229: " If it does not exit, print a warning and do nothing.
line 230: "
line 231: function! s:MoveToParentHeader()
line 240: 
line 241: " Return the line number of the parent header of line `line`.
line 242: "
line 243: " If it has no parent, return `0`.
line 244: "
line 245: function! s:GetParentHeaderLineNumber(...)
line 258: 
line 259: " Return the line number of the previous header of given level.
line 260: " in relation to line `a:1`. If not given, `a:1 = getline()`
line 261: "
line 262: " `a:1` line is included, and this may return the current header.
line 263: "
line 264: " If none return 0.
line 265: "
line 266: function! s:GetNextHeaderLineNumberAtLevel(level, ...)
line 281: 
line 282: " Return the line number of the previous header of given level.
line 283: " in relation to line `a:1`. If not given, `a:1 = getline()`
line 284: "
line 285: " `a:1` line is included, and this may return the current header.
line 286: "
line 287: " If none return 0.
line 288: "
line 289: function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)
line 304: 
line 305: " Move cursor to next sibling header.
line 306: "
line 307: " If there is no next siblings, print a warning and don't move.
line 308: "
line 309: function! s:MoveToNextSiblingHeader()
line 329: 
line 330: " Move cursor to previous sibling header.
line 331: "
line 332: " If there is no previous siblings, print a warning and do nothing.
line 333: "
line 334: function! s:MoveToPreviousSiblingHeader()
line 354: 
line 355: function! s:Toc(...)
line 422: 
line 423: function! s:InsertToc(format, ...)
line 493: 
line 494: " Convert Setex headers in range `line1 .. line2` to Atx.
line 495: "
line 496: " Return the number of conversions.
line 497: "
line 498: function! s:SetexToAtx(line1, line2)
line 504: 
line 505: " If `a:1` is 0, decrease the level of all headers in range `line1 .. line2`.
line 506: "
line 507: " Otherwise, increase the level. `a:1` defaults to `0`.
line 508: "
line 509: function! s:HeaderDecrease(line1, line2, ...)
line 536: 
line 537: " Format table under cursor.
line 538: "
line 539: " Depends on Tabularize.
line 540: "
line 541: function! s:TableFormat()
line 560: 
line 561: " Wrapper to do move commands in visual mode.
line 562: "
line 563: function! s:VisMove(f)
line 567: 
line 568: " Map in both normal and visual modes.
line 569: "
line 570: function! s:MapNormVis(rhs,lhs)
line 574: 
line 575: " Parameters:
line 576: "
line 577: " - step +1 for right, -1 for left
line 578: "
line 579: " TODO: multiple lines.
line 580: "
line 581: function! s:FindCornerOfSyntax(lnum, col, step)
line 589: 
line 590: " Return the next position of the given syntax name,
line 591: " inclusive on the given position.
line 592: "
line 593: " TODO: multiple lines
line 594: "
line 595: function! s:FindNextSyntax(lnum, col, name)
line 603: 
line 604: function! s:FindCornersOfSyntax(lnum, col)
line 607: 
line 608: function! s:FindRightOfSyntax(lnum, col)
line 611: 
line 612: function! s:FindLeftOfSyntax(lnum, col)
line 615: 
line 616: " Returns:
line 617: "
line 618: " - a string with the the URL for the link under the cursor
line 619: " - an empty string if the cursor is not on a link
line 620: "
line 621: " TODO
line 622: "
line 623: " - multiline support
line 624: " - give an error if the separator does is not on a link
line 625: "
line 626: function! s:Markdown_GetUrlForPosition(lnum, col)
line 655: 
line 656: " Front end for GetUrlForPosition.
line 657: "
line 658: function! s:OpenUrlUnderCursor()
line 666: 
line 667: " We need a definition guard because we invoke 'edit' which will reload this
line 668: " script while this function is running. We must not replace it.
line 669: if !exists('*s:EditUrlUnderCursor')
line 670:     function s:EditUrlUnderCursor()
line 725: endif
line 726: 
line 727: function! s:VersionAwareNetrwBrowseX(url)
line 734: 
line 735: function! s:MapNotHasmapto(lhs, rhs)
line 741: 
line 742: call <sid>MapNormVis('<Plug>Markdown_MoveToNextHeader', '<sid>MoveToNextHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToNextHeader', '<sid>MoveToNextHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToNextHeader :call <sid>MoveToNextHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToNextHeader <esc>:call <sid>VisMove('<sid>MoveToNextHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 743: call <sid>MapNormVis('<Plug>Markdown_MoveToPreviousHeader', '<sid>MoveToPreviousHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToPreviousHeader', '<sid>MoveToPreviousHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToPreviousHeader :call <sid>MoveToPreviousHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToPreviousHeader <esc>:call <sid>VisMove('<sid>MoveToPreviousHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 744: call <sid>MapNormVis('<Plug>Markdown_MoveToNextSiblingHeader', '<sid>MoveToNextSiblingHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToNextSiblingHeader', '<sid>MoveToNextSiblingHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToNextSiblingHeader :call <sid>MoveToNextSiblingHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToNextSiblingHeader <esc>:call <sid>VisMove('<sid>MoveToNextSiblingHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 745: call <sid>MapNormVis('<Plug>Markdown_MoveToPreviousSiblingHeader', '<sid>MoveToPreviousSiblingHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToPreviousSiblingHeader', '<sid>MoveToPreviousSiblingHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToPreviousSiblingHeader :call <sid>MoveToPreviousSiblingHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToPreviousSiblingHeader <esc>:call <sid>VisMove('<sid>MoveToPreviousSiblingHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 746: call <sid>MapNormVis('<Plug>Markdown_MoveToParentHeader', '<sid>MoveToParentHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToParentHeader', '<sid>MoveToParentHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToParentHeader :call <sid>MoveToParentHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToParentHeader <esc>:call <sid>VisMove('<sid>MoveToParentHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 747: call <sid>MapNormVis('<Plug>Markdown_MoveToCurHeader', '<sid>MoveToCurHeader')
calling function <SNR>133_MapNormVis('<Plug>Markdown_MoveToCurHeader', '<sid>MoveToCurHeader')

line 1:     execute 'nn <buffer><silent> ' . a:rhs . ' :call ' . a:lhs . '()<cr>'
line 1: nn <buffer><silent> <Plug>Markdown_MoveToCurHeader :call <sid>MoveToCurHeader()<cr>
line 2:     execute 'vn <buffer><silent> ' . a:rhs . ' <esc>:call <sid>VisMove(''' . a:lhs . ''')<cr>'
line 2: vn <buffer><silent> <Plug>Markdown_MoveToCurHeader <esc>:call <sid>VisMove('<sid>MoveToCurHeader')<cr>
function <SNR>133_MapNormVis returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 748: nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>
line 749: nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>
line 750: 
line 751: if !get(g:, 'vim_markdown_no_default_key_mappings', 0)
line 752:     call <sid>MapNotHasmapto(']]', 'Markdown_MoveToNextHeader')
calling function <SNR>133_MapNotHasmapto(']]', 'Markdown_MoveToNextHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 753:     call <sid>MapNotHasmapto('[[', 'Markdown_MoveToPreviousHeader')
calling function <SNR>133_MapNotHasmapto('[[', 'Markdown_MoveToPreviousHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 754:     call <sid>MapNotHasmapto('][', 'Markdown_MoveToNextSiblingHeader')
calling function <SNR>133_MapNotHasmapto('][', 'Markdown_MoveToNextSiblingHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 755:     call <sid>MapNotHasmapto('[]', 'Markdown_MoveToPreviousSiblingHeader')
calling function <SNR>133_MapNotHasmapto('[]', 'Markdown_MoveToPreviousSiblingHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 756:     call <sid>MapNotHasmapto(']u', 'Markdown_MoveToParentHeader')
calling function <SNR>133_MapNotHasmapto(']u', 'Markdown_MoveToParentHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 757:     call <sid>MapNotHasmapto(']h', 'Markdown_MoveToCurHeader')
calling function <SNR>133_MapNotHasmapto(']h', 'Markdown_MoveToCurHeader')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 758:     call <sid>MapNotHasmapto('gx', 'Markdown_OpenUrlUnderCursor')
calling function <SNR>133_MapNotHasmapto('gx', 'Markdown_OpenUrlUnderCursor')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 759:     call <sid>MapNotHasmapto('ge', 'Markdown_EditUrlUnderCursor')
calling function <SNR>133_MapNotHasmapto('ge', 'Markdown_EditUrlUnderCursor')

line 1:     if !hasmapto('<Plug>' . a:rhs)
line 2:         execute 'nmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 3:         execute 'vmap <buffer>' . a:lhs . ' <Plug>' . a:rhs
line 4:     endif
function <SNR>133_MapNotHasmapto returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim

line 760: endif
line 761: 
line 762: command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)
line 763: command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)
line 764: command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)
line 765: command! -buffer TableFormat call s:TableFormat()
line 766: command! -buffer Toc call s:Toc()
line 767: command! -buffer Toch call s:Toc('horizontal')
line 768: command! -buffer Tocv call s:Toc('vertical')
line 769: command! -buffer Toct call s:Toc('tab')
line 770: command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)
line 771: command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)
line 772: 
line 773: " Heavily based on vim-notes - http://peterodding.com/code/vim/notes/
line 774: if exists('g:vim_markdown_fenced_languages')
line 775:     let s:filetype_dict = {}
line 776:     for s:filetype in g:vim_markdown_fenced_languages
line 777:         let key = matchstr(s:filetype, '[^=]*')
line 778:         let val = matchstr(s:filetype, '[^=]*$')
line 779:         let s:filetype_dict[key] = val
line 780:     endfor
line 781: else
line 782:     let s:filetype_dict = { 'c++': 'cpp', 'viml': 'vim', 'bash': 'sh', 'ini': 'dosini' }
line 788: endif
line 789: 
line 790: function! s:MarkdownHighlightSources(force)
line 836: 
line 837: function! s:SyntaxInclude(filetype)
line 860: 
line 861: 
line 862: function! s:MarkdownRefreshSyntax(force)
line 867: 
line 868: function! s:MarkdownClearSyntaxVariables()
line 873: 
line 874: augroup Mkd
line 875:     " These autocmd calling s:MarkdownRefreshSyntax need to be kept in sync with
line 876:     " the autocmds calling s:MarkdownSetupFolding in after/ftplugin/markdown.vim.
line 877:     autocmd! * <buffer>
line 878:     autocmd BufWinEnter <buffer> call s:MarkdownRefreshSyntax(1)
line 879:     autocmd BufUnload <buffer> call s:MarkdownClearSyntaxVariables()
line 880:     autocmd BufWritePost <buffer> call s:MarkdownRefreshSyntax(0)
line 881:     autocmd InsertEnter,InsertLeave <buffer> call s:MarkdownRefreshSyntax(0)
line 882:     autocmd CursorHold,CursorHoldI <buffer> call s:MarkdownRefreshSyntax(0)
line 883: augroup END
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim"
line 1: " Vim filetype plugin
line 2: " Language:^I^IMarkdown
line 3: " Maintainer:^I^ITim Pope <vimNOSPAM@tpope.org>
line 4: " Last Change:^I^I2019 Dec 05
line 5: 
line 6: if exists("b:did_ftplugin")
line 7:   finish
line 8: endif
line 9: 
line 10: runtime! ftplugin/html.vim ftplugin/html_*.vim ftplugin/html/*.vim
Searching for "ftplugin/html.vim ftplugin/html_*.vim ftplugin/html/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim"
line 1: " markdown/php files run this as well
line 2: " https://stackoverflow.com/questions/22839269/why-does-vim-default-markdown-ftplugin-source-html-ftplugins-is-there-any-ways
line 3: if expand('%:e') ==# 'html'
line 4:   let b:prettier_ft_default_args = { 'parser': 'html', }
line 7: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim"
line 1: " Vim plugin for showing matching html tags.
line 2: " Maintainer:  Greg Sexton <gregsexton@gmail.com>
line 3: " Credits: Bram Moolenar and the 'matchparen' plugin from which this draws heavily.
line 4: 
line 5: if exists("b:did_ftplugin")
line 6:     finish
line 7: endif
line 8: 
line 9: augroup matchhtmlparen
line 10:     autocmd! CursorMoved,CursorMovedI,WinEnter <buffer> call s:Highlight_Matching_Pair()
line 11: augroup END
line 12: 
line 13: fu! s:Highlight_Matching_Pair()
line 37: 
line 38: fu! s:GetCurrentCursorTag()
line 61: 
line 62: fu! s:SearchForMatchingTag(tagname, forwards)
line 86: 
line 87: fu! s:HighlightTagAtPosition(position)
line 99: 
line 100: " vim: set ts=8 sts=4 sw=4 expandtab :
finished sourcing /home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim"
line 1: " Maintainer:  ^Iothree <othree@gmail.com>
line 2: " URL:^I^I      http://github.com/othree/html5.vim
line 3: " Last Change:  2014-05-02
line 4: " License:      MIT
line 5: " Changes:      Add - to keyword
line 6: 
line 7: " setlocal iskeyword+=-
line 8: 
line 9: setlocal commentstring=<!--%s-->
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'ftplugin/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim', 'html5', 'ftplugin/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Maintainer:  ^Iothree <othree@gmail.com>
line 6: " URL:^I^I      http://github.com/othree/html5.vim
line 7: " Last Change:  2014-05-02
line 8: " License:      MIT
line 9: " Changes:      Add - to keyword
line 10: 
line 11: " setlocal iskeyword+=-
line 12: 
line 13: setlocal commentstring=<!--%s-->
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/html/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 10: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim"
line 1: " Vim filetype plugin file
line 2: " Language:^Ihtml
line 3: "
line 4: " This runtime file is looking for a new maintainer.
line 5: "
line 6: " Former maintainer:^IDan Sharp
line 7: " Last Changed: 20 Jan 2009
line 8: 
line 9: if exists("b:did_ftplugin") | finish | endif
line 9:  finish | endif
line 9:  endif
line 10: let b:did_ftplugin = 1
line 11: 
line 12: " Make sure the continuation lines below do not cause problems in
line 13: " compatibility mode.
line 14: let s:save_cpo = &cpo
line 15: set cpo-=C
line 16: 
line 17: setlocal matchpairs+=<:>
line 18: setlocal commentstring=<!--%s-->
line 19: setlocal comments=s:<!--,m:\ \ \ \ ,e:-->
line 20: 
line 21: if exists("g:ft_html_autocomment") && (g:ft_html_autocomment == 1)
line 22:     setlocal formatoptions-=t formatoptions+=croql
line 23: endif
line 24: 
line 25: if exists('&omnifunc')
line 26:   setlocal omnifunc=htmlcomplete#CompleteTags
line 27:   call htmlcomplete#DetectOmniFlavor()
calling function htmlcomplete#DetectOmniFlavor()

line 1:   if &filetype == 'xhtml'
line 2:     let b:html_omni_flavor = 'xhtml10s'
line 3:   else
line 4:     let b:html_omni_flavor = 'html5'
line 5:   endif
line 6:   let i = 1
line 7:   let line = ""
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 8:   while i < 10 && i < line("$")
line 9:     let line = getline(i)
line 10:     if line =~ '<!DOCTYPE.*\<DTD '
line 11:       break
line 12:     endif
line 13:     let i += 1
line 14:   endwhile
line 15:   if line =~ '<!DOCTYPE.*\<DTD '  " doctype line found above
line 16:     if line =~ ' HTML 3\.2'
line 17:       let b:html_omni_flavor = 'html32'
line 18:     elseif line =~ ' XHTML 1\.1'
line 19:       let b:html_omni_flavor = 'xhtml11'
line 20:     else    " two-step detection with strict/frameset/transitional
line 21:       if line =~ ' XHTML 1\.0'
line 22:         let b:html_omni_flavor = 'xhtml10'
line 23:       elseif line =~ ' HTML 4\.01'
line 24:         let b:html_omni_flavor = 'html401'
line 25:       elseif line =~ ' HTML 4.0\>'
line 26:         let b:html_omni_flavor = 'html40'
line 27:       endif
line 28:       if line =~ '\<Transitional\>'
line 29:         let b:html_omni_flavor .= 't'
line 30:       elseif line =~ '\<Frameset\>'
line 31:         let b:html_omni_flavor .= 'f'
line 32:       else
line 33:         let b:html_omni_flavor .= 's'
line 34:       endif
line 35:     endif
line 36:   endif
function htmlcomplete#DetectOmniFlavor returning #0

continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim

line 28: endif
line 29: 
line 30: " HTML:  thanks to Johannes Zellner and Benji Fisher.
line 31: if exists("loaded_matchit")
line 32:     let b:match_ignorecase = 1
line 33:     let b:match_words = '<:>,' . '<\@<=[ou]l\>[^>]*\%(>\|$\):<\@<=li\>:<\@<=/[ou]l>,' . '<\@<=dl\>[^>]*\%(>\|$\):<\@<=d[td]\>:<\@<=/dl>,' . '<\@<=\([^/][^ \t>]*\)[^>]*\%(>\|$\):<\@<=/\1>'
line 37: endif
line 38: 
line 39: " Change the :browse e filter to primarily show HTML-related files.
line 40: if has("gui_win32")
line 41:     let  b:browsefilter="HTML Files (*.html,*.htm)\t*.htm;*.html\n" .^I"JavaScript Files (*.js)\t*.js\n" .^I"Cascading StyleSheets (*.css)\t*.css\n" .^I"All Files (*.*)\t*.*\n"
line 45: endif
line 46: 
line 47: " Undo the stuff we changed.
line 48: let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .^I" | unlet! b:match_ignorecase b:match_skip b:match_words b:browsefilter"
line 50: 
line 51: " Restore the saved compatibility options.
line 52: let &cpo = s:save_cpo
line 53: unlet s:save_cpo
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/html/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/html/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/html/*.vim"
line 11: 
line 12: setlocal comments=fb:*,fb:-,fb:+,n:> commentstring=<!--%s-->
line 13: setlocal formatoptions+=tcqln formatoptions-=r formatoptions-=o
line 14: setlocal formatlistpat=^\\s*\\d\\+\\.\\s\\+\\\|^[-*+]\\s\\+\\\|^\\[^\\ze[^\\]]\\+\\]:
line 15: 
line 16: if exists('b:undo_ftplugin')
line 17:   let b:undo_ftplugin .= "|setl cms< com< fo< flp<"
line 18: else
line 19:   let b:undo_ftplugin = "setl cms< com< fo< flp<"
line 20: endif
line 21: 
line 22: function! s:NotCodeBlock(lnum) abort
line 25: 
line 26: function! MarkdownFold() abort
line 44: 
line 45: function! s:HashIndent(lnum) abort
line 58: 
line 59: function! MarkdownFoldText() abort
line 66: 
line 67: if has("folding") && exists("g:markdown_folding")
line 68:   setlocal foldexpr=MarkdownFold()
line 69:   setlocal foldmethod=expr
line 70:   setlocal foldtext=MarkdownFoldText()
line 71:   let b:undo_ftplugin .= " foldexpr< foldmethod< foldtext<"
line 72: endif
line 73: 
line 74: " vim:set sw=2:
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.vim
continuing in function <SNR>1_LoadFTPlugin
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown_*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown_*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown/*.vim"
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 19: runtime! ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua
Searching for "ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/ftplugin/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/ftplugin/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown_*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/ftplugin/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown_*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/ftplugin/markdown/*.lua"
not found in runtime path: "ftplugin/markdown.lua ftplugin/markdown_*.lua ftplugin/markdown/*.lua"
line 20:       endfor
line 16:       for name in split(s, '\.')
line 17:         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
line 18:         " Load lua ftplugins
line 19:         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
line 20:       endfor
line 21:     endif
function <SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling function <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/markdown.vim
Searching for "indent/markdown.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 14: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'indent/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim', 'markdown', 'indent/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: if exists('b:did_indent') | finish | endif
line 5:  finish | endif
line 5:  endif
line 6: let b:did_indent = 1
line 7: 
line 8: setlocal indentexpr=GetMarkdownIndent()
line 9: setlocal nolisp
line 10: setlocal autoindent
line 11: 
line 12: " Automatically continue blockquote on line break
line 13: setlocal formatoptions+=r
line 14: setlocal comments=b:>
line 15: if get(g:, 'vim_markdown_auto_insert_bullets', 1)
line 16:     " Do not automatically insert bullets when auto-wrapping with text-width
line 17:     setlocal formatoptions-=c
line 18:     " Accept various markers as bullets
line 19:     setlocal comments+=b:*,b:+,b:-
line 20: endif
line 21: 
line 22: " Only define the function once
line 23: if exists('*GetMarkdownIndent') | finish | endif
line 23:  finish | endif
line 23:  endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.vim
continuing in function <SNR>2_LoadIndent
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/markdown.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/markdown.lua
Searching for "indent/markdown.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/indent/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/indent/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/indent/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/indent/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/indent/markdown.lua"
not found in runtime path: "indent/markdown.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
function <SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing: exe "set syntax=" . expand("<amatch>")
Executing: set syntax=markdown
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling function <SNR>6_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 25: runtime! syntax/markdown.vim syntax/markdown/*.vim
Searching for "syntax/markdown.vim syntax/markdown/*.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'markdown', 'syntax/markdown.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim', 'markdown', 'syntax/markdown.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:^IMarkdown
line 7: " Maintainer:^IBen Williams <benw@plasticboy.com>
line 8: " URL:^I^Ihttp://plasticboy.com/markdown-vim-mode/
line 9: " Remark:^IUses HTML syntax file
line 10: " TODO: ^IHandle stuff contained within stuff (e.g. headings within blockquotes)
line 11: 
line 12: 
line 13: " Read the HTML syntax to start with
line 14: if v:version < 600
line 15:   so <sfile>:p:h/html.vim
line 16: else
line 17:   runtime! syntax/html.vim
Searching for "syntax/html.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:     HTML (version 5.1)
line 3: "               SVG (SVG 1.1 Second Edition)
line 4: "               MathML (MathML 3.0 Second Edition)
line 5: " Last Change:  2017 Mar 07
line 6: " License:      Public domain
line 7: "               (but let me know if you like :) )
line 8: "
line 9: " Note: This file just add new tags from HTML 5
line 10: "       and don't replace default html.vim syntax file
line 11: "
line 12: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 13: " Changes:      update to Draft 2016 Jan 13
line 14: "               add microdata Attributes
line 15: " Maintainer:   Rodrigo Machado <rcmachado@gmail.com>
line 16: " URL:          http://rm.blog.br/vim/syntax/html.vim
line 17: " Modified:     htdebeer <H.T.de.Beer@gmail.com>
line 18: " Changes:      add common SVG elements and attributes for inline SVG
line 19: 
line 20: " Patch 7.4.1142
line 21: if has("patch-7.4-1142")
line 22:   if has("win32")
line 23:     syn iskeyword @,48-57,_,128-167,224-235,-
line 24:   else
line 25:     syn iskeyword @,48-57,_,192-255,-
line 26:   endif
line 27: endif
line 28: 
line 29: " HTML 5 tags
line 30: syn keyword htmlTagName contained article aside audio canvas command
line 31: syn keyword htmlTagName contained datalist details dialog embed figcaption figure footer
line 32: syn keyword htmlTagName contained header hgroup keygen main mark meter menu menuitem nav output
line 33: syn keyword htmlTagName contained progress ruby rt rp rb rtc section source summary time track video data
line 34: syn keyword htmlTagName contained template content shadow slot
line 35: syn keyword htmlTagName contained wbr bdi
line 36: syn keyword htmlTagName contained picture
line 37: 
line 38: " SVG tags
line 39: " http://www.w3.org/TR/SVG/
line 40: " as found in http://www.w3.org/TR/SVG/eltindex.html
line 41: syn keyword htmlTagName contained svg 
line 42: syn keyword htmlTagName contained altGlyph altGlyphDef altGlyphItem 
line 43: syn keyword htmlTagName contained animate animateColor animateMotion animateTransform 
line 44: syn keyword htmlTagName contained circle ellipse rect line polyline polygon image path
line 45: syn keyword htmlTagName contained clipPath color-profile cursor 
line 46: syn keyword htmlTagName contained defs desc g symbol view use switch foreignObject
line 47: syn keyword htmlTagName contained filter feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence 
line 48: syn keyword htmlTagName contained font font-face font-face-format font-face-name font-face-src font-face-uri 
line 49: syn keyword htmlTagName contained glyph glyphRef hkern 
line 50: syn keyword htmlTagName contained linearGradient marker mask pattern radialGradient set stop
line 51: syn keyword htmlTagName contained missing-glyph mpath 
line 52: syn keyword htmlTagName contained text textPath tref tspan vkern
line 53: syn keyword htmlTagName contained metadata title
line 54: 
line 55: " MathML tags
line 56: " https://www.w3.org/TR/MathML3/appendixi.html#index.elem
line 57: syn keyword htmlTagName contained abs and annotation annotation-xml apply approx arccos arccosh arccot arccoth
line 58: syn keyword htmlTagName contained arccsc arccsch arcsec arcsech arcsin arcsinh arctan arctanh arg bind
line 59: syn keyword htmlTagName contained bvar card cartesianproduct cbytes ceiling cerror ci cn codomain complexes
line 60: syn keyword htmlTagName contained compose condition conjugate cos cosh cot coth cs csc csch
line 61: syn keyword htmlTagName contained csymbol curl declare degree determinant diff divergence divide domain domainofapplication
line 62: syn keyword htmlTagName contained emptyset eq equivalent eulergamma exists exp exponentiale factorial factorof false
line 63: syn keyword htmlTagName contained floor fn forall gcd geq grad gt ident image imaginary
line 64: syn keyword htmlTagName contained imaginaryi implies in infinity int integers intersect interval inverse lambda
line 65: syn keyword htmlTagName contained laplacian lcm leq limit list ln log logbase lowlimit lt
line 66: syn keyword htmlTagName contained maction maligngroup malignmark math matrix matrixrow max mean median menclose
line 67: syn keyword htmlTagName contained merror mfenced mfrac mglyph mi mi" min minus mlabeledtr mlongdiv
line 68: syn keyword htmlTagName contained mmultiscripts mn mo mode moment momentabout mover mpadded mphantom mprescripts
line 69: syn keyword htmlTagName contained mroot mrow ms mscarries mscarry msgroup msline mspace msqrt msrow
line 70: syn keyword htmlTagName contained mstack mstyle msub msubsup msup mtable mtd mtext mtr munder
line 71: syn keyword htmlTagName contained munderover naturalnumbers neq none not notanumber notin notprsubset notsubset or
line 72: syn keyword htmlTagName contained otherwise outerproduct partialdiff pi piece piecewise plus power primes product
line 73: syn keyword htmlTagName contained prsubset quotient rationals real reals reln rem root scalarproduct sdev
line 74: syn keyword htmlTagName contained sec sech selector semantics sep set setdiff share sin sinh
line 75: syn keyword htmlTagName contained span subset sum tan tanh tendsto times transpose true union
line 76: syn keyword htmlTagName contained uplimit variance vector vectorproduct xor
line 77: 
line 78: " Custom Element
line 79: syn match htmlTagName contained "\<[a-z][-.0-9_a-z]*-[-.0-9_a-z]*\>"
line 80: syn match htmlTagName contained "[.0-9_a-z]\@<=-[-.0-9_a-z]*\>"
line 81: 
line 82: " HTML 5 arguments
line 83: " Core Attributes
line 84: syn keyword htmlArg contained accesskey class contenteditable contextmenu dir 
line 85: syn keyword htmlArg contained draggable hidden id is lang spellcheck style tabindex title translate
line 86: " Event-handler Attributes
line 87: syn keyword htmlArg contained onabort onblur oncanplay oncanplaythrough onchange
line 88: syn keyword htmlArg contained onclick oncontextmenu ondblclick ondrag ondragend ondragenter ondragleave ondragover 
line 89: syn keyword htmlArg contained ondragstart ondrop ondurationchange onemptied onended onerror onfocus onformchange 
line 90: syn keyword htmlArg contained onforminput oninput oninvalid onkeydown onkeypress onkeyup onload onloadeddata 
line 91: syn keyword htmlArg contained onloadedmetadata onloadstart onmousedown onmousemove onmouseout onmouseover onmouseup
line 92: syn keyword htmlArg contained onmousewheel onpause onplay onplaying onprogress onratechange onreadystatechange 
line 93: syn keyword htmlArg contained onscroll onseeked onseeking onselect onshow onstalled onsubmit onsuspend ontimeupdate 
line 94: syn keyword htmlArg contained onvolumechange onwaiting
line 95: " XML Attributes
line 96: syn keyword htmlArg contained xml:lang xml:space xml:base xmlns
line 97: " new features
line 98: " <body>
line 99: syn keyword htmlArg contained onafterprint onbeforeprint onbeforeunload onblur onerror onfocus onhashchange onload 
line 100: syn keyword htmlArg contained onmessage onoffline ononline onpopstate onredo onresize onstorage onundo onunload
line 101: " <video>, <audio>, <source>, <track>
line 102: syn keyword htmlArg contained autoplay preload controls loop poster media kind charset srclang track playsinline
line 103: " <form>, <input>, <button>
line 104: syn keyword htmlArg contained form autocomplete autofocus list min max step
line 105: syn keyword htmlArg contained formaction autofocus formenctype formmethod formtarget formnovalidate
line 106: syn keyword htmlArg contained required placeholder pattern
line 107: " <command>, <details>, <time>
line 108: syn keyword htmlArg contained label icon open datetime-local pubdate
line 109: " <script>
line 110: syn keyword htmlArg contained async
line 111: " <content>
line 112: syn keyword htmlArg contained select
line 113: " <iframe>
line 114: syn keyword htmlArg contained seamless srcdoc sandbox allowfullscreen allowusermedia allowpaymentrequest allowpresentation
line 115: " <picture>
line 116: syn keyword htmlArg contained srcset sizes
line 117: " <a>
line 118: syn keyword htmlArg contained download media
line 119: " <script>, <style>
line 120: syn keyword htmlArg contained nonce
line 121: " <area>, <a>, <img>, <iframe>, <link>
line 122: syn keyword htmlArg contained referrerpolicy
line 123: " https://w3c.github.io/webappsec-subresource-integrity/#the-integrity-attribute
line 124: syn keyword htmlArg contained integrity crossorigin
line 125: " <link>
line 126: syn keyword htmlArg contained prefetch 
line 127: " syn keyword htmlArg contained preload
line 128: " <img>
line 129: syn keyword htmlArg contained decoding
line 130: " https://w3c.github.io/selection-api/#extensions-to-globaleventhandlers
line 131: syn keyword htmlArg contained onselectstart onselectionchange
line 132: " https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading
line 133: syn keyword htmlArg contained loading
line 134: 
line 135: " Custom Data Attributes
line 136: " http://w3c.github.io/html/single-page.html#embedding-custom-non-visible-data-with-the-data-attributes
line 137: syn match   htmlArg "\<data[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 138: 
line 139: " Vendor Extension Attributes
line 140: " http://w3c.github.io/html/single-page.html#conformance-requirements-extensibility
line 141: syn match   htmlArg "\<x[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 142: 
line 143: " Microdata
line 144: " http://dev.w3.org/html5/md/
line 145: syn keyword htmlArg contained itemid itemscope itemtype itemprop itemref
line 146: 
line 147: " SVG
line 148: " http://www.w3.org/TR/SVG/
line 149: " Some common attributes from http://www.w3.org/TR/SVG/attindex.html
line 150: syn keyword htmlArg contained accent-height accumulate additive alphabetic amplitude arabic-form ascent attributeName attributeType azimuth 
line 151: syn keyword htmlArg contained baseFrequency baseProfile bbox begin bias by 
line 152: syn keyword htmlArg contained calcMode cap-height class clipPathUnits contentScriptType contentStyleType cx cy 
line 153: syn keyword htmlArg contained d descent diffuseConstant divisor dur dx dy 
line 154: syn keyword htmlArg contained edgeMode elevation end exponent externalResourcesRequired 
line 155: syn keyword htmlArg contained fill filterRes filterUnits font-family font-size font-stretch font-style font-variant font-weight format format from fx fy 
line 156: syn keyword htmlArg contained g1 g2 glyph-name glyphRef gradientTransform gradientUnits 
line 157: syn keyword htmlArg contained hanging height horiz-adv-x horiz-origin-x horiz-origin-y 
line 158: syn keyword htmlArg contained id ideographic in in2 intercept 
line 159: syn keyword htmlArg contained k k1 k2 k3 k4 kernelMatrix kernelUnitLength keyPoints keySplines keyTimes 
line 160: syn keyword htmlArg contained lang lengthAdjust limitingConeAngle local 
line 161: syn keyword htmlArg contained markerHeight markerUnits markerWidth maskContentUnits maskUnits mathematical max media method min mode name 
line 162: syn keyword htmlArg contained numOctaves 
line 163: syn keyword htmlArg contained offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom operator order orient orientation origin overline-position overline-thickness 
line 164: syn keyword htmlArg contained panose-1 path pathLength patternContentUnits patternTransform patternUnits points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits 
line 165: syn keyword htmlArg contained r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry 
line 166: syn keyword htmlArg contained scale seed slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles strikethrough-position strikethrough-thickness string surfaceScale systemLanguage 
line 167: syn keyword htmlArg contained tableValues target targetX targetY textLength title to transform type
line 168: syn keyword htmlArg contained u1 u2 underline-position underline-thickness unicode unicode-range units-per-em 
line 169: syn keyword htmlArg contained v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget 
line 170: syn keyword htmlArg contained width widths 
line 171: syn keyword htmlArg contained x x-height x1 x2 xChannelSelector xlink:actuate xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space 
line 172: syn keyword htmlArg contained y y1 y2 yChannelSelector 
line 173: syn keyword htmlArg contained z zoomAndPan 
line 174: syn keyword htmlArg contained alignment-baseline baseline-shift clip-path clip-rule clip color-interpolation-filters color-interpolation color-profile color-rendering color cursor direction display dominant-baseline enable-background fill-opacity fill-rule fill filter flood-color flood-opacity font-family font-size-adjust font-size font-stretch font-style font-variant font-weight glyph-orientation-horizontal glyph-orientation-vertical image-rendering kerning letter-spacing lighting-color marker-end marker-mid marker-start mask opacity overflow pointer-events shape-rendering stop-color stop-opacity stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width stroke text-anchor text-decoration text-rendering unicode-bidi visibility word-spacing writing-mode
line 175: 
line 176: " MathML attributes
line 177: " https://www.w3.org/TR/MathML3/chapter2.html#interf.toplevel.atts
line 178: syn keyword htmlArg contained accent accentunder actiontype align alignmentscope altimg altimg-height altimg-valign altimg-width alttext
line 179: syn keyword htmlArg contained annotation-xml background base baseline bevelled cd cdgroup charalign charspacing close
line 180: syn keyword htmlArg contained closure color columnalign columnalignment columnlines columnspacing columnspan columnwidth crossout decimalpoint
line 181: syn keyword htmlArg contained definitionURL denomalign depth display displaystyle edge encoding equalcolumns equalrows fence
line 182: syn keyword htmlArg contained fontfamily fontsize fontstyle fontweight form frame framespacing groupalign height indentalign
line 183: syn keyword htmlArg contained indentalignfirst indentalignlast indentshift indentshiftfirst indentshiftlast indenttarget index infixlinebreakstyle integer largeop
line 184: syn keyword htmlArg contained leftoverhang length linebreak linebreakmultchar linebreakstyle lineleading linethickness location longdivstyle lquote
line 185: syn keyword htmlArg contained lspace ltr macros math mathbackground mathcolor mathsize mathvariant maxsize maxwidth
line 186: syn keyword htmlArg contained mediummathspace menclose minlabelspacing minsize mode movablelimits msgroup mslinethickness name nargs
line 187: syn keyword htmlArg contained newline notation numalign number occurrence open order other overflow position
line 188: syn keyword htmlArg contained rightoverhang role rowalign rowlines rowspacing rowspan rquote rspace schemaLocation scope
line 189: syn keyword htmlArg contained scriptlevel scriptminsize scriptsize scriptsizemultiplier selection separator separators shift side stackalign
line 190: syn keyword htmlArg contained stretchy subscriptshift superscriptshift symmetric thickmathspace thinmathspace type valign verythickmathspace verythinmathspace
line 191: syn keyword htmlArg contained veryverythickmathspace veryverythinmathspace voffset width xref
line 192: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/html.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'syntax/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim', 'html5', 'syntax/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     HTML (version 5.1)
line 7: "               SVG (SVG 1.1 Second Edition)
line 8: "               MathML (MathML 3.0 Second Edition)
line 9: " Last Change:  2017 Mar 07
line 10: " License:      Public domain
line 11: "               (but let me know if you like :) )
line 12: "
line 13: " Note: This file just add new tags from HTML 5
line 14: "       and don't replace default html.vim syntax file
line 15: "
line 16: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 17: " Changes:      update to Draft 2016 Jan 13
line 18: "               add microdata Attributes
line 19: " Maintainer:   Rodrigo Machado <rcmachado@gmail.com>
line 20: " URL:          http://rm.blog.br/vim/syntax/html.vim
line 21: " Modified:     htdebeer <H.T.de.Beer@gmail.com>
line 22: " Changes:      add common SVG elements and attributes for inline SVG
line 23: 
line 24: " Patch 7.4.1142
line 25: if has("patch-7.4-1142")
line 26:   if has("win32")
line 27:     syn iskeyword @,48-57,_,128-167,224-235,-
line 28:   else
line 29:     syn iskeyword @,48-57,_,192-255,-
line 30:   endif
line 31: endif
line 32: 
line 33: " HTML 5 tags
line 34: syn keyword htmlTagName contained article aside audio canvas command
line 35: syn keyword htmlTagName contained datalist details dialog embed figcaption figure footer
line 36: syn keyword htmlTagName contained header hgroup keygen main mark meter menu menuitem nav output
line 37: syn keyword htmlTagName contained progress ruby rt rp rb rtc section source summary time track video data
line 38: syn keyword htmlTagName contained template content shadow slot
line 39: syn keyword htmlTagName contained wbr bdi
line 40: syn keyword htmlTagName contained picture
line 41: 
line 42: " SVG tags
line 43: " http://www.w3.org/TR/SVG/
line 44: " as found in http://www.w3.org/TR/SVG/eltindex.html
line 45: syn keyword htmlTagName contained svg 
line 46: syn keyword htmlTagName contained altGlyph altGlyphDef altGlyphItem 
line 47: syn keyword htmlTagName contained animate animateColor animateMotion animateTransform 
line 48: syn keyword htmlTagName contained circle ellipse rect line polyline polygon image path
line 49: syn keyword htmlTagName contained clipPath color-profile cursor 
line 50: syn keyword htmlTagName contained defs desc g symbol view use switch foreignObject
line 51: syn keyword htmlTagName contained filter feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence 
line 52: syn keyword htmlTagName contained font font-face font-face-format font-face-name font-face-src font-face-uri 
line 53: syn keyword htmlTagName contained glyph glyphRef hkern 
line 54: syn keyword htmlTagName contained linearGradient marker mask pattern radialGradient set stop
line 55: syn keyword htmlTagName contained missing-glyph mpath 
line 56: syn keyword htmlTagName contained text textPath tref tspan vkern
line 57: syn keyword htmlTagName contained metadata title
line 58: 
line 59: " MathML tags
line 60: " https://www.w3.org/TR/MathML3/appendixi.html#index.elem
line 61: syn keyword htmlTagName contained abs and annotation annotation-xml apply approx arccos arccosh arccot arccoth
line 62: syn keyword htmlTagName contained arccsc arccsch arcsec arcsech arcsin arcsinh arctan arctanh arg bind
line 63: syn keyword htmlTagName contained bvar card cartesianproduct cbytes ceiling cerror ci cn codomain complexes
line 64: syn keyword htmlTagName contained compose condition conjugate cos cosh cot coth cs csc csch
line 65: syn keyword htmlTagName contained csymbol curl declare degree determinant diff divergence divide domain domainofapplication
line 66: syn keyword htmlTagName contained emptyset eq equivalent eulergamma exists exp exponentiale factorial factorof false
line 67: syn keyword htmlTagName contained floor fn forall gcd geq grad gt ident image imaginary
line 68: syn keyword htmlTagName contained imaginaryi implies in infinity int integers intersect interval inverse lambda
line 69: syn keyword htmlTagName contained laplacian lcm leq limit list ln log logbase lowlimit lt
line 70: syn keyword htmlTagName contained maction maligngroup malignmark math matrix matrixrow max mean median menclose
line 71: syn keyword htmlTagName contained merror mfenced mfrac mglyph mi mi" min minus mlabeledtr mlongdiv
line 72: syn keyword htmlTagName contained mmultiscripts mn mo mode moment momentabout mover mpadded mphantom mprescripts
line 73: syn keyword htmlTagName contained mroot mrow ms mscarries mscarry msgroup msline mspace msqrt msrow
line 74: syn keyword htmlTagName contained mstack mstyle msub msubsup msup mtable mtd mtext mtr munder
line 75: syn keyword htmlTagName contained munderover naturalnumbers neq none not notanumber notin notprsubset notsubset or
line 76: syn keyword htmlTagName contained otherwise outerproduct partialdiff pi piece piecewise plus power primes product
line 77: syn keyword htmlTagName contained prsubset quotient rationals real reals reln rem root scalarproduct sdev
line 78: syn keyword htmlTagName contained sec sech selector semantics sep set setdiff share sin sinh
line 79: syn keyword htmlTagName contained span subset sum tan tanh tendsto times transpose true union
line 80: syn keyword htmlTagName contained uplimit variance vector vectorproduct xor
line 81: 
line 82: " Custom Element
line 83: syn match htmlTagName contained "\<[a-z][-.0-9_a-z]*-[-.0-9_a-z]*\>"
line 84: syn match htmlTagName contained "[.0-9_a-z]\@<=-[-.0-9_a-z]*\>"
line 85: 
line 86: " HTML 5 arguments
line 87: " Core Attributes
line 88: syn keyword htmlArg contained accesskey class contenteditable contextmenu dir 
line 89: syn keyword htmlArg contained draggable hidden id is lang spellcheck style tabindex title translate
line 90: " Event-handler Attributes
line 91: syn keyword htmlArg contained onabort onblur oncanplay oncanplaythrough onchange
line 92: syn keyword htmlArg contained onclick oncontextmenu ondblclick ondrag ondragend ondragenter ondragleave ondragover 
line 93: syn keyword htmlArg contained ondragstart ondrop ondurationchange onemptied onended onerror onfocus onformchange 
line 94: syn keyword htmlArg contained onforminput oninput oninvalid onkeydown onkeypress onkeyup onload onloadeddata 
line 95: syn keyword htmlArg contained onloadedmetadata onloadstart onmousedown onmousemove onmouseout onmouseover onmouseup
line 96: syn keyword htmlArg contained onmousewheel onpause onplay onplaying onprogress onratechange onreadystatechange 
line 97: syn keyword htmlArg contained onscroll onseeked onseeking onselect onshow onstalled onsubmit onsuspend ontimeupdate 
line 98: syn keyword htmlArg contained onvolumechange onwaiting
line 99: " XML Attributes
line 100: syn keyword htmlArg contained xml:lang xml:space xml:base xmlns
line 101: " new features
line 102: " <body>
line 103: syn keyword htmlArg contained onafterprint onbeforeprint onbeforeunload onblur onerror onfocus onhashchange onload 
line 104: syn keyword htmlArg contained onmessage onoffline ononline onpopstate onredo onresize onstorage onundo onunload
line 105: " <video>, <audio>, <source>, <track>
line 106: syn keyword htmlArg contained autoplay preload controls loop poster media kind charset srclang track playsinline
line 107: " <form>, <input>, <button>
line 108: syn keyword htmlArg contained form autocomplete autofocus list min max step
line 109: syn keyword htmlArg contained formaction autofocus formenctype formmethod formtarget formnovalidate
line 110: syn keyword htmlArg contained required placeholder pattern
line 111: " <command>, <details>, <time>
line 112: syn keyword htmlArg contained label icon open datetime-local pubdate
line 113: " <script>
line 114: syn keyword htmlArg contained async
line 115: " <content>
line 116: syn keyword htmlArg contained select
line 117: " <iframe>
line 118: syn keyword htmlArg contained seamless srcdoc sandbox allowfullscreen allowusermedia allowpaymentrequest allowpresentation
line 119: " <picture>
line 120: syn keyword htmlArg contained srcset sizes
line 121: " <a>
line 122: syn keyword htmlArg contained download media
line 123: " <script>, <style>
line 124: syn keyword htmlArg contained nonce
line 125: " <area>, <a>, <img>, <iframe>, <link>
line 126: syn keyword htmlArg contained referrerpolicy
line 127: " https://w3c.github.io/webappsec-subresource-integrity/#the-integrity-attribute
line 128: syn keyword htmlArg contained integrity crossorigin
line 129: " <link>
line 130: syn keyword htmlArg contained prefetch 
line 131: " syn keyword htmlArg contained preload
line 132: " <img>
line 133: syn keyword htmlArg contained decoding
line 134: " https://w3c.github.io/selection-api/#extensions-to-globaleventhandlers
line 135: syn keyword htmlArg contained onselectstart onselectionchange
line 136: " https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading
line 137: syn keyword htmlArg contained loading
line 138: 
line 139: " Custom Data Attributes
line 140: " http://w3c.github.io/html/single-page.html#embedding-custom-non-visible-data-with-the-data-attributes
line 141: syn match   htmlArg "\<data[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 142: 
line 143: " Vendor Extension Attributes
line 144: " http://w3c.github.io/html/single-page.html#conformance-requirements-extensibility
line 145: syn match   htmlArg "\<x[-.0-9_a-z]*-[-.0-9_a-z]*\>" contained
line 146: 
line 147: " Microdata
line 148: " http://dev.w3.org/html5/md/
line 149: syn keyword htmlArg contained itemid itemscope itemtype itemprop itemref
line 150: 
line 151: " SVG
line 152: " http://www.w3.org/TR/SVG/
line 153: " Some common attributes from http://www.w3.org/TR/SVG/attindex.html
line 154: syn keyword htmlArg contained accent-height accumulate additive alphabetic amplitude arabic-form ascent attributeName attributeType azimuth 
line 155: syn keyword htmlArg contained baseFrequency baseProfile bbox begin bias by 
line 156: syn keyword htmlArg contained calcMode cap-height class clipPathUnits contentScriptType contentStyleType cx cy 
line 157: syn keyword htmlArg contained d descent diffuseConstant divisor dur dx dy 
line 158: syn keyword htmlArg contained edgeMode elevation end exponent externalResourcesRequired 
line 159: syn keyword htmlArg contained fill filterRes filterUnits font-family font-size font-stretch font-style font-variant font-weight format format from fx fy 
line 160: syn keyword htmlArg contained g1 g2 glyph-name glyphRef gradientTransform gradientUnits 
line 161: syn keyword htmlArg contained hanging height horiz-adv-x horiz-origin-x horiz-origin-y 
line 162: syn keyword htmlArg contained id ideographic in in2 intercept 
line 163: syn keyword htmlArg contained k k1 k2 k3 k4 kernelMatrix kernelUnitLength keyPoints keySplines keyTimes 
line 164: syn keyword htmlArg contained lang lengthAdjust limitingConeAngle local 
line 165: syn keyword htmlArg contained markerHeight markerUnits markerWidth maskContentUnits maskUnits mathematical max media method min mode name 
line 166: syn keyword htmlArg contained numOctaves 
line 167: syn keyword htmlArg contained offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom operator order orient orientation origin overline-position overline-thickness 
line 168: syn keyword htmlArg contained panose-1 path pathLength patternContentUnits patternTransform patternUnits points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits 
line 169: syn keyword htmlArg contained r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry 
line 170: syn keyword htmlArg contained scale seed slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles strikethrough-position strikethrough-thickness string surfaceScale systemLanguage 
line 171: syn keyword htmlArg contained tableValues target targetX targetY textLength title to transform type
line 172: syn keyword htmlArg contained u1 u2 underline-position underline-thickness unicode unicode-range units-per-em 
line 173: syn keyword htmlArg contained v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget 
line 174: syn keyword htmlArg contained width widths 
line 175: syn keyword htmlArg contained x x-height x1 x2 xChannelSelector xlink:actuate xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space 
line 176: syn keyword htmlArg contained y y1 y2 yChannelSelector 
line 177: syn keyword htmlArg contained z zoomAndPan 
line 178: syn keyword htmlArg contained alignment-baseline baseline-shift clip-path clip-rule clip color-interpolation-filters color-interpolation color-profile color-rendering color cursor direction display dominant-baseline enable-background fill-opacity fill-rule fill filter flood-color flood-opacity font-family font-size-adjust font-size font-stretch font-style font-variant font-weight glyph-orientation-horizontal glyph-orientation-vertical image-rendering kerning letter-spacing lighting-color marker-end marker-mid marker-start mask opacity overflow pointer-events shape-rendering stop-color stop-opacity stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width stroke text-anchor text-decoration text-rendering unicode-bidi visibility word-spacing writing-mode
line 179: 
line 180: " MathML attributes
line 181: " https://www.w3.org/TR/MathML3/chapter2.html#interf.toplevel.atts
line 182: syn keyword htmlArg contained accent accentunder actiontype align alignmentscope altimg altimg-height altimg-valign altimg-width alttext
line 183: syn keyword htmlArg contained annotation-xml background base baseline bevelled cd cdgroup charalign charspacing close
line 184: syn keyword htmlArg contained closure color columnalign columnalignment columnlines columnspacing columnspan columnwidth crossout decimalpoint
line 185: syn keyword htmlArg contained definitionURL denomalign depth display displaystyle edge encoding equalcolumns equalrows fence
line 186: syn keyword htmlArg contained fontfamily fontsize fontstyle fontweight form frame framespacing groupalign height indentalign
line 187: syn keyword htmlArg contained indentalignfirst indentalignlast indentshift indentshiftfirst indentshiftlast indenttarget index infixlinebreakstyle integer largeop
line 188: syn keyword htmlArg contained leftoverhang length linebreak linebreakmultchar linebreakstyle lineleading linethickness location longdivstyle lquote
line 189: syn keyword htmlArg contained lspace ltr macros math mathbackground mathcolor mathsize mathvariant maxsize maxwidth
line 190: syn keyword htmlArg contained mediummathspace menclose minlabelspacing minsize mode movablelimits msgroup mslinethickness name nargs
line 191: syn keyword htmlArg contained newline notation numalign number occurrence open order other overflow position
line 192: syn keyword htmlArg contained rightoverhang role rowalign rowlines rowspacing rowspan rquote rspace schemaLocation scope
line 193: syn keyword htmlArg contained scriptlevel scriptminsize scriptsize scriptsizemultiplier selection separator separators shift side stackalign
line 194: syn keyword htmlArg contained stretchy subscriptshift superscriptshift symmetric thickmathspace thinmathspace type valign verythickmathspace verythinmathspace
line 195: syn keyword htmlArg contained veryverythickmathspace veryverythinmathspace voffset width xref
line 196: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:             HTML
line 3: " Previous Maintainer:  Jorge Maldonado Ventura <jorgesumle@freakspot.net>
line 4: " Previous Maintainer:  Claudio Fleiner <claudio@fleiner.com>
line 5: " Repository:           https://notabug.org/jorgesumle/vim-html-syntax
line 6: " Last Change:          2021 Mar 02
line 7: "^I^I^IIncluded patch #7900 to fix comments
line 8: "^I^I^IIncluded patch #7916 to fix a few more things
line 9: "
line 10: 
line 11: " Please check :help html.vim for some comments and a description of the options
line 12: 
line 13: " quit when a syntax file was already loaded
line 14: if !exists("main_syntax")
line 15:   if exists("b:current_syntax")
line 16:     finish
line 17:   endif
line 18:   let main_syntax = 'html'
line 19: endif
line 20: 
line 21: let s:cpo_save = &cpo
line 22: set cpo&vim
line 23: 
line 24: syntax spell toplevel
line 25: 
line 26: syn case ignore
line 27: 
line 28: " mark illegal characters
line 29: syn match htmlError "[<>&]"
line 30: 
line 31: 
line 32: " tags
line 33: syn region  htmlString   contained start=+"+ end=+"+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
line 34: syn region  htmlString   contained start=+'+ end=+'+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
line 35: syn match   htmlValue    contained "=[\t ]*[^'" \t>][^ \t>]*"hs=s+1   contains=javaScriptExpression,@htmlPreproc
line 36: syn region  htmlEndTag             start=+</+      end=+>+ contains=htmlTagN,htmlTagError
line 37: syn region  htmlTag                start=+<[^/]+   end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent,htmlCssDefinition,@htmlPreproc,@htmlArgCluster
line 38: syn match   htmlTagN     contained +<\s*[-a-zA-Z0-9]\++hs=s+1 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
line 39: syn match   htmlTagN     contained +</\s*[-a-zA-Z0-9]\++hs=s+2 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
line 40: syn match   htmlTagError contained "[^>]<"ms=s+1
line 41: 
line 42: 
line 43: " tag names
line 44: syn keyword htmlTagName contained address applet area a base basefont
line 45: syn keyword htmlTagName contained big blockquote br caption center
line 46: syn keyword htmlTagName contained cite code dd dfn dir div dl dt font
line 47: syn keyword htmlTagName contained form hr html img
line 48: syn keyword htmlTagName contained input isindex kbd li link map menu
line 49: syn keyword htmlTagName contained meta ol option param pre p samp span
line 50: syn keyword htmlTagName contained select small sub sup
line 51: syn keyword htmlTagName contained table td textarea th tr tt ul var xmp
line 52: syn match htmlTagName contained "\<\(b\|i\|u\|h[1-6]\|em\|strong\|head\|body\|title\)\>"
line 53: 
line 54: " new html 4.0 tags
line 55: syn keyword htmlTagName contained abbr acronym bdo button col label
line 56: syn keyword htmlTagName contained colgroup fieldset iframe ins legend
line 57: syn keyword htmlTagName contained object optgroup q s tbody tfoot thead
line 58: 
line 59: " new html 5 tags
line 60: syn keyword htmlTagName contained article aside audio bdi canvas data
line 61: syn keyword htmlTagName contained datalist details dialog embed figcaption
line 62: syn keyword htmlTagName contained figure footer header hgroup keygen main
line 63: syn keyword htmlTagName contained mark menuitem meter nav output picture
line 64: syn keyword htmlTagName contained progress rb rp rt rtc ruby section
line 65: syn keyword htmlTagName contained slot source summary template time track
line 66: syn keyword htmlTagName contained video wbr
line 67: 
line 68: " legal arg names
line 69: syn keyword htmlArg contained action
line 70: syn keyword htmlArg contained align alink alt archive background bgcolor
line 71: syn keyword htmlArg contained border bordercolor cellpadding
line 72: syn keyword htmlArg contained cellspacing checked class clear code codebase color
line 73: syn keyword htmlArg contained cols colspan content coords enctype face
line 74: syn keyword htmlArg contained gutter height hspace id
line 75: syn keyword htmlArg contained link lowsrc marginheight
line 76: syn keyword htmlArg contained marginwidth maxlength method name prompt
line 77: syn keyword htmlArg contained rel rev rows rowspan scrolling selected shape
line 78: syn keyword htmlArg contained size src start target text type url
line 79: syn keyword htmlArg contained usemap ismap valign value vlink vspace width wrap
line 80: syn match   htmlArg contained "\<\(http-equiv\|href\|title\)="me=e-1
line 81: 
line 82: " aria attributes
line 83: exe 'syn match htmlArg contained "\<aria-\%(' . join([ 'activedescendant', 'atomic', 'autocomplete', 'busy', 'checked', 'colcount', 'colindex', 'colspan', 'controls', 'current', 'describedby', 'details', 'disabled', 'dropeffect', 'errormessage', 'expanded', 'flowto', 'grabbed', 'haspopup', 'hidden', 'invalid', 'keyshortcuts', 'label', 'labelledby', 'level', 'live', 'modal', 'multiline', 'multiselectable', 'orientation', 'owns', 'placeholder', 'posinset', 'pressed', 'readonly', 'relevant', 'required', 'roledescription', 'rowcount', 'rowindex', 'rowspan', 'selected', 'setsize', 'sort', 'valuemax', 'valuemin', 'valuenow', 'valuetext' ], '\|') . '\)\>"'
line 83: syn match htmlArg contained "\<aria-\%(activedescendant\|atomic\|autocomplete\|busy\|checked\|colcount\|colindex\|colspan\|controls\|current\|describedby\|details\|disabled\|dropeffect\|errormessage\|expanded\|flowto\|grabbed\|haspopup\|hidden\|invalid\|keyshortcuts\|label\|labelledby\|level\|live\|modal\|multiline\|multiselectable\|orientation\|owns\|placeholder\|posinset\|pressed\|readonly\|relevant\|required\|roledescription\|rowcount\|rowindex\|rowspan\|selected\|setsize\|sort\|valuemax\|valuemin\|valuenow\|valuetext\)\>"
line 93: syn keyword htmlArg contained role
line 94: 
line 95: " Netscape extensions
line 96: syn keyword htmlTagName contained frame noframes frameset nobr blink
line 97: syn keyword htmlTagName contained layer ilayer nolayer spacer
line 98: syn keyword htmlArg     contained frameborder noresize pagex pagey above below
line 99: syn keyword htmlArg     contained left top visibility clip id noshade
line 100: syn match   htmlArg     contained "\<z-index\>"
line 101: 
line 102: " Microsoft extensions
line 103: syn keyword htmlTagName contained marquee
line 104: 
line 105: " html 4.0 arg names
line 106: syn match   htmlArg contained "\<\(accept-charset\|label\)\>"
line 107: syn keyword htmlArg contained abbr accept accesskey axis char charoff charset
line 108: syn keyword htmlArg contained cite classid codetype compact data datetime
line 109: syn keyword htmlArg contained declare defer dir disabled for frame
line 110: syn keyword htmlArg contained headers hreflang lang language longdesc
line 111: syn keyword htmlArg contained multiple nohref nowrap object profile readonly
line 112: syn keyword htmlArg contained rules scheme scope span standby style
line 113: syn keyword htmlArg contained summary tabindex valuetype version
line 114: 
line 115: " html 5 arg names
line 116: syn keyword htmlArg contained allowfullscreen async autocomplete autofocus
line 117: syn keyword htmlArg contained autoplay challenge contenteditable contextmenu
line 118: syn keyword htmlArg contained controls crossorigin default dirname download
line 119: syn keyword htmlArg contained draggable dropzone form formaction formenctype
line 120: syn keyword htmlArg contained formmethod formnovalidate formtarget hidden
line 121: syn keyword htmlArg contained high icon inputmode keytype kind list loop low
line 122: syn keyword htmlArg contained max min minlength muted nonce novalidate open
line 123: syn keyword htmlArg contained optimum pattern placeholder poster preload
line 124: syn keyword htmlArg contained radiogroup required reversed sandbox spellcheck
line 125: syn keyword htmlArg contained sizes srcset srcdoc srclang step title translate
line 126: syn keyword htmlArg contained typemustmatch
line 127: 
line 128: " special characters
line 129: syn match htmlSpecialChar "&#\=[0-9A-Za-z]\{1,8};"
line 130: 
line 131: " Comments (the real ones or the old netscape ones)
line 132: if exists("html_wrong_comments")
line 133:   syn region htmlComment        start=+<!--+    end=+--\s*>+    contains=@Spell
line 134: else
line 135:   " The HTML 5.2 syntax 8.2.4.41: bogus comment is parser error; browser skips until next &gt
line 136:   syn region htmlComment        start=+<!+      end=+>+         contains=htmlCommentError keepend
line 137:   " Idem 8.2.4.42,51: Comment starts with <!-- and ends with -->
line 138:   " Idem 8.2.4.43,44: Except <!--> and <!---> are parser errors
line 139:   " Idem 8.2.4.52: dash-dash-bang (--!>) is error ignored by parser, also closes comment
line 140:   syn region htmlComment matchgroup=htmlComment start=+<!--\%(-\?>\)\@!+        end=+--!\?>+    contains=htmlCommentNested,@htmlPreProc,@Spell keepend
line 141:   " Idem 8.2.4.49: nested comment is parser error, except <!--> is all right
line 142:   syn match htmlCommentNested contained "<!-->\@!"
line 143:   syn match htmlCommentError  contained "[^><!]"
line 144: endif
line 145: syn region htmlComment  start=+<!DOCTYPE+       end=+>+ keepend
line 146: 
line 147: " server-parsed commands
line 148: syn region htmlPreProc start=+<!--#+ end=+-->+ contains=htmlPreStmt,htmlPreError,htmlPreAttr
line 149: syn match htmlPreStmt contained "<!--#\(config\|echo\|exec\|fsize\|flastmod\|include\|printenv\|set\|if\|elif\|else\|endif\|geoguide\)\>"
line 150: syn match htmlPreError contained "<!--#\S*"ms=s+4
line 151: syn match htmlPreAttr contained "\w\+=[^"]\S\+" contains=htmlPreProcAttrError,htmlPreProcAttrName
line 152: syn region htmlPreAttr contained start=+\w\+="+ skip=+\\\\\|\\"+ end=+"+ contains=htmlPreProcAttrName keepend
line 153: syn match htmlPreProcAttrError contained "\w\+="he=e-1
line 154: syn match htmlPreProcAttrName contained "\(expr\|errmsg\|sizefmt\|timefmt\|var\|cgi\|cmd\|file\|virtual\|value\)="he=e-1
line 155: 
line 156: if !exists("html_no_rendering")
line 157:   " rendering
line 158:   syn cluster htmlTop contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,javaScript,@htmlPreproc
line 159: 
line 160:   syn region htmlStrike start="<del\>" end="</del\_s*>"me=s-1 contains=@htmlTop
line 161:   syn region htmlStrike start="<strike\>" end="</strike\_s*>"me=s-1 contains=@htmlTop
line 162: 
line 163:   syn region htmlBold start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
line 164:   syn region htmlBold start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
line 165:   syn region htmlBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
line 166:   syn region htmlBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
line 167:   syn region htmlBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
line 168:   syn region htmlBoldUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
line 169:   syn region htmlBoldUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 170:   syn region htmlBoldItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
line 171: 
line 172:   syn region htmlUnderline start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBold,htmlUnderlineItalic
line 173:   syn region htmlUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
line 174:   syn region htmlUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
line 175:   syn region htmlUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
line 176:   syn region htmlUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
line 177:   syn region htmlUnderlineItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
line 178:   syn region htmlUnderlineItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
line 179:   syn region htmlUnderlineBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
line 180:   syn region htmlUnderlineBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 181: 
line 182:   syn region htmlItalic start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlItalicBold,htmlItalicUnderline
line 183:   syn region htmlItalic start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
line 184:   syn region htmlItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
line 185:   syn region htmlItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
line 186:   syn region htmlItalicBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop
line 187:   syn region htmlItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlItalicUnderlineBold
line 188:   syn region htmlItalicUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
line 189:   syn region htmlItalicUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
line 190: 
line 191:   syn match htmlLeadingSpace "^\s\+" contained
line 192:   syn region htmlLink start="<a\>\_[^>]*\<href\>" end="</a\_s*>"me=s-1 contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLeadingSpace,javaScript,@htmlPreproc
line 193:   syn region htmlH1 start="<h1\>" end="</h1\_s*>"me=s-1 contains=@htmlTop
line 194:   syn region htmlH2 start="<h2\>" end="</h2\_s*>"me=s-1 contains=@htmlTop
line 195:   syn region htmlH3 start="<h3\>" end="</h3\_s*>"me=s-1 contains=@htmlTop
line 196:   syn region htmlH4 start="<h4\>" end="</h4\_s*>"me=s-1 contains=@htmlTop
line 197:   syn region htmlH5 start="<h5\>" end="</h5\_s*>"me=s-1 contains=@htmlTop
line 198:   syn region htmlH6 start="<h6\>" end="</h6\_s*>"me=s-1 contains=@htmlTop
line 199:   syn region htmlHead start="<head\>" end="</head\_s*>"me=s-1 end="<body\>"me=s-1 end="<h[1-6]\>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,htmlTitle,javaScript,cssStyle,@htmlPreproc
line 200:   syn region htmlTitle start="<title\>" end="</title\_s*>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,javaScript,@htmlPreproc
line 201: endif
line 202: 
line 203: syn keyword htmlTagName         contained noscript
line 204: syn keyword htmlSpecialTagName  contained script style
line 205: if main_syntax != 'java' || exists("java_javascript")
line 206:   " JAVA SCRIPT
line 207:   syn include @htmlJavaScript syntax/javascript.vim
Searching for "syntax/javascript.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/javascript.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'javascript', 'syntax/javascript.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim', 'javascript', 'syntax/javascript.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     JavaScript
line 7: " Maintainer:   vim-javascript community
line 8: " URL:          https://github.com/pangloss/vim-javascript
line 9: 
line 10: if !exists("main_syntax")
line 11:   if version < 600
line 12:     syntax clear
line 13:   elseif exists("b:current_syntax")
line 14:     finish
line 15:   endif
line 16:   let main_syntax = 'javascript'
line 17: endif
line 18: 
line 19: " Dollar sign is permitted anywhere in an identifier
line 20: if (v:version > 704 || v:version == 704 && has('patch1142')) && main_syntax == 'javascript'
line 21:   syntax iskeyword @,48-57,_,192-255,$
line 22: else
line 23:   setlocal iskeyword+=$
line 24: endif
line 25: 
line 26: syntax sync fromstart
line 27: " TODO: Figure out what type of casing I need
line 28: " syntax case ignore
line 29: syntax case match
line 30: 
line 31: syntax match   jsNoise          /[:,;]/
line 32: syntax match   jsDot            /\./ skipwhite skipempty nextgroup=jsObjectProp,jsFuncCall,jsPrototype,jsTaggedTemplate
line 33: syntax match   jsObjectProp     contained /\<\K\k*/
line 34: syntax match   jsFuncCall       /\<\K\k*\ze\s*(/
line 35: syntax match   jsParensError    /[)}\]]/
line 36: 
line 37: " Program Keywords
line 38: syntax keyword jsStorageClass   const var let skipwhite skipempty nextgroup=jsDestructuringBlock,jsDestructuringArray,jsVariableDef
line 39: syntax match   jsVariableDef    contained /\<\K\k*/ skipwhite skipempty nextgroup=jsFlowDefinition
line 40: syntax keyword jsOperatorKeyword delete instanceof typeof void new in of skipwhite skipempty nextgroup=@jsExpression
line 41: syntax match   jsOperator       "[-!|&+<>=%/*~^]" skipwhite skipempty nextgroup=@jsExpression
line 42: syntax match   jsOperator       /::/ skipwhite skipempty nextgroup=@jsExpression
line 43: syntax keyword jsBooleanTrue    true
line 44: syntax keyword jsBooleanFalse   false
line 45: 
line 46: " Modules
line 47: syntax keyword jsImport                       import skipwhite skipempty nextgroup=jsModuleAsterisk,jsModuleKeyword,jsModuleGroup,jsFlowImportType
line 48: syntax keyword jsExport                       export skipwhite skipempty nextgroup=@jsAll,jsModuleGroup,jsExportDefault,jsModuleAsterisk,jsModuleKeyword,jsFlowTypeStatement
line 49: syntax match   jsModuleKeyword      contained /\<\K\k*/ skipwhite skipempty nextgroup=jsModuleAs,jsFrom,jsModuleComma
line 50: syntax keyword jsExportDefault      contained default skipwhite skipempty nextgroup=@jsExpression
line 51: syntax keyword jsExportDefaultGroup contained default skipwhite skipempty nextgroup=jsModuleAs,jsFrom,jsModuleComma
line 52: syntax match   jsModuleAsterisk     contained /\*/ skipwhite skipempty nextgroup=jsModuleKeyword,jsModuleAs,jsFrom
line 53: syntax keyword jsModuleAs           contained as skipwhite skipempty nextgroup=jsModuleKeyword,jsExportDefaultGroup
line 54: syntax keyword jsFrom               contained from skipwhite skipempty nextgroup=jsString
line 55: syntax match   jsModuleComma        contained /,/ skipwhite skipempty nextgroup=jsModuleKeyword,jsModuleAsterisk,jsModuleGroup,jsFlowTypeKeyword
line 56: 
line 57: " Strings, Templates, Numbers
line 58: syntax region  jsString           start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1+ end=+$+  contains=jsSpecial extend
line 59: syntax region  jsTemplateString   start=+`+  skip=+\\`+  end=+`+     contains=jsTemplateExpression,jsSpecial extend
line 60: syntax match   jsTaggedTemplate   /\<\K\k*\ze`/ nextgroup=jsTemplateString
line 61: syntax match   jsNumber           /\c\<\%(\d\+\%(e[+-]\=\d\+\)\=\|0b[01]\+\|0o\o\+\|0x\%(\x\|_\)\+\)n\=\>/
line 62: syntax keyword jsNumber           Infinity
line 63: syntax match   jsFloat            /\c\<\%(\d\+\.\d\+\|\d\+\.\|\.\d\+\)\%(e[+-]\=\d\+\)\=\>/
line 64: 
line 65: " Regular Expressions
line 66: syntax match   jsSpecial            contained "\v\\%(x\x\x|u%(\x{4}|\{\x{4,5}})|c\u|.)"
line 67: syntax region  jsTemplateExpression contained matchgroup=jsTemplateBraces start=+${+ end=+}+ contains=@jsExpression keepend
line 68: syntax region  jsRegexpCharClass    contained start=+\[+ skip=+\\.+ end=+\]+ contains=jsSpecial extend
line 69: syntax match   jsRegexpBoundary     contained "\v\c[$^]|\\b"
line 70: syntax match   jsRegexpBackRef      contained "\v\\[1-9]\d*"
line 71: syntax match   jsRegexpQuantifier   contained "\v[^\\]%([?*+]|\{\d+%(,\d*)?})\??"lc=1
line 72: syntax match   jsRegexpOr           contained "|"
line 73: syntax match   jsRegexpMod          contained "\v\(\?[:=!>]"lc=1
line 74: syntax region  jsRegexpGroup        contained start="[^\\]("lc=1 skip="\\.\|\[\(\\.\|[^]]\+\)\]" end=")" contains=jsRegexpCharClass,@jsRegexpSpecial keepend
line 75: syntax region  jsRegexpString   start=+\%(\%(\<return\|\<typeof\|\_[^)\]'"[:blank:][:alnum:]_$]\)\s*\)\@<=/\ze[^*/]+ skip=+\\.\|\[[^]]\{1,}\]+ end=+/[gimyus]\{,6}+ contains=jsRegexpCharClass,jsRegexpGroup,@jsRegexpSpecial oneline keepend extend
line 76: syntax cluster jsRegexpSpecial    contains=jsSpecial,jsRegexpBoundary,jsRegexpBackRef,jsRegexpQuantifier,jsRegexpOr,jsRegexpMod
line 77: 
line 78: " Objects
line 79: syntax match   jsObjectShorthandProp contained /\<\k*\ze\s*/ skipwhite skipempty nextgroup=jsObjectSeparator
line 80: syntax match   jsObjectKey         contained /\<\k*\ze\s*:/ contains=jsFunctionKey skipwhite skipempty nextgroup=jsObjectValue
line 81: syntax region  jsObjectKeyString   contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial skipwhite skipempty nextgroup=jsObjectValue
line 82: syntax region  jsObjectKeyComputed contained matchgroup=jsBrackets start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsObjectValue,jsFuncArgs extend
line 83: syntax match   jsObjectSeparator   contained /,/
line 84: syntax region  jsObjectValue       contained matchgroup=jsObjectColon start=/:/ end=/[,}]\@=/ contains=@jsExpression extend
line 85: syntax match   jsObjectFuncName    contained /\<\K\k*\ze\_s*(/ skipwhite skipempty nextgroup=jsFuncArgs
line 86: syntax match   jsFunctionKey       contained /\<\K\k*\ze\s*:\s*function\>/
line 87: syntax match   jsObjectMethodType  contained /\<[gs]et\ze\s\+\K\k*/ skipwhite skipempty nextgroup=jsObjectFuncName
line 88: syntax region  jsObjectStringKey   contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial extend skipwhite skipempty nextgroup=jsFuncArgs,jsObjectValue
line 89: 
line 90: exe 'syntax keyword jsNull      null             '.(exists('g:javascript_conceal_null')      ? 'conceal cchar='.g:javascript_conceal_null       : '')
line 90: syntax keyword jsNull      null             
line 91: exe 'syntax keyword jsReturn    return contained '.(exists('g:javascript_conceal_return')    ? 'conceal cchar='.g:javascript_conceal_return     : '').' skipwhite nextgroup=@jsExpression'
line 91: syntax keyword jsReturn    return contained  skipwhite nextgroup=@jsExpression
line 92: exe 'syntax keyword jsUndefined undefined        '.(exists('g:javascript_conceal_undefined') ? 'conceal cchar='.g:javascript_conceal_undefined  : '')
line 92: syntax keyword jsUndefined undefined        
line 93: exe 'syntax keyword jsNan       NaN              '.(exists('g:javascript_conceal_NaN')       ? 'conceal cchar='.g:javascript_conceal_NaN        : '')
line 93: syntax keyword jsNan       NaN              
line 94: exe 'syntax keyword jsPrototype prototype        '.(exists('g:javascript_conceal_prototype') ? 'conceal cchar='.g:javascript_conceal_prototype  : '')
line 94: syntax keyword jsPrototype prototype        
line 95: exe 'syntax keyword jsThis      this             '.(exists('g:javascript_conceal_this')      ? 'conceal cchar='.g:javascript_conceal_this       : '')
line 95: syntax keyword jsThis      this             
line 96: exe 'syntax keyword jsSuper     super  contained '.(exists('g:javascript_conceal_super')     ? 'conceal cchar='.g:javascript_conceal_super      : '')
line 96: syntax keyword jsSuper     super  contained 
line 97: 
line 98: " Statement Keywords
line 99: syntax match   jsBlockLabel              /\<\K\k*\s*::\@!/    contains=jsNoise skipwhite skipempty nextgroup=jsBlock
line 100: syntax match   jsBlockLabelKey contained /\<\K\k*\ze\s*\_[;]/
line 101: syntax keyword jsStatement     contained with yield debugger
line 102: syntax keyword jsStatement     contained break continue skipwhite skipempty nextgroup=jsBlockLabelKey
line 103: syntax keyword jsConditional            if              skipwhite skipempty nextgroup=jsParenIfElse
line 104: syntax keyword jsConditional            else            skipwhite skipempty nextgroup=jsCommentIfElse,jsIfElseBlock
line 105: syntax keyword jsConditional            switch          skipwhite skipempty nextgroup=jsParenSwitch
line 106: syntax keyword jsRepeat                 while for       skipwhite skipempty nextgroup=jsParenRepeat,jsForAwait
line 107: syntax keyword jsDo                     do              skipwhite skipempty nextgroup=jsRepeatBlock
line 108: syntax region  jsSwitchCase   contained matchgroup=jsLabel start=/\<\%(case\|default\)\>/ end=/:\@=/ contains=@jsExpression,jsLabel skipwhite skipempty nextgroup=jsSwitchColon keepend
line 109: syntax keyword jsTry                    try             skipwhite skipempty nextgroup=jsTryCatchBlock
line 110: syntax keyword jsFinally      contained finally         skipwhite skipempty nextgroup=jsFinallyBlock
line 111: syntax keyword jsCatch        contained catch           skipwhite skipempty nextgroup=jsParenCatch,jsTryCatchBlock
line 112: syntax keyword jsException              throw
line 113: syntax keyword jsAsyncKeyword           async await
line 114: syntax match   jsSwitchColon   contained /::\@!/        skipwhite skipempty nextgroup=jsSwitchBlock
line 115: 
line 116: " Keywords
line 117: syntax keyword jsGlobalObjects     ArrayBuffer Array BigInt BigInt64Array BigUint64Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray Boolean Buffer Collator DataView Date DateTimeFormat Function Intl Iterator JSON Map Set WeakMap WeakRef WeakSet Math Number NumberFormat Object ParallelArray Promise Proxy Reflect RegExp String Symbol Uint8ClampedArray WebAssembly console document fetch window
line 118: syntax keyword jsGlobalNodeObjects  module exports global process __dirname __filename
line 119: syntax match   jsGlobalNodeObjects  /\<require\>/ containedin=jsFuncCall
line 120: syntax keyword jsExceptions         Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError
line 121: syntax keyword jsBuiltins           decodeURI decodeURIComponent encodeURI encodeURIComponent eval isFinite isNaN parseFloat parseInt uneval
line 122: " DISCUSS: How imporant is this, really? Perhaps it should be linked to an error because I assume the keywords are reserved?
line 123: syntax keyword jsFutureKeys         abstract enum int short boolean interface byte long char final native synchronized float package throws goto private transient implements protected volatile double public
line 124: 
line 125: " DISCUSS: Should we really be matching stuff like this?
line 126: " DOM2 Objects
line 127: syntax keyword jsGlobalObjects  DOMImplementation DocumentFragment Document Node NodeList NamedNodeMap CharacterData Attr Element Text Comment CDATASection DocumentType Notation Entity EntityReference ProcessingInstruction
line 128: syntax keyword jsExceptions     DOMException
line 129: 
line 130: " DISCUSS: Should we really be matching stuff like this?
line 131: " DOM2 CONSTANT
line 132: syntax keyword jsDomErrNo       INDEX_SIZE_ERR DOMSTRING_SIZE_ERR HIERARCHY_REQUEST_ERR WRONG_DOCUMENT_ERR INVALID_CHARACTER_ERR NO_DATA_ALLOWED_ERR NO_MODIFICATION_ALLOWED_ERR NOT_FOUND_ERR NOT_SUPPORTED_ERR INUSE_ATTRIBUTE_ERR INVALID_STATE_ERR SYNTAX_ERR INVALID_MODIFICATION_ERR NAMESPACE_ERR INVALID_ACCESS_ERR
line 133: syntax keyword jsDomNodeConsts  ELEMENT_NODE ATTRIBUTE_NODE TEXT_NODE CDATA_SECTION_NODE ENTITY_REFERENCE_NODE ENTITY_NODE PROCESSING_INSTRUCTION_NODE COMMENT_NODE DOCUMENT_NODE DOCUMENT_TYPE_NODE DOCUMENT_FRAGMENT_NODE NOTATION_NODE
line 134: 
line 135: " DISCUSS: Should we really be special matching on these props?
line 136: " HTML events and internal variables
line 137: syntax keyword jsHtmlEvents     onblur onclick oncontextmenu ondblclick onfocus onkeydown onkeypress onkeyup onmousedown onmousemove onmouseout onmouseover onmouseup onresize
line 138: 
line 139: " Code blocks
line 140: syntax region  jsBracket                      matchgroup=jsBrackets            start=/\[/ end=/\]/ contains=@jsExpression,jsSpreadExpression extend fold
line 141: syntax region  jsParen                        matchgroup=jsParens              start=/(/  end=/)/  contains=@jsExpression extend fold nextgroup=jsFlowDefinition
line 142: syntax region  jsParenDecorator     contained matchgroup=jsParensDecorator     start=/(/  end=/)/  contains=@jsAll extend fold
line 143: syntax region  jsParenIfElse        contained matchgroup=jsParensIfElse        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsCommentIfElse,jsIfElseBlock,jsReturn extend fold
line 144: syntax region  jsParenRepeat        contained matchgroup=jsParensRepeat        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsCommentRepeat,jsRepeatBlock,jsReturn extend fold
line 145: syntax region  jsParenSwitch        contained matchgroup=jsParensSwitch        start=/(/  end=/)/  contains=@jsAll skipwhite skipempty nextgroup=jsSwitchBlock extend fold
line 146: syntax region  jsParenCatch         contained matchgroup=jsParensCatch         start=/(/  end=/)/  skipwhite skipempty nextgroup=jsTryCatchBlock extend fold
line 147: syntax region  jsFuncArgs           contained matchgroup=jsFuncParens          start=/(/  end=/)/  contains=jsFuncArgCommas,jsComment,jsFuncArgExpression,jsDestructuringBlock,jsDestructuringArray,jsRestExpression,jsFlowArgumentDef skipwhite skipempty nextgroup=jsCommentFunction,jsFuncBlock,jsFlowReturn extend fold
line 148: syntax region  jsClassBlock         contained matchgroup=jsClassBraces         start=/{/  end=/}/  contains=jsClassFuncName,jsClassMethodType,jsArrowFunction,jsArrowFuncArgs,jsComment,jsGenerator,jsDecorator,jsClassProperty,jsClassPropertyComputed,jsClassStringKey,jsAsyncKeyword,jsNoise extend fold
line 149: syntax region  jsFuncBlock          contained matchgroup=jsFuncBraces          start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 150: syntax region  jsIfElseBlock        contained matchgroup=jsIfElseBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 151: syntax region  jsTryCatchBlock      contained matchgroup=jsTryCatchBraces      start=/{/  end=/}/  contains=@jsAll,jsBlock skipwhite skipempty nextgroup=jsCatch,jsFinally extend fold
line 152: syntax region  jsFinallyBlock       contained matchgroup=jsFinallyBraces       start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 153: syntax region  jsSwitchBlock        contained matchgroup=jsSwitchBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock,jsSwitchCase extend fold
line 154: syntax region  jsRepeatBlock        contained matchgroup=jsRepeatBraces        start=/{/  end=/}/  contains=@jsAll,jsBlock extend fold
line 155: syntax region  jsDestructuringBlock contained matchgroup=jsDestructuringBraces start=/{/  end=/}/  contains=jsDestructuringProperty,jsDestructuringAssignment,jsDestructuringNoise,jsDestructuringPropertyComputed,jsSpreadExpression,jsComment nextgroup=jsFlowDefinition extend fold
line 156: syntax region  jsDestructuringArray contained matchgroup=jsDestructuringBraces start=/\[/ end=/\]/ contains=jsDestructuringPropertyValue,jsDestructuringNoise,jsDestructuringProperty,jsSpreadExpression,jsDestructuringBlock,jsDestructuringArray,jsComment nextgroup=jsFlowDefinition extend fold
line 157: syntax region  jsObject             contained matchgroup=jsObjectBraces        start=/{/  end=/}/  contains=jsObjectKey,jsObjectKeyString,jsObjectKeyComputed,jsObjectShorthandProp,jsObjectSeparator,jsObjectFuncName,jsObjectMethodType,jsGenerator,jsComment,jsObjectStringKey,jsSpreadExpression,jsDecorator,jsAsyncKeyword,jsTemplateString extend fold
line 158: syntax region  jsBlock                        matchgroup=jsBraces              start=/{/  end=/}/  contains=@jsAll,jsSpreadExpression extend fold
line 159: syntax region  jsModuleGroup        contained matchgroup=jsModuleBraces        start=/{/ end=/}/   contains=jsModuleKeyword,jsModuleComma,jsModuleAs,jsComment,jsFlowTypeKeyword skipwhite skipempty nextgroup=jsFrom fold
line 160: syntax region  jsSpreadExpression   contained matchgroup=jsSpreadOperator      start=/\.\.\./ end=/[,}\]]\@=/ contains=@jsExpression
line 161: syntax region  jsRestExpression     contained matchgroup=jsRestOperator        start=/\.\.\./ end=/[,)]\@=/
line 162: syntax region  jsTernaryIf                    matchgroup=jsTernaryIfOperator   start=/?:\@!/  end=/\%(:\|}\@=\)/  contains=@jsExpression extend skipwhite skipempty nextgroup=@jsExpression
line 163: " These must occur here or they will be override by jsTernaryIf
line 164: syntax match   jsOperator           /?\.\ze\_D/
line 165: syntax match   jsOperator           /??/ skipwhite skipempty nextgroup=@jsExpression
line 166: 
line 167: syntax match   jsGenerator            contained /\*/ skipwhite skipempty nextgroup=jsFuncName,jsFuncArgs,jsFlowFunctionGroup
line 168: syntax match   jsFuncName             contained /\<\K\k*/ skipwhite skipempty nextgroup=jsFuncArgs,jsFlowFunctionGroup
line 169: syntax region  jsFuncArgExpression    contained matchgroup=jsFuncArgOperator start=/=/ end=/[,)]\@=/ contains=@jsExpression extend
line 170: syntax match   jsFuncArgCommas        contained ','
line 171: syntax keyword jsArguments            contained arguments
line 172: syntax keyword jsForAwait             contained await skipwhite skipempty nextgroup=jsParenRepeat
line 173: 
line 174: " Matches a single keyword argument with no parens
line 175: syntax match   jsArrowFuncArgs  /\<\K\k*\ze\s*=>/ skipwhite contains=jsFuncArgs skipwhite skipempty nextgroup=jsArrowFunction extend
line 176: " Matches a series of arguments surrounded in parens
line 177: syntax match   jsArrowFuncArgs  /([^()]*)\ze\s*=>/ contains=jsFuncArgs skipempty skipwhite nextgroup=jsArrowFunction extend
line 178: 
line 179: exe 'syntax match jsFunction /\<function\>/      skipwhite skipempty nextgroup=jsGenerator,jsFuncName,jsFuncArgs,jsFlowFunctionGroup skipwhite '.(exists('g:javascript_conceal_function') ? 'conceal cchar='.g:javascript_conceal_function : '')
line 179: syntax match jsFunction /\<function\>/      skipwhite skipempty nextgroup=jsGenerator,jsFuncName,jsFuncArgs,jsFlowFunctionGroup skipwhite 
line 180: exe 'syntax match jsArrowFunction /=>/           skipwhite skipempty nextgroup=jsFuncBlock,jsCommentFunction '.(exists('g:javascript_conceal_arrow_function') ? 'conceal cchar='.g:javascript_conceal_arrow_function : '')
line 180: syntax match jsArrowFunction /=>/           skipwhite skipempty nextgroup=jsFuncBlock,jsCommentFunction 
line 181: exe 'syntax match jsArrowFunction /()\ze\s*=>/   skipwhite skipempty nextgroup=jsArrowFunction '.(exists('g:javascript_conceal_noarg_arrow_function') ? 'conceal cchar='.g:javascript_conceal_noarg_arrow_function : '')
line 181: syntax match jsArrowFunction /()\ze\s*=>/   skipwhite skipempty nextgroup=jsArrowFunction 
line 182: exe 'syntax match jsArrowFunction /_\ze\s*=>/    skipwhite skipempty nextgroup=jsArrowFunction '.(exists('g:javascript_conceal_underscore_arrow_function') ? 'conceal cchar='.g:javascript_conceal_underscore_arrow_function : '')
line 182: syntax match jsArrowFunction /_\ze\s*=>/    skipwhite skipempty nextgroup=jsArrowFunction 
line 183: 
line 184: " Classes
line 185: syntax keyword jsClassKeyword           contained class
line 186: syntax keyword jsExtendsKeyword         contained extends skipwhite skipempty nextgroup=@jsExpression
line 187: syntax match   jsClassNoise             contained /\./
line 188: syntax match   jsClassFuncName          contained /\<\K\k*\ze\s*[(<]/ skipwhite skipempty nextgroup=jsFuncArgs,jsFlowClassFunctionGroup
line 189: syntax match   jsClassMethodType        contained /\<\%([gs]et\|static\)\ze\s\+\K\k*/ skipwhite skipempty nextgroup=jsAsyncKeyword,jsClassFuncName,jsClassProperty
line 190: syntax region  jsClassDefinition                  start=/\<class\>/ end=/\(\<extends\>\s\+\)\@<!{\@=/ contains=jsClassKeyword,jsExtendsKeyword,jsClassNoise,@jsExpression,jsFlowClassGroup skipwhite skipempty nextgroup=jsCommentClass,jsClassBlock,jsFlowClassGroup
line 191: syntax match   jsClassProperty          contained /\<\K\k*\ze\s*[=;]/ skipwhite skipempty nextgroup=jsClassValue,jsFlowClassDef
line 192: syntax region  jsClassValue             contained start=/=/ end=/\_[;}]\@=/ contains=@jsExpression
line 193: syntax region  jsClassPropertyComputed  contained matchgroup=jsBrackets start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsFuncArgs,jsClassValue extend
line 194: syntax region  jsClassStringKey         contained start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1\|$+  contains=jsSpecial extend skipwhite skipempty nextgroup=jsFuncArgs
line 195: 
line 196: " Destructuring
line 197: syntax match   jsDestructuringPropertyValue     contained /\k\+/
line 198: syntax match   jsDestructuringProperty          contained /\k\+\ze\s*=/ skipwhite skipempty nextgroup=jsDestructuringValue
line 199: syntax match   jsDestructuringAssignment        contained /\k\+\ze\s*:/ skipwhite skipempty nextgroup=jsDestructuringValueAssignment
line 200: syntax region  jsDestructuringValue             contained start=/=/ end=/[,}\]]\@=/ contains=@jsExpression extend
line 201: syntax region  jsDestructuringValueAssignment   contained start=/:/ end=/[,}=]\@=/ contains=jsDestructuringPropertyValue,jsDestructuringBlock,jsNoise,jsDestructuringNoise skipwhite skipempty nextgroup=jsDestructuringValue extend
line 202: syntax match   jsDestructuringNoise             contained /[,[\]]/
line 203: syntax region  jsDestructuringPropertyComputed  contained matchgroup=jsDestructuringBraces start=/\[/ end=/]/ contains=@jsExpression skipwhite skipempty nextgroup=jsDestructuringValue,jsDestructuringValueAssignment,jsDestructuringNoise extend fold
line 204: 
line 205: " Comments
line 206: syntax keyword jsCommentTodo    contained TODO FIXME XXX TBD NOTE
line 207: syntax region  jsComment        start=+//+ end=/$/ contains=jsCommentTodo,@Spell extend keepend
line 208: syntax region  jsComment        start=+/\*+  end=+\*/+ contains=jsCommentTodo,@Spell fold extend keepend
line 209: syntax region  jsEnvComment     start=/\%^#!/ end=/$/ display
line 210: 
line 211: " Specialized Comments - These are special comment regexes that are used in
line 212: " odd places that maintain the proper nextgroup functionality. It sucks we
line 213: " can't make jsComment a skippable type of group for nextgroup
line 214: syntax region  jsCommentFunction    contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsFuncBlock,jsFlowReturn extend keepend
line 215: syntax region  jsCommentFunction    contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsFuncBlock,jsFlowReturn fold extend keepend
line 216: syntax region  jsCommentClass       contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsClassBlock,jsFlowClassGroup extend keepend
line 217: syntax region  jsCommentClass       contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsClassBlock,jsFlowClassGroup fold extend keepend
line 218: syntax region  jsCommentIfElse      contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsIfElseBlock extend keepend
line 219: syntax region  jsCommentIfElse      contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsIfElseBlock fold extend keepend
line 220: syntax region  jsCommentRepeat      contained start=+//+ end=/$/    contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsRepeatBlock extend keepend
line 221: syntax region  jsCommentRepeat      contained start=+/\*+ end=+\*/+ contains=jsCommentTodo,@Spell skipwhite skipempty nextgroup=jsRepeatBlock fold extend keepend
line 222: 
line 223: " Decorators
line 224: syntax match   jsDecorator                    /^\s*@/ nextgroup=jsDecoratorFunction
line 225: syntax match   jsDecoratorFunction  contained /\h[a-zA-Z0-9_.]*/ nextgroup=jsParenDecorator
line 226: 
line 227: if exists("javascript_plugin_jsdoc")
line 228:   runtime extras/jsdoc.vim
Searching for "extras/jsdoc.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/extras/jsdoc.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 228: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'javascript', 'extras/jsdoc.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim', 'javascript', 'extras/jsdoc.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim

line 2:   finish
line 3: endif
line 4: 
line 5: "" syntax coloring for javadoc comments (HTML)
line 6: syntax region jsComment    matchgroup=jsComment start="/\*\s*"  end="\*/" contains=jsDocTags,jsCommentTodo,jsCvsTag,@jsHtml,@Spell fold
line 7: 
line 8: " tags containing a param
line 9: syntax match  jsDocTags         contained "@\(alias\|api\|augments\|borrows\|class\|constructs\|default\|defaultvalue\|emits\|exception\|exports\|extends\|fires\|kind\|link\|listens\|member\|member[oO]f\|mixes\|module\|name\|namespace\|requires\|template\|throws\|var\|variation\|version\)\>" skipwhite nextgroup=jsDocParam
line 10: " tags containing type and param
line 11: syntax match  jsDocTags         contained "@\(arg\|argument\|cfg\|param\|property\|prop\|typedef\)\>" skipwhite nextgroup=jsDocType
line 12: " tags containing type but no param
line 13: syntax match  jsDocTags         contained "@\(callback\|define\|enum\|external\|implements\|this\|type\|return\|returns\|yields\)\>" skipwhite nextgroup=jsDocTypeNoParam
line 14: " tags containing references
line 15: syntax match  jsDocTags         contained "@\(lends\|see\|tutorial\)\>" skipwhite nextgroup=jsDocSeeTag
line 16: " other tags (no extra syntax)
line 17: syntax match  jsDocTags         contained "@\(abstract\|access\|accessor\|async\|author\|classdesc\|constant\|const\|constructor\|copyright\|deprecated\|desc\|description\|dict\|event\|example\|file\|file[oO]verview\|final\|function\|global\|ignore\|inherit[dD]oc\|inner\|instance\|interface\|license\|localdoc\|method\|mixin\|nosideeffects\|override\|overview\|preserve\|private\|protected\|public\|readonly\|since\|static\|struct\|todo\|summary\|undocumented\|virtual\)\>"
line 18: 
line 19: syntax region jsDocType         contained matchgroup=jsDocTypeBrackets start="{" end="}" contains=jsDocTypeRecord oneline skipwhite nextgroup=jsDocParam
line 20: syntax match  jsDocType         contained "\%(#\|\"\|\w\|\.\|:\|\/\)\+" skipwhite nextgroup=jsDocParam
line 21: syntax region jsDocTypeRecord   contained start=/{/ end=/}/ contains=jsDocTypeRecord extend
line 22: syntax region jsDocTypeRecord   contained start=/\[/ end=/\]/ contains=jsDocTypeRecord extend
line 23: syntax region jsDocTypeNoParam  contained start="{" end="}" oneline
line 24: syntax match  jsDocTypeNoParam  contained "\%(#\|\"\|\w\|\.\|:\|\/\)\+"
line 25: syntax match  jsDocParam        contained "\%(#\|\$\|-\|'\|\"\|{.\{-}}\|\w\|\.\|:\|\/\|\[.\{-}]\|=\)\+"
line 26: syntax region jsDocSeeTag       contained matchgroup=jsDocSeeTag start="{" end="}" contains=jsDocTags
line 27: 
line 28: if version >= 508 || !exists("did_javascript_syn_inits")
line 29:   if version < 508
line 30:     let did_javascript_syn_inits = 1
line 31:     command -nargs=+ HiLink hi link <args>
line 32:   else
line 33:     command -nargs=+ HiLink hi def link <args>
line 34:   endif
line 35:   HiLink jsDocTags              Special
line 35: hi def link jsDocTags              Special
line 36:   HiLink jsDocSeeTag            Function
line 36: hi def link jsDocSeeTag            Function
line 37:   HiLink jsDocType              Type
line 37: hi def link jsDocType              Type
line 38:   HiLink jsDocTypeBrackets      jsDocType
line 38: hi def link jsDocTypeBrackets      jsDocType
line 39:   HiLink jsDocTypeRecord        jsDocType
line 39: hi def link jsDocTypeRecord        jsDocType
line 40:   HiLink jsDocTypeNoParam       Type
line 40: hi def link jsDocTypeNoParam       Type
line 41:   HiLink jsDocParam             Label
line 41: hi def link jsDocParam             Label
line 42:   delcommand HiLink
line 43: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/extras/jsdoc.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim
line 229:   " NGDoc requires JSDoc
line 230:   if exists("javascript_plugin_ngdoc")
line 231:     runtime extras/ngdoc.vim
line 232:   endif
line 233: endif
line 234: 
line 235: if exists("javascript_plugin_flow")
line 236:   runtime extras/flow.vim
line 237: endif
line 238: 
line 239: syntax cluster jsExpression  contains=jsBracket,jsParen,jsObject,jsTernaryIf,jsTaggedTemplate,jsTemplateString,jsString,jsRegexpString,jsNumber,jsFloat,jsOperator,jsOperatorKeyword,jsBooleanTrue,jsBooleanFalse,jsNull,jsFunction,jsArrowFunction,jsGlobalObjects,jsExceptions,jsFutureKeys,jsDomErrNo,jsDomNodeConsts,jsHtmlEvents,jsFuncCall,jsUndefined,jsNan,jsPrototype,jsBuiltins,jsNoise,jsClassDefinition,jsArrowFunction,jsArrowFuncArgs,jsParensError,jsComment,jsArguments,jsThis,jsSuper,jsDo,jsForAwait,jsAsyncKeyword,jsStatement,jsDot
line 240: syntax cluster jsAll         contains=@jsExpression,jsStorageClass,jsConditional,jsRepeat,jsReturn,jsException,jsTry,jsNoise,jsBlockLabel
line 241: 
line 242: " Define the default highlighting.
line 243: " For version 5.7 and earlier: only when not done already
line 244: " For version 5.8 and later: only when an item doesn't have highlighting yet
line 245: if version >= 508 || !exists("did_javascript_syn_inits")
line 246:   if version < 508
line 247:     let did_javascript_syn_inits = 1
line 248:     command -nargs=+ HiLink hi link <args>
line 249:   else
line 250:     command -nargs=+ HiLink hi def link <args>
line 251:   endif
line 252:   HiLink jsComment              Comment
line 252: hi def link jsComment              Comment
line 253:   HiLink jsEnvComment           PreProc
line 253: hi def link jsEnvComment           PreProc
line 254:   HiLink jsParensIfElse         jsParens
line 254: hi def link jsParensIfElse         jsParens
line 255:   HiLink jsParensRepeat         jsParens
line 255: hi def link jsParensRepeat         jsParens
line 256:   HiLink jsParensSwitch         jsParens
line 256: hi def link jsParensSwitch         jsParens
line 257:   HiLink jsParensCatch          jsParens
line 257: hi def link jsParensCatch          jsParens
line 258:   HiLink jsCommentTodo          Todo
line 258: hi def link jsCommentTodo          Todo
line 259:   HiLink jsString               String
line 259: hi def link jsString               String
line 260:   HiLink jsObjectKeyString      String
line 260: hi def link jsObjectKeyString      String
line 261:   HiLink jsTemplateString       String
line 261: hi def link jsTemplateString       String
line 262:   HiLink jsObjectStringKey      String
line 262: hi def link jsObjectStringKey      String
line 263:   HiLink jsClassStringKey       String
line 263: hi def link jsClassStringKey       String
line 264:   HiLink jsTaggedTemplate       StorageClass
line 264: hi def link jsTaggedTemplate       StorageClass
line 265:   HiLink jsTernaryIfOperator    Operator
line 265: hi def link jsTernaryIfOperator    Operator
line 266:   HiLink jsRegexpString         String
line 266: hi def link jsRegexpString         String
line 267:   HiLink jsRegexpBoundary       SpecialChar
line 267: hi def link jsRegexpBoundary       SpecialChar
line 268:   HiLink jsRegexpQuantifier     SpecialChar
line 268: hi def link jsRegexpQuantifier     SpecialChar
line 269:   HiLink jsRegexpOr             Conditional
line 269: hi def link jsRegexpOr             Conditional
line 270:   HiLink jsRegexpMod            SpecialChar
line 270: hi def link jsRegexpMod            SpecialChar
line 271:   HiLink jsRegexpBackRef        SpecialChar
line 271: hi def link jsRegexpBackRef        SpecialChar
line 272:   HiLink jsRegexpGroup          jsRegexpString
line 272: hi def link jsRegexpGroup          jsRegexpString
line 273:   HiLink jsRegexpCharClass      Character
line 273: hi def link jsRegexpCharClass      Character
line 274:   HiLink jsCharacter            Character
line 274: hi def link jsCharacter            Character
line 275:   HiLink jsPrototype            Special
line 275: hi def link jsPrototype            Special
line 276:   HiLink jsConditional          Conditional
line 276: hi def link jsConditional          Conditional
line 277:   HiLink jsBranch               Conditional
line 277: hi def link jsBranch               Conditional
line 278:   HiLink jsLabel                Label
line 278: hi def link jsLabel                Label
line 279:   HiLink jsReturn               Statement
line 279: hi def link jsReturn               Statement
line 280:   HiLink jsRepeat               Repeat
line 280: hi def link jsRepeat               Repeat
line 281:   HiLink jsDo                   Repeat
line 281: hi def link jsDo                   Repeat
line 282:   HiLink jsStatement            Statement
line 282: hi def link jsStatement            Statement
line 283:   HiLink jsException            Exception
line 283: hi def link jsException            Exception
line 284:   HiLink jsTry                  Exception
line 284: hi def link jsTry                  Exception
line 285:   HiLink jsFinally              Exception
line 285: hi def link jsFinally              Exception
line 286:   HiLink jsCatch                Exception
line 286: hi def link jsCatch                Exception
line 287:   HiLink jsAsyncKeyword         Keyword
line 287: hi def link jsAsyncKeyword         Keyword
line 288:   HiLink jsForAwait             Keyword
line 288: hi def link jsForAwait             Keyword
line 289:   HiLink jsArrowFunction        Type
line 289: hi def link jsArrowFunction        Type
line 290:   HiLink jsFunction             Type
line 290: hi def link jsFunction             Type
line 291:   HiLink jsGenerator            jsFunction
line 291: hi def link jsGenerator            jsFunction
line 292:   HiLink jsArrowFuncArgs        jsFuncArgs
line 292: hi def link jsArrowFuncArgs        jsFuncArgs
line 293:   HiLink jsFuncName             Function
line 293: hi def link jsFuncName             Function
line 294:   HiLink jsFuncCall             Function
line 294: hi def link jsFuncCall             Function
line 295:   HiLink jsClassFuncName        jsFuncName
line 295: hi def link jsClassFuncName        jsFuncName
line 296:   HiLink jsObjectFuncName       Function
line 296: hi def link jsObjectFuncName       Function
line 297:   HiLink jsArguments            Special
line 297: hi def link jsArguments            Special
line 298:   HiLink jsError                Error
line 298: hi def link jsError                Error
line 299:   HiLink jsParensError          Error
line 299: hi def link jsParensError          Error
line 300:   HiLink jsOperatorKeyword      jsOperator
line 300: hi def link jsOperatorKeyword      jsOperator
line 301:   HiLink jsOperator             Operator
line 301: hi def link jsOperator             Operator
line 302:   HiLink jsOf                   Operator
line 302: hi def link jsOf                   Operator
line 303:   HiLink jsStorageClass         StorageClass
line 303: hi def link jsStorageClass         StorageClass
line 304:   HiLink jsClassKeyword         Keyword
line 304: hi def link jsClassKeyword         Keyword
line 305:   HiLink jsExtendsKeyword       Keyword
line 305: hi def link jsExtendsKeyword       Keyword
line 306:   HiLink jsThis                 Special
line 306: hi def link jsThis                 Special
line 307:   HiLink jsSuper                Constant
line 307: hi def link jsSuper                Constant
line 308:   HiLink jsNan                  Number
line 308: hi def link jsNan                  Number
line 309:   HiLink jsNull                 Type
line 309: hi def link jsNull                 Type
line 310:   HiLink jsUndefined            Type
line 310: hi def link jsUndefined            Type
line 311:   HiLink jsNumber               Number
line 311: hi def link jsNumber               Number
line 312:   HiLink jsFloat                Float
line 312: hi def link jsFloat                Float
line 313:   HiLink jsBooleanTrue          Boolean
line 313: hi def link jsBooleanTrue          Boolean
line 314:   HiLink jsBooleanFalse         Boolean
line 314: hi def link jsBooleanFalse         Boolean
line 315:   HiLink jsObjectColon          jsNoise
line 315: hi def link jsObjectColon          jsNoise
line 316:   HiLink jsNoise                Noise
line 316: hi def link jsNoise                Noise
line 317:   HiLink jsDot                  Noise
line 317: hi def link jsDot                  Noise
line 318:   HiLink jsBrackets             Noise
line 318: hi def link jsBrackets             Noise
line 319:   HiLink jsParens               Noise
line 319: hi def link jsParens               Noise
line 320:   HiLink jsBraces               Noise
line 320: hi def link jsBraces               Noise
line 321:   HiLink jsFuncBraces           Noise
line 321: hi def link jsFuncBraces           Noise
line 322:   HiLink jsFuncParens           Noise
line 322: hi def link jsFuncParens           Noise
line 323:   HiLink jsClassBraces          Noise
line 323: hi def link jsClassBraces          Noise
line 324:   HiLink jsClassNoise           Noise
line 324: hi def link jsClassNoise           Noise
line 325:   HiLink jsIfElseBraces         Noise
line 325: hi def link jsIfElseBraces         Noise
line 326:   HiLink jsTryCatchBraces       Noise
line 326: hi def link jsTryCatchBraces       Noise
line 327:   HiLink jsModuleBraces         Noise
line 327: hi def link jsModuleBraces         Noise
line 328:   HiLink jsObjectBraces         Noise
line 328: hi def link jsObjectBraces         Noise
line 329:   HiLink jsObjectSeparator      Noise
line 329: hi def link jsObjectSeparator      Noise
line 330:   HiLink jsFinallyBraces        Noise
line 330: hi def link jsFinallyBraces        Noise
line 331:   HiLink jsRepeatBraces         Noise
line 331: hi def link jsRepeatBraces         Noise
line 332:   HiLink jsSwitchBraces         Noise
line 332: hi def link jsSwitchBraces         Noise
line 333:   HiLink jsSpecial              Special
line 333: hi def link jsSpecial              Special
line 334:   HiLink jsTemplateBraces       Noise
line 334: hi def link jsTemplateBraces       Noise
line 335:   HiLink jsGlobalObjects        Constant
line 335: hi def link jsGlobalObjects        Constant
line 336:   HiLink jsGlobalNodeObjects    Constant
line 336: hi def link jsGlobalNodeObjects    Constant
line 337:   HiLink jsExceptions           Constant
line 337: hi def link jsExceptions           Constant
line 338:   HiLink jsBuiltins             Constant
line 338: hi def link jsBuiltins             Constant
line 339:   HiLink jsImport               Include
line 339: hi def link jsImport               Include
line 340:   HiLink jsExport               Include
line 340: hi def link jsExport               Include
line 341:   HiLink jsExportDefault        StorageClass
line 341: hi def link jsExportDefault        StorageClass
line 342:   HiLink jsExportDefaultGroup   jsExportDefault
line 342: hi def link jsExportDefaultGroup   jsExportDefault
line 343:   HiLink jsModuleAs             Include
line 343: hi def link jsModuleAs             Include
line 344:   HiLink jsModuleComma          jsNoise
line 344: hi def link jsModuleComma          jsNoise
line 345:   HiLink jsModuleAsterisk       Noise
line 345: hi def link jsModuleAsterisk       Noise
line 346:   HiLink jsFrom                 Include
line 346: hi def link jsFrom                 Include
line 347:   HiLink jsDecorator            Special
line 347: hi def link jsDecorator            Special
line 348:   HiLink jsDecoratorFunction    Function
line 348: hi def link jsDecoratorFunction    Function
line 349:   HiLink jsParensDecorator      jsParens
line 349: hi def link jsParensDecorator      jsParens
line 350:   HiLink jsFuncArgOperator      jsFuncArgs
line 350: hi def link jsFuncArgOperator      jsFuncArgs
line 351:   HiLink jsClassProperty        jsObjectKey
line 351: hi def link jsClassProperty        jsObjectKey
line 352:   HiLink jsObjectShorthandProp  jsObjectKey
line 352: hi def link jsObjectShorthandProp  jsObjectKey
line 353:   HiLink jsSpreadOperator       Operator
line 353: hi def link jsSpreadOperator       Operator
line 354:   HiLink jsRestOperator         Operator
line 354: hi def link jsRestOperator         Operator
line 355:   HiLink jsRestExpression       jsFuncArgs
line 355: hi def link jsRestExpression       jsFuncArgs
line 356:   HiLink jsSwitchColon          Noise
line 356: hi def link jsSwitchColon          Noise
line 357:   HiLink jsClassMethodType      Type
line 357: hi def link jsClassMethodType      Type
line 358:   HiLink jsObjectMethodType     Type
line 358: hi def link jsObjectMethodType     Type
line 359:   HiLink jsClassDefinition      jsFuncName
line 359: hi def link jsClassDefinition      jsFuncName
line 360:   HiLink jsBlockLabel           Identifier
line 360: hi def link jsBlockLabel           Identifier
line 361:   HiLink jsBlockLabelKey        jsBlockLabel
line 361: hi def link jsBlockLabelKey        jsBlockLabel
line 362: 
line 363:   HiLink jsDestructuringBraces     Noise
line 363: hi def link jsDestructuringBraces     Noise
line 364:   HiLink jsDestructuringProperty   jsFuncArgs
line 364: hi def link jsDestructuringProperty   jsFuncArgs
line 365:   HiLink jsDestructuringAssignment jsObjectKey
line 365: hi def link jsDestructuringAssignment jsObjectKey
line 366:   HiLink jsDestructuringNoise      Noise
line 366: hi def link jsDestructuringNoise      Noise
line 367: 
line 368:   HiLink jsCommentFunction      jsComment
line 368: hi def link jsCommentFunction      jsComment
line 369:   HiLink jsCommentClass         jsComment
line 369: hi def link jsCommentClass         jsComment
line 370:   HiLink jsCommentIfElse        jsComment
line 370: hi def link jsCommentIfElse        jsComment
line 371:   HiLink jsCommentRepeat        jsComment
line 371: hi def link jsCommentRepeat        jsComment
line 372: 
line 373:   HiLink jsDomErrNo             Constant
line 373: hi def link jsDomErrNo             Constant
line 374:   HiLink jsDomNodeConsts        Constant
line 374: hi def link jsDomNodeConsts        Constant
line 375:   HiLink jsDomElemAttrs         Label
line 375: hi def link jsDomElemAttrs         Label
line 376:   HiLink jsDomElemFuncs         PreProc
line 376: hi def link jsDomElemFuncs         PreProc
line 377: 
line 378:   HiLink jsHtmlEvents           Special
line 378: hi def link jsHtmlEvents           Special
line 379:   HiLink jsHtmlElemAttrs        Label
line 379: hi def link jsHtmlElemAttrs        Label
line 380:   HiLink jsHtmlElemFuncs        PreProc
line 380: hi def link jsHtmlElemFuncs        PreProc
line 381: 
line 382:   HiLink jsCssStyles            Label
line 382: hi def link jsCssStyles            Label
line 383: 
line 384:   delcommand HiLink
line 385: endif
line 386: 
line 387: " Define the htmlJavaScript for HTML syntax html.vim
line 388: syntax cluster  htmlJavaScript       contains=@jsAll,jsImport,jsExport
line 389: syntax cluster  javaScriptExpression contains=@jsAll
line 390: 
line 391: " Vim's default html.vim highlights all javascript as 'Special'
line 392: hi! def link javaScript              NONE
line 393: 
line 394: let b:current_syntax = "javascript"
line 395: if main_syntax == 'javascript'
line 396:   unlet main_syntax
line 397: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim"
line 1: " Vim syntax file
line 2: " Language:^IJavaScript
line 3: " Maintainer:^IClaudio Fleiner <claudio@fleiner.com>
line 4: " Updaters:^IScott Shattuck (ss) <ss@technicalpursuit.com>
line 5: " URL:^I^Ihttp://www.fleiner.com/vim/syntax/javascript.vim
line 6: " Changes:^I(ss) added keywords, reserved words, and other identifiers
line 7: "^I^I(ss) repaired several quoting and grouping glitches
line 8: "^I^I(ss) fixed regex parsing issue with multiple qualifiers [gi]
line 9: "^I^I(ss) additional factoring of keywords, globals, and members
line 10: " Last Change:^I2021 Mar 30
line 11: " ^I^I2013 Jun 12: adjusted javaScriptRegexpString (Kevin Locke)
line 12: " ^I^I2018 Apr 14: adjusted javaScriptRegexpString (LongJohnCoder)
line 13: 
line 14: " tuning parameters:
line 15: " unlet javaScript_fold
line 16: 
line 17: if !exists("main_syntax")
line 18:   " quit when a syntax file was already loaded
line 19:   if exists("b:current_syntax")
line 20:     finish
line 21:   endif
line 22:   let main_syntax = 'javascript'
line 23: elseif exists("b:current_syntax") && b:current_syntax == "javascript"
line 24:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 207: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/javascript.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugg...m-polyglot/after/syntax/javascript.vim', 'jsx', 'after/syntax/javascript.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim

line 2:   finish
line 3: endif
line 4: 
line 5: if get(g:, 'vim_jsx_pretty_disable_js', 0)
line 6:   finish
line 7: endif
line 8: 
line 9: source <sfile>:h/jsx.vim
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 9: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/jsx.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim', 'jsx', 'after/syntax/jsx.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim

line 2:   finish
line 3: endif
line 4: 
line 5: """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
line 6: " Vim syntax file
line 7: "
line 8: " Language: javascript.jsx
line 9: " Maintainer: MaxMellon <maxmellon1994@gmail.com>
line 10: "
line 11: """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
line 12: 
line 13: let s:jsx_cpo = &cpo
line 14: set cpo&vim
line 15: 
line 16: syntax case match
line 17: 
line 18: if exists('b:current_syntax')
line 19:   let s:current_syntax = b:current_syntax
line 20:   unlet b:current_syntax
line 21: endif
line 22: 
line 23: if exists('s:current_syntax')
line 24:   let b:current_syntax = s:current_syntax
line 25: endif
line 26: 
line 27: if hlexists("jsDebugger") || hlexists("jsNoise")    " yuezk/vim-js or pangloss/vim-javascript
line 28:   syntax cluster jsExpression add=jsxRegion
line 29: elseif hlexists("javascriptOpSymbols")    " othree/yajs.vim
line 30:   " refine the javascript line comment
line 31:   syntax region javascriptLineComment start=+//+ end=/$/ contains=@Spell,javascriptCommentTodo extend keepend
line 32:   syntax cluster javascriptValue add=jsxRegion
line 33:   syntax cluster javascriptNoReserved add=jsxElement,jsxTag
line 34: else    " build-in javascript syntax
line 35:   " refine the javascript line comment
line 36:   syntax region javaScriptLineComment start=+//+ end=/$/ contains=@Spell,javascriptCommentTodo extend keepend
line 37: 
line 38:   " refine the template string syntax
line 39:   syntax region javaScriptEmbed matchgroup=javaScriptEmbedBraces start=+\${+ end=+}+ contained contains=@javaScriptEmbededExpr
line 40: 
line 41:   " add a javaScriptBlock group for build-in syntax
line 42:   syntax region javaScriptBlock matchgroup=javaScriptBraces start="{" end="}" contained extend contains=javaScriptBlock,@javaScriptEmbededExpr,javaScript.* fold
line 50: 
line 51:   syntax cluster javaScriptEmbededExpr add=jsxRegion,javaScript.*
line 52: endif
line 53: 
line 54: runtime syntax/jsx_pretty.vim
Searching for "syntax/jsx_pretty.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/jsx_pretty.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/jsx_pretty.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/jsx_pretty.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 54: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'jsx', 'after/syntax/jsx_pretty.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugg...m-polyglot/after/syntax/jsx_pretty.vim', 'jsx', 'after/syntax/jsx_pretty.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim

line 2:   finish
line 3: endif
line 4: 
line 5: let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)
line 6: 
line 7: " detect jsx region
line 8: syntax region jsxRegion start=+\%(\%(\_[([,?:=+\-*/>{}]\|<\s\+\|&&\|||\|=>\|\<return\|\<default\|\<await\|\<yield\)\_s*\)\@<=<\_s*\%(>\|\z(\%(script\|\s*\<T\>\)\@!\<[_$A-Za-z][-:._$A-Za-z0-9]*\>\)\%(\_s*\%([-+*)\]}&|?,]\|/\%([/*]\|\_s*>\)\@!\)\)\@!\)+ end=++ contains=jsxElement
line 12: 
line 13: " <tag id="sample">
line 14: " ~~~~~~~~~~~~~~~~~
line 15: " and self close tag
line 16: " <tag id="sample"   />
line 17: " ~~~~~~~~~~~~~~~~~~~
line 18: syntax region jsxTag start=+<+ matchgroup=jsxOpenPunct end=+>+ matchgroup=NONE end=+\%(/\_s*>\)\@=+ contained contains=jsxOpenTag,jsxAttrib,jsxExpressionBlock,jsxSpreadOperator,jsComment,@javascriptComments,javaScriptLineComment,javaScriptComment,typescriptLineComment,typescriptComment keepend extend skipwhite skipempty nextgroup=jsxCloseString
line 31: 
line 32: " <tag></tag>
line 33: " ~~~~~~~~~~~
line 34: " and fragment
line 35: " <></>
line 36: " ~~~~~
line 37: " and self close tag
line 38: " <tag />
line 39: " ~~~~~~~
line 40: syntax region jsxElement start=+<\_s*\%(>\|\${\|\z(\<[-:._$A-Za-z0-9]\+\>\)\)+ end=+/\_s*>+ end=+<\_s*/\_s*\z1\_s*>+ contains=jsxElement,jsxTag,jsxExpressionBlock,jsxComment,jsxCloseTag,@Spell keepend extend contained fold
line 49: 
line 50: " <tag key={this.props.key}>
line 51: " ~~~~
line 52: " and fragment start tag
line 53: " <>
line 54: " ~~
line 55: exe 'syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<+ end=+>+ matchgroup=NONE end=+\>+ contained contains=jsxTagName nextgroup=jsxAttrib skipwhite skipempty ' .(s:highlight_close_tag ? 'transparent' : '')
line 55: syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<+ end=+>+ matchgroup=NONE end=+\>+ contained contains=jsxTagName nextgroup=jsxAttrib skipwhite skipempty 
line 67: 
line 68: 
line 69: " <tag key={this.props.key}>
line 70: "          ~~~~~~~~~~~~~~~~
line 71: syntax region jsxExpressionBlock matchgroup=jsxBraces start=+{+ end=+}+ contained extend contains=@jsExpression,jsSpreadExpression,@javascriptExpression,javascriptSpreadOp,@javaScriptEmbededExpr,@typescriptExpression,typescriptObjectSpread,jsComment,@javascriptComments,javaScriptLineComment,javaScriptComment,typescriptLineComment,typescriptComment
line 78: 
line 79: " <foo.bar>
line 80: "     ~
line 81: syntax match jsxDot +\.+ contained
line 82: 
line 83: " <foo:bar>
line 84: "     ~
line 85: syntax match jsxNamespace +:+ contained
line 86: 
line 87: " <tag id="sample">
line 88: "        ~
line 89: syntax match jsxEqual +=+ contained skipwhite skipempty nextgroup=jsxString,jsxExpressionBlock,jsxRegion
line 90: 
line 91: " <tag />
line 92: "      ~~
line 93: syntax match jsxCloseString +/\_s*>+ contained
line 94: 
line 95: " </tag>
line 96: " ~~~~~~
line 97: " and fragment close tag
line 98: " </>
line 99: " ~~~
line 100: syntax region jsxCloseTag matchgroup=jsxClosePunct start=+<\_s*/+ end=+>+ contained contains=jsxTagName
line 106: 
line 107: " <tag key={this.props.key}>
line 108: "      ~~~
line 109: syntax match jsxAttrib +\<[_$A-Za-z][-:_$A-Za-z0-9]*\>+ contained nextgroup=jsxEqual skipwhite skipempty contains=jsxAttribKeyword,jsxNamespace
line 116: 
line 117: " <MyComponent ...>
line 118: "  ~~~~~~~~~~~
line 119: " NOT
line 120: " <someCamel ...>
line 121: "      ~~~~~
line 122: exe 'syntax match jsxComponentName +\<[_$]\?[A-Z][-_$A-Za-z0-9]*\>+ contained ' .(s:highlight_close_tag ? 'transparent' : '')
line 122: syntax match jsxComponentName +\<[_$]\?[A-Z][-_$A-Za-z0-9]*\>+ contained 
line 126: 
line 127: " <tag key={this.props.key}>
line 128: "  ~~~
line 129: exe 'syntax match jsxTagName +\<[-:._$A-Za-z0-9]\+\>+ contained contains=jsxComponentName,jsxDot,jsxNamespace nextgroup=jsxAttrib skipempty skipwhite ' .(s:highlight_close_tag ? 'transparent' : '')
line 129: syntax match jsxTagName +\<[-:._$A-Za-z0-9]\+\>+ contained contains=jsxComponentName,jsxDot,jsxNamespace nextgroup=jsxAttrib skipempty skipwhite 
line 137: 
line 138: " <tag id="sample">
line 139: "         ~~~~~~~~
line 140: " and
line 141: " <tag id='sample'>
line 142: "         ~~~~~~~~
line 143: syntax region jsxString start=+\z(["']\)+  skip=+\\\\\|\\\z1\|\\\n+  end=+\z1+ extend contained contains=@Spell
line 144: 
line 145: let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])
line 146: let s:enable_tagged_jsx = !empty(s:tags)
line 147: 
line 148: " add support to JSX inside the tagged template string
line 149: " https://github.com/developit/htm
line 150: if s:enable_tagged_jsx
line 151:   exe 'syntax match jsxRegion +\%(' . join(s:tags, '\|') . '\)\%(\_s*`\)\@=+ contains=jsTemplateStringTag,jsTaggedTemplate,javascriptTagRef skipwhite skipempty nextgroup=jsxTaggedRegion'
line 151: syntax match jsxRegion +\%(html\|jsx\)\%(\_s*`\)\@=+ contains=jsTemplateStringTag,jsTaggedTemplate,javascriptTagRef skipwhite skipempty nextgroup=jsxTaggedRegion
line 152: 
line 153:   syntax region jsxTaggedRegion matchgroup=jsxBackticks start=+`+ end=+`+ extend contained contains=jsxElement,jsxExpressionBlock transparent
line 161: 
line 162:   syntax region jsxExpressionBlock matchgroup=jsxBraces start=+\${+ end=+}+ extend contained contains=@jsExpression,jsSpreadExpression,@javascriptExpression,javascriptSpreadOp,@javaScriptEmbededExpr,@typescriptExpression,typescriptObjectSpread
line 169: 
line 170:   syntax region jsxOpenTag matchgroup=jsxOpenPunct start=+<\%(\${\)\@=+ matchgroup=NONE end=+}\@1<=+ contained contains=jsxExpressionBlock skipwhite skipempty nextgroup=jsxAttrib,jsxSpreadOperator
line 180: 
line 181:   syntax keyword jsxAttribKeyword class contained
line 182: 
line 183:   syntax match jsxSpreadOperator +\.\.\.+ contained nextgroup=jsxExpressionBlock skipwhite
line 184: 
line 185:   syntax match jsxCloseTag +<//>+ contained
line 186: 
line 187:   syntax match jsxComment +<!--\_.\{-}-->+
line 188: endif
line 189: 
line 190: " Highlight the tag name
line 191: highlight def link jsxTag Function
line 192: highlight def link jsxTagName Identifier
line 193: highlight def link jsxComponentName Function
line 194: 
line 195: highlight def link jsxAttrib Type
line 196: highlight def link jsxAttribKeyword jsxAttrib
line 197: highlight def link jsxString String
line 198: highlight def link jsxComment Comment
line 199: 
line 200: highlight def link jsxDot Operator
line 201: highlight def link jsxNamespace Operator
line 202: highlight def link jsxEqual Operator
line 203: highlight def link jsxSpreadOperator Operator
line 204: highlight def link jsxBraces Special
line 205: 
line 206: if s:highlight_close_tag
line 207:   highlight def link jsxCloseString Identifier
line 208:   highlight def link jsxOpenPunct jsxTag
line 209: else
line 210:   " Highlight the jsxCloseString (i.e. />), jsxPunct (i.e. <,>) and jsxCloseTag (i.e. <//>)
line 211:   highlight def link jsxCloseString Comment
line 212:   highlight def link jsxOpenPunct jsxPunct
line 213: endif
line 214: 
line 215: highlight def link jsxPunct jsxCloseString
line 216: highlight def link jsxClosePunct jsxPunct
line 217: highlight def link jsxCloseTag jsxCloseString
line 218: 
line 219: let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)
line 220: 
line 221: if s:vim_jsx_pretty_colorful_config == 1
line 222:   highlight def link jsObjectKey Label
line 223:   highlight def link jsArrowFuncArgs Type
line 224:   highlight def link jsFuncArgs Type
line 225: endif
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx_pretty.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim
line 55: 
line 56: let b:current_syntax = 'javascript.jsx'
line 57: 
line 58: let &cpo = s:jsx_cpo
line 59: unlet s:jsx_cpo
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/jsx.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/javascript.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/javascript.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/javascript.vim"
line 208:   unlet b:current_syntax
line 209:   syn region  javaScript start=+<script\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlJavaScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
line 210:   syn region  htmlScriptTag     contained start=+<script+ end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent
line 211:   hi def link htmlScriptTag htmlTag
line 212: 
line 213:   " html events (i.e. arguments that include javascript commands)
line 214:   if exists("html_extended_events")
line 215:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ contains=htmlEventSQ
line 216:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ contains=htmlEventDQ
line 217:   else
line 218:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ keepend contains=htmlEventSQ
line 219:     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ keepend contains=htmlEventDQ
line 220:   endif
line 221:   syn region htmlEventSQ        contained start=+'+ms=s+1 end=+'+me=s-1 contains=@htmlJavaScript
line 222:   syn region htmlEventDQ        contained start=+"+ms=s+1 end=+"+me=s-1 contains=@htmlJavaScript
line 223:   hi def link htmlEventSQ htmlEvent
line 224:   hi def link htmlEventDQ htmlEvent
line 225: 
line 226:   " a javascript expression is used as an arg value
line 227:   syn region  javaScriptExpression contained start=+&{+ keepend end=+};+ contains=@htmlJavaScript,@htmlPreproc
line 228: endif
line 229: 
line 230: if main_syntax != 'java' || exists("java_vb")
line 231:   " VB SCRIPT
line 232:   syn include @htmlVbScript syntax/vb.vim
Searching for "syntax/vb.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/vb.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 232: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'visual-basic', 'syntax/vb.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim', 'visual-basic', 'syntax/vb.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     Visual Basic
line 7: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 8: " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
line 9: " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
line 10: "       (tried multiple times to contact, but email bounced)
line 11: " Last Change:
line 12: "   2021 Nov 26  Incorporated additions from Doug Kearns
line 13: "   2005 May 25  Synched with work by Thomas Barthel
line 14: "   2004 May 30  Added a few keywords
line 15: 
line 16: " This was thrown together after seeing numerous requests on the
line 17: " VIM and VIM-DEV mailing lists.  It is by no means complete.
line 18: " Send comments, suggestions and requests to the maintainer.
line 19: 
line 20: " quit when a syntax file was already loaded
line 21: if exists("b:current_syntax")
line 22:         finish
line 23: endif
line 24: 
line 25: " VB is case insensitive
line 26: syn case ignore
line 27: 
line 28: syn keyword vbConditional If Then ElseIf Else Select Case
line 29: 
line 30: syn keyword vbOperator AddressOf And ByRef ByVal Eqv Imp In
line 31: syn keyword vbOperator Is Like Mod Not Or To Xor
line 32: 
line 33: syn match vbOperator "[()+.,\-/*=&]"
line 34: syn match vbOperator "[<>]=\="
line 35: syn match vbOperator "<>"
line 36: syn match vbOperator "\s\+_$"
line 37: 
line 38: syn keyword vbBoolean  True False
line 39: syn keyword vbConst Null Nothing
line 40: 
line 41: syn keyword vbRepeat Do For ForEach Loop Next
line 42: syn keyword vbRepeat Step To Until Wend While
line 43: 
line 44: syn keyword vbEvents AccessKeyPress Activate ActiveRowChanged
line 45: syn keyword vbEvents AfterAddFile AfterChangeFileName AfterCloseFile
line 46: syn keyword vbEvents AfterColEdit AfterColUpdate AfterDelete
line 47: syn keyword vbEvents AfterInsert AfterLabelEdit AfterRemoveFile
line 48: syn keyword vbEvents AfterUpdate AfterWriteFile AmbientChanged
line 49: syn keyword vbEvents ApplyChanges Associate AsyncProgress
line 50: syn keyword vbEvents AsyncReadComplete AsyncReadProgress AxisActivated
line 51: syn keyword vbEvents AxisLabelActivated AxisLabelSelected
line 52: syn keyword vbEvents AxisLabelUpdated AxisSelected AxisTitleActivated
line 53: syn keyword vbEvents AxisTitleSelected AxisTitleUpdated AxisUpdated
line 54: syn keyword vbEvents BeforeClick BeforeColEdit BeforeColUpdate
line 55: syn keyword vbEvents BeforeConnect BeforeDelete BeforeInsert
line 56: syn keyword vbEvents BeforeLabelEdit BeforeLoadFile BeforeUpdate
line 57: syn keyword vbEvents BeginRequest BeginTrans ButtonClick
line 58: syn keyword vbEvents ButtonCompleted ButtonDropDown ButtonGotFocus
line 59: syn keyword vbEvents ButtonLostFocus CallbackKeyDown Change Changed
line 60: syn keyword vbEvents ChartActivated ChartSelected ChartUpdated Click
line 61: syn keyword vbEvents Close CloseQuery CloseUp ColEdit ColResize
line 62: syn keyword vbEvents Collapse ColumnClick CommitTrans Compare
line 63: syn keyword vbEvents ConfigChageCancelled ConfigChanged
line 64: syn keyword vbEvents ConfigChangedCancelled Connect ConnectionRequest
line 65: syn keyword vbEvents CurrentRecordChanged DECommandAdded
line 66: syn keyword vbEvents DECommandPropertyChanged DECommandRemoved
line 67: syn keyword vbEvents DEConnectionAdded DEConnectionPropertyChanged
line 68: syn keyword vbEvents DEConnectionRemoved DataArrival DataChanged
line 69: syn keyword vbEvents DataUpdated DateClicked DblClick Deactivate
line 70: syn keyword vbEvents DevModeChange DeviceArrival DeviceOtherEvent
line 71: syn keyword vbEvents DeviceQueryRemove DeviceQueryRemoveFailed
line 72: syn keyword vbEvents DeviceRemoveComplete DeviceRemovePending
line 73: syn keyword vbEvents Disconnect DisplayChanged Dissociate
line 74: syn keyword vbEvents DoGetNewFileName Done DonePainting DownClick
line 75: syn keyword vbEvents DragDrop DragOver DropDown EditProperty EditQuery
line 76: syn keyword vbEvents EndRequest EnterCell EnterFocus ExitFocus Expand
line 77: syn keyword vbEvents FontChanged FootnoteActivated FootnoteSelected
line 78: syn keyword vbEvents FootnoteUpdated Format FormatSize GotFocus
line 79: syn keyword vbEvents HeadClick HeightChanged Hide InfoMessage
line 80: syn keyword vbEvents IniProperties InitProperties Initialize
line 81: syn keyword vbEvents ItemActivated ItemAdded ItemCheck ItemClick
line 82: syn keyword vbEvents ItemReloaded ItemRemoved ItemRenamed
line 83: syn keyword vbEvents ItemSeletected KeyDown KeyPress KeyUp LeaveCell
line 84: syn keyword vbEvents LegendActivated LegendSelected LegendUpdated
line 85: syn keyword vbEvents LinkClose LinkError LinkExecute LinkNotify
line 86: syn keyword vbEvents LinkOpen Load LostFocus MouseDown MouseMove
line 87: syn keyword vbEvents MouseUp NodeCheck NodeClick OLECompleteDrag
line 88: syn keyword vbEvents OLEDragDrop OLEDragOver OLEGiveFeedback OLESetData
line 89: syn keyword vbEvents OLEStartDrag ObjectEvent ObjectMove OnAddNew
line 90: syn keyword vbEvents OnComm Paint PanelClick PanelDblClick PathChange
line 91: syn keyword vbEvents PatternChange PlotActivated PlotSelected
line 92: syn keyword vbEvents PlotUpdated PointActivated PointLabelActivated
line 93: syn keyword vbEvents PointLabelSelected PointLabelUpdated PointSelected
line 94: syn keyword vbEvents PointUpdated PowerQuerySuspend PowerResume
line 95: syn keyword vbEvents PowerStatusChanged PowerSuspend ProcessTag
line 96: syn keyword vbEvents ProcessingTimeout QueryChangeConfig QueryClose
line 97: syn keyword vbEvents QueryComplete QueryCompleted QueryTimeout
line 98: syn keyword vbEvents QueryUnload ReadProperties RepeatedControlLoaded
line 99: syn keyword vbEvents RepeatedControlUnloaded Reposition
line 100: syn keyword vbEvents RequestChangeFileName RequestWriteFile Resize
line 101: syn keyword vbEvents ResultsChanged RetainedProject RollbackTrans
line 102: syn keyword vbEvents RowColChange RowCurrencyChange RowResize
line 103: syn keyword vbEvents RowStatusChanged Scroll SelChange SelectionChanged
line 104: syn keyword vbEvents SendComplete SendProgress SeriesActivated
line 105: syn keyword vbEvents SeriesSelected SeriesUpdated SettingChanged Show
line 106: syn keyword vbEvents SplitChange Start StateChanged StatusUpdate
line 107: syn keyword vbEvents SysColorsChanged Terminate TimeChanged Timer
line 108: syn keyword vbEvents TitleActivated TitleSelected TitleUpdated
line 109: syn keyword vbEvents UnboundAddData UnboundDeleteRow
line 110: syn keyword vbEvents UnboundGetRelativeBookmark UnboundReadData
line 111: syn keyword vbEvents UnboundWriteData Unformat Unload UpClick Updated
line 112: syn keyword vbEvents UserEvent Validate ValidationError
line 113: syn keyword vbEvents VisibleRecordChanged WillAssociate WillChangeData
line 114: syn keyword vbEvents WillDissociate WillExecute WillUpdateRows
line 115: syn keyword vbEvents WriteProperties
line 116: 
line 117: 
line 118: syn keyword vbFunction Abs Array Asc AscB AscW Atn Avg BOF CBool CByte
line 119: syn keyword vbFunction CCur CDate CDbl CInt CLng CSng CStr CVDate CVErr
line 120: syn keyword vbFunction CVar CallByName Cdec Choose Chr ChrB ChrW Command
line 121: syn keyword vbFunction Cos Count CreateObject CurDir DDB Date DateAdd
line 122: syn keyword vbFunction DateDiff DatePart DateSerial DateValue Day Dir
line 123: syn keyword vbFunction DoEvents EOF Environ Error Exp FV FileAttr
line 124: syn keyword vbFunction FileDateTime FileLen FilterFix Fix Format
line 125: syn keyword vbFunction FormatCurrency FormatDateTime FormatNumber
line 126: syn keyword vbFunction FormatPercent FreeFile GetAllStrings GetAttr
line 127: syn keyword vbFunction GetAutoServerSettings GetObject GetSetting Hex
line 128: syn keyword vbFunction Hour IIf IMEStatus IPmt InStr Input InputB
line 129: syn keyword vbFunction InputBox InstrB Int IsArray IsDate IsEmpty IsError
line 130: syn keyword vbFunction IsMissing IsNull IsNumeric IsObject Join LBound
line 131: syn keyword vbFunction LCase LOF LTrim Left LeftB Len LenB LoadPicture
line 132: syn keyword vbFunction LoadResData LoadResPicture LoadResString Loc Log
line 133: syn keyword vbFunction MIRR Max Mid MidB Min Minute Month MonthName
line 134: syn keyword vbFunction MsgBox NPV NPer Now Oct PPmt PV Partition Pmt
line 135: syn keyword vbFunction QBColor RGB RTrim Rate Replace Right RightB Rnd
line 136: syn keyword vbFunction Round SLN SYD Second Seek Sgn Shell Sin Space Spc
line 137: syn keyword vbFunction Split Sqr StDev StDevP Str StrComp StrConv
line 138: syn keyword vbFunction StrReverse String Sum Switch Tab Tan Time
line 139: syn keyword vbFunction TimeSerial TimeValue Timer Trim TypeName UBound
line 140: syn keyword vbFunction UCase Val Var VarP VarType Weekday WeekdayName
line 141: syn keyword vbFunction Year
line 142: 
line 143: syn keyword vbMethods AboutBox Accept Activate Add AddCustom AddFile
line 144: syn keyword vbMethods AddFromFile AddFromGuid AddFromString
line 145: syn keyword vbMethods AddFromTemplate AddItem AddNew AddToAddInToolbar
line 146: syn keyword vbMethods AddToolboxProgID Append AppendAppendChunk
line 147: syn keyword vbMethods AppendChunk Arrange Assert AsyncRead BatchUpdate
line 148: syn keyword vbMethods BeginQueryEdit BeginTrans Bind BuildPath
line 149: syn keyword vbMethods CanPropertyChange Cancel CancelAsyncRead
line 150: syn keyword vbMethods CancelBatch CancelUpdate CaptureImage CellText
line 151: syn keyword vbMethods CellValue Circle Clear ClearFields ClearSel
line 152: syn keyword vbMethods ClearSelCols ClearStructure Clone Close Cls
line 153: syn keyword vbMethods ColContaining CollapseAll ColumnSize CommitTrans
line 154: syn keyword vbMethods CompactDatabase Compose Connect Copy CopyFile
line 155: syn keyword vbMethods CopyFolder CopyQueryDef Count CreateDatabase
line 156: syn keyword vbMethods CreateDragImage CreateEmbed CreateField
line 157: syn keyword vbMethods CreateFolder CreateGroup CreateIndex CreateLink
line 158: syn keyword vbMethods CreatePreparedStatement CreatePropery CreateQuery
line 159: syn keyword vbMethods CreateQueryDef CreateRelation CreateTableDef
line 160: syn keyword vbMethods CreateTextFile CreateToolWindow CreateUser
line 161: syn keyword vbMethods CreateWorkspace Customize Cut Delete
line 162: syn keyword vbMethods DeleteColumnLabels DeleteColumns DeleteFile
line 163: syn keyword vbMethods DeleteFolder DeleteLines DeleteRowLabels
line 164: syn keyword vbMethods DeleteRows DeselectAll DesignerWindow DoVerb Drag
line 165: syn keyword vbMethods Draw DriveExists Edit EditCopy EditPaste EndDoc
line 166: syn keyword vbMethods EnsureVisible EstablishConnection Execute Exists
line 167: syn keyword vbMethods Expand Export ExportReport ExtractIcon Fetch
line 168: syn keyword vbMethods FetchVerbs FileExists Files FillCache Find
line 169: syn keyword vbMethods FindFirst FindItem FindLast FindNext FindPrevious
line 170: syn keyword vbMethods FolderExists Forward GetAbsolutePathName
line 171: syn keyword vbMethods GetBaseName GetBookmark GetChunk GetClipString
line 172: syn keyword vbMethods GetData GetDrive GetDriveName GetFile GetFileName
line 173: syn keyword vbMethods GetFirstVisible GetFolder GetFormat GetHeader
line 174: syn keyword vbMethods GetLineFromChar GetNumTicks GetParentFolderName
line 175: syn keyword vbMethods GetRows GetSelectedPart GetSelection
line 176: syn keyword vbMethods GetSpecialFolder GetTempName GetText
line 177: syn keyword vbMethods GetVisibleCount GoBack GoForward Hide HitTest
line 178: syn keyword vbMethods HoldFields Idle Import InitializeLabels Insert
line 179: syn keyword vbMethods InsertColumnLabels InsertColumns InsertFile
line 180: syn keyword vbMethods InsertLines InsertObjDlg InsertRowLabels
line 181: syn keyword vbMethods InsertRows Item Keys KillDoc Layout Line Lines
line 182: syn keyword vbMethods LinkExecute LinkPoke LinkRequest LinkSend Listen
line 183: syn keyword vbMethods LoadFile LoadResData LoadResPicture LoadResString
line 184: syn keyword vbMethods LogEvent MakeCompileFile MakeCompiledFile
line 185: syn keyword vbMethods MakeReplica MoreResults Move MoveData MoveFile
line 186: syn keyword vbMethods MoveFirst MoveFolder MoveLast MoveNext
line 187: syn keyword vbMethods MovePrevious NavigateTo NewPage NewPassword
line 188: syn keyword vbMethods NextRecordset OLEDrag OnAddinsUpdate OnConnection
line 189: syn keyword vbMethods OnDisconnection OnStartupComplete Open
line 190: syn keyword vbMethods OpenAsTextStream OpenConnection OpenDatabase
line 191: syn keyword vbMethods OpenQueryDef OpenRecordset OpenResultset OpenURL
line 192: syn keyword vbMethods Overlay PSet PaintPicture PastSpecialDlg Paste
line 193: syn keyword vbMethods PeekData Play Point PopulatePartial PopupMenu
line 194: syn keyword vbMethods Print PrintForm PrintReport PropertyChanged Quit
line 195: syn keyword vbMethods Raise RandomDataFill RandomFillColumns
line 196: syn keyword vbMethods RandomFillRows ReFill Read ReadAll ReadFromFile
line 197: syn keyword vbMethods ReadLine ReadProperty Rebind Refresh RefreshLink
line 198: syn keyword vbMethods RegisterDatabase ReleaseInstance Reload Remove
line 199: syn keyword vbMethods RemoveAddInFromToolbar RemoveAll RemoveItem Render
line 200: syn keyword vbMethods RepairDatabase ReplaceLine Reply ReplyAll Requery
line 201: syn keyword vbMethods ResetCustom ResetCustomLabel ResolveName
line 202: syn keyword vbMethods RestoreToolbar Resync Rollback RollbackTrans
line 203: syn keyword vbMethods RowBookmark RowContaining RowTop Save SaveAs
line 204: syn keyword vbMethods SaveFile SaveToFile SaveToOle1File SaveToolbar
line 205: syn keyword vbMethods Scale ScaleX ScaleY Scroll SelPrint SelectAll
line 206: syn keyword vbMethods SelectPart Send SendData Set SetAutoServerSettings
line 207: syn keyword vbMethods SetData SetFocus SetOption SetSelection SetSize
line 208: syn keyword vbMethods SetText SetViewport Show ShowColor ShowFont
line 209: syn keyword vbMethods ShowHelp ShowOpen ShowPrinter ShowSave
line 210: syn keyword vbMethods ShowWhatsThis SignOff SignOn Size Skip SkipLine
line 211: syn keyword vbMethods Span Split SplitContaining StartLabelEdit
line 212: syn keyword vbMethods StartLogging Stop Synchronize Tag TextHeight
line 213: syn keyword vbMethods TextWidth ToDefaults Trace TwipsToChartPart
line 214: syn keyword vbMethods TypeByChartType URLFor Update UpdateControls
line 215: syn keyword vbMethods UpdateRecord UpdateRow Upto ValidateControls Value
line 216: syn keyword vbMethods WhatsThisMode Write WriteBlankLines WriteLine
line 217: syn keyword vbMethods WriteProperty WriteTemplate ZOrder
line 218: syn keyword vbMethods rdoCreateEnvironment rdoRegisterDataSource
line 219: 
line 220: syn keyword vbStatement Alias AppActivate As Base Beep Begin Call ChDir
line 221: syn keyword vbStatement ChDrive Close Const Date Declare DefBool DefByte
line 222: syn keyword vbStatement DefCur DefDate DefDbl DefDec DefInt DefLng DefObj
line 223: syn keyword vbStatement DefSng DefStr DefVar Deftype DeleteSetting Dim Do
line 224: syn keyword vbStatement Each ElseIf End Enum Erase Error Event Exit
line 225: syn keyword vbStatement Explicit FileCopy For ForEach Function Get GoSub
line 226: syn keyword vbStatement GoTo Gosub Implements Kill LSet Let Lib LineInput
line 227: syn keyword vbStatement Load Lock Loop Mid MkDir Name Next On OnError Open
line 228: syn keyword vbStatement Option Preserve Private Property Public Put RSet
line 229: syn keyword vbStatement RaiseEvent Randomize ReDim Redim Reset Resume
line 230: syn keyword vbStatement Return RmDir SavePicture SaveSetting Seek SendKeys
line 231: syn keyword vbStatement Sendkeys Set SetAttr Static Step Stop Sub Time
line 232: syn keyword vbStatement Type Unload Unlock Until Wend While Width With
line 233: syn keyword vbStatement Write
line 234: 
line 235: syn keyword vbKeyword As Binary ByRef ByVal Date Empty Error Friend Get
line 236: syn keyword vbKeyword Input Is Len Lock Me Mid New Nothing Null On
line 237: syn keyword vbKeyword Option Optional ParamArray Print Private Property
line 238: syn keyword vbKeyword Public PublicNotCreateable OnNewProcessSingleUse
line 239: syn keyword vbKeyword InSameProcessMultiUse GlobalMultiUse Resume Seek
line 240: syn keyword vbKeyword Set Static Step String Time WithEvents
line 241: 
line 242: syn keyword vbTodo contained    TODO
line 243: 
line 244: "Datatypes
line 245: syn keyword vbTypes Boolean Byte Currency Date Decimal Double Empty
line 246: syn keyword vbTypes Integer Long Object Single String Variant
line 247: 
line 248: "VB defined values
line 249: syn keyword vbDefine dbBigInt dbBinary dbBoolean dbByte dbChar
line 250: syn keyword vbDefine dbCurrency dbDate dbDecimal dbDouble dbFloat
line 251: syn keyword vbDefine dbGUID dbInteger dbLong dbLongBinary dbMemo
line 252: syn keyword vbDefine dbNumeric dbSingle dbText dbTime dbTimeStamp
line 253: syn keyword vbDefine dbVarBinary
line 254: 
line 255: "VB defined values
line 256: syn keyword vbDefine vb3DDKShadow vb3DFace vb3DHighlight vb3DLight
line 257: syn keyword vbDefine vb3DShadow vbAbort vbAbortRetryIgnore
line 258: syn keyword vbDefine vbActiveBorder vbActiveTitleBar vbAlias
line 259: syn keyword vbDefine vbApplicationModal vbApplicationWorkspace
line 260: syn keyword vbDefine vbAppTaskManager vbAppWindows vbArchive vbArray
line 261: syn keyword vbDefine vbBack vbBinaryCompare vbBlack vbBlue vbBoolean
line 262: syn keyword vbDefine vbButtonFace vbButtonShadow vbButtonText vbByte
line 263: syn keyword vbDefine vbCalGreg vbCalHijri vbCancel vbCr vbCritical
line 264: syn keyword vbDefine vbCrLf vbCurrency vbCyan vbDatabaseCompare
line 265: syn keyword vbDefine vbDataObject vbDate vbDecimal vbDefaultButton1
line 266: syn keyword vbDefine vbDefaultButton2 vbDefaultButton3 vbDefaultButton4
line 267: syn keyword vbDefine vbDesktop vbDirectory vbDouble vbEmpty vbError
line 268: syn keyword vbDefine vbExclamation vbFirstFourDays vbFirstFullWeek
line 269: syn keyword vbDefine vbFirstJan1 vbFormCode vbFormControlMenu
line 270: syn keyword vbDefine vbFormFeed vbFormMDIForm vbFriday vbFromUnicode
line 271: syn keyword vbDefine vbGrayText vbGreen vbHidden vbHide vbHighlight
line 272: syn keyword vbDefine vbHighlightText vbHiragana vbIgnore vbIMEAlphaDbl
line 273: syn keyword vbDefine vbIMEAlphaSng vbIMEDisable vbIMEHiragana
line 274: syn keyword vbDefine vbIMEKatakanaDbl vbIMEKatakanaSng vbIMEModeAlpha
line 275: syn keyword vbDefine vbIMEModeAlphaFull vbIMEModeDisable
line 276: syn keyword vbDefine vbIMEModeHangul vbIMEModeHangulFull
line 277: syn keyword vbDefine vbIMEModeHiragana vbIMEModeKatakana
line 278: syn keyword vbDefine vbIMEModeKatakanaHalf vbIMEModeNoControl
line 279: syn keyword vbDefine vbIMEModeOff vbIMEModeOn vbIMENoOp vbIMEOff
line 280: syn keyword vbDefine vbIMEOn vbInactiveBorder vbInactiveCaptionText
line 281: syn keyword vbDefine vbInactiveTitleBar vbInfoBackground vbInformation
line 282: syn keyword vbDefine vbInfoText vbInteger vbKatakana vbKey0 vbKey1
line 283: syn keyword vbDefine vbKey2 vbKey3 vbKey4 vbKey5 vbKey6 vbKey7 vbKey8
line 284: syn keyword vbDefine vbKey9 vbKeyA vbKeyAdd vbKeyB vbKeyBack vbKeyC
line 285: syn keyword vbDefine vbKeyCancel vbKeyCapital vbKeyClear vbKeyControl
line 286: syn keyword vbDefine vbKeyD vbKeyDecimal vbKeyDelete vbKeyDivide
line 287: syn keyword vbDefine vbKeyDown vbKeyE vbKeyEnd vbKeyEscape vbKeyExecute
line 288: syn keyword vbDefine vbKeyF vbKeyF1 vbKeyF10 vbKeyF11 vbKeyF12 vbKeyF13
line 289: syn keyword vbDefine vbKeyF14 vbKeyF15 vbKeyF16 vbKeyF2 vbKeyF3 vbKeyF4
line 290: syn keyword vbDefine vbKeyF5 vbKeyF6 vbKeyF7 vbKeyF8 vbKeyF9 vbKeyG
line 291: syn keyword vbDefine vbKeyH vbKeyHelp vbKeyHome vbKeyI vbKeyInsert
line 292: syn keyword vbDefine vbKeyJ vbKeyK vbKeyL vbKeyLButton vbKeyLeft vbKeyM
line 293: syn keyword vbDefine vbKeyMButton vbKeyMenu vbKeyMultiply vbKeyN
line 294: syn keyword vbDefine vbKeyNumlock vbKeyNumpad0 vbKeyNumpad1
line 295: syn keyword vbDefine vbKeyNumpad2 vbKeyNumpad3 vbKeyNumpad4
line 296: syn keyword vbDefine vbKeyNumpad5 vbKeyNumpad6 vbKeyNumpad7
line 297: syn keyword vbDefine vbKeyNumpad8 vbKeyNumpad9 vbKeyO vbKeyP
line 298: syn keyword vbDefine vbKeyPageDown vbKeyPageUp vbKeyPause vbKeyPrint
line 299: syn keyword vbDefine vbKeyQ vbKeyR vbKeyRButton vbKeyReturn vbKeyRight
line 300: syn keyword vbDefine vbKeyS vbKeySelect vbKeySeparator vbKeyShift
line 301: syn keyword vbDefine vbKeySnapshot vbKeySpace vbKeySubtract vbKeyT
line 302: syn keyword vbDefine vbKeyTab vbKeyU vbKeyUp vbKeyV vbKeyW vbKeyX
line 303: syn keyword vbDefine vbKeyY vbKeyZ vbLf vbLong vbLowerCase vbMagenta
line 304: syn keyword vbDefine vbMaximizedFocus vbMenuBar vbMenuText
line 305: syn keyword vbDefine vbMinimizedFocus vbMinimizedNoFocus vbMonday
line 306: syn keyword vbDefine vbMsgBox vbMsgBoxHelpButton vbMsgBoxRight
line 307: syn keyword vbDefine vbMsgBoxRtlReading vbMsgBoxSetForeground
line 308: syn keyword vbDefine vbMsgBoxText vbNarrow vbNewLine vbNo vbNormal
line 309: syn keyword vbDefine vbNormalFocus vbNormalNoFocus vbNull vbNullChar
line 310: syn keyword vbDefine vbNullString vbObject vbObjectError vbOK
line 311: syn keyword vbDefine vbOKCancel vbOKOnly vbProperCase vbQuestion
line 312: syn keyword vbDefine vbReadOnly vbRed vbRetry vbRetryCancel vbSaturday
line 313: syn keyword vbDefine vbScrollBars vbSingle vbString vbSunday vbSystem
line 314: syn keyword vbDefine vbSystemModal vbTab vbTextCompare vbThursday
line 315: syn keyword vbDefine vbTitleBarText vbTuesday vbUnicode vbUpperCase
line 316: syn keyword vbDefine vbUseSystem vbUseSystemDayOfWeek vbVariant
line 317: syn keyword vbDefine vbVerticalTab vbVolume vbWednesday vbWhite vbWide
line 318: syn keyword vbDefine vbWindowBackground vbWindowFrame vbWindowText
line 319: syn keyword vbDefine vbYellow vbYes vbYesNo vbYesNoCancel
line 320: 
line 321: "Numbers
line 322: "integer number, or floating point number without a dot.
line 323: syn match vbNumber "\<\d\+\>"
line 324: "floating point number, with dot
line 325: syn match vbNumber "\<\d\+\.\d*\>"
line 326: "floating point number, starting with a dot
line 327: syn match vbNumber "\.\d\+\>"
line 328: "syn match  vbNumber            "{[[:xdigit:]-]\+}\|&[hH][[:xdigit:]]\+&"
line 329: "syn match  vbNumber            ":[[:xdigit:]]\+"
line 330: "syn match  vbNumber            "[-+]\=\<\d\+\>"
line 331: syn match  vbFloat              "[-+]\=\<\d\+[eE][\-+]\=\d\+"
line 332: syn match  vbFloat              "[-+]\=\<\d\+\.\d*\([eE][\-+]\=\d\+\)\="
line 333: syn match  vbFloat              "[-+]\=\<\.\d\+\([eE][\-+]\=\d\+\)\="
line 334: 
line 335: " String and Character constants
line 336: syn region  vbString^I^Istart=+"+  end=+"\|$+
line 337: syn region  vbComment^I^Istart="\(^\|\s\)REM\s" end="$" contains=vbTodo
line 338: syn region  vbComment^I^Istart="\(^\|\s\)\'"   end="$" contains=vbTodo
line 339: syn match   vbLineLabel^I^I"^\h\w\+:"
line 340: syn match   vbLineNumber^I"^\d\+\(:\|\s\|$\)"
line 341: syn match   vbTypeSpecifier  "\<\a\w*[@\$%&!#]"ms=s+1
line 342: syn match   vbTypeSpecifier  "#[a-zA-Z0-9]"me=e-1
line 343: " Conditional Compilation
line 344: syn match  vbPreProc "^#const\>"
line 345: syn region vbPreProc matchgroup=PreProc start="^#if\>"     end="\<then\>" transparent contains=TOP
line 346: syn region vbPreProc matchgroup=PreProc start="^#elseif\>" end="\<then\>" transparent contains=TOP
line 347: syn match  vbPreProc "^#else\>"
line 348: syn match  vbPreProc "^#end\s*if\>"
line 349: 
line 350: " Define the default highlighting.
line 351: " Only when an item doesn't have highlighting yet
line 352: 
line 353: hi def link vbBoolean           Boolean
line 354: hi def link vbLineNumber        Comment
line 355: hi def link vbLineLabel         Comment
line 356: hi def link vbComment           Comment
line 357: hi def link vbConditional       Conditional
line 358: hi def link vbConst             Constant
line 359: hi def link vbDefine            Constant
line 360: hi def link vbError             Error
line 361: hi def link vbFunction          Identifier
line 362: hi def link vbIdentifier        Identifier
line 363: hi def link vbNumber            Number
line 364: hi def link vbFloat             Float
line 365: hi def link vbMethods           PreProc
line 366: hi def link vbOperator          Operator
line 367: hi def link vbRepeat            Repeat
line 368: hi def link vbString            String
line 369: hi def link vbStatement         Statement
line 370: hi def link vbKeyword           Statement
line 371: hi def link vbEvents            Special
line 372: hi def link vbTodo              Todo
line 373: hi def link vbTypes             Type
line 374: hi def link vbTypeSpecifier     Type
line 375: hi def link vbPreProc           PreProc
line 376: 
line 377: let b:current_syntax = "vb"
line 378: 
line 379: " vim: ts=8
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/vb.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 232: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim"
line 1: " Vim syntax file
line 2: " Language:     Visual Basic
line 3: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 4: " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
line 5: " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
line 6: "       (tried multiple times to contact, but email bounced)
line 7: " Last Change:
line 8: "   2021 Nov 26  Incorporated additions from Doug Kearns
line 9: "   2005 May 25  Synched with work by Thomas Barthel
line 10: "   2004 May 30  Added a few keywords
line 11: 
line 12: " This was thrown together after seeing numerous requests on the
line 13: " VIM and VIM-DEV mailing lists.  It is by no means complete.
line 14: " Send comments, suggestions and requests to the maintainer.
line 15: 
line 16: " quit when a syntax file was already loaded
line 17: if exists("b:current_syntax")
line 18:         finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/vb.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/vb.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/vb.vim"
line 233:   unlet b:current_syntax
line 234:   syn region  javaScript start=+<script \_[^>]*language *=\_[^>]*vbscript\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlVbScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
line 235: endif
line 236: 
line 237: syn cluster htmlJavaScript      add=@htmlPreproc
line 238: 
line 239: if main_syntax != 'java' || exists("java_css")
line 240:   " embedded style sheets
line 241:   syn keyword htmlArg           contained media
line 242:   syn include @htmlCss syntax/css.vim
Searching for "syntax/css.vim" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/css.vim/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:     Cascading Style Sheets
line 3: " Previous Contributor List:
line 4: "               Claudio Fleiner <claudio@fleiner.com> (Maintainer)
line 5: "               Yeti            (Add full CSS2, HTML4 support)
line 6: "               Nikolai Weibull (Add CSS2 support)
line 7: " URL:          https://github.com/JulesWang/css.vim
line 8: " Maintainer:   Jules Wang      <w.jq0722@gmail.com>
line 9: " Last Change:  2019 Jul. 29
line 10: 
line 11: " quit when a syntax file was already loaded
line 12: if !exists("main_syntax")
line 13:   if exists("b:current_syntax")
line 14:     finish
line 15:   endif
line 16:   let main_syntax = 'css'
line 17: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 18:   finish
line 19: endif
line 20: 
line 21: let s:cpo_save = &cpo
line 22: set cpo&vim
line 23: 
line 24: syn case ignore
line 25: 
line 26: " HTML4 tags
line 27: syn keyword cssTagName abbr address area a b base
line 28: syn keyword cssTagName bdo blockquote body br button
line 29: syn keyword cssTagName caption cite code col colgroup dd del
line 30: syn keyword cssTagName dfn div dl dt em fieldset form
line 31: syn keyword cssTagName h1 h2 h3 h4 h5 h6 head hr html img i
line 32: syn keyword cssTagName iframe input ins isindex kbd label legend li
line 33: syn keyword cssTagName link map menu meta noscript ol optgroup
line 34: syn keyword cssTagName option p param pre q s samp script small
line 35: syn keyword cssTagName span strong sub sup tbody td
line 36: syn keyword cssTagName textarea tfoot th thead title tr ul u var
line 37: syn keyword cssTagName object svg
line 38: syn match   cssTagName /\<select\>\|\<style\>\|\<table\>/
line 39: 
line 40: " 34 HTML5 tags
line 41: syn keyword cssTagName article aside audio bdi canvas command data
line 42: syn keyword cssTagName datalist details dialog embed figcaption figure footer
line 43: syn keyword cssTagName header hgroup keygen main mark menuitem meter nav
line 44: syn keyword cssTagName output progress rt rp ruby section
line 45: syn keyword cssTagName source summary time track video wbr
line 46: 
line 47: " Tags not supported in HTML5
line 48: " acronym applet basefont big center dir
line 49: " font frame frameset noframes strike tt
line 50: 
line 51: syn match cssTagName "\*"
line 52: 
line 53: " selectors
line 54: syn match cssSelectorOp "[,>+~]"
line 55: syn match cssSelectorOp2 "[~|^$*]\?=" contained
line 56: syn region cssAttributeSelector matchgroup=cssSelectorOp start="\[" end="]" contains=cssUnicodeEscape,cssSelectorOp2,cssStringQ,cssStringQQ
line 57: 
line 58: " .class and #id
line 59: syn match cssClassName "\.-\=[A-Za-z_][A-Za-z0-9_-]*" contains=cssClassNameDot
line 60: syn match cssClassNameDot contained '\.'
line 61: 
line 62: try
line 63: syn match cssIdentifier "#[A-Za-z<c0>-<ff>_@][A-Za-z<c0>-<ff>0-9_@-]*"
line 64: catch /^.*/
line 65: syn match cssIdentifier "#[A-Za-z_@][A-Za-z0-9_@-]*"
line 66: endtry
line 67: 
line 68: " digits
line 69: syn match cssValueInteger contained "[-+]\=\d\+" contains=cssUnitDecorators
line 70: syn match cssValueNumber contained "[-+]\=\d\+\(\.\d*\)\=" contains=cssUnitDecorators
line 71: syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=\(mm\|cm\|in\|pt\|pc\|em\|ex\|px\|rem\|dpi\|dppx\|dpcm\|fr\|vw\|vh\|vmin\|vmax\|ch\)\>" contains=cssUnitDecorators
line 72: syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=%" contains=cssUnitDecorators
line 73: syn match cssValueAngle contained "[-+]\=\d\+\(\.\d*\)\=\(deg\|grad\|rad\)\>" contains=cssUnitDecorators
line 74: syn match cssValueTime contained "+\=\d\+\(\.\d*\)\=\(ms\|s\)\>" contains=cssUnitDecorators
line 75: syn match cssValueFrequency contained "+\=\d\+\(\.\d*\)\=\(Hz\|kHz\)\>" contains=cssUnitDecorators
line 76: 
line 77: " The 16 basic color names
line 78: syn keyword cssColor contained aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal yellow
line 79: 
line 80: " 130 more color names
line 81: syn keyword cssColor contained aliceblue antiquewhite aquamarine azure
line 82: syn keyword cssColor contained beige bisque blanchedalmond blueviolet brown burlywood
line 83: syn keyword cssColor contained cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan
line 84: syn match cssColor contained /\<dark\(blue\|cyan\|goldenrod\|gray\|green\|grey\|khaki\)\>/
line 85: syn match cssColor contained /\<dark\(magenta\|olivegreen\|orange\|orchid\|red\|salmon\|seagreen\)\>/
line 86: syn match cssColor contained /\<darkslate\(blue\|gray\|grey\)\>/
line 87: syn match cssColor contained /\<dark\(turquoise\|violet\)\>/
line 88: syn keyword cssColor contained deeppink deepskyblue dimgray dimgrey dodgerblue firebrick
line 89: syn keyword cssColor contained floralwhite forestgreen gainsboro ghostwhite gold
line 90: syn keyword cssColor contained goldenrod greenyellow grey honeydew hotpink
line 91: syn keyword cssColor contained indianred indigo ivory khaki lavender lavenderblush lawngreen
line 92: syn keyword cssColor contained lemonchiffon limegreen linen magenta
line 93: syn match cssColor contained /\<light\(blue\|coral\|cyan\|goldenrodyellow\|gray\|green\)\>/
line 94: syn match cssColor contained /\<light\(grey\|pink\|salmon\|seagreen\|skyblue\|yellow\)\>/
line 95: syn match cssColor contained /\<light\(slategray\|slategrey\|steelblue\)\>/
line 96: syn match cssColor contained /\<medium\(aquamarine\|blue\|orchid\|purple\|seagreen\)\>/
line 97: syn match cssColor contained /\<medium\(slateblue\|springgreen\|turquoise\|violetred\)\>/
line 98: syn keyword cssColor contained midnightblue mintcream mistyrose moccasin navajowhite
line 99: syn keyword cssColor contained oldlace olivedrab orange orangered orchid
line 100: syn match cssColor contained /\<pale\(goldenrod\|green\|turquoise\|violetred\)\>/
line 101: syn keyword cssColor contained papayawhip peachpuff peru pink plum powderblue
line 102: syn keyword cssColor contained rosybrown royalblue rebeccapurple saddlebrown salmon
line 103: syn keyword cssColor contained sandybrown seagreen seashell sienna skyblue slateblue
line 104: syn keyword cssColor contained slategray slategrey snow springgreen steelblue tan
line 105: syn keyword cssColor contained thistle tomato turquoise violet wheat
line 106: syn keyword cssColor contained whitesmoke yellowgreen
line 107: 
line 108: " FIXME: These are actually case-insensitive too, but (a) specs recommend using
line 109: " mixed-case (b) it's hard to highlight the word `Background' correctly in
line 110: " all situations
line 111: syn case match
line 112: syn keyword cssColor contained ActiveBorder ActiveCaption AppWorkspace ButtonFace ButtonHighlight ButtonShadow ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder InactiveCaption InactiveCaptionText InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText Background
line 113: syn case ignore
line 114: 
line 115: syn match cssImportant contained "!\s*important\>"
line 116: syn match cssCustomProp contained "--[a-zA-Z0-9-_]*"
line 117: 
line 118: syn match cssColor contained "\<transparent\>"
line 119: syn match cssColor contained "\<currentColor\>"
line 120: syn match cssColor contained "\<white\>"
line 121: syn match cssColor contained "#\x\{3,4\}\>" contains=cssUnitDecorators
line 122: syn match cssColor contained "#\x\{6\}\>" contains=cssUnitDecorators
line 123: syn match cssColor contained "#\x\{8\}\>" contains=cssUnitDecorators
line 124: 
line 125: syn region cssURL contained matchgroup=cssFunctionName start="\<\(uri\|url\|local\|format\)\s*(" end=")" contains=cssStringQ,cssStringQQ oneline
line 126: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(var\|calc\)\s*(" end=")" contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
line 127: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgb\|clip\|attr\|counter\|rect\|cubic-bezier\|steps\)\s*(" end=")" oneline  contains=cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma
line 128: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgba\|hsl\|hsla\|color-stop\|from\|to\)\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma,cssFunction
line 129: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(linear-\|radial-\)\=\gradient\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunction,cssGradientAttr,cssFunctionComma
line 130: syn region cssFunction contained matchgroup=cssFunctionName start="\<\(matrix\(3d\)\=\|scale\(3d\|X\|Y\|Z\)\=\|translate\(3d\|X\|Y\|Z\)\=\|skew\(X\|Y\)\=\|rotate\(3d\|X\|Y\|Z\)\=\|perspective\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
line 131: syn keyword cssGradientAttr contained top bottom left right cover center middle ellipse at
line 132: syn match cssFunctionComma contained ","
line 133: 
line 134: " Common Prop and Attr
line 135: syn keyword cssCommonAttr contained auto none inherit all default normal
line 136: syn keyword cssCommonAttr contained top bottom center stretch hidden visible
line 137: syn match cssCommonAttr contained "\<\(max-\|min-\|fit-\)content\>"
line 138: "------------------------------------------------
line 139: " CSS Animations
line 140: " http://www.w3.org/TR/css3-animations/
line 141: syn match cssAnimationProp contained "\<animation\(-\(delay\|direction\|duration\|fill-mode\|name\|play-state\|timing-function\|iteration-count\)\)\=\>"
line 142: 
line 143: " animation-direction attributes
line 144: syn keyword cssAnimationAttr contained alternate reverse
line 145: syn match cssAnimationAttr contained "\<alternate-reverse\>"
line 146: 
line 147: " animation-fill-mode attributes
line 148: syn keyword cssAnimationAttr contained forwards backwards both
line 149: 
line 150: " animation-play-state attributes
line 151: syn keyword cssAnimationAttr contained running paused
line 152: 
line 153: " animation-iteration-count attributes
line 154: syn keyword cssAnimationAttr contained infinite
line 155: "------------------------------------------------
line 156: "  CSS Backgrounds and Borders Module Level 3
line 157: "  http://www.w3.org/TR/css3-background/
line 158: syn match cssBackgroundProp contained "\<background\(-\(attachment\|clip\|color\|image\|origin\|position\|repeat\|size\)\)\=\>"
line 159: " background-attachment attributes
line 160: syn keyword cssBackgroundAttr contained scroll fixed local
line 161: 
line 162: " background-position attributes
line 163: syn keyword cssBackgroundAttr contained left center right top bottom
line 164: 
line 165: " background-repeat attributes
line 166: syn match cssBackgroundAttr contained "\<no-repeat\>"
line 167: syn match cssBackgroundAttr contained "\<repeat\(-[xy]\)\=\>"
line 168: 
line 169: " background-size attributes
line 170: syn keyword cssBackgroundAttr contained cover contain
line 171: 
line 172: syn match cssBorderProp contained "\<border\(-\(top\|right\|bottom\|left\)\)\=\(-\(width\|color\|style\)\)\=\>"
line 173: syn match cssBorderProp contained "\<border\(-\(top\|bottom\)-\(left\|right\)\)\=-radius\>"
line 174: syn match cssBorderProp contained "\<border-image\(-\(outset\|repeat\|slice\|source\|width\)\)\=\>"
line 175: syn match cssBorderProp contained "\<box-decoration-break\>"
line 176: syn match cssBorderProp contained "\<box-shadow\>"
line 177: 
line 178: " border-image attributes
line 179: syn keyword cssBorderAttr contained stretch round fill
line 180: 
line 181: " border-style attributes
line 182: syn keyword cssBorderAttr contained dotted dashed solid double groove ridge inset outset
line 183: 
line 184: " border-width attributes
line 185: syn keyword cssBorderAttr contained thin thick medium
line 186: 
line 187: " box-decoration-break attributes
line 188: syn keyword cssBorderAttr contained clone slice
line 189: "------------------------------------------------
line 190: 
line 191: syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
line 192: syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
line 193: syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
line 194: syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
line 195: syn keyword cssBoxAttr contained visible hidden scroll auto
line 196: syn match cssBoxAttr contained "\<no-\(display\|content\)\>"
line 197: 
line 198: syn keyword cssCascadeProp contained all
line 199: syn keyword cssCascadeAttr contained initial unset revert
line 200: 
line 201: syn keyword cssColorProp contained opacity
line 202: syn match cssColorProp contained "\<color-profile\>"
line 203: syn match cssColorProp contained "\<rendering-intent\>"
line 204: 
line 205: 
line 206: syn match cssDimensionProp contained "\<\(min\|max\)-\(width\|height\)\>"
line 207: syn keyword cssDimensionProp contained height
line 208: syn keyword cssDimensionProp contained width
line 209: 
line 210: " CSS Flexible Box Layout Module Level 1
line 211: " http://www.w3.org/TR/css3-flexbox/
line 212: " CSS Box Alignment Module Level 3
line 213: " http://www.w3.org/TR/css-align-3/
line 214: syn match cssFlexibleBoxProp contained "\<flex\(-\(direction\|wrap\|flow\|grow\|shrink\|basis\)\)\=\>"
line 215: syn match cssFlexibleBoxProp contained "\<\(align\|justify\)\(-\(items\|self\|content\)\)\=\>"
line 216: syn keyword cssFlexibleBoxProp contained order
line 217: 
line 218: syn match cssFlexibleBoxAttr contained "\<\(row\|column\|wrap\)\(-reverse\)\=\>"
line 219: syn keyword cssFlexibleBoxAttr contained nowrap stretch baseline center
line 220: syn match cssFlexibleBoxAttr contained "\<flex\(-\(start\|end\)\)\=\>"
line 221: syn match cssFlexibleBoxAttr contained "\<space\(-\(between\|around\)\)\=\>"
line 222: 
line 223: " CSS Fonts Module Level 3
line 224: " http://www.w3.org/TR/css-fonts-3/
line 225: syn match cssFontProp contained "\<font\(-\(family\|\|feature-settings\|kerning\|language-override\|size\(-adjust\)\=\|stretch\|style\|synthesis\|variant\(-\(alternates\|caps\|east-asian\|ligatures\|numeric\|position\)\)\=\|weight\)\)\=\>"
line 226: 
line 227: " font attributes
line 228: syn keyword cssFontAttr contained icon menu caption
line 229: syn match cssFontAttr contained "\<message-box\>"
line 230: syn match cssFontAttr contained "\<status-bar\>"
line 231: syn keyword cssFontAttr contained larger smaller
line 232: syn match cssFontAttr contained "\<\(x\{1,2\}-\)\=\(large\|small\)\>"
line 233: syn match cssFontAttr contained "\<small-\(caps\|caption\)\>"
line 234: " font-family attributes
line 235: syn match cssFontAttr contained "\<\(sans-\)\=serif\>"
line 236: syn keyword cssFontAttr contained Antiqua Arial Black Book Charcoal Comic Courier Dingbats Gadget Geneva Georgia Grande Helvetica Impact Linotype Lucida MS Monaco Neue New Palatino Roboto Roman Symbol Tahoma Times Trebuchet Verdana Webdings Wingdings York Zapf
line 237: syn keyword cssFontAttr contained cursive fantasy monospace
line 238: " font-feature-settings attributes
line 239: syn keyword cssFontAttr contained on off
line 240: " font-stretch attributes
line 241: syn match cssFontAttr contained "\<\(\(ultra\|extra\|semi\)-\)\=\(condensed\|expanded\)\>"
line 242: " font-style attributes
line 243: syn keyword cssFontAttr contained italic oblique
line 244: " font-synthesis attributes
line 245: syn keyword cssFontAttr contained weight style
line 246: " font-weight attributes
line 247: syn keyword cssFontAttr contained bold bolder lighter
line 248: " TODO: font-variant-* attributes
line 249: "------------------------------------------------
line 250: 
line 251: " Webkit specific property/attributes
line 252: syn match cssFontProp contained "\<font-smooth\>"
line 253: syn match cssFontAttr contained "\<\(subpixel-\)\=\antialiased\>"
line 254: 
line 255: 
line 256: " CSS Multi-column Layout Module
line 257: " http://www.w3.org/TR/css3-multicol/
line 258: syn match cssMultiColumnProp contained "\<break-\(after\|before\|inside\)\>"
line 259: syn match cssMultiColumnProp contained "\<column-\(count\|fill\|gap\|rule\(-\(color\|style\|width\)\)\=\|span\|width\)\>"
line 260: syn keyword cssMultiColumnProp contained columns
line 261: syn keyword cssMultiColumnAttr contained balance medium
line 262: syn keyword cssMultiColumnAttr contained always left right page column
line 263: syn match cssMultiColumnAttr contained "\<avoid\(-\(page\|column\)\)\=\>"
line 264: 
line 265: " http://www.w3.org/TR/css3-break/#page-break
line 266: syn match cssMultiColumnProp contained "\<page\(-break-\(before\|after\|inside\)\)\=\>"
line 267: 
line 268: " http://www.w3.org/TR/SVG11/interact.html
line 269: syn match cssInteractProp contained "\<pointer-events\>"
line 270: syn match cssInteractAttr contained "\<\(visible\)\=\(Painted\|Fill\|Stroke\)\=\>"
line 271: 
line 272: " TODO find following items in w3c docs.
line 273: syn keyword cssGeneratedContentProp contained quotes crop
line 274: syn match cssGeneratedContentProp contained "\<counter-\(reset\|increment\)\>"
line 275: syn match cssGeneratedContentProp contained "\<move-to\>"
line 276: syn match cssGeneratedContentProp contained "\<page-policy\>"
line 277: syn match cssGeneratedContentAttr contained "\<\(no-\)\=\(open\|close\)-quote\>"
line 278: 
line 279: " https://www.w3.org/TR/css-grid-1/
line 280: syn match cssGridProp contained "\<grid\>"
line 281: syn match cssGridProp contained "\<grid-template\(-\(columns\|rows\|areas\)\)\=\>"
line 282: syn match cssGridProp contained "\<grid-\(column\|row\)\(-\(start\|end\|gap\)\)\=\>"
line 283: syn match cssGridProp contained "\<grid-\(area\|gap\)\>"
line 284: syn match cssGridProp contained "\<grid-auto-\(flow\|rows\|columns\)\>"
line 285: 
line 286: syn match cssHyerlinkProp contained "\<target\(-\(name\|new\|position\)\)\=\>"
line 287: 
line 288: syn match cssListProp contained "\<list-style\(-\(type\|position\|image\)\)\=\>"
line 289: syn match cssListAttr contained "\<\(lower\|upper\)-\(roman\|alpha\|greek\|latin\)\>"
line 290: syn match cssListAttr contained "\<\(hiragana\|katakana\)\(-iroha\)\=\>"
line 291: syn match cssListAttr contained "\<\(decimal\(-leading-zero\)\=\|cjk-ideographic\)\>"
line 292: syn keyword cssListAttr contained disc circle square hebrew armenian georgian
line 293: syn keyword cssListAttr contained inside outside
line 294: 
line 295: syn keyword cssPositioningProp contained bottom clear clip display float left
line 296: syn keyword cssPositioningProp contained position right top visibility
line 297: syn match cssPositioningProp contained "\<z-index\>"
line 298: syn keyword cssPositioningAttr contained block compact grid
line 299: syn match cssPositioningAttr contained "\<table\(-\(row-group\|\(header\|footer\)-group\|row\|column\(-group\)\=\|cell\|caption\)\)\=\>"
line 300: syn keyword cssPositioningAttr contained left right both
line 301: syn match cssPositioningAttr contained "\<list-item\>"
line 302: syn match cssPositioningAttr contained "\<inline\(-\(block\|box\|table\|grid\|flex\)\)\=\>"
line 303: syn match cssPositioningAttr contained "\<flow\(-root\)\=\>"
line 304: syn keyword cssPositioningAttr contained static relative absolute fixed subgrid
line 305: 
line 306: syn keyword cssPrintAttr contained landscape portrait crop cross always
line 307: 
line 308: syn match cssTableProp contained "\<\(caption-side\|table-layout\|border-collapse\|border-spacing\|empty-cells\)\>"
line 309: syn keyword cssTableAttr contained fixed collapse separate show hide once always
line 310: 
line 311: 
line 312: syn keyword cssTextProp contained color direction hyphens
line 313: syn match cssTextProp "\<\(\(word\|letter\)-spacing\|text\(-\(decoration\|transform\|align\|index\|shadow\)\)\=\|vertical-align\|unicode-bidi\|line-height\)\>"
line 314: syn match cssTextProp contained "\<text-\(justify\|outline\|warp\|align-last\|size-adjust\|rendering\|stroke\|indent\)\>"
line 315: syn match cssTextProp contained "\<\(word\|line\)-break\|\(overflow\|word\)-wrap\>"
line 316: syn match cssTextProp contained "\<white-space\>"
line 317: syn match cssTextProp contained "\<hanging-punctuation\>"
line 318: syn match cssTextProp contained "\<tab-size\>"
line 319: syn match cssTextProp contained "\<punctuation-trim\>"
line 320: syn match cssTextAttr contained "\<line-through\>"
line 321: syn match cssTextAttr contained "\<\(text-\)\=\(top\|bottom\)\>"
line 322: syn keyword cssTextAttr contained ltr rtl embed nowrap
line 323: syn keyword cssTextAttr contained underline overline blink sub super middle
line 324: syn keyword cssTextAttr contained capitalize uppercase lowercase
line 325: syn keyword cssTextAttr contained justify baseline sub super
line 326: syn keyword cssTextAttr contained optimizeLegibility optimizeSpeed geometricPrecision
line 327: syn match cssTextAttr contained "\<pre\(-\(line\|wrap\)\)\=\>"
line 328: syn match cssTextAttr contained "\<\(allow\|force\)-end\>"
line 329: syn keyword cssTextAttr contained start end adjacent
line 330: syn match cssTextAttr contained "\<inter-\(word\|ideographic\|cluster\)\>"
line 331: syn keyword cssTextAttr contained distribute kashida first last
line 332: syn keyword cssTextAttr contained clip ellipsis unrestricted suppress
line 333: syn match cssTextAttr contained "\<break-all\>"
line 334: syn match cssTextAttr contained "\<break-word\>"
line 335: syn keyword cssTextAttr contained manual
line 336: syn match cssTextAttr contained "\<bidi-override\>"
line 337: 
line 338: syn match cssTransformProp contained "\<transform\(-\(origin\|style\)\)\=\>"
line 339: syn match cssTransformProp contained "\<perspective\(-origin\)\=\>"
line 340: syn match cssTransformProp contained "\<backface-visibility\>"
line 341: 
line 342: " CSS Transitions
line 343: " http://www.w3.org/TR/css3-transitions/
line 344: syn match cssTransitionProp contained "\<transition\(-\(delay\|duration\|property\|timing-function\)\)\=\>"
line 345: 
line 346: " transition-time-function attributes
line 347: syn match cssTransitionAttr contained "\<linear\(-gradient\)\@!\>"
line 348: syn match cssTransitionAttr contained "\<ease\(-\(in-out\|out\|in\)\)\=\>"
line 349: syn match cssTransitionAttr contained "\<step\(-start\|-end\)\=\>"
line 350: "------------------------------------------------
line 351: " CSS Basic User Interface Module Level 3 (CSS3 UI)
line 352: " http://www.w3.org/TR/css3-ui/
line 353: syn match cssUIProp contained "\<box-sizing\>"
line 354: syn match cssUIAttr contained "\<\(content\|padding\|border\)\(-box\)\=\>"
line 355: 
line 356: syn keyword cssUIProp contained cursor
line 357: syn match cssUIAttr contained "\<\(\([ns]\=[ew]\=\)\|col\|row\|nesw\|nwse\)-resize\>"
line 358: syn keyword cssUIAttr contained crosshair help move pointer alias copy
line 359: syn keyword cssUIAttr contained progress wait text cell move
line 360: syn match cssUIAttr contained "\<context-menu\>"
line 361: syn match cssUIAttr contained "\<no-drop\>"
line 362: syn match cssUIAttr contained "\<not-allowed\>"
line 363: syn match cssUIAttr contained "\<all-scroll\>"
line 364: syn match cssUIAttr contained "\<\(vertical-\)\=text\>"
line 365: syn match cssUIAttr contained "\<zoom\(-in\|-out\)\=\>"
line 366: 
line 367: syn match cssUIProp contained "\<ime-mode\>"
line 368: syn keyword cssUIAttr contained active inactive disabled
line 369: 
line 370: syn match cssUIProp contained "\<nav-\(down\|index\|left\|right\|up\)\=\>"
line 371: syn match cssUIProp contained "\<outline\(-\(width\|style\|color\|offset\)\)\=\>"
line 372: syn keyword cssUIAttr contained invert
line 373: 
line 374: syn keyword cssUIProp contained icon resize
line 375: syn keyword cssUIAttr contained both horizontal vertical
line 376: 
line 377: syn match cssUIProp contained "\<text-overflow\>"
line 378: syn keyword cssUIAttr contained clip ellipsis
line 379: 
line 380: syn match cssUIProp contained "\<image-rendering\>"
line 381: syn keyword cssUIAttr contained pixellated
line 382: syn match cssUIAttr contained "\<crisp-edges\>"
line 383: 
line 384: "------------------------------------------------
line 385: " Webkit/iOS specific attributes
line 386: syn match cssUIAttr contained '\<preserve-3d\>'
line 387: " IE specific attributes
line 388: syn match cssIEUIAttr contained '\<bicubic\>'
line 389: 
line 390: " Webkit/iOS specific properties
line 391: syn match cssUIProp contained '\<tap-highlight-color\|user-select\|touch-callout\>'
line 392: " IE specific properties
line 393: syn match cssIEUIProp contained '\<interpolation-mode\|zoom\|filter\>'
line 394: 
line 395: " Webkit/Firebox specific properties/attributes
line 396: syn keyword cssUIProp contained appearance
line 397: syn keyword cssUIAttr contained window button field icon document menu
line 398: 
line 399: 
line 400: syn match cssAuralProp contained "\<\(pause\|cue\)\(-\(before\|after\)\)\=\>"
line 401: syn match cssAuralProp contained "\<\(play-during\|speech-rate\|voice-family\|pitch\(-range\)\=\|speak\(-\(punctuation\|numeral\|header\)\)\=\)\>"
line 402: syn keyword cssAuralProp contained volume during azimuth elevation stress richness
line 403: syn match cssAuralAttr contained "\<\(x-\)\=\(soft\|loud\)\>"
line 404: syn keyword cssAuralAttr contained silent
line 405: syn match cssAuralAttr contained "\<spell-out\>"
line 406: syn keyword cssAuralAttr contained non mix
line 407: syn match cssAuralAttr contained "\<\(left\|right\)-side\>"
line 408: syn match cssAuralAttr contained "\<\(far\|center\)-\(left\|center\|right\)\>"
line 409: syn keyword cssAuralAttr contained leftwards rightwards behind
line 410: syn keyword cssAuralAttr contained below level above lower higher
line 411: syn match cssAuralAttr contained "\<\(x-\)\=\(slow\|fast\|low\|high\)\>"
line 412: syn keyword cssAuralAttr contained faster slower
line 413: syn keyword cssAuralAttr contained male female child code digits continuous
line 414: 
line 415: " mobile text
line 416: syn match cssMobileTextProp contained "\<text-size-adjust\>"
line 417: 
line 418: syn keyword cssMediaProp contained width height orientation scan
line 419: syn match cssMediaProp contained /\(\(max\|min\)-\)\=\(\(device\)-\)\=aspect-ratio/
line 420: syn match cssMediaProp contained /\(\(max\|min\)-\)\=device-pixel-ratio/
line 421: syn match cssMediaProp contained /\(\(max\|min\)-\)\=device-\(height\|width\)/
line 422: syn match cssMediaProp contained /\(\(max\|min\)-\)\=\(height\|width\|resolution\|monochrome\|color\(-index\)\=\)/
line 423: syn keyword cssMediaAttr contained portrait landscape progressive interlace
line 424: syn match cssKeyFrameProp contained /\(\d\+\(\.\d\+\)\?%\|\(\<from\|to\>\)\)/ nextgroup=cssDefinition
line 425: syn match cssPageMarginProp /@\(\(top\|left\|right\|bottom\)-\(left\|center\|right\|middle\|bottom\)\)\(-corner\)\=/ contained nextgroup=cssDefinition
line 426: syn keyword cssPageProp contained content size
line 427: syn keyword cssPageProp contained orphans widows
line 428: syn keyword cssFontDescriptorProp contained src
line 429: syn match cssFontDescriptorProp contained "\<unicode-range\>"
line 430: " unicode-range attributes
line 431: syn match cssFontDescriptorAttr contained "U+[0-9A-Fa-f?]\+"
line 432: syn match cssFontDescriptorAttr contained "U+\x\+-\x\+"
line 433: 
line 434: syn match cssBraces contained "[{}]"
line 435: syn match cssError contained "{@<>"
line 436: syn region cssDefinition transparent matchgroup=cssBraces start='{' end='}' contains=cssTagName,cssAttributeSelector,cssClassName,cssIdentifier,cssAtRule,cssAttrRegion,css.*Prop,cssComment,cssValue.*,cssColor,cssURL,cssImportant,cssCustomProp,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssVendor,cssDefinition,cssHacks,cssNoise fold
line 437: syn match cssBraceError "}"
line 438: syn match cssAttrComma ","
line 439: 
line 440: " Pseudo class
line 441: " http://www.w3.org/TR/css3-selectors/
line 442: syn match cssPseudoClass ":[A-Za-z0-9_-]*" contains=cssNoise,cssPseudoClassId,cssUnicodeEscape,cssVendor,cssPseudoClassFn
line 443: syn keyword cssPseudoClassId contained link visited active hover before after left right
line 444: syn keyword cssPseudoClassId contained root empty target enable disabled checked invalid
line 445: syn match cssPseudoClassId contained "\<first-\(line\|letter\)\>"
line 446: syn match cssPseudoClassId contained "\<\(first\|last\|only\)-\(of-type\|child\)\>"
line 447: syn region cssPseudoClassFn contained matchgroup=cssFunctionName start="\<\(not\|lang\|\(nth\|nth-last\)-\(of-type\|child\)\)(" end=")" contains=cssStringQ,cssStringQQ
line 448: " ------------------------------------
line 449: " Vendor specific properties
line 450: syn match cssPseudoClassId contained  "\<selection\>"
line 451: syn match cssPseudoClassId contained  "\<focus\(-inner\)\=\>"
line 452: syn match cssPseudoClassId contained  "\<\(input-\)\=placeholder\>"
line 453: 
line 454: " Misc highlight groups
line 455: syntax match cssUnitDecorators /\(#\|-\|+\|%\|mm\|cm\|in\|pt\|pc\|em\|ex\|px\|ch\|rem\|vh\|vw\|vmin\|vmax\|dpi\|dppx\|dpcm\|Hz\|kHz\|s\|ms\|deg\|grad\|rad\)/ contained
line 456: syntax match cssNoise contained /\(:\|;\|\/\)/
line 457: 
line 458: " Comment
line 459: syn region cssComment start="/\*" end="\*/" contains=@Spell fold
line 460: 
line 461: syn match cssUnicodeEscape "\\\x\{1,6}\s\?"
line 462: syn match cssSpecialCharQQ +\\\\\|\\"+ contained
line 463: syn match cssSpecialCharQ +\\\\\|\\'+ contained
line 464: syn region cssStringQQ start=+"+ skip=+\\\\\|\\"+ end=+"+ contains=cssUnicodeEscape,cssSpecialCharQQ
line 465: syn region cssStringQ start=+'+ skip=+\\\\\|\\'+ end=+'+ contains=cssUnicodeEscape,cssSpecialCharQ
line 466: 
line 467: " Vendor Prefix
line 468: syn match cssVendor contained "-\(webkit\|moz\|o\|ms\)-"
line 469: 
line 470: " Various CSS Hack characters
line 471: " In earlier versions of IE (6 and 7), one can prefix property names
line 472: " with a _ or * to isolate those definitions to particular versions of IE
line 473: " This is purely decorative and therefore we assign to the same highlight
line 474: " group to cssVendor, for more information:
line 475: " http://www.paulirish.com/2009/browser-specific-css-hacks/
line 476: syn match cssHacks contained /\(_\|*\)/
line 477: 
line 478: " Attr Enhance
line 479: " Some keywords are both Prop and Attr, so we have to handle them
line 480: " cssPseudoClassId is hidden by cssAttrRegion, so we add it here. see #69
line 481: syn region cssAttrRegion start=/:/ end=/\ze\(;\|)\|}\|{\)/ contained contains=cssPseudoClassId,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
line 482: 
line 483: " Hack for transition
line 484: " 'transition' has Props after ':'.
line 485: syn region cssAttrRegion start=/transition\s*:/ end=/\ze\(;\|)\|}\)/ contained contains=css.*Prop,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
line 486: 
line 487: syn match cssAtKeyword /@\(font-face\|media\|keyframes\|import\|charset\|namespace\|page\|supports\)/
line 488: 
line 489: syn keyword cssAtRuleLogical only not and contained
line 490: 
line 491: " @media
line 492: " Reference: http://www.w3.org/TR/css3-mediaqueries/
line 493: syn region cssAtRule start=/@media\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssVendor,cssMediaType,cssComment,cssCustomProp,cssFunctionName nextgroup=cssDefinition
line 494: syn keyword cssMediaType contained screen print aural braille embossed handheld projection tty tv speech all contained
line 495: 
line 496: " @page
line 497: " http://www.w3.org/TR/css3-page/
line 498: syn region cssAtRule start=/@page\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssPagePseudo,cssComment nextgroup=cssDefinition
line 499: syn match cssPagePseudo /:\(left\|right\|first\|blank\)/ contained skipwhite skipnl
line 500: " @keyframe
line 501: " http://www.w3.org/TR/css3-animations/#keyframes
line 502: syn region cssAtRule start=/@\(-[a-z]\+-\)\=keyframes\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssVendor,cssComment nextgroup=cssDefinition
line 503: 
line 504: syn region cssAtRule start=/@import\>/    end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword,cssURL,cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssMediaType
line 505: syn region cssAtRule start=/@charset\>/   end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
line 506: syn region cssAtRule start=/@namespace\>/ end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
line 507: 
line 508: " @supports
line 509: " https://www.w3.org/TR/css3-conditional/#at-supports
line 510: syn region cssAtRule start=/@supports\>/ end=/\ze{/ skipwhite skipnl contains=cssAtRuleLogical,cssAttrRegion,css.*Prop,cssValue.*,cssVendor,cssAtKeyword,cssComment nextgroup=cssDefinition
line 511: 
line 512: 
line 513: if main_syntax == "css"
line 514:   syn sync minlines=10
line 515: endif
line 516: 
line 517: " Define the default highlighting.
line 518: " Only when an item doesn't have highlighting yet
line 519: 
line 520: hi def link cssComment Comment
line 521: hi def link cssVendor Comment
line 522: hi def link cssHacks Comment
line 523: hi def link cssTagName Statement
line 524: hi def link cssDeprecated Error
line 525: hi def link cssSelectorOp Special
line 526: hi def link cssSelectorOp2 Special
line 527: hi def link cssAttrComma Special
line 528: 
line 529: hi def link cssAnimationProp cssProp
line 530: hi def link cssBackgroundProp cssProp
line 531: hi def link cssBorderProp cssProp
line 532: hi def link cssBoxProp cssProp
line 533: hi def link cssCascadeProp cssProp
line 534: hi def link cssColorProp cssProp
line 535: hi def link cssContentForPagedMediaProp cssProp
line 536: hi def link cssDimensionProp cssProp
line 537: hi def link cssFlexibleBoxProp cssProp
line 538: hi def link cssFontProp cssProp
line 539: hi def link cssGeneratedContentProp cssProp
line 540: hi def link cssGridProp cssProp
line 541: hi def link cssHyerlinkProp cssProp
line 542: hi def link cssInteractProp cssProp
line 543: hi def link cssLineboxProp cssProp
line 544: hi def link cssListProp cssProp
line 545: hi def link cssMarqueeProp cssProp
line 546: hi def link cssMultiColumnProp cssProp
line 547: hi def link cssPagedMediaProp cssProp
line 548: hi def link cssPositioningProp cssProp
line 549: hi def link cssPrintProp cssProp
line 550: hi def link cssRubyProp cssProp
line 551: hi def link cssSpeechProp cssProp
line 552: hi def link cssTableProp cssProp
line 553: hi def link cssTextProp cssProp
line 554: hi def link cssTransformProp cssProp
line 555: hi def link cssTransitionProp cssProp
line 556: hi def link cssUIProp cssProp
line 557: hi def link cssIEUIProp cssProp
line 558: hi def link cssAuralProp cssProp
line 559: hi def link cssRenderProp cssProp
line 560: hi def link cssMobileTextProp cssProp
line 561: 
line 562: hi def link cssAnimationAttr cssAttr
line 563: hi def link cssBackgroundAttr cssAttr
line 564: hi def link cssBorderAttr cssAttr
line 565: hi def link cssBoxAttr cssAttr
line 566: hi def link cssContentForPagedMediaAttr cssAttr
line 567: hi def link cssDimensionAttr cssAttr
line 568: hi def link cssFlexibleBoxAttr cssAttr
line 569: hi def link cssFontAttr cssAttr
line 570: hi def link cssGeneratedContentAttr cssAttr
line 571: hi def link cssGridAttr cssAttr
line 572: hi def link cssHyerlinkAttr cssAttr
line 573: hi def link cssInteractAttr cssAttr
line 574: hi def link cssLineboxAttr cssAttr
line 575: hi def link cssListAttr cssAttr
line 576: hi def link cssMarginAttr cssAttr
line 577: hi def link cssMarqueeAttr cssAttr
line 578: hi def link cssMultiColumnAttr cssAttr
line 579: hi def link cssPaddingAttr cssAttr
line 580: hi def link cssPagedMediaAttr cssAttr
line 581: hi def link cssPositioningAttr cssAttr
line 582: hi def link cssGradientAttr cssAttr
line 583: hi def link cssPrintAttr cssAttr
line 584: hi def link cssRubyAttr cssAttr
line 585: hi def link cssSpeechAttr cssAttr
line 586: hi def link cssTableAttr cssAttr
line 587: hi def link cssTextAttr cssAttr
line 588: hi def link cssTransformAttr cssAttr
line 589: hi def link cssTransitionAttr cssAttr
line 590: hi def link cssUIAttr cssAttr
line 591: hi def link cssIEUIAttr cssAttr
line 592: hi def link cssAuralAttr cssAttr
line 593: hi def link cssRenderAttr cssAttr
line 594: hi def link cssCascadeAttr cssAttr
line 595: hi def link cssCommonAttr cssAttr
line 596: 
line 597: hi def link cssPseudoClassId PreProc
line 598: hi def link cssPseudoClassLang Constant
line 599: hi def link cssValueLength Number
line 600: hi def link cssValueInteger Number
line 601: hi def link cssValueNumber Number
line 602: hi def link cssValueAngle Number
line 603: hi def link cssValueTime Number
line 604: hi def link cssValueFrequency Number
line 605: hi def link cssFunction Constant
line 606: hi def link cssURL String
line 607: hi def link cssFunctionName Function
line 608: hi def link cssFunctionComma Function
line 609: hi def link cssColor Constant
line 610: hi def link cssIdentifier Function
line 611: hi def link cssAtRule Include
line 612: hi def link cssAtKeyword PreProc
line 613: hi def link cssImportant Special
line 614: hi def link cssCustomProp Special
line 615: hi def link cssBraces Function
line 616: hi def link cssBraceError Error
line 617: hi def link cssError Error
line 618: hi def link cssUnicodeEscape Special
line 619: hi def link cssStringQQ String
line 620: hi def link cssStringQ String
line 621: hi def link cssAttributeSelector String
line 622: hi def link cssMediaType Special
line 623: hi def link cssMediaComma Normal
line 624: hi def link cssAtRuleLogical Statement
line 625: hi def link cssMediaProp cssProp
line 626: hi def link cssMediaAttr cssAttr
line 627: hi def link cssPagePseudo PreProc
line 628: hi def link cssPageMarginProp cssAtKeyword
line 629: hi def link cssPageProp cssProp
line 630: hi def link cssKeyFrameProp Constant
line 631: hi def link cssFontDescriptor Special
line 632: hi def link cssFontDescriptorProp cssProp
line 633: hi def link cssFontDescriptorAttr cssAttr
line 634: hi def link cssUnicodeRange Constant
line 635: hi def link cssClassName Function
line 636: hi def link cssClassNameDot Function
line 637: hi def link cssProp StorageClass
line 638: hi def link cssAttr Constant
line 639: hi def link cssUnitDecorators Number
line 640: hi def link cssNoise Noise
line 641: 
line 642: let b:current_syntax = "css"
line 643: 
line 644: if main_syntax == 'css'
line 645:   unlet main_syntax
line 646: endif
line 647: 
line 648: let &cpo = s:cpo_save
line 649: unlet s:cpo_save
line 650: " vim: ts=8
line 651: 
finished sourcing /home/thomaseckert/.config/nvim/plugged/css.vim/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/css.vim"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'css', 'syntax/css.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim', 'css', 'syntax/css.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     Cascading Style Sheets
line 7: " Previous Contributor List:
line 8: "               Jules Wang      <w.jq0722@gmail.com>
line 9: "               Claudio Fleiner <claudio@fleiner.com>
line 10: "               Yeti            (Add full CSS2, HTML4 support)
line 11: "               Nikolai Weibull (Add CSS2 support)
line 12: " URL:          https://github.com/vim-language-dept/css-syntax.vim
line 13: " Maintainer:   Jay Sitter <jay@jaysitter.com>
line 14: " Last Change:  2021 Oct 20
line 15: 
line 16: " quit when a syntax file was already loaded
line 17: if !exists("main_syntax")
line 18:   if exists("b:current_syntax")
line 19:     finish
line 20:   endif
line 21:   let main_syntax = 'css'
line 22: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 23:   finish
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:     Cascading Style Sheets
line 3: " Previous Contributor List:
line 4: "               Jules Wang      <w.jq0722@gmail.com>
line 5: "               Claudio Fleiner <claudio@fleiner.com>
line 6: "               Yeti            (Add full CSS2, HTML4 support)
line 7: "               Nikolai Weibull (Add CSS2 support)
line 8: " URL:          https://github.com/vim-language-dept/css-syntax.vim
line 9: " Maintainer:   Jay Sitter <jay@jaysitter.com>
line 10: " Last Change:  2021 Oct 20
line 11: 
line 12: " quit when a syntax file was already loaded
line 13: if !exists("main_syntax")
line 14:   if exists("b:current_syntax")
line 15:     finish
line 16:   endif
line 17:   let main_syntax = 'css'
line 18: elseif exists("b:current_syntax") && b:current_syntax == "css"
line 19:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/css.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 242: sourcing "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim"
line 1: " Vim syntax file
line 2: " Language:    SCSS (Sassy CSS)
line 3: " Author:      Daniel Hofstetter (daniel.hofstetter@42dh.com)
line 4: " URL:         https://github.com/cakebaker/scss-syntax.vim
line 5: " Last Change: 2015-04-22
line 6: " Inspired by the syntax files for sass and css. Thanks to the authors of
line 7: " those files!
line 8: 
line 9: syn case ignore
line 10: 
line 11: " XXX fix for #20, can be removed once the patch is in vim's css.vim
line 12: syn match cssSpecialCharQQ +\\\\\|\\"+ contained
line 13: syn match cssSpecialCharQ +\\\\\|\\'+ contained
line 14: 
line 15: " XXX fix for #37
line 16: if v:version < 704
line 17:   " replace the definition of cssBoxProp with the one from Vim 7.4 to prevent
line 18:   " highlighting issues
line 19:   syn clear cssBoxProp
line 20:   syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
line 21:   syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
line 22:   syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
line 23:   syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
line 24: endif
line 25: 
line 26: " override @font-face blocks to allow scss elements inside
line 27: syn region cssFontDescriptorBlock contained transparent matchgroup=cssBraces start="{" end="}" contains=cssError,cssUnicodeEscape,cssFontProp,cssFontAttr,cssCommonAttr,cssStringQ,cssStringQQ,cssFontDescriptorProp,cssValue.*,cssFontDescriptorFunction,cssUnicodeRange,cssFontDescriptorAttr,@comment,scssDefinition,scssFunction,scssVariable,@scssControl,scssDebug,scssError,scssWarn
line 28: 
line 29: syn region scssDefinition matchgroup=cssBraces start='{' end='}' contains=cssString.*,cssInclude,cssFontDescriptor,scssAtRootStatement,@comment,scssDefinition,scssProperty,scssSelector,scssVariable,scssImport,scssExtend,scssInclude,scssInterpolation,scssFunction,@scssControl,scssWarn,scssError,scssDebug,scssReturn containedin=cssMediaBlock fold
line 30: 
line 31: syn match scssSelector _^\zs\([^:@]\|:[^ ]\|['"].*['"]\)\+{\@=_ contained contains=@scssSelectors
line 32: syn match scssSelector "^\s*\zs\([^:@{]\|:[^ ]\|['"].*['"]\)\+\_$" contained contains=@scssSelectors
line 33: " fix for #54 to recognize a multiline selector containing a string interpolation
line 34: syn match scssSelector "^\zs\([^:@]\|:[^ ]\)\+#{.*}[^;{]\+\_$" contained contains=@scssSelectors
line 35: syn cluster scssSelectors contains=@comment,cssSelectorOp,cssTagName,cssPseudoClass,cssAttributeSelector,scssSelectorChar,scssAmpersand,scssInterpolation
line 36: 
line 37: syn match scssProperty "\([[:alnum:]-]\)\+\s*\(:\)\@=" contained contains=css.*Prop,cssVendor containedin=cssMediaBlock nextgroup=scssAttribute,scssAttributeWithNestedDefinition
line 38: syn match scssAttribute ":[^;]*\ze\(;\|}\)" contained contains=css.*Attr,cssValue.*,cssColor,cssFunction,cssString.*,cssURL,scssFunction,scssInterpolation,scssVariable
line 39: 
line 40: syn match scssAttributeWithNestedDefinition ": [^#]*{\@=" nextgroup=scssNestedDefinition contained contains=css.*Attr,cssValue.*,scssVariable
line 41: syn region scssNestedDefinition matchgroup=cssBraces start="{" end="}" contained contains=@comment,scssProperty,scssNestedProperty
line 42: 
line 43: " CSS properties from https://developer.mozilla.org/en-US/docs/Web/CSS/Reference
line 44: " align
line 45: syn keyword scssNestedProperty contained content items self nextgroup=scssAttribute
line 46: " animation
line 47: syn keyword scssNestedProperty contained delay direction duration fill-mode iteration-count name play-state timing-function nextgroup=scssAttribute
line 48: " background
line 49: syn keyword scssNestedProperty contained attachment clip color image origin position repeat size nextgroup=scssAttribute
line 50: " border
line 51: syn keyword scssNestedProperty contained bottom bottom-color bottom-left-radius bottom-right-radius bottom-style bottom-width nextgroup=scssAttribute
line 52: syn keyword scssNestedProperty contained collapse color nextgroup=scssAttribute
line 53: syn keyword scssNestedProperty contained image image-outset image-repeat image-slice image-source image-width nextgroup=scssAttribute
line 54: syn keyword scssNestedProperty contained left left-color left-style left-width nextgroup=scssAttribute
line 55: syn keyword scssNestedProperty contained radius nextgroup=scssAttribute
line 56: syn keyword scssNestedProperty contained right right-color right-style right-width nextgroup=scssAttribute
line 57: syn keyword scssNestedProperty contained spacing style nextgroup=scssAttribute
line 58: syn keyword scssNestedProperty contained top top-color top-left-radius top-right-radius top-style top-width nextgroup=scssAttribute
line 59: syn keyword scssNestedProperty contained width nextgroup=scssAttribute
line 60: " box
line 61: syn keyword scssNestedProperty contained decoration-break shadow sizing nextgroup=scssAttribute
line 62: " break
line 63: syn keyword scssNestedProperty contained after before inside nextgroup=scssAttribute
line 64: " column
line 65: syn keyword scssNestedProperty contained count fill gap rule rule-color rule-style rule-width span width nextgroup=scssAttribute
line 66: " counter
line 67: syn keyword scssNestedProperty contained increment reset nextgroup=scssAttribute
line 68: " flex
line 69: syn keyword scssNestedProperty contained basis direction flow grow shrink wrap nextgroup=scssAttribute
line 70: " font
line 71: syn keyword scssNestedProperty contained family feature-settings kerning language-override size size-adjust stretch style synthesis nextgroup=scssAttribute
line 72: syn keyword scssNestedProperty contained variant variant-alternates variant-caps variant-east-asian variant-ligatures variant-numeric variant-position nextgroup=scssAttribute
line 73: syn keyword scssNestedProperty contained weight nextgroup=scssAttribute
line 74: " image
line 75: syn keyword scssNestedProperty contained rendering resolution orientation nextgroup=scssAttribute
line 76: " list
line 77: syn keyword scssNestedProperty contained style style-image style-position style-type nextgroup=scssAttribute
line 78: " margin/padding
line 79: syn keyword scssNestedProperty contained bottom left right top nextgroup=scssAttribute
line 80: " max/min
line 81: syn keyword scssNestedProperty contained height width nextgroup=scssAttribute
line 82: " nav
line 83: syn keyword scssNestedProperty contained down index left right up nextgroup=scssAttribute
line 84: " object
line 85: syn keyword scssNestedProperty contained fit position nextgroup=scssAttribute
line 86: " outline
line 87: syn keyword scssNestedProperty contained color offset style width nextgroup=scssAttribute
line 88: " overflow
line 89: syn keyword scssNestedProperty contained wrap x y nextgroup=scssAttribute
line 90: " page
line 91: syn keyword scssNestedProperty contained break-after break-before break-inside nextgroup=scssAttribute
line 92: " text
line 93: syn keyword scssNestedProperty contained align align-last combine-horizontal nextgroup=scssAttribute
line 94: syn keyword scssNestedProperty contained decoration decoration-color decoration-line decoration-style nextgroup=scssAttribute
line 95: syn keyword scssNestedProperty contained indent orientation overflow rendering shadow transform underline-position nextgroup=scssAttribute
line 96: " transform
line 97: syn keyword scssNestedProperty contained origin style nextgroup=scssAttribute
line 98: " transition
line 99: syn keyword scssNestedProperty contained delay duration property timing-function nextgroup=scssAttribute
line 100: " unicode
line 101: syn keyword scssNestedProperty contained bidi range nextgroup=scssAttribute
line 102: " word
line 103: syn keyword scssNestedProperty contained break spacing wrap nextgroup=scssAttribute
line 104: 
line 105: syn region scssInterpolation matchgroup=scssInterpolationDelimiter start="#{" end="}" contains=cssValue.*,cssColor,cssString.*,scssFunction,scssVariable containedin=cssComment,cssInclude,cssPseudoClassFn,cssPseudoClassLang,cssString.*,cssURL,scssFunction
line 106: 
line 107: " ignores the url() function so it can be handled by css.vim
line 108: syn region scssFunction contained matchgroup=scssFunctionName start="\<\(url(\)\@!\([[:alnum:]-_]\)\+\s*(" skip=+([^)]*)+ end=")" keepend extend containedin=cssInclude,cssMediaType
line 109: syn match scssParameterList ".*" contained containedin=cssFunction,scssFunction contains=css.*Attr,cssColor,cssString.*,cssValue.*,scssBoolean,scssFunction,scssInterpolation,scssMap,scssNull,scssVariable
line 110: 
line 111: syn match scssVariable "$[[:alnum:]_-]\+" containedin=cssFunction,scssFunction,cssInclude,cssMediaBlock,cssMediaType nextgroup=scssVariableAssignment skipwhite
line 112: syn match scssVariableAssignment ":" contained nextgroup=scssVariableValue skipwhite
line 113: syn region scssVariableValue start="" end="\ze[;)]" contained contains=css.*Attr,cssValue.*,cssColor,cssFunction,cssString.*,cssURL,scssBoolean,scssDefault,scssFunction,scssInterpolation,scssNull,scssVariable,scssMap,scssGlobal,scssAmpersand,@comment
line 114: syn match scssGlobal "!global" contained
line 115: 
line 116: syn keyword scssNull null contained
line 117: syn keyword scssBoolean true false contained
line 118: syn keyword scssBooleanOp and or not contained
line 119: 
line 120: syn match scssMixin "^@define-mixin" nextgroup=scssMixinName skipwhite
line 121: syn match scssMixinName "[[:alnum:]_-]\+" contained nextgroup=scssDefinition,scssMixinParams
line 122: syn region scssMixinParams contained contains=css.*Attr,cssColor,cssValue.*,cssString.*,cssUrl,cssBoxProp,cssDimensionProp,@comment,scssBoolean,scssNull,scssVariable,scssFunction start="(" end=")" extend
line 123: syn match scssInclude "@mixin" nextgroup=scssMixinName skipwhite containedin=cssMediaBlock
line 124: syn match scssContent "@mixin-content" contained containedin=scssDefinition
line 125: 
line 126: syn match scssFunctionDefinition "^@function" nextgroup=scssFunctionNameWithWhitespace skipwhite
line 127: syn match scssFunctionNameWithWhitespace "[[:alnum:]_-]\+\s*" contained contains=scssFunctionName nextgroup=scssFunctionParams
line 128: syn match scssFunctionName "[[:alnum:]_-]\+" contained
line 129: syn region scssFunctionParams contained start="(" end=")" nextgroup=scssFunctionBody contains=scssVariable skipwhite
line 130: syn region scssFunctionBody contained matchgroup=cssBraces start="{" end="}" contains=cssString.*,cssValue.*,@scssControl,scssBooleanOp,scssComment,scssVariable,scssReturn,scssFunction,scssDebug,scssError,scssWarn,scssDefinition,scssInterpolation fold
line 131: syn match scssReturn "@return" contained
line 132: syn match scssExtend "@extend" nextgroup=scssExtendedSelector skipwhite containedin=cssMediaBlock
line 133: syn match scssExtendedSelector "[^;]\+" contained contains=cssTagName,cssPseudoClass,scssOptional,scssSelectorChar skipwhite
line 134: syn match scssOptional "!optional" contained
line 135: syn match scssImport "@import" nextgroup=scssImportList
line 136: syn match scssImportList "[^;]\+" contained contains=cssString.*,cssMediaType,cssURL
line 137: 
line 138: syn match scssSelectorChar "\(#\|\.\|%\)\([[:alnum:]_-]\|#{.*}\)\@=" nextgroup=scssSelectorName containedin=cssMediaBlock,cssPseudoClassFn
line 139: syn match scssSelectorName "\([[:alnum:]_-]\|#{[^}]*}\)\+" contained contains=scssInterpolation
line 140: 
line 141: syn match scssAmpersand "&" nextgroup=cssPseudoClass,scssSelectorName containedin=cssMediaBlock
line 142: 
line 143: syn match scssDebug "@debug" nextgroup=scssOutput
line 144: syn match scssWarn "@warn" nextgroup=scssOutput
line 145: syn match scssError "@error" nextgroup=scssOutput
line 146: syn match scssOutput "[^;]\+" contained contains=cssValue.*,cssString.*,scssFunction,scssVariable
line 147: syn match scssDefault "!default" contained
line 148: 
line 149: syn match scssIf "@\=if" nextgroup=scssCondition
line 150: syn match scssCondition "[^{]\+" contained contains=cssValue.*,cssString.*,scssBoolean,scssBooleanOp,scssFunction,scssNull,scssVariable,scssAmpersand
line 151: syn match scssElse "@else" nextgroup=scssIf
line 152: syn match scssElse "@else\(\s*\({\|$\)\)\@="
line 153: syn match scssWhile "@while" nextgroup=scssCondition
line 154: syn match scssFor "@for\s\+.*from\s\+.*\(to\|through\)\s\+[^{ ]\+" contains=cssValueNumber,scssFunction,scssVariable,scssForKeyword
line 155: syn match scssForKeyword "@for\|from\|to\|through" contained
line 156: syn region scssEach matchgroup=scssEachKeyword start="@each" end="in" contains=scssVariable nextgroup=scssCollection
line 157: syn region scssCollection start=" " end="\ze{" contained contains=scssFunction,scssMap,scssVariable
line 158: syn cluster scssControl contains=scssIf,scssElse,scssWhile,scssFor,scssEach
line 159: 
line 160: syn region scssMap matchgroup=scssMapParens start="[^:alpha:]\=\zs(\ze\(\s*\n.*:\|.\+:\)" end=")" contains=@comment,scssMapKey extend
line 161: syn match scssMapKey "[^: ]\+\ze[:]" contained contains=css.*Attr,cssString.*,scssVariable nextgroup=scssMapValue
line 162: syn match scssMapValue "[^,)]\+\ze[,)]" contained contains=cssColor,css.*Prop,cssString.*,cssValueLength,scssBoolean,scssFunction,scssNull,scssVariable
line 163: 
line 164: syn region scssAtRootStatement start="@at-root" end="\ze{" contains=@scssSelectors,scssAtRoot
line 165: syn match scssAtRoot "@at-root" contained
line 166: syn match scssAtRoot "(\zswith\(out\)\=\ze:" contained
line 167: 
line 168: syn match scssComment "//.*$" contains=@Spell containedin=cssMediaBlock
line 169: syn cluster comment contains=cssComment,scssComment
line 170: syn match scssStickyCommentChar "^\/\*\zs!" contained containedin=cssComment
line 171: syn keyword scssTodo TODO FIXME NOTE OPTIMIZE XXX contained containedin=@comment
line 172: 
line 173: hi def link scssNestedProperty cssProp
line 174: hi def link scssVariable  Identifier
line 175: hi def link scssGlobal    Special
line 176: hi def link scssNull      Constant
line 177: hi def link scssBoolean   Constant
line 178: hi def link scssBooleanOp Operator
line 179: hi def link scssMixin     PreProc
line 180: hi def link scssMixinName Function
line 181: hi def link scssContent   PreProc
line 182: hi def link scssFunctionDefinition  PreProc
line 183: hi def link scssFunctionName Function
line 184: hi def link scssReturn    Statement
line 185: hi def link scssInclude   PreProc
line 186: hi def link scssExtend    PreProc
line 187: hi def link scssOptional  Special
line 188: hi def link scssComment   Comment
line 189: hi def link scssStickyCommentChar Special
line 190: hi def link scssSelectorChar Special
line 191: hi def link scssSelectorName Identifier
line 192: hi def link scssAmpersand Character
line 193: hi def link scssDebug     Debug
line 194: hi def link scssWarn      Debug
line 195: hi def link scssError     Debug
line 196: hi def link scssDefault   Special
line 197: hi def link scssIf        Conditional
line 198: hi def link scssElse      Conditional
line 199: hi def link scssWhile     Repeat
line 200: hi def link scssForKeyword  Repeat
line 201: hi def link scssEachKeyword Repeat
line 202: hi def link scssInterpolationDelimiter Delimiter
line 203: hi def link scssImport    Include
line 204: hi def link scssTodo      Todo
line 205: hi def link scssAtRoot    Keyword
line 206: hi def link scssMapParens Delimiter
finished sourcing /home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/css.vim
continuing in /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/css.vim"
line 243:   unlet b:current_syntax
line 244:   syn region cssStyle start=+<style+ keepend end=+</style>+ contains=@htmlCss,htmlTag,htmlEndTag,htmlCssStyleComment,@htmlPreproc
line 245:   syn match htmlCssStyleComment contained "\(<!--\|-->\)"
line 246:   syn region htmlCssDefinition matchgroup=htmlArg start='style="' keepend matchgroup=htmlString end='"' contains=css.*Attr,css.*Prop,cssComment,cssLength,cssColor,cssURL,cssImportant,cssError,cssString,@htmlPreproc
line 247:   hi def link htmlStyleArg htmlString
line 248: endif
line 249: 
line 250: if main_syntax == "html"
line 251:   " synchronizing (does not always work if a comment includes legal
line 252:   " html tags, but doing it right would mean to always start
line 253:   " at the first line, which is too slow)
line 254:   syn sync match htmlHighlight groupthere NONE "<[/a-zA-Z]"
line 255:   syn sync match htmlHighlight groupthere javaScript "<script"
line 256:   syn sync match htmlHighlightSkip "^.*['\"].*$"
line 257:   syn sync minlines=10
line 258: endif
line 259: 
line 260: " The default highlighting.
line 261: hi def link htmlTag                     Function
line 262: hi def link htmlEndTag                  Identifier
line 263: hi def link htmlArg                     Type
line 264: hi def link htmlTagName                 htmlStatement
line 265: hi def link htmlSpecialTagName          Exception
line 266: hi def link htmlValue                   String
line 267: hi def link htmlSpecialChar             Special
line 268: 
line 269: if !exists("html_no_rendering")
line 270:   hi def link htmlH1                      Title
line 271:   hi def link htmlH2                      htmlH1
line 272:   hi def link htmlH3                      htmlH2
line 273:   hi def link htmlH4                      htmlH3
line 274:   hi def link htmlH5                      htmlH4
line 275:   hi def link htmlH6                      htmlH5
line 276:   hi def link htmlHead                    PreProc
line 277:   hi def link htmlTitle                   Title
line 278:   hi def link htmlBoldItalicUnderline     htmlBoldUnderlineItalic
line 279:   hi def link htmlUnderlineBold           htmlBoldUnderline
line 280:   hi def link htmlUnderlineItalicBold     htmlBoldUnderlineItalic
line 281:   hi def link htmlUnderlineBoldItalic     htmlBoldUnderlineItalic
line 282:   hi def link htmlItalicUnderline         htmlUnderlineItalic
line 283:   hi def link htmlItalicBold              htmlBoldItalic
line 284:   hi def link htmlItalicBoldUnderline     htmlBoldUnderlineItalic
line 285:   hi def link htmlItalicUnderlineBold     htmlBoldUnderlineItalic
line 286:   hi def link htmlLink                    Underlined
line 287:   hi def link htmlLeadingSpace            None
line 288:   if !exists("html_my_rendering")
line 289:     hi def htmlBold                term=bold cterm=bold gui=bold
line 290:     hi def htmlBoldUnderline       term=bold,underline cterm=bold,underline gui=bold,underline
line 291:     hi def htmlBoldItalic          term=bold,italic cterm=bold,italic gui=bold,italic
line 292:     hi def htmlBoldUnderlineItalic term=bold,italic,underline cterm=bold,italic,underline gui=bold,italic,underline
line 293:     hi def htmlUnderline           term=underline cterm=underline gui=underline
line 294:     hi def htmlUnderlineItalic     term=italic,underline cterm=italic,underline gui=italic,underline
line 295:     hi def htmlItalic              term=italic cterm=italic gui=italic
line 296:     if v:version > 800 || v:version == 800 && has("patch1038")
line 297:         hi def htmlStrike              term=strikethrough cterm=strikethrough gui=strikethrough
line 298:     else
line 299:         hi def htmlStrike              term=underline cterm=underline gui=underline
line 300:     endif
line 301:   endif
line 302: endif
line 303: 
line 304: hi def link htmlPreStmt            PreProc
line 305: hi def link htmlPreError           Error
line 306: hi def link htmlPreProc            PreProc
line 307: hi def link htmlPreAttr            String
line 308: hi def link htmlPreProcAttrName    PreProc
line 309: hi def link htmlPreProcAttrError   Error
line 310: hi def link htmlString             String
line 311: hi def link htmlStatement          Statement
line 312: hi def link htmlComment            Comment
line 313: hi def link htmlCommentNested      htmlError
line 314: hi def link htmlCommentError       htmlError
line 315: hi def link htmlTagError           htmlError
line 316: hi def link htmlEvent              javaScript
line 317: hi def link htmlError              Error
line 318: 
line 319: hi def link javaScript             Special
line 320: hi def link javaScriptExpression   javaScript
line 321: hi def link htmlCssStyleComment    Comment
line 322: hi def link htmlCssDefinition      Special
line 323: 
line 324: let b:current_syntax = "html"
line 325: 
line 326: if main_syntax == 'html'
line 327:   unlet main_syntax
line 328: endif
line 329: 
line 330: let &cpo = s:cpo_save
line 331: unlet s:cpo_save
line 332: " vim: ts=8
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim"
line 1: if polyglot#init#is_disabled(expand('<sfile>:p'), 'html5', 'after/syntax/html.vim')
calling function polyglot#init#is_disabled('/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim', 'html5', 'after/syntax/html.vim')

line 1:   if !g:polyglot_initialized
line 2:     if a:path[0:7] == "autoload"
line 3:       let g:polyglot_initialized = 1
line 4: 
line 5:       for p in globpath(&rtp, a:path, 0, 1)
line 6:         if p != a:caller
line 7:           exe "source " . p
line 8:         endif
line 9:       endfor
line 10:     endif
line 11:   endif
line 12: 
line 13:   return has_key(g:polyglot_is_disabled, a:name)
function polyglot#init#is_disabled returning #0

continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim

line 2:   finish
line 3: endif
line 4: 
line 5: " Vim syntax file
line 6: " Language:     HTML (version 5.1)
line 7: " Last Change:  2017 Feb 15
line 8: " License:      Public domain
line 9: "               (but let me know if you like :) )
line 10: "
line 11: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 12: 
line 13: " Comment
line 14: " https://github.com/w3c/html/issues/694
line 15: syntax region htmlComment start=+<!--+ end=+-->+ contains=@Spell
line 16: syntax region htmlComment start=+<!DOCTYPE+ keepend end=+>+
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/html.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 17: sourcing "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim"
line 1: " Vim syntax file
line 2: " Language:     HTML (version 5.1)
line 3: " Last Change:  2017 Feb 15
line 4: " License:      Public domain
line 5: "               (but let me know if you like :) )
line 6: "
line 7: " Maintainer:   Kao, Wei-Ko(othree) ( othree AT gmail DOT com )
line 8: 
line 9: " Comment
line 10: " https://github.com/w3c/html/issues/694
line 11: syntax region htmlComment start=+<!--+ end=+-->+ contains=@Spell
line 12: syntax region htmlComment start=+<!DOCTYPE+ keepend end=+>+
finished sourcing /home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/html.vim
continuing in /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
line 18: 
line 19:   if exists('b:current_syntax')
line 20:     unlet b:current_syntax
line 21:   endif
line 22: endif
line 23: 
line 24: if v:version < 600
line 25:   syntax clear
line 26: elseif exists('b:current_syntax')
line 27:   finish
line 28: endif
line 29: 
line 30: " don't use standard HiLink, it will not work with included syntax files
line 31: if v:version < 508
line 32:   command! -nargs=+ HtmlHiLink hi link <args>
line 33: else
line 34:   command! -nargs=+ HtmlHiLink hi def link <args>
line 35: endif
line 36: 
line 37: syn spell toplevel
line 38: syn case ignore
line 39: syn sync linebreaks=1
line 40: 
line 41: let s:conceal = ''
line 42: let s:concealends = ''
line 43: let s:concealcode = ''
line 44: if has('conceal') && get(g:, 'vim_markdown_conceal', 1)
line 45:   let s:conceal = ' conceal'
line 46:   let s:concealends = ' concealends'
line 47: endif
line 48: if has('conceal') && get(g:, 'vim_markdown_conceal_code_blocks', 1)
line 49:   let s:concealcode = ' concealends'
line 50: endif
line 51: 
line 52: " additions to HTML groups
line 53: if get(g:, 'vim_markdown_emphasis_multiline', 1)
line 54:     let s:oneline = ''
line 55: else
line 56:     let s:oneline = ' oneline'
line 57: endif
line 58: syn region mkdItalic matchgroup=mkdItalic start="\%(\*\|_\)"    end="\%(\*\|_\)"
line 59: syn region mkdBold matchgroup=mkdBold start="\%(\*\*\|__\)"    end="\%(\*\*\|__\)"
line 60: syn region mkdBoldItalic matchgroup=mkdBoldItalic start="\%(\*\*\*\|___\)"    end="\%(\*\*\*\|___\)"
line 61: execute 'syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs\*\ze[^\\\*\t ]\%(\%([^*]\|\\\*\|\n\)*[^\\\*\t ]\)\?\*\_W" end="[^\\\*\t ]\zs\*\ze\_W" keepend contains=@Spell' . s:oneline . s:concealends
line 61: syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs\*\ze[^\\\*\t ]\%(\%([^*]\|\\\*\|\n\)*[^\\\*\t ]\)\?\*\_W" end="[^\\\*\t ]\zs\*\ze\_W" keepend contains=@Spell concealends
line 62: execute 'syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs_\ze[^\\_\t ]" end="[^\\_\t ]\zs_\ze\_W" keepend contains=@Spell' . s:oneline . s:concealends
line 62: syn region htmlItalic matchgroup=mkdItalic start="\%(^\|\s\)\zs_\ze[^\\_\t ]" end="[^\\_\t ]\zs_\ze\_W" keepend contains=@Spell concealends
line 63: execute 'syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs\*\*\ze\S" end="\S\zs\*\*" keepend contains=@Spell' . s:oneline . s:concealends
line 63: syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs\*\*\ze\S" end="\S\zs\*\*" keepend contains=@Spell concealends
line 64: execute 'syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs__\ze\S" end="\S\zs__" keepend contains=@Spell' . s:oneline . s:concealends
line 64: syn region htmlBold matchgroup=mkdBold start="\%(^\|\s\)\zs__\ze\S" end="\S\zs__" keepend contains=@Spell concealends
line 65: execute 'syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs\*\*\*\ze\S" end="\S\zs\*\*\*" keepend contains=@Spell' . s:oneline . s:concealends
line 65: syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs\*\*\*\ze\S" end="\S\zs\*\*\*" keepend contains=@Spell concealends
line 66: execute 'syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs___\ze\S" end="\S\zs___" keepend contains=@Spell' . s:oneline . s:concealends
line 66: syn region htmlBoldItalic matchgroup=mkdBoldItalic start="\%(^\|\s\)\zs___\ze\S" end="\S\zs___" keepend contains=@Spell concealends
line 67: 
line 68: " [link](URL) | [link][id] | [link][] | ![image](URL)
line 69: syn region mkdFootnotes matchgroup=mkdDelimiter start="\[^"    end="\]"
line 70: execute 'syn region mkdID matchgroup=mkdDelimiter    start="\["    end="\]" contained oneline' . s:conceal
line 70: syn region mkdID matchgroup=mkdDelimiter    start="\["    end="\]" contained oneline conceal
line 71: execute 'syn region mkdURL matchgroup=mkdDelimiter   start="("     end=")"  contained oneline' . s:conceal
line 71: syn region mkdURL matchgroup=mkdDelimiter   start="("     end=")"  contained oneline conceal
line 72: execute 'syn region mkdLink matchgroup=mkdDelimiter  start="\\\@<!!\?\[\ze[^]\n]*\n\?[^]\n]*\][[(]" end="\]" contains=@mkdNonListItem,@Spell nextgroup=mkdURL,mkdID skipwhite' . s:concealends
line 72: syn region mkdLink matchgroup=mkdDelimiter  start="\\\@<!!\?\[\ze[^]\n]*\n\?[^]\n]*\][[(]" end="\]" contains=@mkdNonListItem,@Spell nextgroup=mkdURL,mkdID skipwhite concealends
line 73: 
line 74: " Autolink without angle brackets.
line 75: " mkd  inline links:      protocol     optional  user:pass@  sub/domain                    .com, .co.uk, etc         optional port   path/querystring/hash fragment
line 76: "                         ------------ _____________________ ----------------------------- _________________________ ----------------- __
line 77: syn match   mkdInlineURL /https\?:\/\/\(\w\+\(:\w\+\)\?@\)\?\([A-Za-z0-9][-_0-9A-Za-z]*\.\)\{1,}\(\w\{2,}\.\?\)\{1,}\(:[0-9]\{1,5}\)\?[^] \t]*/
line 78: 
line 79: " Autolink with parenthesis.
line 80: syn region  mkdInlineURL matchgroup=mkdDelimiter start="(\(https\?:\/\/\(\w\+\(:\w\+\)\?@\)\?\([A-Za-z0-9][-_0-9A-Za-z]*\.\)\{1,}\(\w\{2,}\.\?\)\{1,}\(:[0-9]\{1,5}\)\?[^] \t]*)\)\@=" end=")"
line 81: 
line 82: " Autolink with angle brackets.
line 83: syn region mkdInlineURL matchgroup=mkdDelimiter start="\\\@<!<\ze[a-z][a-z0-9,.-]\{1,22}:\/\/[^> ]*>" end=">"
line 84: 
line 85: " Link definitions: [id]: URL (Optional Title)
line 86: syn region mkdLinkDef matchgroup=mkdDelimiter   start="^ \{,3}\zs\[\^\@!" end="]:" oneline nextgroup=mkdLinkDefTarget skipwhite
line 87: syn region mkdLinkDefTarget start="<\?\zs\S" excludenl end="\ze[>[:space:]\n]"   contained nextgroup=mkdLinkTitle,mkdLinkDef skipwhite skipnl oneline
line 88: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+"+     end=+"+  contained
line 89: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+'+     end=+'+  contained
line 90: syn region mkdLinkTitle matchgroup=mkdDelimiter start=+(+     end=+)+  contained
line 91: 
line 92: "HTML headings
line 93: syn region htmlH1       matchgroup=mkdHeading     start="^\s*#"                   end="$" contains=mkdLink,mkdInlineURL,@Spell
line 94: syn region htmlH2       matchgroup=mkdHeading     start="^\s*##"                  end="$" contains=mkdLink,mkdInlineURL,@Spell
line 95: syn region htmlH3       matchgroup=mkdHeading     start="^\s*###"                 end="$" contains=mkdLink,mkdInlineURL,@Spell
line 96: syn region htmlH4       matchgroup=mkdHeading     start="^\s*####"                end="$" contains=mkdLink,mkdInlineURL,@Spell
line 97: syn region htmlH5       matchgroup=mkdHeading     start="^\s*#####"               end="$" contains=mkdLink,mkdInlineURL,@Spell
line 98: syn region htmlH6       matchgroup=mkdHeading     start="^\s*######"              end="$" contains=mkdLink,mkdInlineURL,@Spell
line 99: syn match  htmlH1       /^.\+\n=\+$/ contains=mkdLink,mkdInlineURL,@Spell
line 100: syn match  htmlH2       /^.\+\n-\+$/ contains=mkdLink,mkdInlineURL,@Spell
line 101: 
line 102: "define Markdown groups
line 103: syn match  mkdLineBreak    /  \+$/
line 104: syn region mkdBlockquote   start=/^\s*>/                   end=/$/ contains=mkdLink,mkdInlineURL,mkdLineBreak,@Spell
line 105: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!`/                     end=/`/'  . s:concealcode
line 105: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!`/                     end=/`/ concealends
line 106: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!``/ skip=/[^`]`[^`]/   end=/``/' . s:concealcode
line 106: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!``/ skip=/[^`]`[^`]/   end=/``/ concealends
line 107: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(`\{3,}\)[^`]*$/                       end=/^\s*\z1`*\s*$/'            . s:concealcode
line 107: syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(`\{3,}\)[^`]*$/                       end=/^\s*\z1`*\s*$/ concealends
line 108: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!\~\~/  end=/\(\([^\\]\|^\)\\\)\@<!\~\~/'               . s:concealcode
line 108: syn region mkdCode matchgroup=mkdCodeDelimiter start=/\(\([^\\]\|^\)\\\)\@<!\~\~/  end=/\(\([^\\]\|^\)\\\)\@<!\~\~/ concealends
line 109: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(\~\{3,}\)\s*[0-9A-Za-z_+-]*\s*$/      end=/^\s*\z1\~*\s*$/'           . s:concealcode
line 109: syn region mkdCode matchgroup=mkdCodeDelimiter start=/^\s*\z(\~\{3,}\)\s*[0-9A-Za-z_+-]*\s*$/      end=/^\s*\z1\~*\s*$/ concealends
line 110: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start="<pre\(\|\_s[^>]*\)\\\@<!>"                   end="</pre>"'                   . s:concealcode
line 110: syn region mkdCode matchgroup=mkdCodeDelimiter start="<pre\(\|\_s[^>]*\)\\\@<!>"                   end="</pre>" concealends
line 111: execute 'syn region mkdCode matchgroup=mkdCodeDelimiter start="<code\(\|\_s[^>]*\)\\\@<!>"                  end="</code>"'                  . s:concealcode
line 111: syn region mkdCode matchgroup=mkdCodeDelimiter start="<code\(\|\_s[^>]*\)\\\@<!>"                  end="</code>" concealends
line 112: syn region mkdFootnote     start="\[^"                     end="\]"
line 113: syn match  mkdCode         /^\s*\n\(\(\s\{8,}[^ ]\|\t\t\+[^\t]\).*\n\)\+/
line 114: syn match  mkdCode         /\%^\(\(\s\{4,}[^ ]\|\t\+[^\t]\).*\n\)\+/
line 115: syn match  mkdCode         /^\s*\n\(\(\s\{4,}[^ ]\|\t\+[^\t]\).*\n\)\+/ contained
line 116: syn match  mkdListItem     /^\s*\%([-*+]\|\d\+\.\)\ze\s\+/ contained
line 117: syn region mkdListItemLine start="^\s*\%([-*+]\|\d\+\.\)\s\+" end="$" oneline contains=@mkdNonListItem,mkdListItem,@Spell
line 118: syn region mkdNonListItemBlock start="\(\%^\(\s*\([-*+]\|\d\+\.\)\s\+\)\@!\|\n\(\_^\_$\|\s\{4,}[^ ]\|\t+[^\t]\)\@!\)" end="^\(\s*\([-*+]\|\d\+\.\)\s\+\)\@=" contains=@mkdNonListItem,@Spell
line 119: syn match  mkdRule         /^\s*\*\s\{0,1}\*\s\{0,1}\*\(\*\|\s\)*$/
line 120: syn match  mkdRule         /^\s*-\s\{0,1}-\s\{0,1}-\(-\|\s\)*$/
line 121: syn match  mkdRule         /^\s*_\s\{0,1}_\s\{0,1}_\(_\|\s\)*$/
line 122: 
line 123: " YAML frontmatter
line 124: if get(g:, 'vim_markdown_frontmatter', 0)
line 125:   syn include @yamlTop syntax/yaml.vim
line 126:   syn region Comment matchgroup=mkdDelimiter start="\%^---$" end="^\(---\|\.\.\.\)$" contains=@yamlTop keepend
line 127:   unlet! b:current_syntax
line 128: endif
line 129: 
line 130: if get(g:, 'vim_markdown_toml_frontmatter', 0)
line 131:   try
line 132:     syn include @tomlTop syntax/toml.vim
line 133:     syn region Comment matchgroup=mkdDelimiter start="\%^+++$" end="^+++$" transparent contains=@tomlTop keepend
line 134:     unlet! b:current_syntax
line 135:   catch /E484/
line 136:     syn region Comment matchgroup=mkdDelimiter start="\%^+++$" end="^+++$"
line 137:   endtry
line 138: endif
line 139: 
line 140: if get(g:, 'vim_markdown_json_frontmatter', 0)
line 141:   try
line 142:     syn include @jsonTop syntax/json.vim
line 143:     syn region Comment matchgroup=mkdDelimiter start="\%^{$" end="^}$" contains=@jsonTop keepend
line 144:     unlet! b:current_syntax
line 145:   catch /E484/
line 146:     syn region Comment matchgroup=mkdDelimiter start="\%^{$" end="^}$"
line 147:   endtry
line 148: endif
line 149: 
line 150: if get(g:, 'vim_markdown_math', 0)
line 151:   syn include @tex syntax/tex.vim
line 152:   syn region mkdMath start="\\\@<!\$" end="\$" skip="\\\$" contains=@tex keepend
line 153:   syn region mkdMath start="\\\@<!\$\$" end="\$\$" skip="\\\$" contains=@tex keepend
line 154: endif
line 155: 
line 156: " Strike through
line 157: if get(g:, 'vim_markdown_strikethrough', 0)
line 158:     execute 'syn region mkdStrike matchgroup=htmlStrike start="\%(\~\~\)" end="\%(\~\~\)"' . s:concealends
line 159:     HtmlHiLink mkdStrike        htmlStrike
line 160: endif
line 161: 
line 162: syn cluster mkdNonListItem contains=@htmlTop,htmlItalic,htmlBold,htmlBoldItalic,mkdFootnotes,mkdInlineURL,mkdLink,mkdLinkDef,mkdLineBreak,mkdBlockquote,mkdCode,mkdRule,htmlH1,htmlH2,htmlH3,htmlH4,htmlH5,htmlH6,mkdMath,mkdStrike
line 163: 
line 164: "highlighting for Markdown groups
line 165: HtmlHiLink mkdString        String
line 165: hi def link mkdString        String
line 166: HtmlHiLink mkdCode          String
line 166: hi def link mkdCode          String
line 167: HtmlHiLink mkdCodeDelimiter String
line 167: hi def link mkdCodeDelimiter String
line 168: HtmlHiLink mkdCodeStart     String
line 168: hi def link mkdCodeStart     String
line 169: HtmlHiLink mkdCodeEnd       String
line 169: hi def link mkdCodeEnd       String
line 170: HtmlHiLink mkdFootnote      Comment
line 170: hi def link mkdFootnote      Comment
line 171: HtmlHiLink mkdBlockquote    Comment
line 171: hi def link mkdBlockquote    Comment
line 172: HtmlHiLink mkdListItem      Identifier
line 172: hi def link mkdListItem      Identifier
line 173: HtmlHiLink mkdRule          Identifier
line 173: hi def link mkdRule          Identifier
line 174: HtmlHiLink mkdLineBreak     Visual
line 174: hi def link mkdLineBreak     Visual
line 175: HtmlHiLink mkdFootnotes     htmlLink
line 175: hi def link mkdFootnotes     htmlLink
line 176: HtmlHiLink mkdLink          htmlLink
line 176: hi def link mkdLink          htmlLink
line 177: HtmlHiLink mkdURL           htmlString
line 177: hi def link mkdURL           htmlString
line 178: HtmlHiLink mkdInlineURL     htmlLink
line 178: hi def link mkdInlineURL     htmlLink
line 179: HtmlHiLink mkdID            Identifier
line 179: hi def link mkdID            Identifier
line 180: HtmlHiLink mkdLinkDef       mkdID
line 180: hi def link mkdLinkDef       mkdID
line 181: HtmlHiLink mkdLinkDefTarget mkdURL
line 181: hi def link mkdLinkDefTarget mkdURL
line 182: HtmlHiLink mkdLinkTitle     htmlString
line 182: hi def link mkdLinkTitle     htmlString
line 183: HtmlHiLink mkdDelimiter     Delimiter
line 183: hi def link mkdDelimiter     Delimiter
line 184: 
line 185: let b:current_syntax = 'mkd'
line 186: 
line 187: delcommand HtmlHiLink
line 188: " vim: ts=8
finished sourcing /home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.vim
continuing in function <SNR>6_SynSet
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim"
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
line 25: sourcing "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim"
line 1: " Vim syntax file
line 2: " Language:     Markdown
line 3: " Maintainer:   Tim Pope <vimNOSPAM@tpope.org>
line 4: " Filenames:    *.markdown
line 5: " Last Change:  2020 Jan 14
line 6: 
line 7: if exists("b:current_syntax")
line 8:   finish
finished sourcing /home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.vim
continuing in function <SNR>6_SynSet
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown/*.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown.vim"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown/*.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown.vim"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 26: runtime! syntax/markdown.lua syntax/markdown/*.lua
Searching for "syntax/markdown.lua syntax/markdown/*.lua" in runtime path
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-treesitter/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-lspconfig/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lualine.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-web-devicons/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/gitsigns.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/plenary.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-autopairs/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-abolish/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-colorizer.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/fd/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/telescope.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/hologram.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/guihua.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/toggleterm.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-cmp/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/LuaSnip/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/friendly-snippets/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/mason-lspconfig.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nightfox.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-nuuid/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-fugitive/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-commentary/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-rooter.lua/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/editorconfig-vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/black/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-go/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/go.nvim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/css.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-svelte/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-prettier/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/nvim-ts-context-commentstring/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/emmet-vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/MatchTag/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-markdown-toc/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown.lua"
Searching for "/home/thomaseckert/.local/share/nvim/site/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/syntax/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/syntax/markdown/*.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown.lua"
Searching for "/home/linuxbrew/.linuxbrew/Cellar/neovim/0.7.2_1/share/nvim/runtime/pack/dist/opt/matchit/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/vim-polyglot/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-nvim-lsp/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-buffer/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-path/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp-cmdline/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/cmp_luasnip/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/tabular/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/postcss-syntax.vim/after/syntax/markdown/*.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown.lua"
Searching for "/home/thomaseckert/.config/nvim/plugged/html5.vim/after/syntax/markdown/*.lua"
not found in runtime path: "syntax/markdown.lua syntax/markdown/*.lua"
line 27:       endif
line 28:     endfor
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
function <SNR>6_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing Syntax Autocommands for "*"
autocommand call s:setup_styledEmmetAbbreviation()

Executing: call s:setup_styledEmmetAbbreviation()
calling function <SNR>95_setup_styledEmmetAbbreviation()

line 1:   if index(['javascript', 'javascriptreact', 'typescript', 'typescriptreact'], &filetype) != -1
line 2:     syntax match styledEmmetAbbreviation "[a-z0-9#+!%]\+" containedin=styledDefinition contained
line 3:   endif
function <SNR>95_setup_styledEmmetAbbreviation returning #0

continuing in Syntax Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand lua vim.defer_fn(require('lsp-zero').suggest_server, 5)

Executing: lua vim.defer_fn(require('lsp-zero').suggest_server, 5)
Executing FileType Autocommands for "markdown"
autocommand unsilent lua require'lspconfig'["tailwindcss"].manager.try_add()

Executing: unsilent lua require'lspconfig'["tailwindcss"].manager.try_add()
Executing FileType Autocommands for "markdown"
autocommand unsilent lua require'lspconfig'["marksman"].manager.try_add()

Executing: unsilent lua require'lspconfig'["marksman"].manager.try_add()
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
Executing FileType Autocommands for "*"
autocommand call s:register()

Executing: call s:register()
calling function <SNR>90_register()

line 1:   if !(&modifiable && expand('<amatch>') ==# 'go')
line 2:     return
function <SNR>90_register returning #0

continuing in FileType Autocommands for "*"

Executing BufReadPost Autocommands for "*.md"
autocommand setf markdown

Executing: setf markdown
Executing BufReadPost Autocommands for "*"
autocommand if (&ft == "" || &ft == "conf") && expand("<afile>:e") == "" | call polyglot#shebang#Detect() | endif

Executing: if (&ft == "" || &ft == "conf") && expand("<afile>:e") == "" | call polyglot#shebang#Detect() | endif
Executing:  call polyglot#shebang#Detect() | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <lua: 56>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif

Executing: if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
Executing:    unlet b:git_dir | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand call s:UseConfigFiles()

Executing: call s:UseConfigFiles()
calling function <SNR>85_UseConfigFiles()

line 1:     let b:editorconfig_tried = 1
line 2:     let l:buffer_name = expand('%:p')
line 3:     " ignore buffers without a name
line 4:     if empty(l:buffer_name)
line 5:         return
line 6:     endif
line 7: 
line 8:     if exists("b:EditorConfig_disable") && b:EditorConfig_disable
line 9:         if g:EditorConfig_verbose
line 10:             echo 'Skipping EditorConfig for buffer "' . l:buffer_name . '"'
line 11:         endif
line 12:         return
line 13:     endif
line 14: 
line 15:     " Check if any .editorconfig does exist
line 16:     let l:conf_files = s:GetFilenames(expand('%:p:h'), '.editorconfig')
calling function <SNR>85_UseConfigFiles[16]..<SNR>85_GetFilenames('/home/thomaseckert/repos/dotfiles/utilities/normalize-lines', '.editorconfig')

line 1: " Yield full filepath for filename in each directory in and above path
line 2: 
line 3:     let l:path_list = []
line 4:     let l:path = a:path
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 5:     while 1
line 6:         let l:path_list += [l:path . '/' . a:filename]
line 7:         let l:newpath = fnamemodify(l:path, ':h')
line 8:         if l:path == l:newpath
line 9:             break
line 10:         endif
line 11:         let l:path = l:newpath
line 12:     endwhile
line 13:     return l:path_list
function <SNR>85_UseConfigFiles[16]..<SNR>85_GetFilenames returning ['/home/thomaseckert/repos/dotfiles/ut...home/.editorconfig', '//.editorconfig']

continuing in function <SNR>85_UseConfigFiles

line 17:     let l:conf_found = 0
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 18:     for conf_file in conf_files
line 19:         if filereadable(conf_file)
line 20:             let l:conf_found = 1
line 21:             break
line 22:         endif
line 23:     endfor
line 24:     if !l:conf_found
line 25:         return
function <SNR>85_UseConfigFiles returning #0

continuing in BufReadPost Autocommands for "*"

Executing BufReadPost Autocommands for "*"
autocommand <lua: 169>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand call s:detect_indent()

Executing: call s:detect_indent()
calling function <SNR>20_detect_indent()

line 1:     if &buftype ==# 'help'
line 2:       return
line 3:     endif
line 4: 
line 5:     " Do not autodetect indent if language or user sets it
line 6:     if &l:shiftwidth != s:default_shiftwidth
line 7:       return
line 8:     endif
line 9: 
line 10:     let b:sleuth_culprit = expand("<afile>:p")
line 11:     if s:guess(getline(1, 128))
calling function <SNR>20_detect_indent[11]..<SNR>20_guess(['# Normalize Lines', '', 'This utilit...aracters long without breaking words.'])

line 1:     let options = {}
line 2:     let ccomment = 0
line 3:     let podcomment = 0
line 4:     let triplequote = 0
line 5:     let backtick = 0
line 6:     let xmlcomment = 0
line 7:     let heredoc = ''
line 8:     let minindent = 10
line 9:     let spaces_minus_tabs = 0
line 10:     let lineno = 0
line 11:     let stack = [0]
line 12:     let indents = { '2': 0, '3': 0, '4': 0, '6': 0, '8': 0 }
line 13: 
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 108: 
line 109:     if spaces_minus_tabs < 0
line 110:       setlocal noexpandtab
line 111:       let &l:shiftwidth=&tabstop
line 112:       return 1
line 113:     endif
line 114: 
line 115:     let shiftwidth = s:get_shiftwidth(indents)
calling function <SNR>20_detect_indent[11]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth({'2': 0, '3': 0, '4': 0, '6': 0, '8': 0})

line 1:     let shiftwidth = 0
line 2:     let max_count = 0
line 3:     let final_counts = {}
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 19:     return shiftwidth
function <SNR>20_detect_indent[11]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth returning #0

continuing in function <SNR>20_detect_indent[11]..<SNR>20_guess

line 116: 
line 117:     if shiftwidth > 0
line 118:       setlocal expandtab
line 119:       let &l:shiftwidth=shiftwidth
line 120:       try
line 121:         " Sunchronize tabstop with shiftwidth
line 122:         let &l:softtabstop = -1
line 123:       catch /^Vim\%((\a\+)\)\=:E487/
line 124:         " -1 was not supported before Vim 7.4
line 125:         let &l:softtabstop = a:num_spaces
line 126:       endtry
line 127:       return 1
line 128:     endif
line 129: 
line 130:     return 0
function <SNR>20_detect_indent[11]..<SNR>20_guess returning #0

continuing in function <SNR>20_detect_indent

line 12:       return
line 13:     endif
line 14:     if s:guess(getline(1, 1024))
calling function <SNR>20_detect_indent[14]..<SNR>20_guess(['# Normalize Lines', '', 'This utilit...aracters long without breaking words.'])

line 1:     let options = {}
line 2:     let ccomment = 0
line 3:     let podcomment = 0
line 4:     let triplequote = 0
line 5:     let backtick = 0
line 6:     let xmlcomment = 0
line 7:     let heredoc = ''
line 8:     let minindent = 10
line 9:     let spaces_minus_tabs = 0
line 10:     let lineno = 0
line 11:     let stack = [0]
line 12:     let indents = { '2': 0, '3': 0, '4': 0, '6': 0, '8': 0 }
line 13: 
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 108: 
line 109:     if spaces_minus_tabs < 0
line 110:       setlocal noexpandtab
line 111:       let &l:shiftwidth=&tabstop
line 112:       return 1
line 113:     endif
line 114: 
line 115:     let shiftwidth = s:get_shiftwidth(indents)
calling function <SNR>20_detect_indent[14]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth({'2': 0, '3': 0, '4': 0, '6': 0, '8': 0})

line 1:     let shiftwidth = 0
line 2:     let max_count = 0
line 3:     let final_counts = {}
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 19:     return shiftwidth
function <SNR>20_detect_indent[14]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth returning #0

continuing in function <SNR>20_detect_indent[14]..<SNR>20_guess

line 116: 
line 117:     if shiftwidth > 0
line 118:       setlocal expandtab
line 119:       let &l:shiftwidth=shiftwidth
line 120:       try
line 121:         " Sunchronize tabstop with shiftwidth
line 122:         let &l:softtabstop = -1
line 123:       catch /^Vim\%((\a\+)\)\=:E487/
line 124:         " -1 was not supported before Vim 7.4
line 125:         let &l:softtabstop = a:num_spaces
line 126:       endtry
line 127:       return 1
line 128:     endif
line 129: 
line 130:     return 0
function <SNR>20_detect_indent[14]..<SNR>20_guess returning #0

continuing in function <SNR>20_detect_indent

line 15:       return
line 16:     endif
line 17:     let pattern = polyglot#sleuth#GlobForFiletype(&filetype)
calling function <SNR>20_detect_indent[17]..polyglot#sleuth#GlobForFiletype('markdown')

line 1:   return get(s:globs, a:type, '')
function <SNR>20_detect_indent[17]..polyglot#sleuth#GlobForFiletype returning '*.md,*.markdown,*.mdown,*.mdwn,*.mkd,...wn,*.ronn,*.scd,*.workbook,contents.lr'

continuing in function <SNR>20_detect_indent

line 18:     if len(pattern) == 0
line 19:       return
line 20:     endif
line 21:     let pattern = '{' . pattern . ',.git,.svn,.hg}'
line 22:     let dir = expand('%:p:h')
line 23:     let level = 3
line 24:     while isdirectory(dir) && dir !=# fnamemodify(dir, ':h') && level > 0
line 25:       " Ignore files from homedir and root 
line 26:       if dir == expand('~') || dir == '/'
line 27:         unlet b:sleuth_culprit
line 28:         return
line 29:       endif
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
Executing command: "unset nonomatch; print -N >/tmp/nvimyXJg7M/1 /home/thomaseckert/repos/dotfiles/utilities/normalize-lines/{*.md,*.markdown,*.mdown,*.mdwn,*.mkd,*.mkdn,*.mkdown,*.ronn,*.scd,*.workbook,contents.lr,.git,.svn,.hg}"

line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 43: 
line 44:       let dir = fnamemodify(dir, ':h')
line 45:       let level -= 1
line 46:     endwhile
line 24:     while isdirectory(dir) && dir !=# fnamemodify(dir, ':h') && level > 0
line 25:       " Ignore files from homedir and root 
line 26:       if dir == expand('~') || dir == '/'
line 27:         unlet b:sleuth_culprit
line 28:         return
line 29:       endif
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
Executing command: "unset nonomatch; print -N >/tmp/nvimyXJg7M/2 /home/thomaseckert/repos/dotfiles/utilities/{*.md,*.markdown,*.mdown,*.mdwn,*.mkd,*.mkdn,*.mkdown,*.ronn,*.scd,*.workbook,contents.lr,.git,.svn,.hg}"

line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 43: 
line 44:       let dir = fnamemodify(dir, ':h')
line 45:       let level -= 1
line 46:     endwhile
line 24:     while isdirectory(dir) && dir !=# fnamemodify(dir, ':h') && level > 0
line 25:       " Ignore files from homedir and root 
line 26:       if dir == expand('~') || dir == '/'
line 27:         unlet b:sleuth_culprit
line 28:         return
line 29:       endif
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
Executing command: "unset nonomatch; print -N >/tmp/nvimyXJg7M/3 /home/thomaseckert/repos/dotfiles/{*.md,*.markdown,*.mdown,*.mdwn,*.mkd,*.mkdn,*.mkdown,*.ronn,*.scd,*.workbook,contents.lr,.git,.svn,.hg}"

line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
calling function <SNR>20_detect_indent[38]..<SNR>20_guess(['# Thomas Eckert''s Dotfiles', '', 'H...e to look around and steal ideas!', ''])

line 1:     let options = {}
line 2:     let ccomment = 0
line 3:     let podcomment = 0
line 4:     let triplequote = 0
line 5:     let backtick = 0
line 6:     let xmlcomment = 0
line 7:     let heredoc = ''
line 8:     let minindent = 10
line 9:     let spaces_minus_tabs = 0
line 10:     let lineno = 0
line 11:     let stack = [0]
line 12:     let indents = { '2': 0, '3': 0, '4': 0, '6': 0, '8': 0 }
line 13: 
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 14:     for line in a:lines
line 15:       let lineno += 1
line 16: 
line 17:       if line =~# '^\s*$'
line 18:         continue
line 19:       endif
line 20: 
line 21:       if line =~# '^\s*/\*'
line 22:         let ccomment = 1
line 23:       endif
line 24:       if ccomment
line 25:         if line =~# '\*/'
line 26:           let ccomment = 0
line 27:         endif
line 28:         continue
line 29:       endif
line 30: 
line 31:       if line =~# '^=\w'
line 32:         let podcomment = 1
line 33:       endif
line 34:       if podcomment
line 35:         if line =~# '^=\%(end\|cut\)\>'
line 36:           let podcomment = 0
line 37:         endif
line 38:         continue
line 39:       endif
line 40: 
line 41:       if triplequote
line 42:         if line =~# '^[^"]*"""[^"]*$'
line 43:           let triplequote = 0
line 44:         endif
line 45:         continue
line 46:       elseif line =~# '^[^"]*"""[^"]*$'
line 47:         let triplequote = 1
line 48:       endif
line 49: 
line 50:       if backtick
line 51:         if line =~# '^[^`]*`[^`]*$'
line 52:           let backtick = 0
line 53:         endif
line 54:         continue
line 55:       elseif &filetype ==# 'go' && line =~# '^[^`]*`[^`]*$'
line 56:         let backtick = 1
line 57:       endif
line 58: 
line 59:       if line =~# '^\s*<\!--'
line 60:         let xmlcomment = 1
line 61:       endif
line 62:       if xmlcomment
line 63:         if line =~# '-->'
line 64:           let xmlcomment = 0
line 65:         endif
line 66:         continue
line 67:       endif
line 68: 
line 69:       " This is correct order because both "<<EOF" and "EOF" matches end
line 70:       if heredoc != ''
line 71:         if line =~# heredoc
line 72:           let heredoc = ''
line 73:         endif
line 74:         continue
line 75:       endif
line 76:       let herematch = matchlist(line, '\C<<\W*\([A-Z]\+\)\s*$')
line 77:       if len(herematch) > 0
line 78:         let heredoc = herematch[1] . '$'
line 79:       endif
line 80: 
line 81:       if line[0] == "\t"
line 82:         let spaces_minus_tabs -= 1
line 83:       else
line 84:         if line[0] == " "
line 85:           let spaces_minus_tabs += 1
line 86:         endif
line 87:         let indent = len(matchstr(line, '^ *'))
line 88:         while stack[-1] > indent
line 89:           call remove(stack, -1)
line 90:         endwhile
line 91: 
line 92:         let indent_inc = indent - stack[-1]
line 93: 
line 94:         if indent_inc == 0 && len(stack) > 1
line 95:           let indent_inc = indent - stack[-2]
line 96:         endif
line 97: 
line 98:         if has_key(indents, indent_inc)
line 99:           let indents[indent_inc] += 1
line 100:           let prev_indent = indent
line 101:         endif
line 102: 
line 103:         if stack[-1] != indent
line 104:           call add(stack, indent)
line 105:         endif
line 106:       endif
line 107:     endfor
line 108: 
line 109:     if spaces_minus_tabs < 0
line 110:       setlocal noexpandtab
line 111:       let &l:shiftwidth=&tabstop
line 112:       return 1
line 113:     endif
line 114: 
line 115:     let shiftwidth = s:get_shiftwidth(indents)
calling function <SNR>20_detect_indent[38]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth({'2': 0, '3': 0, '4': 0, '6': 0, '8': 0})

line 1:     let shiftwidth = 0
line 2:     let max_count = 0
line 3:     let final_counts = {}
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 4:     for [indent, indent_count] in items(a:indents)
line 5:       let indent_count = indent_count * 1.5
line 6:       for [indent2, indent2_count] in items(a:indents)
line 7:         if indent2 > indent && indent2 % indent == 0
line 8:           let indent_count = indent_count + indent2_count
line 9:         endif
line 10:       endfor
line 11:       let final_counts[indent] = indent_count
line 12:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 13:     for [indent, final_count] in items(final_counts)
line 14:       if final_count > max_count
line 15:         let shiftwidth = indent
line 16:         let max_count = final_count
line 17:       endif
line 18:     endfor
line 19:     return shiftwidth
function <SNR>20_detect_indent[38]..<SNR>20_guess[115]..<SNR>20_get_shiftwidth returning #0

continuing in function <SNR>20_detect_indent[38]..<SNR>20_guess

line 116: 
line 117:     if shiftwidth > 0
line 118:       setlocal expandtab
line 119:       let &l:shiftwidth=shiftwidth
line 120:       try
line 121:         " Sunchronize tabstop with shiftwidth
line 122:         let &l:softtabstop = -1
line 123:       catch /^Vim\%((\a\+)\)\=:E487/
line 124:         " -1 was not supported before Vim 7.4
line 125:         let &l:softtabstop = a:num_spaces
line 126:       endtry
line 127:       return 1
line 128:     endif
line 129: 
line 130:     return 0
function <SNR>20_detect_indent[38]..<SNR>20_guess returning #0

continuing in function <SNR>20_detect_indent

line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 43: 
line 44:       let dir = fnamemodify(dir, ':h')
line 45:       let level -= 1
line 46:     endwhile
line 24:     while isdirectory(dir) && dir !=# fnamemodify(dir, ':h') && level > 0
line 25:       " Ignore files from homedir and root 
line 26:       if dir == expand('~') || dir == '/'
line 27:         unlet b:sleuth_culprit
line 28:         return
line 29:       endif
line 30:       for neighbor in glob(dir . '/' . pattern, 0, 1)[0:level]
line 31:         let b:sleuth_culprit = neighbor
line 32:         " Do not consider directories above .git, .svn or .hg
line 33:         if fnamemodify(neighbor, ":h:t")[0] == "."
line 34:           let level = 0
line 35:           continue
line 36:         endif
line 37:         if neighbor !=# expand('%:p') && filereadable(neighbor)
line 38:           if s:guess(readfile(neighbor, '', 32))
line 39:             return
line 40:           endif
line 41:         endif
line 42:       endfor
line 43: 
line 44:       let dir = fnamemodify(dir, ':h')
line 45:       let level -= 1
line 46:     endwhile
line 47: 
line 48:     let b:sleuth_culprit = "default"
function <SNR>20_detect_indent returning #0

continuing in BufEnter Autocommands for "*"

Executing BufEnter Autocommands for "*"
autocommand <lua: 4>

Executing: 
autocommand <lua: 8>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch.git_branch'.find_git_dir()

Executing: lua require'lualine.components.branch.git_branch'.find_git_dir()
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <lua: 57>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand if &ft == "" && expand("<afile>:e") == "" | call s:Observe() | endif

Executing: if &ft == "" && expand("<afile>:e") == "" | call s:Observe() | endif
Executing:  call s:Observe() | endif
Executing:  endif
Executing BufWinEnter Autocommands for "*"
autocommand lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_lua')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require("luasnip.loaders.from_snipmate")._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
autocommand lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))

Executing: lua require('luasnip.loaders.from_vscode')._load_lazy_loaded(tonumber(vim.fn.expand("<abuf>")))
Executing BufWinEnter Autocommands for "<buffer=4>"
autocommand call s:MarkdownRefreshSyntax(1)

Executing: call s:MarkdownRefreshSyntax(1)
calling function <SNR>133_MarkdownRefreshSyntax(1)

line 1:     if &filetype =~# 'markdown' && line('$') > 1
line 2:         call s:MarkdownHighlightSources(a:force)
calling function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources(1)

line 1:     " Syntax highlight source code embedded in notes.
line 2:     " Look for code blocks in the current file
line 3:     let filetypes = {}
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 8:     if !exists('b:mkd_known_filetypes')
line 9:         let b:mkd_known_filetypes = {}
line 10:     endif
line 11:     if !exists('b:mkd_included_filetypes')
line 12:         " set syntax file name included
line 13:         let b:mkd_included_filetypes = {}
line 14:     endif
line 15:     if !a:force && (b:mkd_known_filetypes == filetypes || empty(filetypes))
line 16:         return
line 17:     endif
line 18: 
line 19:     " Now we're ready to actually highlight the code blocks.
line 20:     let startgroup = 'mkdCodeStart'
line 21:     let endgroup = 'mkdCodeEnd'
line 22:     for ft in keys(filetypes)
line 23:         if a:force || !has_key(b:mkd_known_filetypes, ft)
line 24:             if has_key(s:filetype_dict, ft)
line 25:                 let filetype = s:filetype_dict[ft]
line 26:             else
line 27:                 let filetype = ft
line 28:             endif
line 29:             let group = 'mkdSnippet' . toupper(substitute(filetype, '[+-]', '_', 'g'))
line 30:             if !has_key(b:mkd_included_filetypes, filetype)
line 31:                 let include = s:SyntaxInclude(filetype)
line 32:                 let b:mkd_included_filetypes[filetype] = 1
line 33:             else
line 34:                 let include = '@' . toupper(filetype)
line 35:             endif
line 36:             let command_backtick = 'syntax region %s matchgroup=%s start="^\s*`\{3,}\s*%s.*$" matchgroup=%s end="\s*`\{3,}$" keepend contains=%s%s'
line 37:             let command_tilde    = 'syntax region %s matchgroup=%s start="^\s*\~\{3,}\s*%s.*$" matchgroup=%s end="\s*\~\{3,}$" keepend contains=%s%s'
line 38:             execute printf(command_backtick, group, startgroup, ft, endgroup, include, has('conceal') && get(g:, 'vim_markdown_conceal', 1) && get(g:, 'vim_markdown_conceal_code_blocks', 1) ? ' concealends' : '')
line 39:             execute printf(command_tilde,    group, startgroup, ft, endgroup, include, has('conceal') && get(g:, 'vim_markdown_conceal', 1) && get(g:, 'vim_markdown_conceal_code_blocks', 1) ? ' concealends' : '')
line 40:             execute printf('syntax cluster mkdNonListItem add=%s', group)
line 41: 
line 42:             let b:mkd_known_filetypes[ft] = 1
line 43:         endif
line 44:     endfor
function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources returning #0

continuing in function <SNR>133_MarkdownRefreshSyntax

line 3:     endif
function <SNR>133_MarkdownRefreshSyntax returning #0

continuing in BufWinEnter Autocommands for "<buffer=4>"

Executing: unlet! b:keymap_name
calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'

continuing in nvim_exec()

calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'

continuing in nvim_exec()

calling function nvim_treesitter#foldexpr()

line 1: ^Ireturn luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))
function nvim_treesitter#foldexpr returning '0'

continuing in nvim_exec()

Executing: :wincmd =
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "<buffer=4>"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>136_Highlight_Matching_Pair()

line 1:     " Remove any previous match.
line 2:     if exists('w:tag_hl_on') && w:tag_hl_on
line 3:         2match none
line 4:         let w:tag_hl_on = 0
line 5:     endif
line 6: 
line 7:     " Avoid that we remove the popup menu.
line 8:     " Return when there are no colors (looks like the cursor jumps).
line 9:     if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:         return
line 11:     endif
line 12: 
line 13:     "get html tag under cursor
line 14:     let tagname = s:GetCurrentCursorTag()
calling function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag()

line 1:     "returns the tag under the cursor, includes the '/' if on a closing tag.
line 2: 
line 3:     let c_col  = col('.')
line 4:     let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}>\)\|\(\%'.c_col.'c<.\{-}>\)')
line 5:     if matched =~ '/>$'
line 6:         return ""
line 7:     elseif matched == ""
line 8:         " The tag itself may be spread over multiple lines.
line 9:         let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}$\)\|\(\%'.c_col.'c<.\{-}$\)')
line 10:         if matched == ""
line 11:             return ""
function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag returning ''

continuing in function <SNR>136_Highlight_Matching_Pair

line 15:     if tagname == ""|return|endif
line 15: return|endif
function <SNR>136_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "<buffer=4>"

Executing: highlight! lualine_x_filetype_DevIconMd_normal guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_insert guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_visual guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_replace guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_command guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_terminal guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_x_filetype_DevIconMd_inactive guifg=#ffffff guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -buffer -range -bang LspZeroFormat lua require('lsp-zero.server').format_cmd(<line1>, <line2>, <count>, '<bang>' == '!')
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -buffer  LspZeroWorkspaceRemove lua vim.lsp.buf.remove_workspace_folder()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =
Executing CursorHold Autocommands for "*"
autocommand silent! checktime

Executing: silent! checktime
Executing CursorHold Autocommands for "<buffer=4>"
autocommand call s:MarkdownRefreshSyntax(0)

Executing: call s:MarkdownRefreshSyntax(0)
calling function <SNR>133_MarkdownRefreshSyntax(0)

line 1:     if &filetype =~# 'markdown' && line('$') > 1
line 2:         call s:MarkdownHighlightSources(a:force)
calling function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources(0)

line 1:     " Syntax highlight source code embedded in notes.
line 2:     " Look for code blocks in the current file
line 3:     let filetypes = {}
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 8:     if !exists('b:mkd_known_filetypes')
line 9:         let b:mkd_known_filetypes = {}
line 10:     endif
line 11:     if !exists('b:mkd_included_filetypes')
line 12:         " set syntax file name included
line 13:         let b:mkd_included_filetypes = {}
line 14:     endif
line 15:     if !a:force && (b:mkd_known_filetypes == filetypes || empty(filetypes))
line 16:         return
function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources returning #0

continuing in function <SNR>133_MarkdownRefreshSyntax

line 3:     endif
function <SNR>133_MarkdownRefreshSyntax returning #0

continuing in CursorHold Autocommands for "<buffer=4>"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-tree.lua/lua/nvim-tree/renderer)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: :wincmd =

Executing: NvimTreeToggle
Executing BufWipeout Autocommands for "NvimTree_*"
autocommand <lua: 7>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing: lua current_nodes = require("luasnip").session.current_nodes if current_nodes then current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end
auto-removing autocommand: CursorHold <buffer=1>
auto-removing autocommand: CursorHoldI <buffer=1>
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/nvim-cmp/lua/cmp/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing CursorHold Autocommands for "*"
autocommand silent! checktime

Executing: silent! checktime
Executing CursorHold Autocommands for "<buffer=4>"
autocommand call s:MarkdownRefreshSyntax(0)

Executing: call s:MarkdownRefreshSyntax(0)
calling function <SNR>133_MarkdownRefreshSyntax(0)

line 1:     if &filetype =~# 'markdown' && line('$') > 1
line 2:         call s:MarkdownHighlightSources(a:force)
calling function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources(0)

line 1:     " Syntax highlight source code embedded in notes.
line 2:     " Look for code blocks in the current file
line 3:     let filetypes = {}
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 8:     if !exists('b:mkd_known_filetypes')
line 9:         let b:mkd_known_filetypes = {}
line 10:     endif
line 11:     if !exists('b:mkd_included_filetypes')
line 12:         " set syntax file name included
line 13:         let b:mkd_included_filetypes = {}
line 14:     endif
line 15:     if !a:force && (b:mkd_known_filetypes == filetypes || empty(filetypes))
line 16:         return
function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources returning #0

continuing in function <SNR>133_MarkdownRefreshSyntax

line 3:     endif
function <SNR>133_MarkdownRefreshSyntax returning #0

continuing in CursorHold Autocommands for "<buffer=4>"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "<buffer=4>"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>136_Highlight_Matching_Pair()

line 1:     " Remove any previous match.
line 2:     if exists('w:tag_hl_on') && w:tag_hl_on
line 3:         2match none
line 4:         let w:tag_hl_on = 0
line 5:     endif
line 6: 
line 7:     " Avoid that we remove the popup menu.
line 8:     " Return when there are no colors (looks like the cursor jumps).
line 9:     if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:         return
line 11:     endif
line 12: 
line 13:     "get html tag under cursor
line 14:     let tagname = s:GetCurrentCursorTag()
calling function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag()

line 1:     "returns the tag under the cursor, includes the '/' if on a closing tag.
line 2: 
line 3:     let c_col  = col('.')
line 4:     let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}>\)\|\(\%'.c_col.'c<.\{-}>\)')
line 5:     if matched =~ '/>$'
line 6:         return ""
line 7:     elseif matched == ""
line 8:         " The tag itself may be spread over multiple lines.
line 9:         let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}$\)\|\(\%'.c_col.'c<.\{-}$\)')
line 10:         if matched == ""
line 11:             return ""
function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag returning ''

continuing in function <SNR>136_Highlight_Matching_Pair

line 15:     if tagname == ""|return|endif
line 15: return|endif
function <SNR>136_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "<buffer=4>"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -buffer -range -bang LspZeroFormat lua require('lsp-zero.server').format_cmd(<line1>, <line2>, <count>, '<bang>' == '!')
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: command! -buffer  LspZeroWorkspaceRemove lua vim.lsp.buf.remove_workspace_folder()
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lsp-zero.nvim/lua/lsp-zero)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>102_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
function <SNR>102_Highlight_Matching_Pair[2]..<SNR>102_Remove_Matches returning #0

continuing in function <SNR>102_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
function <SNR>102_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "<buffer=4>"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling function <SNR>136_Highlight_Matching_Pair()

line 1:     " Remove any previous match.
line 2:     if exists('w:tag_hl_on') && w:tag_hl_on
line 3:         2match none
line 4:         let w:tag_hl_on = 0
line 5:     endif
line 6: 
line 7:     " Avoid that we remove the popup menu.
line 8:     " Return when there are no colors (looks like the cursor jumps).
line 9:     if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:         return
line 11:     endif
line 12: 
line 13:     "get html tag under cursor
line 14:     let tagname = s:GetCurrentCursorTag()
calling function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag()

line 1:     "returns the tag under the cursor, includes the '/' if on a closing tag.
line 2: 
line 3:     let c_col  = col('.')
line 4:     let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}>\)\|\(\%'.c_col.'c<.\{-}>\)')
line 5:     if matched =~ '/>$'
line 6:         return ""
line 7:     elseif matched == ""
line 8:         " The tag itself may be spread over multiple lines.
line 9:         let matched = matchstr(getline('.'), '\(<[^<>]*\%'.c_col.'c.\{-}$\)\|\(\%'.c_col.'c<.\{-}$\)')
line 10:         if matched == ""
line 11:             return ""
function <SNR>136_Highlight_Matching_Pair[14]..<SNR>136_GetCurrentCursorTag returning ''

continuing in function <SNR>136_Highlight_Matching_Pair

line 15:     if tagname == ""|return|endif
line 15: return|endif
function <SNR>136_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "<buffer=4>"

chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing CursorHold Autocommands for "*"
autocommand silent! checktime

Executing: silent! checktime
Executing CursorHold Autocommands for "<buffer=4>"
autocommand call s:MarkdownRefreshSyntax(0)

Executing: call s:MarkdownRefreshSyntax(0)
calling function <SNR>133_MarkdownRefreshSyntax(0)

line 1:     if &filetype =~# 'markdown' && line('$') > 1
line 2:         call s:MarkdownHighlightSources(a:force)
calling function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources(0)

line 1:     " Syntax highlight source code embedded in notes.
line 2:     " Look for code blocks in the current file
line 3:     let filetypes = {}
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 4:     for line in getline(1, '$')
line 5:         let ft = matchstr(line, '\(`\{3,}\|\~\{3,}\)\s*\zs[0-9A-Za-z_+-]*\ze.*')
line 6:         if !empty(ft) && ft !~# '^\d*$' | let filetypes[ft] = 1 | endif
line 6:  let filetypes[ft] = 1 | endif
line 6:  endif
line 7:     endfor
line 8:     if !exists('b:mkd_known_filetypes')
line 9:         let b:mkd_known_filetypes = {}
line 10:     endif
line 11:     if !exists('b:mkd_included_filetypes')
line 12:         " set syntax file name included
line 13:         let b:mkd_included_filetypes = {}
line 14:     endif
line 15:     if !a:force && (b:mkd_known_filetypes == filetypes || empty(filetypes))
line 16:         return
function <SNR>133_MarkdownRefreshSyntax[2]..<SNR>133_MarkdownHighlightSources returning #0

continuing in function <SNR>133_MarkdownRefreshSyntax

line 3:     endif
function <SNR>133_MarkdownRefreshSyntax returning #0

continuing in CursorHold Autocommands for "<buffer=4>"

Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing: highlight! lualine_transitional_lualine_a_visual_to_lualine_b_visual guifg=#b4be82 guibg=#2e313f gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing: highlight! lualine_transitional_lualine_b_visual_to_lualine_c_normal guifg=#2e313f guibg=#0f1117 gui=None
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
chdir(/home/thomaseckert/.config/nvim/plugged/lualine.nvim/lua/lualine/utils)
chdir(/home/thomaseckert/repos/dotfiles/utilities/normalize-lines)
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'window', 'place': ['statusline'], 'trigger': 'autocmd'})
